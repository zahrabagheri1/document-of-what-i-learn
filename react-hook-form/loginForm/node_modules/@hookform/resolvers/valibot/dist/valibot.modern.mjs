import{toNestErrors as s}from"@hookform/resolvers";import{appendErrors as e}from"react-hook-form";import{safeParseAsync as t,getDotPath as o}from"valibot";const r=(r,a,i={})=>async(n,c,m)=>{const p=!m.shouldUseNativeValidation&&"all"===m.criteriaMode,u=await t(r,n,Object.assign({},a,{abortPipeEarly:!p}));if(u.issues){const t={};for(;u.issues.length;){const s=u.issues[0],r=o(s);if(r&&(t[r]||(t[r]={message:s.message,type:s.type}),p)){const o=t[r].types,a=o&&o[s.type];t[r]=e(r,p,t,s.type,a?[].concat(a,s.message):s.message)}u.issues.shift()}return{values:{},errors:s(t,m)}}return{values:i.raw?Object.assign({},n):u.output,errors:{}}};export{r as valibotResolver};
//# sourceMappingURL=valibot.modern.mjs.map
