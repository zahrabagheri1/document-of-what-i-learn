import{toNestErrors as s,validateFieldsNatively as e}from"@hookform/resolvers";const r=r=>async(o,t,a)=>{let n=r["~standard"].validate(o);if(n instanceof Promise&&(n=await n),n.issues){const e=(s=>{const e={};for(let t=0;t<s.length;t++){var r,o;const a=s[t],n=null!=(r=null==(o=a.path)?void 0:o.join("."))?r:"";n&&(e[n]||(e[n]={message:a.message}))}return e})(n.issues);return{values:{},errors:s(e,a)}}return a.shouldUseNativeValidation&&e({},a),{values:o,errors:{}}};export{r as standardSchemaResolver};
//# sourceMappingURL=standard-schema.modern.mjs.map
