{
  "version": 3,
  "sources": ["../../ag-grid-community/dist/package/main.esm.mjs"],
  "sourcesContent": ["// packages/ag-grid-community/src/localEventService.ts\nvar LocalEventService = class {\n  constructor() {\n    this.allSyncListeners = /* @__PURE__ */ new Map();\n    this.allAsyncListeners = /* @__PURE__ */ new Map();\n    this.globalSyncListeners = /* @__PURE__ */ new Set();\n    this.globalAsyncListeners = /* @__PURE__ */ new Set();\n    this.asyncFunctionsQueue = [];\n    this.scheduled = false;\n    // using an object performs better than a Set for the number of different events we have\n    this.firedEvents = {};\n  }\n  setFrameworkOverrides(frameworkOverrides) {\n    this.frameworkOverrides = frameworkOverrides;\n  }\n  getListeners(eventType, async, autoCreateListenerCollection) {\n    const listenerMap = async ? this.allAsyncListeners : this.allSyncListeners;\n    let listeners = listenerMap.get(eventType);\n    if (!listeners && autoCreateListenerCollection) {\n      listeners = /* @__PURE__ */ new Set();\n      listenerMap.set(eventType, listeners);\n    }\n    return listeners;\n  }\n  noRegisteredListenersExist() {\n    return this.allSyncListeners.size === 0 && this.allAsyncListeners.size === 0 && this.globalSyncListeners.size === 0 && this.globalAsyncListeners.size === 0;\n  }\n  addEventListener(eventType, listener, async = false) {\n    this.getListeners(eventType, async, true).add(listener);\n  }\n  removeEventListener(eventType, listener, async = false) {\n    const listeners = this.getListeners(eventType, async, false);\n    if (!listeners) {\n      return;\n    }\n    listeners.delete(listener);\n    if (listeners.size === 0) {\n      const listenerMap = async ? this.allAsyncListeners : this.allSyncListeners;\n      listenerMap.delete(eventType);\n    }\n  }\n  addGlobalListener(listener, async = false) {\n    (async ? this.globalAsyncListeners : this.globalSyncListeners).add(listener);\n  }\n  removeGlobalListener(listener, async = false) {\n    (async ? this.globalAsyncListeners : this.globalSyncListeners).delete(listener);\n  }\n  dispatchEvent(event) {\n    const agEvent = event;\n    this.dispatchToListeners(agEvent, true);\n    this.dispatchToListeners(agEvent, false);\n    this.firedEvents[agEvent.type] = true;\n  }\n  dispatchEventOnce(event) {\n    if (!this.firedEvents[event.type]) {\n      this.dispatchEvent(event);\n    }\n  }\n  dispatchToListeners(event, async) {\n    const eventType = event.type;\n    if (async && \"event\" in event) {\n      const browserEvent = event.event;\n      if (browserEvent instanceof Event) {\n        event.eventPath = browserEvent.composedPath();\n      }\n    }\n    const processEventListeners = (listeners2, originalListeners2) => listeners2.forEach((listener) => {\n      if (!originalListeners2.has(listener)) {\n        return;\n      }\n      const callback = this.frameworkOverrides ? () => this.frameworkOverrides.wrapIncoming(() => listener(event)) : () => listener(event);\n      if (async) {\n        this.dispatchAsync(callback);\n      } else {\n        callback();\n      }\n    });\n    const originalListeners = this.getListeners(eventType, async, false) ?? /* @__PURE__ */ new Set();\n    const listeners = new Set(originalListeners);\n    if (listeners.size > 0) {\n      processEventListeners(listeners, originalListeners);\n    }\n    const globalListeners = new Set(\n      async ? this.globalAsyncListeners : this.globalSyncListeners\n    );\n    globalListeners.forEach((listener) => {\n      const callback = this.frameworkOverrides ? () => this.frameworkOverrides.wrapIncoming(() => listener(eventType, event)) : () => listener(eventType, event);\n      if (async) {\n        this.dispatchAsync(callback);\n      } else {\n        callback();\n      }\n    });\n  }\n  // this gets called inside the grid's thread, for each event that it\n  // wants to set async. the grid then batches the events into one setTimeout()\n  // because setTimeout() is an expensive operation. ideally we would have\n  // each event in it's own setTimeout(), but we batch for performance.\n  dispatchAsync(func) {\n    this.asyncFunctionsQueue.push(func);\n    if (!this.scheduled) {\n      const flush = () => {\n        window.setTimeout(this.flushAsyncQueue.bind(this), 0);\n      };\n      this.frameworkOverrides ? this.frameworkOverrides.wrapIncoming(flush) : flush();\n      this.scheduled = true;\n    }\n  }\n  // this happens in the next VM turn only, and empties the queue of events\n  flushAsyncQueue() {\n    this.scheduled = false;\n    const queueCopy = this.asyncFunctionsQueue.slice();\n    this.asyncFunctionsQueue = [];\n    queueCopy.forEach((func) => func());\n  }\n};\n\n// packages/ag-grid-community/src/misc/locale/localeUtils.ts\nfunction defaultLocaleTextFunc(_key, defaultValue) {\n  return defaultValue;\n}\nfunction _getLocaleTextFunc(localeSvc) {\n  return localeSvc?.getLocaleTextFunc() ?? defaultLocaleTextFunc;\n}\n\n// packages/ag-grid-community/src/utils/aria.ts\nfunction _toggleAriaAttribute(element, attribute, value) {\n  if (value == null || typeof value === \"string\" && value == \"\") {\n    _removeAriaAttribute(element, attribute);\n  } else {\n    _setAriaAttribute(element, attribute, value);\n  }\n}\nfunction _setAriaAttribute(element, attribute, value) {\n  element.setAttribute(_ariaAttributeName(attribute), value.toString());\n}\nfunction _removeAriaAttribute(element, attribute) {\n  element.removeAttribute(_ariaAttributeName(attribute));\n}\nfunction _ariaAttributeName(attribute) {\n  return `aria-${attribute}`;\n}\nfunction _setAriaRole(element, role) {\n  if (role) {\n    element.setAttribute(\"role\", role);\n  } else {\n    element.removeAttribute(\"role\");\n  }\n}\nfunction _getAriaSortState(sortDirection) {\n  let sort;\n  if (sortDirection === \"asc\") {\n    sort = \"ascending\";\n  } else if (sortDirection === \"desc\") {\n    sort = \"descending\";\n  } else if (sortDirection === \"mixed\") {\n    sort = \"other\";\n  } else {\n    sort = \"none\";\n  }\n  return sort;\n}\nfunction _getAriaPosInSet(element) {\n  return parseInt(element.getAttribute(\"aria-posinset\"), 10);\n}\nfunction _getAriaLabel(element) {\n  return element.getAttribute(\"aria-label\");\n}\nfunction _setAriaLabel(element, label) {\n  _toggleAriaAttribute(element, \"label\", label);\n}\nfunction _setAriaLabelledBy(element, labelledBy) {\n  _toggleAriaAttribute(element, \"labelledby\", labelledBy);\n}\nfunction _setAriaDescribedBy(element, describedby) {\n  _toggleAriaAttribute(element, \"describedby\", describedby);\n}\nfunction _setAriaLive(element, live) {\n  _toggleAriaAttribute(element, \"live\", live);\n}\nfunction _setAriaAtomic(element, atomic) {\n  _toggleAriaAttribute(element, \"atomic\", atomic);\n}\nfunction _setAriaRelevant(element, relevant) {\n  _toggleAriaAttribute(element, \"relevant\", relevant);\n}\nfunction _setAriaLevel(element, level) {\n  _toggleAriaAttribute(element, \"level\", level);\n}\nfunction _setAriaDisabled(element, disabled) {\n  _toggleAriaAttribute(element, \"disabled\", disabled);\n}\nfunction _setAriaHidden(element, hidden) {\n  _toggleAriaAttribute(element, \"hidden\", hidden);\n}\nfunction _setAriaActiveDescendant(element, descendantId) {\n  _toggleAriaAttribute(element, \"activedescendant\", descendantId);\n}\nfunction _setAriaExpanded(element, expanded) {\n  _setAriaAttribute(element, \"expanded\", expanded);\n}\nfunction _removeAriaExpanded(element) {\n  _removeAriaAttribute(element, \"expanded\");\n}\nfunction _setAriaSetSize(element, setsize) {\n  _setAriaAttribute(element, \"setsize\", setsize);\n}\nfunction _setAriaPosInSet(element, position) {\n  _setAriaAttribute(element, \"posinset\", position);\n}\nfunction _setAriaMultiSelectable(element, multiSelectable) {\n  _setAriaAttribute(element, \"multiselectable\", multiSelectable);\n}\nfunction _setAriaRowCount(element, rowCount) {\n  _setAriaAttribute(element, \"rowcount\", rowCount);\n}\nfunction _setAriaRowIndex(element, rowIndex) {\n  _setAriaAttribute(element, \"rowindex\", rowIndex);\n}\nfunction _setAriaRowSpan(element, spanCount) {\n  _setAriaAttribute(element, \"rowspan\", spanCount);\n}\nfunction _setAriaColCount(element, colCount) {\n  _setAriaAttribute(element, \"colcount\", colCount);\n}\nfunction _setAriaColIndex(element, colIndex) {\n  _setAriaAttribute(element, \"colindex\", colIndex);\n}\nfunction _setAriaColSpan(element, colSpan) {\n  _setAriaAttribute(element, \"colspan\", colSpan);\n}\nfunction _setAriaSort(element, sort) {\n  _setAriaAttribute(element, \"sort\", sort);\n}\nfunction _removeAriaSort(element) {\n  _removeAriaAttribute(element, \"sort\");\n}\nfunction _setAriaSelected(element, selected) {\n  _toggleAriaAttribute(element, \"selected\", selected);\n}\nfunction _setAriaChecked(element, checked) {\n  _setAriaAttribute(element, \"checked\", checked === void 0 ? \"mixed\" : checked);\n}\nfunction _setAriaControls(controllerElement, controlledElement) {\n  _toggleAriaAttribute(controllerElement, \"controls\", controlledElement.id);\n  _setAriaLabelledBy(controlledElement, controllerElement.id);\n}\nfunction _setAriaHasPopup(element, hasPopup) {\n  _toggleAriaAttribute(element, \"haspopup\", hasPopup === false ? null : hasPopup);\n}\nfunction _getAriaCheckboxStateName(translate, state) {\n  return state === void 0 ? translate(\"ariaIndeterminate\", \"indeterminate\") : state === true ? translate(\"ariaChecked\", \"checked\") : translate(\"ariaUnchecked\", \"unchecked\");\n}\n\n// packages/ag-grid-community/src/utils/browser.ts\nvar isSafari;\nvar isChrome;\nvar isFirefox;\nvar isMacOs;\nvar isIOS;\nvar invisibleScrollbar;\nvar browserScrollbarWidth;\nvar maxDivHeight;\nfunction _isBrowserSafari() {\n  if (isSafari === void 0) {\n    isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  }\n  return isSafari;\n}\nfunction _isBrowserChrome() {\n  if (isChrome === void 0) {\n    const win = window;\n    isChrome = !!win.chrome && (!!win.chrome.webstore || !!win.chrome.runtime) || /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n  }\n  return isChrome;\n}\nfunction _isBrowserFirefox() {\n  if (isFirefox === void 0) {\n    isFirefox = /(firefox)/i.test(navigator.userAgent);\n  }\n  return isFirefox;\n}\nfunction _isMacOsUserAgent() {\n  if (isMacOs === void 0) {\n    isMacOs = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n  }\n  return isMacOs;\n}\nfunction _isIOSUserAgent() {\n  if (isIOS === void 0) {\n    isIOS = /iPad|iPhone|iPod/.test(navigator.platform) || navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1;\n  }\n  return isIOS;\n}\nfunction _getTabIndex(el) {\n  if (!el) {\n    return null;\n  }\n  const numberTabIndex = el.tabIndex;\n  const tabIndex = el.getAttribute(\"tabIndex\");\n  if (numberTabIndex === -1 && (tabIndex === null || tabIndex === \"\" && !_isBrowserFirefox())) {\n    return null;\n  }\n  return numberTabIndex.toString();\n}\nfunction _getMaxDivHeight() {\n  if (maxDivHeight !== void 0) {\n    return maxDivHeight;\n  }\n  if (!document.body) {\n    return -1;\n  }\n  let res = 1e6;\n  const testUpTo = _isBrowserFirefox() ? 6e6 : 1e9;\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  while (true) {\n    const test = res * 2;\n    div.style.height = test + \"px\";\n    if (test > testUpTo || div.clientHeight !== test) {\n      break;\n    } else {\n      res = test;\n    }\n  }\n  document.body.removeChild(div);\n  maxDivHeight = res;\n  return res;\n}\nfunction _getScrollbarWidth() {\n  if (browserScrollbarWidth == null) {\n    initScrollbarWidthAndVisibility();\n  }\n  return browserScrollbarWidth;\n}\nfunction initScrollbarWidthAndVisibility() {\n  const body = document.body;\n  const div = document.createElement(\"div\");\n  div.style.width = div.style.height = \"100px\";\n  div.style.opacity = \"0\";\n  div.style.overflow = \"scroll\";\n  div.style.msOverflowStyle = \"scrollbar\";\n  div.style.position = \"absolute\";\n  body.appendChild(div);\n  let width = div.offsetWidth - div.clientWidth;\n  if (width === 0 && div.clientWidth === 0) {\n    width = null;\n  }\n  if (div.parentNode) {\n    div.parentNode.removeChild(div);\n  }\n  if (width != null) {\n    browserScrollbarWidth = width;\n    invisibleScrollbar = width === 0;\n  }\n}\nfunction _isInvisibleScrollbar() {\n  if (invisibleScrollbar == null) {\n    initScrollbarWidthAndVisibility();\n  }\n  return invisibleScrollbar;\n}\n\n// packages/ag-grid-community/src/utils/dom.ts\nvar rtlNegativeScroll;\nfunction _radioCssClass(element, elementClass, otherElementClass) {\n  const parent = element.parentElement;\n  let sibling = parent && parent.firstChild;\n  while (sibling) {\n    if (elementClass) {\n      sibling.classList.toggle(elementClass, sibling === element);\n    }\n    if (otherElementClass) {\n      sibling.classList.toggle(otherElementClass, sibling !== element);\n    }\n    sibling = sibling.nextSibling;\n  }\n}\nvar FOCUSABLE_SELECTOR = \"[tabindex], input, select, button, textarea, [href]\";\nvar FOCUSABLE_EXCLUDE = \"[disabled], .ag-disabled:not(.ag-button), .ag-disabled *\";\nfunction _isFocusableFormField(element) {\n  const matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n  const inputSelector = \"input, select, button, textarea\";\n  const isFocusable = matches.call(element, inputSelector);\n  const isNotFocusable = matches.call(element, FOCUSABLE_EXCLUDE);\n  const isElementVisible = _isVisible(element);\n  const focusable = isFocusable && !isNotFocusable && isElementVisible;\n  return focusable;\n}\nfunction _setDisplayed(element, displayed, options = {}) {\n  const { skipAriaHidden } = options;\n  element.classList.toggle(\"ag-hidden\", !displayed);\n  if (!skipAriaHidden) {\n    _setAriaHidden(element, !displayed);\n  }\n}\nfunction _setVisible(element, visible, options = {}) {\n  const { skipAriaHidden } = options;\n  element.classList.toggle(\"ag-invisible\", !visible);\n  if (!skipAriaHidden) {\n    _setAriaHidden(element, !visible);\n  }\n}\nfunction _setDisabled(element, disabled) {\n  const attributeName = \"disabled\";\n  const addOrRemoveDisabledAttribute = disabled ? (e) => e.setAttribute(attributeName, \"\") : (e) => e.removeAttribute(attributeName);\n  addOrRemoveDisabledAttribute(element);\n  _nodeListForEach(element.querySelectorAll(\"input\"), (input) => addOrRemoveDisabledAttribute(input));\n}\nfunction _isElementChildOfClass(element, cls, maxNest) {\n  let counter = 0;\n  while (element) {\n    if (element.classList.contains(cls)) {\n      return true;\n    }\n    element = element.parentElement;\n    if (typeof maxNest == \"number\") {\n      if (++counter > maxNest) {\n        break;\n      }\n    } else if (element === maxNest) {\n      break;\n    }\n  }\n  return false;\n}\nfunction _getElementSize(el) {\n  const {\n    height,\n    width,\n    borderTopWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderLeftWidth,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    boxSizing\n  } = window.getComputedStyle(el);\n  return {\n    height: parseFloat(height || \"0\"),\n    width: parseFloat(width || \"0\"),\n    borderTopWidth: parseFloat(borderTopWidth || \"0\"),\n    borderRightWidth: parseFloat(borderRightWidth || \"0\"),\n    borderBottomWidth: parseFloat(borderBottomWidth || \"0\"),\n    borderLeftWidth: parseFloat(borderLeftWidth || \"0\"),\n    paddingTop: parseFloat(paddingTop || \"0\"),\n    paddingRight: parseFloat(paddingRight || \"0\"),\n    paddingBottom: parseFloat(paddingBottom || \"0\"),\n    paddingLeft: parseFloat(paddingLeft || \"0\"),\n    marginTop: parseFloat(marginTop || \"0\"),\n    marginRight: parseFloat(marginRight || \"0\"),\n    marginBottom: parseFloat(marginBottom || \"0\"),\n    marginLeft: parseFloat(marginLeft || \"0\"),\n    boxSizing\n  };\n}\nfunction _getInnerHeight(el) {\n  const size = _getElementSize(el);\n  if (size.boxSizing === \"border-box\") {\n    return size.height - size.paddingTop - size.paddingBottom;\n  }\n  return size.height;\n}\nfunction _getInnerWidth(el) {\n  const size = _getElementSize(el);\n  if (size.boxSizing === \"border-box\") {\n    return size.width - size.paddingLeft - size.paddingRight;\n  }\n  return size.width;\n}\nfunction _getAbsoluteHeight(el) {\n  const { height, marginBottom, marginTop } = _getElementSize(el);\n  return Math.floor(height + marginBottom + marginTop);\n}\nfunction _getAbsoluteWidth(el) {\n  const { width, marginLeft, marginRight } = _getElementSize(el);\n  return Math.floor(width + marginLeft + marginRight);\n}\nfunction _getElementRectWithOffset(el) {\n  const offsetElementRect = el.getBoundingClientRect();\n  const { borderTopWidth, borderLeftWidth, borderRightWidth, borderBottomWidth } = _getElementSize(el);\n  return {\n    top: offsetElementRect.top + (borderTopWidth || 0),\n    left: offsetElementRect.left + (borderLeftWidth || 0),\n    right: offsetElementRect.right + (borderRightWidth || 0),\n    bottom: offsetElementRect.bottom + (borderBottomWidth || 0)\n  };\n}\nfunction _isRtlNegativeScroll() {\n  if (typeof rtlNegativeScroll === \"boolean\") {\n    return rtlNegativeScroll;\n  }\n  const template = document.createElement(\"div\");\n  template.style.direction = \"rtl\";\n  template.style.width = \"1px\";\n  template.style.height = \"1px\";\n  template.style.position = \"fixed\";\n  template.style.top = \"0px\";\n  template.style.overflow = \"hidden\";\n  template.dir = \"rtl\";\n  template.innerHTML = /* html */\n  `<div style=\"width: 2px\">\n            <span style=\"display: inline-block; width: 1px\"></span>\n            <span style=\"display: inline-block; width: 1px\"></span>\n        </div>`;\n  document.body.appendChild(template);\n  template.scrollLeft = 1;\n  rtlNegativeScroll = Math.floor(template.scrollLeft) === 0;\n  document.body.removeChild(template);\n  return rtlNegativeScroll;\n}\nfunction _getScrollLeft(element, rtl) {\n  let scrollLeft = element.scrollLeft;\n  if (rtl) {\n    scrollLeft = Math.abs(scrollLeft);\n    if (_isBrowserChrome() && !_isRtlNegativeScroll()) {\n      scrollLeft = element.scrollWidth - element.getBoundingClientRect().width - scrollLeft;\n    }\n  }\n  return scrollLeft;\n}\nfunction _setScrollLeft(element, value, rtl) {\n  if (rtl) {\n    if (_isRtlNegativeScroll()) {\n      value *= -1;\n    } else if (_isBrowserSafari() || _isBrowserChrome()) {\n      value = element.scrollWidth - element.getBoundingClientRect().width - value;\n    }\n  }\n  element.scrollLeft = value;\n}\nfunction _clearElement(el) {\n  while (el && el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n}\nfunction _removeFromParent(node) {\n  if (node && node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n}\nfunction _isInDOM(element) {\n  return !!element.offsetParent;\n}\nfunction _isVisible(element) {\n  const el = element;\n  if (el.checkVisibility) {\n    return el.checkVisibility({ checkVisibilityCSS: true });\n  }\n  const isHidden = !_isInDOM(element) || window.getComputedStyle(element).visibility !== \"visible\";\n  return !isHidden;\n}\nfunction _loadTemplate(template) {\n  const tempDiv = document.createElement(\"div\");\n  tempDiv.innerHTML = (template || \"\").trim();\n  return tempDiv.firstChild;\n}\nfunction _ensureDomOrder(eContainer, eChild, eChildBefore) {\n  if (eChildBefore && eChildBefore.nextSibling === eChild) {\n    return;\n  }\n  if (!eContainer.firstChild) {\n    eContainer.appendChild(eChild);\n  } else if (eChildBefore) {\n    if (eChildBefore.nextSibling) {\n      eContainer.insertBefore(eChild, eChildBefore.nextSibling);\n    } else {\n      eContainer.appendChild(eChild);\n    }\n  } else if (eContainer.firstChild && eContainer.firstChild !== eChild) {\n    eContainer.insertAdjacentElement(\"afterbegin\", eChild);\n  }\n}\nfunction _setDomChildOrder(eContainer, orderedChildren) {\n  for (let i = 0; i < orderedChildren.length; i++) {\n    const correctCellAtIndex = orderedChildren[i];\n    const actualCellAtIndex = eContainer.children[i];\n    if (actualCellAtIndex !== correctCellAtIndex) {\n      eContainer.insertBefore(correctCellAtIndex, actualCellAtIndex);\n    }\n  }\n}\nfunction _camelCaseToHyphenated(camelCase) {\n  return camelCase.replace(/[A-Z]/g, (s) => `-${s.toLocaleLowerCase()}`);\n}\nfunction _addStylesToElement(eElement, styles) {\n  if (!styles) {\n    return;\n  }\n  for (const key of Object.keys(styles)) {\n    const value = styles[key];\n    if (!key || !key.length || value == null) {\n      continue;\n    }\n    const parsedKey = _camelCaseToHyphenated(key);\n    const valueAsString = value.toString();\n    const parsedValue = valueAsString.replace(/\\s*!important/g, \"\");\n    const priority = parsedValue.length != valueAsString.length ? \"important\" : void 0;\n    eElement.style.setProperty(parsedKey, parsedValue, priority);\n  }\n}\nfunction _isHorizontalScrollShowing(element) {\n  return element.clientWidth < element.scrollWidth;\n}\nfunction _isVerticalScrollShowing(element) {\n  return element.clientHeight < element.scrollHeight;\n}\nfunction _setElementWidth(element, width) {\n  if (width === \"flex\") {\n    element.style.removeProperty(\"width\");\n    element.style.removeProperty(\"minWidth\");\n    element.style.removeProperty(\"maxWidth\");\n    element.style.flex = \"1 1 auto\";\n  } else {\n    _setFixedWidth(element, width);\n  }\n}\nfunction _setFixedWidth(element, width) {\n  width = _formatSize(width);\n  element.style.width = width.toString();\n  element.style.maxWidth = width.toString();\n  element.style.minWidth = width.toString();\n}\nfunction _setFixedHeight(element, height) {\n  height = _formatSize(height);\n  element.style.height = height.toString();\n  element.style.maxHeight = height.toString();\n  element.style.minHeight = height.toString();\n}\nfunction _formatSize(size) {\n  if (typeof size === \"number\") {\n    return `${size}px`;\n  }\n  return size;\n}\nfunction _isNodeOrElement(o) {\n  return o instanceof Node || o instanceof HTMLElement;\n}\nfunction _copyNodeList(nodeList) {\n  if (nodeList == null) {\n    return [];\n  }\n  const result = [];\n  _nodeListForEach(nodeList, (node) => result.push(node));\n  return result;\n}\nfunction _iterateNamedNodeMap(map, callback) {\n  if (!map) {\n    return;\n  }\n  for (let i = 0; i < map.length; i++) {\n    const attr = map[i];\n    callback(attr.name, attr.value);\n  }\n}\nfunction _addOrRemoveAttribute(element, name, value) {\n  if (value == null || value === \"\") {\n    element.removeAttribute(name);\n  } else {\n    element.setAttribute(name, value.toString());\n  }\n}\nfunction _nodeListForEach(nodeList, action) {\n  if (nodeList == null) {\n    return;\n  }\n  for (let i = 0; i < nodeList.length; i++) {\n    action(nodeList[i]);\n  }\n}\nfunction _bindCellRendererToHtmlElement(cellRendererPromise, eTarget) {\n  cellRendererPromise.then((cellRenderer) => {\n    const gui = cellRenderer.getGui();\n    if (gui != null) {\n      if (typeof gui === \"object\") {\n        eTarget.appendChild(gui);\n      } else {\n        eTarget.innerHTML = gui;\n      }\n    }\n  });\n}\nfunction _observeResize(beans, element, callback) {\n  const win = _getWindow(beans);\n  const ResizeObserverImpl = win.ResizeObserver;\n  const resizeObserver = ResizeObserverImpl ? new ResizeObserverImpl(callback) : null;\n  resizeObserver?.observe(element);\n  return () => resizeObserver?.disconnect();\n}\nfunction _getTextSelectionRanges(beans) {\n  const rootNode = _getRootNode(beans);\n  const selection = \"getSelection\" in rootNode ? rootNode.getSelection() : null;\n  const ranges = [];\n  for (let i = 0; i < (selection?.rangeCount ?? 0); i++) {\n    const range = selection?.getRangeAt(i);\n    if (range) {\n      ranges.push(range);\n    }\n  }\n  return { selection, ranges };\n}\nfunction _preserveRangesWhile(beans, fn) {\n  const enableCellTextSelection = beans.gos.get(\"enableCellTextSelection\");\n  if (!enableCellTextSelection) {\n    return fn();\n  }\n  if (!_isBrowserFirefox() && !_isBrowserSafari()) {\n    return fn();\n  }\n  const { selection, ranges } = _getTextSelectionRanges(beans);\n  fn();\n  selection?.removeAllRanges();\n  for (const range of ranges) {\n    selection?.addRange(range);\n  }\n}\n\n// packages/ag-grid-community/src/utils/generic.ts\nfunction _makeNull(value) {\n  if (value == null || value === \"\") {\n    return null;\n  }\n  return value;\n}\nfunction _exists(value) {\n  return value != null && value !== \"\";\n}\nfunction _missing(value) {\n  return !_exists(value);\n}\nfunction _toStringOrNull(value) {\n  return value != null && typeof value.toString === \"function\" ? value.toString() : null;\n}\nfunction _jsonEquals(val1, val2) {\n  const val1Json = val1 ? JSON.stringify(val1) : null;\n  const val2Json = val2 ? JSON.stringify(val2) : null;\n  return val1Json === val2Json;\n}\nfunction _defaultComparator(valueA, valueB, accentedCompare = false) {\n  const valueAMissing = valueA == null;\n  const valueBMissing = valueB == null;\n  if (valueA && valueA.toNumber) {\n    valueA = valueA.toNumber();\n  }\n  if (valueB && valueB.toNumber) {\n    valueB = valueB.toNumber();\n  }\n  if (valueAMissing && valueBMissing) {\n    return 0;\n  }\n  if (valueAMissing) {\n    return -1;\n  }\n  if (valueBMissing) {\n    return 1;\n  }\n  function doQuickCompare(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n  if (typeof valueA !== \"string\") {\n    return doQuickCompare(valueA, valueB);\n  }\n  if (!accentedCompare) {\n    return doQuickCompare(valueA, valueB);\n  }\n  try {\n    return valueA.localeCompare(valueB);\n  } catch (e) {\n    return doQuickCompare(valueA, valueB);\n  }\n}\n\n// packages/ag-grid-community/src/baseUrl.ts\nvar BASE_URL = \"https://www.ag-grid.com\";\n\n// packages/ag-grid-community/src/utils/function.ts\nvar doOnceFlags = {};\nfunction _doOnce(func, key) {\n  if (doOnceFlags[key]) {\n    return;\n  }\n  func();\n  doOnceFlags[key] = true;\n}\nfunction _logIfDebug(gos, message, ...args) {\n  if (gos.get(\"debug\")) {\n    console.log(\"AG Grid: \" + message, ...args);\n  }\n}\nfunction _warnOnce(msg, ...args) {\n  _doOnce(() => console.warn(\"AG Grid: \" + msg, ...args), msg + args?.join(\"\"));\n}\nfunction _errorOnce(msg, ...args) {\n  _doOnce(() => console.error(\"AG Grid: \" + msg, ...args), msg + args?.join(\"\"));\n}\nvar executeNextVMTurnFuncs = [];\nvar executeNextVMTurnPending = false;\nfunction _executeNextVMTurn(func) {\n  executeNextVMTurnFuncs.push(func);\n  if (executeNextVMTurnPending) {\n    return;\n  }\n  executeNextVMTurnPending = true;\n  window.setTimeout(() => {\n    const funcsCopy = executeNextVMTurnFuncs.slice();\n    executeNextVMTurnFuncs.length = 0;\n    executeNextVMTurnPending = false;\n    funcsCopy.forEach((func2) => func2());\n  }, 0);\n}\nfunction _debounce(bean, func, delay) {\n  let timeout;\n  return function(...args) {\n    const context = this;\n    window.clearTimeout(timeout);\n    timeout = window.setTimeout(function() {\n      if (bean.isAlive()) {\n        func.apply(context, args);\n      }\n    }, delay);\n  };\n}\nfunction _throttle(func, wait) {\n  let previousCall = 0;\n  return function(...args) {\n    const context = this;\n    const currentCall = (/* @__PURE__ */ new Date()).getTime();\n    if (currentCall - previousCall < wait) {\n      return;\n    }\n    previousCall = currentCall;\n    func.apply(context, args);\n  };\n}\nfunction _waitUntil(condition, callback, timeout = 100, timeoutMessage) {\n  const timeStamp = (/* @__PURE__ */ new Date()).getTime();\n  let interval = null;\n  let executed = false;\n  const internalCallback = () => {\n    const reachedTimeout = (/* @__PURE__ */ new Date()).getTime() - timeStamp > timeout;\n    if (condition() || reachedTimeout) {\n      callback();\n      executed = true;\n      if (interval != null) {\n        window.clearInterval(interval);\n        interval = null;\n      }\n      if (reachedTimeout && timeoutMessage) {\n        _warnOnce(timeoutMessage);\n      }\n    }\n  };\n  internalCallback();\n  if (!executed) {\n    interval = window.setInterval(internalCallback, 10);\n  }\n}\n\n// packages/ag-grid-community/src/version.ts\nvar VERSION = \"33.1.0\";\n\n// packages/ag-grid-community/src/validation/logging.ts\nvar MAX_URL_LENGTH = 2e3;\nvar MIN_PARAM_LENGTH = 100;\nvar VERSION_PARAM_NAME = \"_version_\";\nvar validation = null;\nvar suppressAllLogging = false;\nvar baseDocLink = `${BASE_URL}/javascript-data-grid`;\nfunction provideValidationServiceLogger(logger) {\n  validation = logger;\n}\nfunction setValidationDocLink(docLink) {\n  baseDocLink = docLink;\n}\nfunction getErrorParts(id, args, defaultMessage) {\n  return validation?.getConsoleMessage(id, args) ?? [minifiedLog(id, args, defaultMessage)];\n}\nfunction getMsgOrDefault(logger, id, args, defaultMessage) {\n  if (suppressAllLogging)\n    return;\n  logger(`error #${id}`, ...getErrorParts(id, args, defaultMessage));\n}\nfunction stringifyObject(inputObj) {\n  if (!inputObj)\n    return String(inputObj);\n  const object = {};\n  for (const prop of Object.keys(inputObj)) {\n    if (typeof inputObj[prop] !== \"object\" && typeof inputObj[prop] !== \"function\") {\n      object[prop] = inputObj[prop];\n    }\n  }\n  return JSON.stringify(object);\n}\nfunction stringifyValue(value) {\n  let output = value;\n  if (value instanceof Error) {\n    output = value.toString();\n  } else if (typeof value === \"object\") {\n    output = stringifyObject(value);\n  }\n  return output;\n}\nfunction toStringWithNullUndefined(str) {\n  return str === void 0 ? \"undefined\" : str === null ? \"null\" : str;\n}\nfunction getParamsUrl(baseUrl, params) {\n  return `${baseUrl}?${params.toString()}`;\n}\nfunction truncateUrl(baseUrl, params, maxLength) {\n  const sortedParams = Array.from(params.entries()).sort((a, b) => b[1].length - a[1].length);\n  let url = getParamsUrl(baseUrl, params);\n  for (const [key, value] of sortedParams) {\n    if (key === VERSION_PARAM_NAME) {\n      continue;\n    }\n    const excessLength = url.length - maxLength;\n    if (excessLength <= 0) {\n      break;\n    }\n    const ellipse = \"...\";\n    const truncateAmount = excessLength + ellipse.length;\n    const truncatedValue = value.length - truncateAmount > MIN_PARAM_LENGTH ? value.slice(0, value.length - truncateAmount) + ellipse : value.slice(0, MIN_PARAM_LENGTH) + ellipse;\n    params.set(key, truncatedValue);\n    url = getParamsUrl(baseUrl, params);\n  }\n  return url;\n}\nfunction getErrorLink(errorNum, args) {\n  const params = new URLSearchParams();\n  params.append(VERSION_PARAM_NAME, VERSION);\n  if (args) {\n    for (const key of Object.keys(args)) {\n      params.append(key, stringifyValue(args[key]));\n    }\n  }\n  const baseUrl = `${baseDocLink}/errors/${errorNum}`;\n  const url = getParamsUrl(baseUrl, params);\n  return url.length <= MAX_URL_LENGTH ? url : truncateUrl(baseUrl, params, MAX_URL_LENGTH);\n}\nvar minifiedLog = (errorNum, args, defaultMessage) => {\n  const errorLink = getErrorLink(errorNum, args);\n  return `${defaultMessage ? defaultMessage + \" \\n\" : \"\"}Visit ${errorLink}${defaultMessage ? \"\" : \" \\n  Alternatively register the ValidationModule to see the full message in the console.\"}`;\n};\nfunction _warn(...args) {\n  getMsgOrDefault(_warnOnce, args[0], args[1]);\n}\nfunction _error(...args) {\n  getMsgOrDefault(_errorOnce, args[0], args[1]);\n}\nfunction _logPreInitErr(id, args, defaultMessage) {\n  getMsgOrDefault(_errorOnce, id, args, defaultMessage);\n}\nfunction getErrMsg(defaultMessage, args) {\n  const id = args[0];\n  return `error #${id} ` + getErrorParts(id, args[1], defaultMessage).join(\" \");\n}\nfunction _errMsg(...args) {\n  return getErrMsg(void 0, args);\n}\nfunction _preInitErrMsg(...args) {\n  return getErrMsg(\"\\n\", args);\n}\n\n// packages/ag-grid-community/src/gridOptionsUtils.ts\nfunction isRowModelType(gos, rowModelType) {\n  return gos.get(\"rowModelType\") === rowModelType;\n}\nfunction _isClientSideRowModel(gos, rowModel) {\n  return isRowModelType(gos, \"clientSide\");\n}\nfunction _isServerSideRowModel(gos, rowModel) {\n  return isRowModelType(gos, \"serverSide\");\n}\nfunction _isDomLayout(gos, domLayout) {\n  return gos.get(\"domLayout\") === domLayout;\n}\nfunction _isRowSelection(gos) {\n  return _getRowSelectionMode(gos) !== void 0;\n}\nfunction _isGetRowHeightFunction(gos) {\n  return typeof gos.get(\"getRowHeight\") === \"function\";\n}\nfunction _shouldMaintainColumnOrder(gos, isPivotColumns) {\n  if (isPivotColumns) {\n    return !gos.get(\"enableStrictPivotColumnOrder\");\n  }\n  return gos.get(\"maintainColumnOrder\");\n}\nfunction _getRowHeightForNode(beans, rowNode, allowEstimate = false, defaultRowHeight) {\n  const { gos, environment } = beans;\n  if (defaultRowHeight == null) {\n    defaultRowHeight = environment.getDefaultRowHeight();\n  }\n  if (_isGetRowHeightFunction(gos)) {\n    if (allowEstimate) {\n      return { height: defaultRowHeight, estimated: true };\n    }\n    const params = {\n      node: rowNode,\n      data: rowNode.data\n    };\n    const height = gos.getCallback(\"getRowHeight\")(params);\n    if (isNumeric(height)) {\n      if (height === 0) {\n        _warn(23);\n      }\n      return { height: Math.max(1, height), estimated: false };\n    }\n  }\n  if (rowNode.detail && gos.get(\"masterDetail\")) {\n    return getMasterDetailRowHeight(gos);\n  }\n  const gridOptionsRowHeight = gos.get(\"rowHeight\");\n  const rowHeight = gridOptionsRowHeight && isNumeric(gridOptionsRowHeight) ? gridOptionsRowHeight : defaultRowHeight;\n  return { height: rowHeight, estimated: false };\n}\nfunction getMasterDetailRowHeight(gos) {\n  if (gos.get(\"detailRowAutoHeight\")) {\n    return { height: 1, estimated: false };\n  }\n  const defaultRowHeight = gos.get(\"detailRowHeight\");\n  if (isNumeric(defaultRowHeight)) {\n    return { height: defaultRowHeight, estimated: false };\n  }\n  return { height: 300, estimated: false };\n}\nfunction _getRowHeightAsNumber(beans) {\n  const { environment, gos } = beans;\n  const gridOptionsRowHeight = gos.get(\"rowHeight\");\n  if (!gridOptionsRowHeight || _missing(gridOptionsRowHeight)) {\n    return environment.getDefaultRowHeight();\n  }\n  const rowHeight = environment.refreshRowHeightVariable();\n  if (rowHeight !== -1) {\n    return rowHeight;\n  }\n  _warn(24);\n  return environment.getDefaultRowHeight();\n}\nfunction isNumeric(value) {\n  return !isNaN(value) && typeof value === \"number\" && isFinite(value);\n}\nfunction _getDomData(gos, element, key) {\n  const domData = element[gos.getDomDataKey()];\n  return domData ? domData[key] : void 0;\n}\nfunction _setDomData(gos, element, key, value) {\n  const domDataKey = gos.getDomDataKey();\n  let domData = element[domDataKey];\n  if (_missing(domData)) {\n    domData = {};\n    element[domDataKey] = domData;\n  }\n  domData[key] = value;\n}\nfunction _getDocument(beans) {\n  const { gos, eGridDiv } = beans;\n  let result = null;\n  const gridOptionsGetDocument = gos.get(\"getDocument\");\n  if (gridOptionsGetDocument && _exists(gridOptionsGetDocument)) {\n    result = gridOptionsGetDocument();\n  } else if (eGridDiv) {\n    result = eGridDiv.ownerDocument;\n  }\n  if (result && _exists(result)) {\n    return result;\n  }\n  return document;\n}\nfunction _getWindow(beans) {\n  const eDocument = _getDocument(beans);\n  return eDocument.defaultView || window;\n}\nfunction _getRootNode(beans) {\n  return beans.eGridDiv.getRootNode();\n}\nfunction _getActiveDomElement(beans) {\n  return _getRootNode(beans).activeElement;\n}\nfunction _getPageBody(beans) {\n  let rootNode = null;\n  let targetEl = null;\n  try {\n    rootNode = _getDocument(beans).fullscreenElement;\n  } catch (e) {\n  } finally {\n    if (!rootNode) {\n      rootNode = _getRootNode(beans);\n    }\n    const body = rootNode.querySelector(\"body\");\n    if (body) {\n      targetEl = body;\n    } else if (rootNode instanceof ShadowRoot) {\n      targetEl = rootNode;\n    } else if (rootNode instanceof Document) {\n      targetEl = rootNode?.documentElement;\n    } else {\n      targetEl = rootNode;\n    }\n  }\n  return targetEl;\n}\nfunction _getBodyWidth(beans) {\n  const body = _getPageBody(beans);\n  return body?.clientWidth ?? (window.innerHeight || -1);\n}\nfunction _getBodyHeight(beans) {\n  const body = _getPageBody(beans);\n  return body?.clientHeight ?? (window.innerHeight || -1);\n}\nfunction _anchorElementToMouseMoveEvent(element, mouseMoveEvent, beans) {\n  const eRect = element.getBoundingClientRect();\n  const height = eRect.height;\n  const browserWidth = _getBodyWidth(beans) - 2;\n  const browserHeight = _getBodyHeight(beans) - 2;\n  const offsetParent = element.offsetParent;\n  if (!offsetParent) {\n    return;\n  }\n  const offsetParentSize = _getElementRectWithOffset(element.offsetParent);\n  const { clientY, clientX } = mouseMoveEvent;\n  let top = clientY - offsetParentSize.top - height / 2;\n  let left = clientX - offsetParentSize.left - 10;\n  const eDocument = _getDocument(beans);\n  const win = eDocument.defaultView || window;\n  const windowScrollY = win.pageYOffset || eDocument.documentElement.scrollTop;\n  const windowScrollX = win.pageXOffset || eDocument.documentElement.scrollLeft;\n  if (browserWidth > 0 && left + element.clientWidth > browserWidth + windowScrollX) {\n    left = browserWidth + windowScrollX - element.clientWidth;\n  }\n  if (left < 0) {\n    left = 0;\n  }\n  if (browserHeight > 0 && top + element.clientHeight > browserHeight + windowScrollY) {\n    top = browserHeight + windowScrollY - element.clientHeight;\n  }\n  if (top < 0) {\n    top = 0;\n  }\n  element.style.left = `${left}px`;\n  element.style.top = `${top}px`;\n}\nfunction _isNothingFocused(beans) {\n  const eDocument = _getDocument(beans);\n  const activeEl = _getActiveDomElement(beans);\n  return activeEl === null || activeEl === eDocument.body;\n}\nfunction _isAnimateRows(gos) {\n  if (gos.get(\"ensureDomOrder\")) {\n    return false;\n  }\n  return gos.get(\"animateRows\");\n}\nfunction _isGroupRowsSticky(gos) {\n  if (gos.get(\"paginateChildRows\") || gos.get(\"groupHideOpenParents\") || _isDomLayout(gos, \"print\")) {\n    return false;\n  }\n  return true;\n}\nfunction _isColumnsSortingCoupledToGroup(gos) {\n  const autoGroupColumnDef = gos.get(\"autoGroupColumnDef\");\n  return !autoGroupColumnDef?.comparator && !gos.get(\"treeData\");\n}\nfunction _getGroupAggFiltering(gos) {\n  const userValue = gos.get(\"groupAggFiltering\");\n  if (typeof userValue === \"function\") {\n    return gos.getCallback(\"groupAggFiltering\");\n  }\n  if (userValue === true) {\n    return () => true;\n  }\n  return void 0;\n}\nfunction _getGrandTotalRow(gos) {\n  return gos.get(\"grandTotalRow\");\n}\nfunction _getGroupTotalRowCallback(gos) {\n  const userValue = gos.get(\"groupTotalRow\");\n  if (typeof userValue === \"function\") {\n    return gos.getCallback(\"groupTotalRow\");\n  }\n  return () => userValue ?? void 0;\n}\nfunction _isGroupMultiAutoColumn(gos) {\n  if (gos.exists(\"groupDisplayType\")) {\n    return gos.get(\"groupDisplayType\") === \"multipleColumns\";\n  }\n  return gos.get(\"groupHideOpenParents\");\n}\nfunction _isGroupUseEntireRow(gos, pivotMode) {\n  if (pivotMode) {\n    return false;\n  }\n  return gos.get(\"groupDisplayType\") === \"groupRows\";\n}\nfunction _getRowIdCallback(gos) {\n  const getRowId = gos.getCallback(\"getRowId\");\n  if (getRowId === void 0) {\n    return getRowId;\n  }\n  return (params) => {\n    let id = getRowId(params);\n    if (typeof id !== \"string\") {\n      _warn(25, { id });\n      id = String(id);\n    }\n    return id;\n  };\n}\nfunction _canSkipShowingRowGroup(gos, node) {\n  const isSkippingGroups = gos.get(\"groupHideParentOfSingleChild\");\n  if (isSkippingGroups === true) {\n    return true;\n  }\n  if (isSkippingGroups === \"leafGroupsOnly\" && node.leafGroup) {\n    return true;\n  }\n  if (gos.get(\"groupRemoveSingleChildren\")) {\n    return true;\n  }\n  if (gos.get(\"groupRemoveLowestSingleChildren\") && node.leafGroup) {\n    return true;\n  }\n  return false;\n}\nfunction _getMaxConcurrentDatasourceRequests(gos) {\n  const res = gos.get(\"maxConcurrentDatasourceRequests\");\n  return res > 0 ? res : void 0;\n}\nfunction _shouldUpdateColVisibilityAfterGroup(gos, isGrouped) {\n  const preventVisibilityChanges = gos.get(\"suppressGroupChangesColumnVisibility\");\n  if (preventVisibilityChanges === true) {\n    return false;\n  }\n  if (isGrouped && preventVisibilityChanges === \"suppressHideOnGroup\") {\n    return false;\n  }\n  if (!isGrouped && preventVisibilityChanges === \"suppressShowOnUngroup\") {\n    return false;\n  }\n  const legacySuppressOnGroup = gos.get(\"suppressRowGroupHidesColumns\");\n  if (isGrouped && legacySuppressOnGroup === true) {\n    return false;\n  }\n  const legacySuppressOnUngroup = gos.get(\"suppressMakeColumnVisibleAfterUnGroup\");\n  if (!isGrouped && legacySuppressOnUngroup === true) {\n    return false;\n  }\n  return true;\n}\nfunction _getCheckboxes(selection) {\n  return selection?.checkboxes ?? true;\n}\nfunction _getHeaderCheckbox(selection) {\n  return selection?.mode === \"multiRow\" && (selection.headerCheckbox ?? true);\n}\nfunction _getCheckboxLocation(rowSelection) {\n  if (typeof rowSelection !== \"object\") {\n    return void 0;\n  }\n  return rowSelection.checkboxLocation ?? \"selectionColumn\";\n}\nfunction _getHideDisabledCheckboxes(selection) {\n  return selection?.hideDisabledCheckboxes ?? false;\n}\nfunction _isUsingNewRowSelectionAPI(gos) {\n  const rowSelection = gos.get(\"rowSelection\");\n  return typeof rowSelection !== \"string\";\n}\nfunction _isUsingNewCellSelectionAPI(gos) {\n  return gos.get(\"cellSelection\") !== void 0;\n}\nfunction _getSuppressMultiRanges(gos) {\n  const selection = gos.get(\"cellSelection\");\n  const useNewAPI = selection !== void 0;\n  if (!useNewAPI) {\n    return gos.get(\"suppressMultiRangeSelection\");\n  }\n  return typeof selection !== \"boolean\" ? selection?.suppressMultiRanges ?? false : false;\n}\nfunction _isCellSelectionEnabled(gos) {\n  const selection = gos.get(\"cellSelection\");\n  const useNewAPI = selection !== void 0;\n  return useNewAPI ? !!selection : gos.get(\"enableRangeSelection\");\n}\nfunction _getFillHandle(gos) {\n  const selection = gos.get(\"cellSelection\");\n  const useNewAPI = selection !== void 0;\n  if (!useNewAPI) {\n    return {\n      mode: \"fill\",\n      setFillValue: gos.get(\"fillOperation\"),\n      direction: gos.get(\"fillHandleDirection\"),\n      suppressClearOnFillReduction: gos.get(\"suppressClearOnFillReduction\")\n    };\n  }\n  return typeof selection !== \"boolean\" && selection.handle?.mode === \"fill\" ? selection.handle : void 0;\n}\nfunction _getEnableClickSelection(gos) {\n  const selection = gos.get(\"rowSelection\") ?? \"single\";\n  if (typeof selection === \"string\") {\n    const suppressRowClickSelection = gos.get(\"suppressRowClickSelection\");\n    const suppressRowDeselection = gos.get(\"suppressRowDeselection\");\n    if (suppressRowClickSelection && suppressRowDeselection) {\n      return false;\n    } else if (suppressRowClickSelection) {\n      return \"enableDeselection\";\n    } else if (suppressRowDeselection) {\n      return \"enableSelection\";\n    } else {\n      return true;\n    }\n  }\n  return selection.mode === \"singleRow\" || selection.mode === \"multiRow\" ? selection.enableClickSelection ?? false : false;\n}\nfunction _getEnableSelection(gos) {\n  const enableClickSelection = _getEnableClickSelection(gos);\n  return enableClickSelection === true || enableClickSelection === \"enableSelection\";\n}\nfunction _getEnableDeselection(gos) {\n  const enableClickSelection = _getEnableClickSelection(gos);\n  return enableClickSelection === true || enableClickSelection === \"enableDeselection\";\n}\nfunction _getIsRowSelectable(gos) {\n  const selection = gos.get(\"rowSelection\");\n  if (typeof selection === \"string\") {\n    return gos.get(\"isRowSelectable\");\n  }\n  return selection?.isRowSelectable;\n}\nfunction _getRowSelectionMode(arg) {\n  const selection = \"beanName\" in arg && arg.beanName === \"gos\" ? arg.get(\"rowSelection\") : arg.rowSelection;\n  if (typeof selection === \"string\") {\n    switch (selection) {\n      case \"multiple\":\n        return \"multiRow\";\n      case \"single\":\n        return \"singleRow\";\n      default:\n        return;\n    }\n  }\n  switch (selection?.mode) {\n    case \"multiRow\":\n    case \"singleRow\":\n      return selection.mode;\n    default:\n      return;\n  }\n}\nfunction _isMultiRowSelection(arg) {\n  const mode = _getRowSelectionMode(arg);\n  return mode === \"multiRow\";\n}\nfunction _getEnableSelectionWithoutKeys(gos) {\n  const selection = gos.get(\"rowSelection\");\n  if (typeof selection === \"string\") {\n    return gos.get(\"rowMultiSelectWithClick\");\n  }\n  return selection?.enableSelectionWithoutKeys ?? false;\n}\nfunction _getGroupSelection(gos) {\n  const selection = gos.get(\"rowSelection\");\n  if (typeof selection === \"string\") {\n    const groupSelectsChildren = gos.get(\"groupSelectsChildren\");\n    const groupSelectsFiltered = gos.get(\"groupSelectsFiltered\");\n    if (groupSelectsChildren && groupSelectsFiltered) {\n      return \"filteredDescendants\";\n    } else if (groupSelectsChildren) {\n      return \"descendants\";\n    } else {\n      return \"self\";\n    }\n  }\n  return selection?.mode === \"multiRow\" ? selection.groupSelects : void 0;\n}\nfunction _getSelectAll(gos, defaultValue = true) {\n  const rowSelection = gos.get(\"rowSelection\");\n  if (typeof rowSelection !== \"object\") {\n    return defaultValue ? \"all\" : void 0;\n  }\n  return rowSelection.mode === \"multiRow\" ? rowSelection.selectAll : \"all\";\n}\nfunction _getGroupSelectsDescendants(gos) {\n  const groupSelection = _getGroupSelection(gos);\n  return groupSelection === \"descendants\" || groupSelection === \"filteredDescendants\";\n}\nfunction _getMasterSelects(gos) {\n  const rowSelection = gos.get(\"rowSelection\");\n  return typeof rowSelection === \"object\" && rowSelection.masterSelects || \"self\";\n}\nfunction _isSetFilterByDefault(gos) {\n  return gos.isModuleRegistered(\"SetFilter\") && !gos.get(\"suppressSetFilterByDefault\");\n}\nfunction _isLegacyMenuEnabled(gos) {\n  return gos.get(\"columnMenu\") === \"legacy\";\n}\nfunction _isColumnMenuAnchoringEnabled(gos) {\n  return !_isLegacyMenuEnabled(gos);\n}\nfunction _getCallbackForEvent(eventName) {\n  if (!eventName || eventName.length < 2) {\n    return eventName;\n  }\n  return \"on\" + eventName[0].toUpperCase() + eventName.substring(1);\n}\nfunction _combineAttributesAndGridOptions(gridOptions, component, gridOptionsKeys) {\n  if (typeof gridOptions !== \"object\") {\n    gridOptions = {};\n  }\n  const mergedOptions = { ...gridOptions };\n  gridOptionsKeys.forEach((key) => {\n    const value = component[key];\n    if (typeof value !== \"undefined\") {\n      mergedOptions[key] = value;\n    }\n  });\n  return mergedOptions;\n}\nfunction _processOnChange(changes, api) {\n  if (!changes) {\n    return;\n  }\n  const gridChanges = {};\n  let hasChanges = false;\n  Object.keys(changes).forEach((key) => {\n    gridChanges[key] = changes[key];\n    hasChanges = true;\n  });\n  if (!hasChanges) {\n    return;\n  }\n  const internalUpdateEvent = {\n    type: \"gridOptionsChanged\",\n    options: gridChanges\n  };\n  api.dispatchEvent(internalUpdateEvent);\n  const event = {\n    type: \"componentStateChanged\",\n    ...gridChanges\n  };\n  api.dispatchEvent(event);\n}\nfunction _addGridCommonParams(gos, params) {\n  return gos.addGridCommonParams(params);\n}\n\n// packages/ag-grid-community/src/utils/event.ts\nvar AG_GRID_STOP_PROPAGATION = \"__ag_Grid_Stop_Propagation\";\nvar PASSIVE_EVENTS = [\"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\", \"scroll\"];\nvar NON_PASSIVE_EVENTS = [\"wheel\"];\nvar supports = {};\nfunction _stopPropagationForAgGrid(event) {\n  event[AG_GRID_STOP_PROPAGATION] = true;\n}\nfunction _isStopPropagationForAgGrid(event) {\n  return event[AG_GRID_STOP_PROPAGATION] === true;\n}\nvar _isEventSupported = /* @__PURE__ */ (() => {\n  const tags = {\n    select: \"input\",\n    change: \"input\",\n    submit: \"form\",\n    reset: \"form\",\n    error: \"img\",\n    load: \"img\",\n    abort: \"img\"\n  };\n  const eventChecker = (eventName) => {\n    if (typeof supports[eventName] === \"boolean\") {\n      return supports[eventName];\n    }\n    const el = document.createElement(tags[eventName] || \"div\");\n    eventName = \"on\" + eventName;\n    return supports[eventName] = eventName in el;\n  };\n  return eventChecker;\n})();\nfunction _getCtrlForEventTarget(gos, eventTarget, type) {\n  let sourceElement = eventTarget;\n  while (sourceElement) {\n    const renderedComp = _getDomData(gos, sourceElement, type);\n    if (renderedComp) {\n      return renderedComp;\n    }\n    sourceElement = sourceElement.parentElement;\n  }\n  return null;\n}\nfunction _isElementInEventPath(element, event) {\n  if (!event || !element) {\n    return false;\n  }\n  return _getEventPath(event).indexOf(element) >= 0;\n}\nfunction _createEventPath(event) {\n  const res = [];\n  let pointer = event.target;\n  while (pointer) {\n    res.push(pointer);\n    pointer = pointer.parentElement;\n  }\n  return res;\n}\nfunction _getEventPath(event) {\n  const eventNoType = event;\n  if (eventNoType.path) {\n    return eventNoType.path;\n  }\n  if (eventNoType.composedPath) {\n    return eventNoType.composedPath();\n  }\n  return _createEventPath(eventNoType);\n}\nfunction _addSafePassiveEventListener(frameworkOverrides, eElement, event, listener) {\n  const passive = getPassiveStateForEvent(event);\n  let options;\n  if (passive != null) {\n    options = { passive };\n  }\n  if (frameworkOverrides && frameworkOverrides.addEventListener) {\n    frameworkOverrides.addEventListener(eElement, event, listener, options);\n  }\n}\nvar getPassiveStateForEvent = (event) => {\n  const isPassive = PASSIVE_EVENTS.includes(event);\n  const isNonPassive = NON_PASSIVE_EVENTS.includes(event);\n  if (isPassive) {\n    return true;\n  }\n  if (isNonPassive) {\n    return false;\n  }\n};\n\n// packages/ag-grid-community/src/context/beanStub.ts\nvar BeanStub = class {\n  constructor() {\n    // not named context to allow children to use 'context' as a variable name\n    this.destroyFunctions = [];\n    this.destroyed = false;\n    // for vue 3 - prevents Vue from trying to make this (and obviously any sub classes) from being reactive\n    // prevents vue from creating proxies for created objects and prevents identity related issues\n    this.__v_skip = true;\n    this.propertyListenerId = 0;\n    // Enable multiple grid properties to be updated together by the user but only trigger shared logic once.\n    // Closely related to logic in GridOptionsUtils.ts _processOnChange\n    this.lastChangeSetIdLookup = {};\n    this.isAlive = () => !this.destroyed;\n  }\n  preWireBeans(beans) {\n    this.beans = beans;\n    this.stubContext = beans.context;\n    this.eventSvc = beans.eventSvc;\n    this.gos = beans.gos;\n  }\n  // this was a test constructor niall built, when active, it prints after 5 seconds all beans/components that are\n  // not destroyed. to use, create a new grid, then api.destroy() before 5 seconds. then anything that gets printed\n  // points to a bean or component that was not properly disposed of.\n  // constructor() {\n  //     setTimeout(()=> {\n  //         if (this.isAlive()) {\n  //             let prototype: any = Object.getPrototypeOf(this);\n  //             const constructor: any = prototype.constructor;\n  //             const constructorString = constructor.toString();\n  //             const beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n  //             console.log('is alive ' + beanName);\n  //         }\n  //     }, 5000);\n  // }\n  destroy() {\n    const { destroyFunctions } = this;\n    for (let i = 0; i < destroyFunctions.length; i++) {\n      destroyFunctions[i]();\n    }\n    destroyFunctions.length = 0;\n    this.destroyed = true;\n    this.dispatchLocalEvent({ type: \"destroyed\" });\n  }\n  // The typing of AgEventListener<any, any, any> is not ideal, but it's the best we can do at the moment to enable\n  // eventSvc to have the best typing at the expense of BeanStub local events\n  /** Add a local event listener against this BeanStub */\n  addEventListener(eventType, listener, async) {\n    if (!this.localEventService) {\n      this.localEventService = new LocalEventService();\n    }\n    this.localEventService.addEventListener(eventType, listener, async);\n  }\n  /** Remove a local event listener from this BeanStub */\n  removeEventListener(eventType, listener, async) {\n    this.localEventService?.removeEventListener(eventType, listener, async);\n  }\n  dispatchLocalEvent(event) {\n    this.localEventService?.dispatchEvent(event);\n  }\n  addManagedElementListeners(object, handlers) {\n    return this._setupListeners(object, handlers);\n  }\n  addManagedEventListeners(handlers) {\n    return this._setupListeners(this.eventSvc, handlers);\n  }\n  addManagedListeners(object, handlers) {\n    return this._setupListeners(object, handlers);\n  }\n  _setupListeners(object, handlers) {\n    const destroyFuncs = [];\n    for (const k of Object.keys(handlers)) {\n      const handler = handlers[k];\n      if (handler) {\n        destroyFuncs.push(this._setupListener(object, k, handler));\n      }\n    }\n    return destroyFuncs;\n  }\n  _setupListener(object, event, listener) {\n    if (this.destroyed) {\n      return () => null;\n    }\n    let destroyFunc;\n    if (isAgEventEmitter(object)) {\n      object.__addEventListener(event, listener);\n      destroyFunc = () => {\n        object.__removeEventListener(event, listener);\n        return null;\n      };\n    } else {\n      if (object instanceof HTMLElement) {\n        _addSafePassiveEventListener(this.beans.frameworkOverrides, object, event, listener);\n      } else {\n        object.addEventListener(event, listener);\n      }\n      destroyFunc = () => {\n        object.removeEventListener(event, listener);\n        return null;\n      };\n    }\n    this.destroyFunctions.push(destroyFunc);\n    return () => {\n      destroyFunc();\n      this.destroyFunctions = this.destroyFunctions.filter((fn) => fn !== destroyFunc);\n      return null;\n    };\n  }\n  /**\n   * Setup a managed property listener for the given GridOption property.\n   * However, stores the destroy function in the beanStub so that if this bean\n   * is a component the destroy function will be called when the component is destroyed\n   * as opposed to being cleaned up only when the GridOptionsService is destroyed.\n   */\n  setupGridOptionListener(event, listener) {\n    const { gos } = this;\n    gos.addPropertyEventListener(event, listener);\n    const destroyFunc = () => {\n      gos.removePropertyEventListener(event, listener);\n      return null;\n    };\n    this.destroyFunctions.push(destroyFunc);\n    return () => {\n      destroyFunc();\n      this.destroyFunctions = this.destroyFunctions.filter((fn) => fn !== destroyFunc);\n      return null;\n    };\n  }\n  /**\n   * Setup a managed property listener for the given GridOption property.\n   * @param event GridOption property to listen to changes for.\n   * @param listener Listener to run when property value changes\n   */\n  addManagedPropertyListener(event, listener) {\n    if (this.destroyed) {\n      return () => null;\n    }\n    return this.setupGridOptionListener(event, listener);\n  }\n  /**\n   * Setup managed property listeners for the given set of GridOption properties.\n   * The listener will be run if any of the property changes but will only run once if\n   * multiple of the properties change within the same framework lifecycle event.\n   * Works on the basis that GridOptionsService updates all properties *before* any property change events are fired.\n   * @param events Array of GridOption properties to listen for changes too.\n   * @param listener Shared listener to run if any of the properties change\n   */\n  addManagedPropertyListeners(events, listener) {\n    if (this.destroyed) {\n      return;\n    }\n    const eventsKey = events.join(\"-\") + this.propertyListenerId++;\n    const wrappedListener = (event) => {\n      if (event.changeSet) {\n        if (event.changeSet && event.changeSet.id === this.lastChangeSetIdLookup[eventsKey]) {\n          return;\n        }\n        this.lastChangeSetIdLookup[eventsKey] = event.changeSet.id;\n      }\n      const propertiesChangeEvent = {\n        type: \"gridPropertyChanged\",\n        changeSet: event.changeSet,\n        source: event.source\n      };\n      listener(propertiesChangeEvent);\n    };\n    events.forEach((event) => this.setupGridOptionListener(event, wrappedListener));\n  }\n  getLocaleTextFunc() {\n    return _getLocaleTextFunc(this.beans.localeSvc);\n  }\n  addDestroyFunc(func) {\n    if (this.isAlive()) {\n      this.destroyFunctions.push(func);\n    } else {\n      func();\n    }\n  }\n  /** doesn't throw an error if `bean` is undefined */\n  createOptionalManagedBean(bean, context) {\n    return bean ? this.createManagedBean(bean, context) : void 0;\n  }\n  createManagedBean(bean, context) {\n    const res = this.createBean(bean, context);\n    this.addDestroyFunc(this.destroyBean.bind(this, bean, context));\n    return res;\n  }\n  createBean(bean, context, afterPreCreateCallback) {\n    return (context || this.stubContext).createBean(bean, afterPreCreateCallback);\n  }\n  /**\n   * Destroys a bean and returns undefined to support destruction and clean up in a single line.\n   * this.dateComp = this.context.destroyBean(this.dateComp);\n   */\n  destroyBean(bean, context) {\n    return (context || this.stubContext).destroyBean(bean);\n  }\n  /**\n   * Destroys an array of beans and returns an empty array to support destruction and clean up in a single line.\n   * this.dateComps = this.context.destroyBeans(this.dateComps);\n   */\n  destroyBeans(beans, context) {\n    return (context || this.stubContext).destroyBeans(beans);\n  }\n};\nfunction isAgEventEmitter(object) {\n  return object.__addEventListener !== void 0;\n}\n\n// packages/ag-grid-community/src/utils/object.ts\nvar SKIP_JS_BUILTINS = /* @__PURE__ */ new Set([\"__proto__\", \"constructor\", \"prototype\"]);\nfunction _iterateObject(object, callback) {\n  if (object == null) {\n    return;\n  }\n  if (Array.isArray(object)) {\n    for (let i = 0; i < object.length; i++) {\n      callback(i.toString(), object[i]);\n    }\n    return;\n  }\n  for (const key of Object.keys(object)) {\n    callback(key, object[key]);\n  }\n}\nfunction _mergeDeep(dest, source, copyUndefined = true, makeCopyOfSimpleObjects = false) {\n  if (!_exists(source)) {\n    return;\n  }\n  _iterateObject(source, (key, sourceValue) => {\n    if (SKIP_JS_BUILTINS.has(key)) {\n      return;\n    }\n    let destValue = dest[key];\n    if (destValue === sourceValue) {\n      return;\n    }\n    if (makeCopyOfSimpleObjects) {\n      const objectIsDueToBeCopied = destValue == null && sourceValue != null;\n      if (objectIsDueToBeCopied) {\n        const doNotCopyAsSourceIsSimpleObject = typeof sourceValue === \"object\" && sourceValue.constructor === Object;\n        if (doNotCopyAsSourceIsSimpleObject) {\n          destValue = {};\n          dest[key] = destValue;\n        }\n      }\n    }\n    if (_isNonNullObject(sourceValue) && _isNonNullObject(destValue) && !Array.isArray(destValue)) {\n      _mergeDeep(destValue, sourceValue, copyUndefined, makeCopyOfSimpleObjects);\n    } else if (copyUndefined || sourceValue !== void 0) {\n      dest[key] = sourceValue;\n    }\n  });\n}\nfunction _getValueUsingField(data, field, fieldContainsDots) {\n  if (!field || !data) {\n    return;\n  }\n  if (!fieldContainsDots) {\n    return data[field];\n  }\n  const fields = field.split(\".\");\n  let currentObject = data;\n  for (let i = 0; i < fields.length; i++) {\n    if (currentObject == null) {\n      return void 0;\n    }\n    currentObject = currentObject[fields[i]];\n  }\n  return currentObject;\n}\nfunction _isNonNullObject(value) {\n  return typeof value === \"object\" && value !== null;\n}\n\n// packages/ag-grid-community/src/utils/string.ts\nvar reUnescapedHtml = /[&<>\"']/g;\nvar HTML_ESCAPES = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#39;\"\n};\nfunction _escapeString(toEscape, skipEscapingHtmlChars) {\n  if (toEscape == null) {\n    return null;\n  }\n  const stringResult = toEscape.toString().toString();\n  if (skipEscapingHtmlChars) {\n    return stringResult;\n  }\n  return stringResult.replace(reUnescapedHtml, (chr) => HTML_ESCAPES[chr]);\n}\n\n// packages/ag-grid-community/src/entities/agColumn.ts\nvar COL_DEF_DEFAULTS = {\n  resizable: true,\n  sortable: true\n};\nvar instanceIdSequence = 0;\nfunction getNextColInstanceId() {\n  return instanceIdSequence++;\n}\nfunction isColumn(col) {\n  return col instanceof AgColumn;\n}\nvar AgColumn = class extends BeanStub {\n  constructor(colDef, userProvidedColDef, colId, primary) {\n    super();\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n    this.colId = colId;\n    this.primary = primary;\n    this.isColumn = true;\n    // used by React (and possibly other frameworks) as key for rendering. also used to\n    // identify old vs new columns for destroying cols when no longer used.\n    this.instanceId = getNextColInstanceId();\n    // The measured height of this column's header when autoHeaderHeight is enabled\n    this.autoHeaderHeight = null;\n    this.moving = false;\n    this.menuVisible = false;\n    this.lastLeftPinned = false;\n    this.firstRightPinned = false;\n    this.filterActive = false;\n    this.colEventSvc = new LocalEventService();\n    this.tooltipEnabled = false;\n    this.rowGroupActive = false;\n    this.pivotActive = false;\n    this.aggregationActive = false;\n    this.flex = null;\n    this.colIdSanitised = _escapeString(colId);\n  }\n  destroy() {\n    super.destroy();\n    this.beans.rowSpanSvc?.deregister(this);\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  setState() {\n    const {\n      colDef,\n      beans: { sortSvc, pinnedCols, colFlex }\n    } = this;\n    sortSvc?.initCol(this);\n    const hide = colDef.hide;\n    if (hide !== void 0) {\n      this.visible = !hide;\n    } else {\n      this.visible = !colDef.initialHide;\n    }\n    pinnedCols?.initCol(this);\n    colFlex?.initCol(this);\n  }\n  // gets called when user provides an alternative colDef, eg\n  setColDef(colDef, userProvidedColDef, source) {\n    const colSpanChanged = colDef.spanRows !== this.colDef.spanRows;\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n    this.initMinAndMaxWidths();\n    this.initDotNotation();\n    this.initTooltip();\n    if (colSpanChanged) {\n      this.beans.rowSpanSvc?.deregister(this);\n      this.initRowSpan();\n    }\n    this.dispatchColEvent(\"colDefChanged\", source);\n  }\n  getUserProvidedColDef() {\n    return this.userProvidedColDef;\n  }\n  getParent() {\n    return this.parent;\n  }\n  getOriginalParent() {\n    return this.originalParent;\n  }\n  // this is done after constructor as it uses gridOptionsService\n  postConstruct() {\n    this.setState();\n    this.initMinAndMaxWidths();\n    this.resetActualWidth(\"gridInitializing\");\n    this.initDotNotation();\n    this.initTooltip();\n    this.initRowSpan();\n  }\n  initDotNotation() {\n    const {\n      gos,\n      colDef: { field, tooltipField }\n    } = this;\n    const suppressDotNotation = gos.get(\"suppressFieldDotNotation\");\n    this.fieldContainsDots = _exists(field) && field.indexOf(\".\") >= 0 && !suppressDotNotation;\n    this.tooltipFieldContainsDots = _exists(tooltipField) && tooltipField.indexOf(\".\") >= 0 && !suppressDotNotation;\n  }\n  initMinAndMaxWidths() {\n    const colDef = this.colDef;\n    this.minWidth = colDef.minWidth ?? this.beans.environment.getDefaultColumnMinWidth();\n    this.maxWidth = colDef.maxWidth ?? Number.MAX_SAFE_INTEGER;\n  }\n  initTooltip() {\n    this.beans.tooltipSvc?.initCol(this);\n  }\n  initRowSpan() {\n    if (this.colDef.spanRows) {\n      this.beans.rowSpanSvc?.register(this);\n    }\n  }\n  resetActualWidth(source) {\n    const initialWidth = this.calculateColInitialWidth(this.colDef);\n    this.setActualWidth(initialWidth, source, true);\n  }\n  calculateColInitialWidth(colDef) {\n    let width;\n    const colDefWidth = colDef.width;\n    const colDefInitialWidth = colDef.initialWidth;\n    if (colDefWidth != null) {\n      width = colDefWidth;\n    } else if (colDefInitialWidth != null) {\n      width = colDefInitialWidth;\n    } else {\n      width = 200;\n    }\n    return Math.max(Math.min(width, this.maxWidth), this.minWidth);\n  }\n  isEmptyGroup() {\n    return false;\n  }\n  isRowGroupDisplayed(colId) {\n    return this.beans.showRowGroupCols?.isRowGroupDisplayed(this, colId) ?? false;\n  }\n  isPrimary() {\n    return this.primary;\n  }\n  isFilterAllowed() {\n    const filterDefined = !!this.colDef.filter;\n    return filterDefined;\n  }\n  isFieldContainsDots() {\n    return this.fieldContainsDots;\n  }\n  isTooltipEnabled() {\n    return this.tooltipEnabled;\n  }\n  isTooltipFieldContainsDots() {\n    return this.tooltipFieldContainsDots;\n  }\n  getHighlighted() {\n    return this.highlighted;\n  }\n  __addEventListener(eventType, listener) {\n    this.colEventSvc.addEventListener(eventType, listener);\n  }\n  __removeEventListener(eventType, listener) {\n    this.colEventSvc.removeEventListener(eventType, listener);\n  }\n  /**\n   * PUBLIC USE ONLY: for internal use within AG Grid use the `__addEventListener` and `__removeEventListener` methods.\n   */\n  addEventListener(eventType, userListener) {\n    this.frameworkEventListenerService = this.beans.frameworkOverrides.createLocalEventListenerWrapper?.(\n      this.frameworkEventListenerService,\n      this.colEventSvc\n    );\n    const listener = this.frameworkEventListenerService?.wrap(userListener) ?? userListener;\n    this.colEventSvc.addEventListener(eventType, listener);\n  }\n  /**\n   * PUBLIC USE ONLY: for internal use within AG Grid use the `__addEventListener` and `__removeEventListener` methods.\n   */\n  removeEventListener(eventType, userListener) {\n    const listener = this.frameworkEventListenerService?.unwrap(userListener) ?? userListener;\n    this.colEventSvc.removeEventListener(eventType, listener);\n  }\n  createColumnFunctionCallbackParams(rowNode) {\n    return _addGridCommonParams(this.gos, {\n      node: rowNode,\n      data: rowNode.data,\n      column: this,\n      colDef: this.colDef\n    });\n  }\n  isSuppressNavigable(rowNode) {\n    return this.beans.cellNavigation?.isSuppressNavigable(this, rowNode) ?? false;\n  }\n  isCellEditable(rowNode) {\n    return this.beans.editSvc?.isCellEditable(this, rowNode) ?? false;\n  }\n  isSuppressFillHandle() {\n    return !!this.colDef.suppressFillHandle;\n  }\n  isAutoHeight() {\n    return !!this.colDef.autoHeight;\n  }\n  isAutoHeaderHeight() {\n    return !!this.colDef.autoHeaderHeight;\n  }\n  isRowDrag(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.rowDrag);\n  }\n  isDndSource(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.dndSource);\n  }\n  isCellCheckboxSelection(rowNode) {\n    return this.beans.selectionSvc?.isCellCheckboxSelection(this, rowNode) ?? false;\n  }\n  isSuppressPaste(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef?.suppressPaste ?? null);\n  }\n  isResizable() {\n    return !!this.getColDefValue(\"resizable\");\n  }\n  /** Get value from ColDef or default if it exists. */\n  getColDefValue(key) {\n    return this.colDef[key] ?? COL_DEF_DEFAULTS[key];\n  }\n  isColumnFunc(rowNode, value) {\n    if (typeof value === \"boolean\") {\n      return value;\n    }\n    if (typeof value === \"function\") {\n      const params = this.createColumnFunctionCallbackParams(rowNode);\n      const editableFunc = value;\n      return editableFunc(params);\n    }\n    return false;\n  }\n  createColumnEvent(type, source) {\n    return _addGridCommonParams(this.gos, {\n      type,\n      column: this,\n      columns: [this],\n      source\n    });\n  }\n  isMoving() {\n    return this.moving;\n  }\n  getSort() {\n    return this.sort;\n  }\n  isSortable() {\n    return !!this.getColDefValue(\"sortable\");\n  }\n  /** @deprecated v32 use col.getSort() === 'asc */\n  isSortAscending() {\n    return this.sort === \"asc\";\n  }\n  /** @deprecated v32 use col.getSort() === 'desc */\n  isSortDescending() {\n    return this.sort === \"desc\";\n  }\n  /** @deprecated v32 use col.getSort() === undefined */\n  isSortNone() {\n    return _missing(this.sort);\n  }\n  /** @deprecated v32 use col.getSort() !== undefined */\n  isSorting() {\n    return _exists(this.sort);\n  }\n  getSortIndex() {\n    return this.sortIndex;\n  }\n  isMenuVisible() {\n    return this.menuVisible;\n  }\n  getAggFunc() {\n    return this.aggFunc;\n  }\n  getLeft() {\n    return this.left;\n  }\n  getOldLeft() {\n    return this.oldLeft;\n  }\n  getRight() {\n    return this.left + this.actualWidth;\n  }\n  setLeft(left, source) {\n    this.oldLeft = this.left;\n    if (this.left !== left) {\n      this.left = left;\n      this.dispatchColEvent(\"leftChanged\", source);\n    }\n  }\n  isFilterActive() {\n    return this.filterActive;\n  }\n  /** @deprecated v33 Use `api.isColumnHovered(column)` instead. */\n  isHovered() {\n    _warn(261);\n    return !!this.beans.colHover?.isHovered(this);\n  }\n  setFirstRightPinned(firstRightPinned, source) {\n    if (this.firstRightPinned !== firstRightPinned) {\n      this.firstRightPinned = firstRightPinned;\n      this.dispatchColEvent(\"firstRightPinnedChanged\", source);\n    }\n  }\n  setLastLeftPinned(lastLeftPinned, source) {\n    if (this.lastLeftPinned !== lastLeftPinned) {\n      this.lastLeftPinned = lastLeftPinned;\n      this.dispatchColEvent(\"lastLeftPinnedChanged\", source);\n    }\n  }\n  isFirstRightPinned() {\n    return this.firstRightPinned;\n  }\n  isLastLeftPinned() {\n    return this.lastLeftPinned;\n  }\n  isPinned() {\n    return this.pinned === \"left\" || this.pinned === \"right\";\n  }\n  isPinnedLeft() {\n    return this.pinned === \"left\";\n  }\n  isPinnedRight() {\n    return this.pinned === \"right\";\n  }\n  getPinned() {\n    return this.pinned;\n  }\n  setVisible(visible, source) {\n    const newValue = visible === true;\n    if (this.visible !== newValue) {\n      this.visible = newValue;\n      this.dispatchColEvent(\"visibleChanged\", source);\n    }\n    this.dispatchStateUpdatedEvent(\"hide\");\n  }\n  isVisible() {\n    return this.visible;\n  }\n  isSpanHeaderHeight() {\n    const colDef = this.getColDef();\n    return !colDef.suppressSpanHeaderHeight;\n  }\n  getColumnGroupPaddingInfo() {\n    let parent = this.getParent();\n    if (!parent || !parent.isPadding()) {\n      return { numberOfParents: 0, isSpanningTotal: false };\n    }\n    const numberOfParents = parent.getPaddingLevel() + 1;\n    let isSpanningTotal = true;\n    while (parent) {\n      if (!parent.isPadding()) {\n        isSpanningTotal = false;\n        break;\n      }\n      parent = parent.getParent();\n    }\n    return { numberOfParents, isSpanningTotal };\n  }\n  getColDef() {\n    return this.colDef;\n  }\n  getDefinition() {\n    return this.colDef;\n  }\n  getColumnGroupShow() {\n    return this.colDef.columnGroupShow;\n  }\n  getColId() {\n    return this.colId;\n  }\n  getId() {\n    return this.colId;\n  }\n  getUniqueId() {\n    return this.colId;\n  }\n  getActualWidth() {\n    return this.actualWidth;\n  }\n  getAutoHeaderHeight() {\n    return this.autoHeaderHeight;\n  }\n  /** Returns true if the header height has changed */\n  setAutoHeaderHeight(height) {\n    const changed = height !== this.autoHeaderHeight;\n    this.autoHeaderHeight = height;\n    return changed;\n  }\n  createBaseColDefParams(rowNode) {\n    const params = _addGridCommonParams(this.gos, {\n      node: rowNode,\n      data: rowNode.data,\n      colDef: this.colDef,\n      column: this\n    });\n    return params;\n  }\n  getColSpan(rowNode) {\n    if (_missing(this.colDef.colSpan)) {\n      return 1;\n    }\n    const params = this.createBaseColDefParams(rowNode);\n    const colSpan = this.colDef.colSpan(params);\n    return Math.max(colSpan, 1);\n  }\n  getRowSpan(rowNode) {\n    if (_missing(this.colDef.rowSpan)) {\n      return 1;\n    }\n    const params = this.createBaseColDefParams(rowNode);\n    const rowSpan = this.colDef.rowSpan(params);\n    return Math.max(rowSpan, 1);\n  }\n  setActualWidth(actualWidth, source, silent = false) {\n    actualWidth = Math.max(actualWidth, this.minWidth);\n    actualWidth = Math.min(actualWidth, this.maxWidth);\n    if (this.actualWidth !== actualWidth) {\n      this.actualWidth = actualWidth;\n      if (this.flex != null && source !== \"flex\" && source !== \"gridInitializing\") {\n        this.flex = null;\n      }\n      if (!silent) {\n        this.fireColumnWidthChangedEvent(source);\n      }\n    }\n    this.dispatchStateUpdatedEvent(\"width\");\n  }\n  fireColumnWidthChangedEvent(source) {\n    this.dispatchColEvent(\"widthChanged\", source);\n  }\n  isGreaterThanMax(width) {\n    return width > this.maxWidth;\n  }\n  getMinWidth() {\n    return this.minWidth;\n  }\n  getMaxWidth() {\n    return this.maxWidth;\n  }\n  getFlex() {\n    return this.flex;\n  }\n  isRowGroupActive() {\n    return this.rowGroupActive;\n  }\n  isPivotActive() {\n    return this.pivotActive;\n  }\n  isAnyFunctionActive() {\n    return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\n  }\n  isAnyFunctionAllowed() {\n    return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\n  }\n  isValueActive() {\n    return this.aggregationActive;\n  }\n  isAllowPivot() {\n    return this.colDef.enablePivot === true;\n  }\n  isAllowValue() {\n    return this.colDef.enableValue === true;\n  }\n  isAllowRowGroup() {\n    return this.colDef.enableRowGroup === true;\n  }\n  dispatchColEvent(type, source, additionalEventAttributes) {\n    const colEvent = this.createColumnEvent(type, source);\n    if (additionalEventAttributes) {\n      _mergeDeep(colEvent, additionalEventAttributes);\n    }\n    this.colEventSvc.dispatchEvent(colEvent);\n  }\n  dispatchStateUpdatedEvent(key) {\n    this.colEventSvc.dispatchEvent({\n      type: \"columnStateUpdated\",\n      key\n    });\n  }\n};\n\n// packages/ag-grid-community/src/entities/agProvidedColumnGroup.ts\nfunction isProvidedColumnGroup(col) {\n  return col instanceof AgProvidedColumnGroup;\n}\nvar AgProvidedColumnGroup = class extends BeanStub {\n  constructor(colGroupDef, groupId, padding, level) {\n    super();\n    this.colGroupDef = colGroupDef;\n    this.groupId = groupId;\n    this.padding = padding;\n    this.level = level;\n    this.isColumn = false;\n    this.expandable = false;\n    // used by React (and possibly other frameworks) as key for rendering. also used to\n    // identify old vs new columns for destroying cols when no longer used.\n    this.instanceId = getNextColInstanceId();\n    this.expandableListenerRemoveCallback = null;\n    this.expanded = !!colGroupDef?.openByDefault;\n  }\n  destroy() {\n    if (this.expandableListenerRemoveCallback) {\n      this.reset(null, void 0);\n    }\n    super.destroy();\n  }\n  reset(colGroupDef, level) {\n    this.colGroupDef = colGroupDef;\n    this.level = level;\n    this.originalParent = null;\n    if (this.expandableListenerRemoveCallback) {\n      this.expandableListenerRemoveCallback();\n    }\n    this.children = void 0;\n    this.expandable = void 0;\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  getOriginalParent() {\n    return this.originalParent;\n  }\n  getLevel() {\n    return this.level;\n  }\n  isVisible() {\n    if (this.children) {\n      return this.children.some((child) => child.isVisible());\n    }\n    return false;\n  }\n  isPadding() {\n    return this.padding;\n  }\n  setExpanded(expanded) {\n    this.expanded = expanded === void 0 ? false : expanded;\n    this.dispatchLocalEvent({ type: \"expandedChanged\" });\n  }\n  isExpandable() {\n    return this.expandable;\n  }\n  isExpanded() {\n    return this.expanded;\n  }\n  getGroupId() {\n    return this.groupId;\n  }\n  getId() {\n    return this.getGroupId();\n  }\n  setChildren(children) {\n    this.children = children;\n  }\n  getChildren() {\n    return this.children;\n  }\n  getColGroupDef() {\n    return this.colGroupDef;\n  }\n  getLeafColumns() {\n    const result = [];\n    this.addLeafColumns(result);\n    return result;\n  }\n  addLeafColumns(leafColumns) {\n    if (!this.children) {\n      return;\n    }\n    this.children.forEach((child) => {\n      if (isColumn(child)) {\n        leafColumns.push(child);\n      } else if (isProvidedColumnGroup(child)) {\n        child.addLeafColumns(leafColumns);\n      }\n    });\n  }\n  getColumnGroupShow() {\n    const colGroupDef = this.colGroupDef;\n    if (!colGroupDef) {\n      return;\n    }\n    return colGroupDef.columnGroupShow;\n  }\n  // need to check that this group has at least one col showing when both expanded and contracted.\n  // if not, then we don't allow expanding and contracting on this group\n  setupExpandable() {\n    this.setExpandable();\n    if (this.expandableListenerRemoveCallback) {\n      this.expandableListenerRemoveCallback();\n    }\n    const listener = this.onColumnVisibilityChanged.bind(this);\n    this.getLeafColumns().forEach((col) => col.__addEventListener(\"visibleChanged\", listener));\n    this.expandableListenerRemoveCallback = () => {\n      this.getLeafColumns().forEach((col) => col.__removeEventListener(\"visibleChanged\", listener));\n      this.expandableListenerRemoveCallback = null;\n    };\n  }\n  setExpandable() {\n    if (this.isPadding()) {\n      return;\n    }\n    let atLeastOneShowingWhenOpen = false;\n    let atLeastOneShowingWhenClosed = false;\n    let atLeastOneChangeable = false;\n    const children = this.findChildrenRemovingPadding();\n    for (let i = 0, j = children.length; i < j; i++) {\n      const abstractColumn = children[i];\n      if (!abstractColumn.isVisible()) {\n        continue;\n      }\n      const headerGroupShow = abstractColumn.getColumnGroupShow();\n      if (headerGroupShow === \"open\") {\n        atLeastOneShowingWhenOpen = true;\n        atLeastOneChangeable = true;\n      } else if (headerGroupShow === \"closed\") {\n        atLeastOneShowingWhenClosed = true;\n        atLeastOneChangeable = true;\n      } else {\n        atLeastOneShowingWhenOpen = true;\n        atLeastOneShowingWhenClosed = true;\n      }\n    }\n    const expandable = atLeastOneShowingWhenOpen && atLeastOneShowingWhenClosed && atLeastOneChangeable;\n    if (this.expandable !== expandable) {\n      this.expandable = expandable;\n      this.dispatchLocalEvent({ type: \"expandableChanged\" });\n    }\n  }\n  findChildrenRemovingPadding() {\n    const res = [];\n    const process = (items) => {\n      items.forEach((item) => {\n        const skipBecausePadding = isProvidedColumnGroup(item) && item.isPadding();\n        if (skipBecausePadding) {\n          process(item.children);\n        } else {\n          res.push(item);\n        }\n      });\n    };\n    process(this.children);\n    return res;\n  }\n  onColumnVisibilityChanged() {\n    this.setExpandable();\n  }\n};\n\n// packages/ag-grid-community/src/entities/defaultColumnTypes.ts\nvar DefaultColumnTypes = {\n  numericColumn: {\n    headerClass: \"ag-right-aligned-header\",\n    cellClass: \"ag-right-aligned-cell\"\n  },\n  rightAligned: {\n    headerClass: \"ag-right-aligned-header\",\n    cellClass: \"ag-right-aligned-cell\"\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnKeyCreator.ts\nvar ColumnKeyCreator = class {\n  constructor() {\n    this.existingKeys = {};\n  }\n  addExistingKeys(keys) {\n    for (let i = 0; i < keys.length; i++) {\n      this.existingKeys[keys[i]] = true;\n    }\n  }\n  getUniqueKey(colId, colField) {\n    colId = _toStringOrNull(colId);\n    let count = 0;\n    while (true) {\n      let idToTry = colId ?? colField;\n      if (idToTry) {\n        if (count !== 0) {\n          idToTry += \"_\" + count;\n        }\n      } else {\n        idToTry = count;\n      }\n      if (!this.existingKeys[idToTry]) {\n        this.existingKeys[idToTry] = true;\n        return String(idToTry);\n      }\n      count++;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/utils/array.ts\nvar _EmptyArray = Object.freeze([]);\nfunction _last(arr) {\n  if (!arr?.length) {\n    return;\n  }\n  return arr[arr.length - 1];\n}\nfunction _areEqual(a, b, comparator) {\n  if (a == null && b == null) {\n    return true;\n  }\n  return a != null && b != null && a.length === b.length && a.every((value, index) => comparator ? comparator(value, b[index]) : b[index] === value);\n}\nfunction _sortNumerically(array) {\n  return array.sort((a, b) => a - b);\n}\nfunction _removeFromArray(array, object) {\n  const index = array.indexOf(object);\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\nfunction _moveInArray(array, objectsToMove, toIndex) {\n  for (let i = 0; i < objectsToMove.length; i++) {\n    _removeFromArray(array, objectsToMove[i]);\n  }\n  for (let i = objectsToMove.length - 1; i >= 0; i--) {\n    array.splice(toIndex, 0, objectsToMove[i]);\n  }\n}\n\n// packages/ag-grid-community/src/columns/columnUtils.ts\nvar GROUP_AUTO_COLUMN_ID = \"ag-Grid-AutoColumn\";\nvar SELECTION_COLUMN_ID = \"ag-Grid-SelectionColumn\";\nvar ROW_NUMBERS_COLUMN_ID = \"ag-Grid-RowNumbersColumn\";\nfunction _getColumnsFromTree(rootColumns) {\n  const result = [];\n  const recursiveFindColumns = (childColumns) => {\n    for (let i = 0; i < childColumns.length; i++) {\n      const child = childColumns[i];\n      if (isColumn(child)) {\n        result.push(child);\n      } else if (isProvidedColumnGroup(child)) {\n        recursiveFindColumns(child.getChildren());\n      }\n    }\n  };\n  recursiveFindColumns(rootColumns);\n  return result;\n}\nfunction getWidthOfColsInList(columnList) {\n  return columnList.reduce((width, col) => width + col.getActualWidth(), 0);\n}\nfunction _destroyColumnTree(beans, oldTree, newTree) {\n  const oldObjectsById = {};\n  if (!oldTree) {\n    return;\n  }\n  depthFirstOriginalTreeSearch(null, oldTree, (child) => {\n    oldObjectsById[child.getInstanceId()] = child;\n  });\n  if (newTree) {\n    depthFirstOriginalTreeSearch(null, newTree, (child) => {\n      oldObjectsById[child.getInstanceId()] = null;\n    });\n  }\n  const colsToDestroy = Object.values(oldObjectsById).filter((item) => item != null);\n  beans.context.destroyBeans(colsToDestroy);\n}\nfunction isColumnGroupAutoCol(col) {\n  const colId = col.getId();\n  return colId.startsWith(GROUP_AUTO_COLUMN_ID);\n}\nfunction isColumnSelectionCol(col) {\n  const id = typeof col === \"string\" ? col : \"getColId\" in col ? col.getColId() : col.colId;\n  return id?.startsWith(SELECTION_COLUMN_ID) ?? false;\n}\nfunction isRowNumberCol(col) {\n  const id = typeof col === \"string\" ? col : \"getColId\" in col ? col.getColId() : col.colId;\n  return id?.startsWith(ROW_NUMBERS_COLUMN_ID) ?? false;\n}\nfunction convertColumnTypes(type) {\n  let typeKeys = [];\n  if (type instanceof Array) {\n    typeKeys = type;\n  } else if (typeof type === \"string\") {\n    typeKeys = type.split(\",\");\n  }\n  return typeKeys;\n}\nfunction _areColIdsEqual(colsA, colsB) {\n  return _areEqual(colsA, colsB, (a, b) => a.getColId() === b.getColId());\n}\nfunction _updateColsMap(cols) {\n  cols.map = {};\n  cols.list.forEach((col) => cols.map[col.getId()] = col);\n}\nfunction _convertColumnEventSourceType(source) {\n  return source === \"gridOptionsUpdated\" ? \"gridOptionsChanged\" : source;\n}\nfunction _columnsMatch(column, key) {\n  const columnMatches = column === key;\n  const colDefMatches = column.getColDef() === key;\n  const idMatches = column.getColId() == key;\n  return columnMatches || colDefMatches || idMatches;\n}\nvar getValueFactory = (stateItem, defaultState) => (key1, key2) => {\n  const obj = {\n    value1: void 0,\n    value2: void 0\n  };\n  let calculated = false;\n  if (stateItem) {\n    if (stateItem[key1] !== void 0) {\n      obj.value1 = stateItem[key1];\n      calculated = true;\n    }\n    if (_exists(key2) && stateItem[key2] !== void 0) {\n      obj.value2 = stateItem[key2];\n      calculated = true;\n    }\n  }\n  if (!calculated && defaultState) {\n    if (defaultState[key1] !== void 0) {\n      obj.value1 = defaultState[key1];\n    }\n    if (_exists(key2) && defaultState[key2] !== void 0) {\n      obj.value2 = defaultState[key2];\n    }\n  }\n  return obj;\n};\n\n// packages/ag-grid-community/src/columns/columnFactoryUtils.ts\nfunction _createColumnTree(beans, defs = null, primaryColumns, existingTree, source) {\n  const columnKeyCreator = new ColumnKeyCreator();\n  const { existingCols, existingGroups, existingColKeys } = extractExistingTreeData(existingTree);\n  columnKeyCreator.addExistingKeys(existingColKeys);\n  const unbalancedTree = _recursivelyCreateColumns(\n    beans,\n    defs,\n    0,\n    primaryColumns,\n    existingCols,\n    columnKeyCreator,\n    existingGroups,\n    source\n  );\n  const { colGroupSvc } = beans;\n  const treeDept = colGroupSvc?.findMaxDepth(unbalancedTree, 0) ?? 0;\n  const columnTree = colGroupSvc ? colGroupSvc.balanceColumnTree(unbalancedTree, 0, treeDept, columnKeyCreator) : unbalancedTree;\n  const deptFirstCallback = (child, parent) => {\n    if (isProvidedColumnGroup(child)) {\n      child.setupExpandable();\n    }\n    child.originalParent = parent;\n  };\n  depthFirstOriginalTreeSearch(null, columnTree, deptFirstCallback);\n  return {\n    columnTree,\n    treeDept\n  };\n}\nfunction extractExistingTreeData(existingTree) {\n  const existingCols = [];\n  const existingGroups = [];\n  const existingColKeys = [];\n  if (existingTree) {\n    depthFirstOriginalTreeSearch(null, existingTree, (item) => {\n      if (isProvidedColumnGroup(item)) {\n        const group = item;\n        existingGroups.push(group);\n      } else {\n        const col = item;\n        existingColKeys.push(col.getId());\n        existingCols.push(col);\n      }\n    });\n  }\n  return { existingCols, existingGroups, existingColKeys };\n}\nfunction _recursivelyCreateColumns(beans, defs, level, primaryColumns, existingColsCopy, columnKeyCreator, existingGroups, source) {\n  if (!defs)\n    return [];\n  const { colGroupSvc } = beans;\n  const result = new Array(defs.length);\n  for (let i = 0; i < result.length; i++) {\n    const def = defs[i];\n    if (colGroupSvc && isColumnGroup(def)) {\n      result[i] = colGroupSvc.createProvidedColumnGroup(\n        primaryColumns,\n        def,\n        level,\n        existingColsCopy,\n        columnKeyCreator,\n        existingGroups,\n        source\n      );\n    } else {\n      result[i] = createColumn(beans, primaryColumns, def, existingColsCopy, columnKeyCreator, source);\n    }\n  }\n  return result;\n}\nfunction createColumn(beans, primaryColumns, colDef, existingColsCopy, columnKeyCreator, source) {\n  const existingColAndIndex = findExistingColumn(colDef, existingColsCopy);\n  if (existingColAndIndex) {\n    existingColsCopy?.splice(existingColAndIndex.idx, 1);\n  }\n  let column = existingColAndIndex?.column;\n  if (!column) {\n    const colId = columnKeyCreator.getUniqueKey(colDef.colId, colDef.field);\n    const colDefMerged = _addColumnDefaultAndTypes(beans, colDef, colId);\n    column = new AgColumn(colDefMerged, colDef, colId, primaryColumns);\n    beans.context.createBean(column);\n  } else {\n    const colDefMerged = _addColumnDefaultAndTypes(beans, colDef, column.getColId());\n    column.setColDef(colDefMerged, colDef, source);\n    _updateColumnState(beans, column, colDefMerged, source);\n  }\n  beans.dataTypeSvc?.addColumnListeners(column);\n  return column;\n}\nfunction updateSomeColumnState(beans, column, hide, sort, sortIndex, pinned, flex, source) {\n  const { sortSvc, pinnedCols, colFlex } = beans;\n  if (hide !== void 0) {\n    column.setVisible(!hide, source);\n  }\n  if (sortSvc) {\n    sortSvc.updateColSort(column, sort, source);\n    if (sortIndex !== void 0) {\n      sortSvc.setColSortIndex(column, sortIndex);\n    }\n  }\n  if (pinned !== void 0) {\n    pinnedCols?.setColPinned(column, pinned);\n  }\n  if (flex !== void 0) {\n    colFlex?.setColFlex(column, flex);\n  }\n}\nfunction _updateColumnState(beans, column, colDef, source) {\n  updateSomeColumnState(\n    beans,\n    column,\n    colDef.hide,\n    colDef.sort,\n    colDef.sortIndex,\n    colDef.pinned,\n    colDef.flex,\n    source\n  );\n  const colFlex = column.getFlex();\n  if (colFlex != null && colFlex > 0) {\n    return;\n  }\n  if (colDef.width != null) {\n    column.setActualWidth(colDef.width, source);\n  } else {\n    const widthBeforeUpdate = column.getActualWidth();\n    column.setActualWidth(widthBeforeUpdate, source);\n  }\n}\nfunction findExistingColumn(newColDef, existingColsCopy) {\n  if (!existingColsCopy)\n    return void 0;\n  for (let i = 0; i < existingColsCopy.length; i++) {\n    const def = existingColsCopy[i].getUserProvidedColDef();\n    if (!def)\n      continue;\n    const newHasId = newColDef.colId != null;\n    if (newHasId) {\n      if (existingColsCopy[i].getId() === newColDef.colId) {\n        return { idx: i, column: existingColsCopy[i] };\n      }\n      continue;\n    }\n    const newHasField = newColDef.field != null;\n    if (newHasField) {\n      if (def.field === newColDef.field) {\n        return { idx: i, column: existingColsCopy[i] };\n      }\n      continue;\n    }\n    if (def === newColDef) {\n      return { idx: i, column: existingColsCopy[i] };\n    }\n  }\n  return void 0;\n}\nfunction _addColumnDefaultAndTypes(beans, colDef, colId, isAutoCol) {\n  const { gos, dataTypeSvc, validation: validation2 } = beans;\n  const res = {};\n  const defaultColDef = gos.get(\"defaultColDef\");\n  _mergeDeep(res, defaultColDef, false, true);\n  const columnType = updateColDefAndGetColumnType(beans, res, colDef, colId);\n  if (columnType) {\n    assignColumnTypes(beans, columnType, res);\n  }\n  _mergeDeep(res, colDef, false, true);\n  const autoGroupColDef = gos.get(\"autoGroupColumnDef\");\n  const isSortingCoupled = _isColumnsSortingCoupledToGroup(gos);\n  if (colDef.rowGroup && autoGroupColDef && isSortingCoupled) {\n    _mergeDeep(\n      res,\n      { sort: autoGroupColDef.sort, initialSort: autoGroupColDef.initialSort },\n      false,\n      true\n    );\n  }\n  dataTypeSvc?.validateColDef(res);\n  validation2?.validateColDef(res, colId, isAutoCol);\n  return res;\n}\nfunction updateColDefAndGetColumnType(beans, colDef, userColDef, colId) {\n  const dataTypeDefinitionColumnType = beans.dataTypeSvc?.updateColDefAndGetColumnType(colDef, userColDef, colId);\n  const columnTypes = userColDef.type ?? dataTypeDefinitionColumnType ?? colDef.type;\n  colDef.type = columnTypes;\n  return columnTypes ? convertColumnTypes(columnTypes) : void 0;\n}\nfunction assignColumnTypes(beans, typeKeys, colDefMerged) {\n  if (!typeKeys.length) {\n    return;\n  }\n  const allColumnTypes = Object.assign({}, DefaultColumnTypes);\n  const userTypes = beans.gos.get(\"columnTypes\") || {};\n  for (const key of Object.keys(userTypes)) {\n    const value = userTypes[key];\n    if (key in allColumnTypes) {\n      _warn(34, { key });\n    } else {\n      const colType = value;\n      if (colType.type) {\n        _warn(35);\n      }\n      allColumnTypes[key] = value;\n    }\n  }\n  typeKeys.forEach((t) => {\n    const typeColDef = allColumnTypes[t.trim()];\n    if (typeColDef) {\n      _mergeDeep(colDefMerged, typeColDef, false, true);\n    } else {\n      _warn(36, { t });\n    }\n  });\n}\nfunction isColumnGroup(abstractColDef) {\n  return abstractColDef.children !== void 0;\n}\nfunction depthFirstOriginalTreeSearch(parent, tree, callback) {\n  if (!tree) {\n    return;\n  }\n  for (let i = 0; i < tree.length; i++) {\n    const child = tree[i];\n    if (isProvidedColumnGroup(child)) {\n      depthFirstOriginalTreeSearch(child, child.getChildren(), callback);\n    }\n    callback(child, parent);\n  }\n}\n\n// packages/ag-grid-community/src/columnMove/columnMoveUtils.ts\nfunction placeLockedColumns(cols, gos) {\n  const left = [];\n  const normal = [];\n  const right = [];\n  cols.forEach((col) => {\n    const position = col.getColDef().lockPosition;\n    if (position === \"right\") {\n      right.push(col);\n    } else if (position === \"left\" || position === true) {\n      left.push(col);\n    } else {\n      normal.push(col);\n    }\n  });\n  const isRtl = gos.get(\"enableRtl\");\n  if (isRtl) {\n    return [...right, ...normal, ...left];\n  }\n  return [...left, ...normal, ...right];\n}\nfunction doesMovePassMarryChildren(allColumnsCopy, gridBalancedTree) {\n  let rulePassed = true;\n  depthFirstOriginalTreeSearch(null, gridBalancedTree, (child) => {\n    if (!isProvidedColumnGroup(child)) {\n      return;\n    }\n    const columnGroup = child;\n    const colGroupDef = columnGroup.getColGroupDef();\n    const marryChildren = colGroupDef && colGroupDef.marryChildren;\n    if (!marryChildren) {\n      return;\n    }\n    const newIndexes = [];\n    columnGroup.getLeafColumns().forEach((col) => {\n      const newColIndex = allColumnsCopy.indexOf(col);\n      newIndexes.push(newColIndex);\n    });\n    const maxIndex = Math.max.apply(Math, newIndexes);\n    const minIndex = Math.min.apply(Math, newIndexes);\n    const spread = maxIndex - minIndex;\n    const maxSpread = columnGroup.getLeafColumns().length - 1;\n    if (spread > maxSpread) {\n      rulePassed = false;\n    }\n  });\n  return rulePassed;\n}\n\n// packages/ag-grid-community/src/columns/columnEventUtils.ts\nfunction getCommonValue(cols, valueGetter) {\n  if (!cols || cols.length == 0) {\n    return void 0;\n  }\n  const firstValue = valueGetter(cols[0]);\n  for (let i = 1; i < cols.length; i++) {\n    if (firstValue !== valueGetter(cols[i])) {\n      return void 0;\n    }\n  }\n  return firstValue;\n}\nfunction dispatchColumnPinnedEvent(eventSvc, changedColumns, source) {\n  if (!changedColumns.length) {\n    return;\n  }\n  const column = changedColumns.length === 1 ? changedColumns[0] : null;\n  const pinned = getCommonValue(changedColumns, (col) => col.getPinned());\n  eventSvc.dispatchEvent({\n    type: \"columnPinned\",\n    // mistake in typing, 'undefined' should be allowed, as 'null' means 'not pinned'\n    pinned: pinned != null ? pinned : null,\n    columns: changedColumns,\n    column,\n    source\n  });\n}\nfunction dispatchColumnVisibleEvent(eventSvc, changedColumns, source) {\n  if (!changedColumns.length) {\n    return;\n  }\n  const column = changedColumns.length === 1 ? changedColumns[0] : null;\n  const visible = getCommonValue(changedColumns, (col) => col.isVisible());\n  eventSvc.dispatchEvent({\n    type: \"columnVisible\",\n    visible,\n    columns: changedColumns,\n    column,\n    source\n  });\n}\nfunction dispatchColumnChangedEvent(eventSvc, type, columns, source) {\n  eventSvc.dispatchEvent({\n    type,\n    columns,\n    column: columns && columns.length == 1 ? columns[0] : null,\n    source\n  });\n}\nfunction dispatchColumnResizedEvent(eventSvc, columns, finished, source, flexColumns = null) {\n  if (columns?.length) {\n    eventSvc.dispatchEvent({\n      type: \"columnResized\",\n      columns,\n      column: columns.length === 1 ? columns[0] : null,\n      flexColumns,\n      finished,\n      source\n    });\n  }\n}\n\n// packages/ag-grid-community/src/columns/columnStateUtils.ts\nfunction _applyColumnState(beans, params, source) {\n  const {\n    colModel,\n    rowGroupColsSvc,\n    pivotColsSvc,\n    autoColSvc,\n    selectionColSvc,\n    colAnimation,\n    visibleCols,\n    pivotResultCols,\n    environment,\n    valueColsSvc,\n    eventSvc,\n    gos\n  } = beans;\n  const providedCols = colModel.getColDefCols() || [];\n  if (!providedCols?.length) {\n    return false;\n  }\n  if (params?.state && !params.state.forEach) {\n    _warn(32);\n    return false;\n  }\n  const syncColumnWithStateItem = (column, stateItem, rowGroupIndexes, pivotIndexes, autoCol) => {\n    if (!column) {\n      return;\n    }\n    const getValue = getValueFactory(stateItem, params.defaultState);\n    const flex = getValue(\"flex\").value1;\n    updateSomeColumnState(\n      beans,\n      column,\n      getValue(\"hide\").value1,\n      getValue(\"sort\").value1,\n      getValue(\"sortIndex\").value1,\n      getValue(\"pinned\").value1,\n      flex,\n      source\n    );\n    if (flex == null) {\n      const width = getValue(\"width\").value1;\n      if (width != null) {\n        const minColWidth = column.getColDef().minWidth ?? environment.getDefaultColumnMinWidth();\n        if (minColWidth != null && width >= minColWidth) {\n          column.setActualWidth(width, source);\n        }\n      }\n    }\n    if (autoCol || !column.isPrimary()) {\n      return;\n    }\n    valueColsSvc?.syncColumnWithState(column, source, getValue);\n    rowGroupColsSvc?.syncColumnWithState(column, source, getValue, rowGroupIndexes);\n    pivotColsSvc?.syncColumnWithState(column, source, getValue, pivotIndexes);\n  };\n  const applyStates = (states, existingColumns, getById2) => {\n    const dispatchEventsFunc = _compareColumnStatesAndDispatchEvents(beans, source);\n    const columnsWithNoState = existingColumns.slice();\n    const rowGroupIndexes = {};\n    const pivotIndexes = {};\n    const autoColStates = [];\n    const selectionColStates = [];\n    const unmatchedAndAutoStates2 = [];\n    let unmatchedCount2 = 0;\n    const previousRowGroupCols = rowGroupColsSvc?.columns.slice() ?? [];\n    const previousPivotCols = pivotColsSvc?.columns.slice() ?? [];\n    states.forEach((state) => {\n      const colId = state.colId;\n      const isAutoGroupColumn = colId.startsWith(GROUP_AUTO_COLUMN_ID);\n      if (isAutoGroupColumn) {\n        autoColStates.push(state);\n        unmatchedAndAutoStates2.push(state);\n        return;\n      }\n      if (isColumnSelectionCol(colId)) {\n        selectionColStates.push(state);\n        unmatchedAndAutoStates2.push(state);\n        return;\n      }\n      const column = getById2(colId);\n      if (!column) {\n        unmatchedAndAutoStates2.push(state);\n        unmatchedCount2 += 1;\n      } else {\n        syncColumnWithStateItem(column, state, rowGroupIndexes, pivotIndexes, false);\n        _removeFromArray(columnsWithNoState, column);\n      }\n    });\n    const applyDefaultsFunc = (col) => syncColumnWithStateItem(col, null, rowGroupIndexes, pivotIndexes, false);\n    columnsWithNoState.forEach(applyDefaultsFunc);\n    rowGroupColsSvc?.sortColumns(comparatorByIndex.bind(rowGroupColsSvc, rowGroupIndexes, previousRowGroupCols));\n    pivotColsSvc?.sortColumns(comparatorByIndex.bind(pivotColsSvc, pivotIndexes, previousPivotCols));\n    colModel.refreshCols(false);\n    const syncColStates = (getCol, colStates, columns = []) => {\n      colStates.forEach((stateItem) => {\n        const col = getCol(stateItem.colId);\n        _removeFromArray(columns, col);\n        syncColumnWithStateItem(col, stateItem, null, null, true);\n      });\n      columns.forEach(applyDefaultsFunc);\n    };\n    syncColStates(\n      (colId) => autoColSvc?.getColumn(colId) ?? null,\n      autoColStates,\n      autoColSvc?.getColumns()?.slice()\n    );\n    syncColStates(\n      (colId) => selectionColSvc?.getColumn(colId) ?? null,\n      selectionColStates,\n      selectionColSvc?.getColumns()?.slice()\n    );\n    orderLiveColsLikeState(params, colModel, gos);\n    visibleCols.refresh(source);\n    eventSvc.dispatchEvent({\n      type: \"columnEverythingChanged\",\n      source\n    });\n    dispatchEventsFunc();\n    return { unmatchedAndAutoStates: unmatchedAndAutoStates2, unmatchedCount: unmatchedCount2 };\n  };\n  colAnimation?.start();\n  let { unmatchedAndAutoStates, unmatchedCount } = applyStates(\n    params.state || [],\n    providedCols,\n    (id) => colModel.getColDefCol(id)\n  );\n  if (unmatchedAndAutoStates.length > 0 || _exists(params.defaultState)) {\n    const pivotResultColsList = pivotResultCols?.getPivotResultCols()?.list ?? [];\n    unmatchedCount = applyStates(\n      unmatchedAndAutoStates,\n      pivotResultColsList,\n      (id) => pivotResultCols?.getPivotResultCol(id) ?? null\n    ).unmatchedCount;\n  }\n  colAnimation?.finish();\n  return unmatchedCount === 0;\n}\nfunction _resetColumnState(beans, source) {\n  const { colModel, autoColSvc } = beans;\n  const primaryCols = colModel.getColDefCols();\n  if (!primaryCols?.length) {\n    return;\n  }\n  const primaryColumnTree = colModel.getColDefColTree();\n  const primaryColumns = _getColumnsFromTree(primaryColumnTree);\n  const columnStates = [];\n  let letRowGroupIndex = 1e3;\n  let letPivotIndex = 1e3;\n  let colsToProcess = [];\n  const groupAutoCols = autoColSvc?.getColumns();\n  if (groupAutoCols) {\n    colsToProcess = colsToProcess.concat(groupAutoCols);\n  }\n  if (primaryColumns) {\n    colsToProcess = colsToProcess.concat(primaryColumns);\n  }\n  colsToProcess.forEach((column) => {\n    const stateItem = getColumnStateFromColDef(column);\n    if (_missing(stateItem.rowGroupIndex) && stateItem.rowGroup) {\n      stateItem.rowGroupIndex = letRowGroupIndex++;\n    }\n    if (_missing(stateItem.pivotIndex) && stateItem.pivot) {\n      stateItem.pivotIndex = letPivotIndex++;\n    }\n    columnStates.push(stateItem);\n  });\n  _applyColumnState(beans, { state: columnStates, applyOrder: true }, source);\n}\nfunction _compareColumnStatesAndDispatchEvents(beans, source) {\n  const { rowGroupColsSvc, pivotColsSvc, valueColsSvc, colModel, sortSvc, eventSvc } = beans;\n  const startState = {\n    rowGroupColumns: rowGroupColsSvc?.columns.slice() ?? [],\n    pivotColumns: pivotColsSvc?.columns.slice() ?? [],\n    valueColumns: valueColsSvc?.columns.slice() ?? []\n  };\n  const columnStateBefore = _getColumnState(beans);\n  const columnStateBeforeMap = {};\n  columnStateBefore.forEach((col) => {\n    columnStateBeforeMap[col.colId] = col;\n  });\n  return () => {\n    const colsForState = colModel.getAllCols();\n    const dispatchWhenListsDifferent = (eventType, colsBefore, colsAfter, idMapper) => {\n      const beforeList = colsBefore.map(idMapper);\n      const afterList = colsAfter.map(idMapper);\n      const unchanged = _areEqual(beforeList, afterList);\n      if (unchanged) {\n        return;\n      }\n      const changes = new Set(colsBefore);\n      colsAfter.forEach((id) => {\n        if (!changes.delete(id)) {\n          changes.add(id);\n        }\n      });\n      const changesArr = [...changes];\n      eventSvc.dispatchEvent({\n        type: eventType,\n        columns: changesArr,\n        column: changesArr.length === 1 ? changesArr[0] : null,\n        source\n      });\n    };\n    const getChangedColumns = (changedPredicate) => {\n      const changedColumns2 = [];\n      colsForState.forEach((column) => {\n        const colStateBefore = columnStateBeforeMap[column.getColId()];\n        if (colStateBefore && changedPredicate(colStateBefore, column)) {\n          changedColumns2.push(column);\n        }\n      });\n      return changedColumns2;\n    };\n    const columnIdMapper = (c) => c.getColId();\n    dispatchWhenListsDifferent(\n      \"columnRowGroupChanged\",\n      startState.rowGroupColumns,\n      rowGroupColsSvc?.columns ?? [],\n      columnIdMapper\n    );\n    dispatchWhenListsDifferent(\n      \"columnPivotChanged\",\n      startState.pivotColumns,\n      pivotColsSvc?.columns ?? [],\n      columnIdMapper\n    );\n    const valueChangePredicate = (cs, c) => {\n      const oldActive = cs.aggFunc != null;\n      const activeChanged = oldActive != c.isValueActive();\n      const aggFuncChanged = oldActive && cs.aggFunc != c.getAggFunc();\n      return activeChanged || aggFuncChanged;\n    };\n    const changedValues = getChangedColumns(valueChangePredicate);\n    if (changedValues.length > 0) {\n      dispatchColumnChangedEvent(eventSvc, \"columnValueChanged\", changedValues, source);\n    }\n    const resizeChangePredicate = (cs, c) => cs.width != c.getActualWidth();\n    dispatchColumnResizedEvent(eventSvc, getChangedColumns(resizeChangePredicate), true, source);\n    const pinnedChangePredicate = (cs, c) => cs.pinned != c.getPinned();\n    dispatchColumnPinnedEvent(eventSvc, getChangedColumns(pinnedChangePredicate), source);\n    const visibilityChangePredicate = (cs, c) => cs.hide == c.isVisible();\n    dispatchColumnVisibleEvent(eventSvc, getChangedColumns(visibilityChangePredicate), source);\n    const sortChangePredicate = (cs, c) => cs.sort != c.getSort() || cs.sortIndex != c.getSortIndex();\n    const changedColumns = getChangedColumns(sortChangePredicate);\n    if (changedColumns.length > 0) {\n      sortSvc?.dispatchSortChangedEvents(source, changedColumns);\n    }\n    const colStateAfter = _getColumnState(beans);\n    normaliseColumnMovedEventForColumnState(columnStateBefore, colStateAfter, source, colModel, eventSvc);\n  };\n}\nfunction _getColumnState(beans) {\n  const { colModel, rowGroupColsSvc, pivotColsSvc } = beans;\n  const primaryCols = colModel.getColDefCols();\n  if (_missing(primaryCols) || !colModel.isAlive()) {\n    return [];\n  }\n  const colsForState = colModel.getAllCols();\n  const rowGroupColumns = rowGroupColsSvc?.columns;\n  const pivotColumns = pivotColsSvc?.columns;\n  const createStateItemFromColumn = (column) => {\n    const rowGroupIndex = column.isRowGroupActive() && rowGroupColumns ? rowGroupColumns.indexOf(column) : null;\n    const pivotIndex = column.isPivotActive() && pivotColumns ? pivotColumns.indexOf(column) : null;\n    const aggFunc = column.isValueActive() ? column.getAggFunc() : null;\n    const sort = column.getSort() != null ? column.getSort() : null;\n    const sortIndex = column.getSortIndex() != null ? column.getSortIndex() : null;\n    const res2 = {\n      colId: column.getColId(),\n      width: column.getActualWidth(),\n      hide: !column.isVisible(),\n      pinned: column.getPinned(),\n      sort,\n      sortIndex,\n      aggFunc,\n      rowGroup: column.isRowGroupActive(),\n      rowGroupIndex,\n      pivot: column.isPivotActive(),\n      pivotIndex,\n      flex: column.getFlex() ?? null\n    };\n    return res2;\n  };\n  const res = colsForState.map((col) => createStateItemFromColumn(col));\n  const colIdToGridIndexMap = new Map(\n    colModel.getCols().map((col, index) => [col.getColId(), index])\n  );\n  res.sort((itemA, itemB) => {\n    const posA = colIdToGridIndexMap.has(itemA.colId) ? colIdToGridIndexMap.get(itemA.colId) : -1;\n    const posB = colIdToGridIndexMap.has(itemB.colId) ? colIdToGridIndexMap.get(itemB.colId) : -1;\n    return posA - posB;\n  });\n  return res;\n}\nfunction getColumnStateFromColDef(column) {\n  const getValueOrNull = (a, b) => a != null ? a : b != null ? b : null;\n  const colDef = column.getColDef();\n  const sort = getValueOrNull(colDef.sort, colDef.initialSort);\n  const sortIndex = getValueOrNull(colDef.sortIndex, colDef.initialSortIndex);\n  const hide = getValueOrNull(colDef.hide, colDef.initialHide);\n  const pinned = getValueOrNull(colDef.pinned, colDef.initialPinned);\n  const width = getValueOrNull(colDef.width, colDef.initialWidth);\n  const flex = getValueOrNull(colDef.flex, colDef.initialFlex);\n  let rowGroupIndex = getValueOrNull(colDef.rowGroupIndex, colDef.initialRowGroupIndex);\n  let rowGroup = getValueOrNull(colDef.rowGroup, colDef.initialRowGroup);\n  if (rowGroupIndex == null && (rowGroup == null || rowGroup == false)) {\n    rowGroupIndex = null;\n    rowGroup = null;\n  }\n  let pivotIndex = getValueOrNull(colDef.pivotIndex, colDef.initialPivotIndex);\n  let pivot = getValueOrNull(colDef.pivot, colDef.initialPivot);\n  if (pivotIndex == null && (pivot == null || pivot == false)) {\n    pivotIndex = null;\n    pivot = null;\n  }\n  const aggFunc = getValueOrNull(colDef.aggFunc, colDef.initialAggFunc);\n  return {\n    colId: column.getColId(),\n    sort,\n    sortIndex,\n    hide,\n    pinned,\n    width,\n    flex,\n    rowGroup,\n    rowGroupIndex,\n    pivot,\n    pivotIndex,\n    aggFunc\n  };\n}\nfunction orderLiveColsLikeState(params, colModel, gos) {\n  if (!params.applyOrder || !params.state) {\n    return;\n  }\n  const colIds = [];\n  params.state.forEach((item) => {\n    if (item.colId != null) {\n      colIds.push(item.colId);\n    }\n  });\n  sortColsLikeKeys(colModel.cols, colIds, colModel, gos);\n}\nfunction sortColsLikeKeys(cols, colIds, colModel, gos) {\n  if (cols == null) {\n    return;\n  }\n  let newOrder = [];\n  const processedColIds = {};\n  colIds.forEach((colId) => {\n    if (processedColIds[colId]) {\n      return;\n    }\n    const col = cols.map[colId];\n    if (col) {\n      newOrder.push(col);\n      processedColIds[colId] = true;\n    }\n  });\n  let autoGroupInsertIndex = 0;\n  cols.list.forEach((col) => {\n    const colId = col.getColId();\n    const alreadyProcessed = processedColIds[colId] != null;\n    if (alreadyProcessed) {\n      return;\n    }\n    const isAutoGroupCol = colId.startsWith(GROUP_AUTO_COLUMN_ID);\n    if (isAutoGroupCol) {\n      newOrder.splice(autoGroupInsertIndex++, 0, col);\n    } else {\n      newOrder.push(col);\n    }\n  });\n  newOrder = placeLockedColumns(newOrder, gos);\n  if (!doesMovePassMarryChildren(newOrder, colModel.getColTree())) {\n    _warn(39);\n    return;\n  }\n  cols.list = newOrder;\n}\nfunction normaliseColumnMovedEventForColumnState(colStateBefore, colStateAfter, source, colModel, eventSvc) {\n  const colStateAfterMapped = {};\n  colStateAfter.forEach((s) => colStateAfterMapped[s.colId] = s);\n  const colsIntersectIds = {};\n  colStateBefore.forEach((s) => {\n    if (colStateAfterMapped[s.colId]) {\n      colsIntersectIds[s.colId] = true;\n    }\n  });\n  const beforeFiltered = colStateBefore.filter((c) => colsIntersectIds[c.colId]);\n  const afterFiltered = colStateAfter.filter((c) => colsIntersectIds[c.colId]);\n  const movedColumns = [];\n  afterFiltered.forEach((csAfter, index) => {\n    const csBefore = beforeFiltered && beforeFiltered[index];\n    if (csBefore && csBefore.colId !== csAfter.colId) {\n      const gridCol = colModel.getCol(csBefore.colId);\n      if (gridCol) {\n        movedColumns.push(gridCol);\n      }\n    }\n  });\n  if (!movedColumns.length) {\n    return;\n  }\n  eventSvc.dispatchEvent({\n    type: \"columnMoved\",\n    columns: movedColumns,\n    column: movedColumns.length === 1 ? movedColumns[0] : null,\n    finished: true,\n    source\n  });\n}\nvar comparatorByIndex = (indexes, oldList, colA, colB) => {\n  const indexA = indexes[colA.getId()];\n  const indexB = indexes[colB.getId()];\n  const aHasIndex = indexA != null;\n  const bHasIndex = indexB != null;\n  if (aHasIndex && bHasIndex) {\n    return indexA - indexB;\n  }\n  if (aHasIndex) {\n    return -1;\n  }\n  if (bHasIndex) {\n    return 1;\n  }\n  const oldIndexA = oldList.indexOf(colA);\n  const oldIndexB = oldList.indexOf(colB);\n  const aHasOldIndex = oldIndexA >= 0;\n  const bHasOldIndex = oldIndexB >= 0;\n  if (aHasOldIndex && bHasOldIndex) {\n    return oldIndexA - oldIndexB;\n  }\n  if (aHasOldIndex) {\n    return -1;\n  }\n  return 1;\n};\n\n// packages/ag-grid-community/src/columns/columnModel.ts\nvar ColumnModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colModel\";\n    // if pivotMode is on, however pivot results are NOT shown if no pivot columns are set\n    this.pivotMode = false;\n    this.ready = false;\n    this.changeEventsDispatching = false;\n  }\n  postConstruct() {\n    this.pivotMode = this.gos.get(\"pivotMode\");\n    this.addManagedPropertyListeners(\n      [\"groupDisplayType\", \"treeData\", \"treeDataDisplayType\", \"groupHideOpenParents\"],\n      (event) => this.refreshAll(_convertColumnEventSourceType(event.source))\n    );\n    this.addManagedPropertyListeners(\n      [\"defaultColDef\", \"defaultColGroupDef\", \"columnTypes\", \"suppressFieldDotNotation\"],\n      this.recreateColumnDefs.bind(this)\n    );\n    this.addManagedPropertyListener(\n      \"pivotMode\",\n      (event) => this.setPivotMode(this.gos.get(\"pivotMode\"), _convertColumnEventSourceType(event.source))\n    );\n  }\n  // called from SyncService, when grid has finished initialising\n  createColsFromColDefs(source) {\n    const { beans } = this;\n    const {\n      valueCache,\n      colAutosize,\n      rowGroupColsSvc,\n      pivotColsSvc,\n      valueColsSvc,\n      visibleCols,\n      colViewport,\n      eventSvc\n    } = beans;\n    const dispatchEventsFunc = this.colDefs ? _compareColumnStatesAndDispatchEvents(beans, source) : void 0;\n    valueCache?.expire();\n    const oldCols = this.colDefCols?.list;\n    const oldTree = this.colDefCols?.tree;\n    const newTree = _createColumnTree(beans, this.colDefs, true, oldTree, source);\n    _destroyColumnTree(beans, this.colDefCols?.tree, newTree.columnTree);\n    const tree = newTree.columnTree;\n    const treeDepth = newTree.treeDept;\n    const list = _getColumnsFromTree(tree);\n    const map = {};\n    list.forEach((col) => map[col.getId()] = col);\n    this.colDefCols = { tree, treeDepth, list, map };\n    rowGroupColsSvc?.extractCols(source, oldCols);\n    pivotColsSvc?.extractCols(source, oldCols);\n    valueColsSvc?.extractCols(source, oldCols);\n    this.ready = true;\n    this.refreshCols(true);\n    visibleCols.refresh(source);\n    colViewport.checkViewportColumns();\n    eventSvc.dispatchEvent({\n      type: \"columnEverythingChanged\",\n      source\n    });\n    if (dispatchEventsFunc) {\n      this.changeEventsDispatching = true;\n      dispatchEventsFunc();\n      this.changeEventsDispatching = false;\n    }\n    eventSvc.dispatchEvent({\n      type: \"newColumnsLoaded\",\n      source\n    });\n    if (source === \"gridInitializing\") {\n      colAutosize?.applyAutosizeStrategy();\n    }\n  }\n  // called from: buildAutoGroupColumns (events 'groupDisplayType', 'treeData', 'treeDataDisplayType', 'groupHideOpenParents')\n  // createColsFromColDefs (recreateColumnDefs, setColumnsDefs),\n  // setPivotMode, applyColumnState,\n  // functionColsService.setPrimaryColList, functionColsService.updatePrimaryColList,\n  // pivotResultCols.setPivotResultCols\n  refreshCols(newColDefs) {\n    if (!this.colDefCols) {\n      return;\n    }\n    const prevColTree = this.cols?.tree;\n    this.saveColOrder();\n    const {\n      autoColSvc,\n      selectionColSvc,\n      rowNumbersSvc,\n      quickFilter,\n      pivotResultCols,\n      showRowGroupCols,\n      rowAutoHeight,\n      visibleCols,\n      colViewport,\n      eventSvc\n    } = this.beans;\n    const cols = this.selectCols(pivotResultCols, this.colDefCols);\n    this.createColumnsForService([autoColSvc, selectionColSvc, rowNumbersSvc], cols);\n    const shouldSortNewColDefs = _shouldMaintainColumnOrder(this.gos, this.showingPivotResult);\n    if (!newColDefs || shouldSortNewColDefs) {\n      this.restoreColOrder(cols);\n    }\n    this.positionLockedCols(cols);\n    showRowGroupCols?.refresh();\n    quickFilter?.refreshCols();\n    this.setColSpanActive();\n    rowAutoHeight?.setAutoHeightActive(cols);\n    visibleCols.clear();\n    colViewport.clear();\n    const dispatchChangedEvent = !_areEqual(prevColTree, this.cols.tree);\n    if (dispatchChangedEvent) {\n      eventSvc.dispatchEvent({\n        type: \"gridColumnsChanged\"\n      });\n    }\n  }\n  createColumnsForService(services, cols) {\n    for (const service of services) {\n      if (!service) {\n        continue;\n      }\n      service.createColumns(cols, (updateOrder) => {\n        this.lastOrder = updateOrder(this.lastOrder);\n        this.lastPivotOrder = updateOrder(this.lastPivotOrder);\n      });\n      service.addColumns(cols);\n    }\n  }\n  selectCols(pivotResultColsSvc, colDefCols) {\n    const pivotResultCols = pivotResultColsSvc?.getPivotResultCols() ?? null;\n    this.showingPivotResult = pivotResultCols != null;\n    const { map, list, tree, treeDepth } = pivotResultCols ?? colDefCols;\n    this.cols = {\n      list: list.slice(),\n      map: { ...map },\n      tree: tree.slice(),\n      treeDepth\n    };\n    if (pivotResultCols) {\n      const hasSameColumns = pivotResultCols.list.some((col) => this.cols?.map[col.getColId()] !== void 0);\n      if (!hasSameColumns) {\n        this.lastPivotOrder = null;\n      }\n    }\n    return this.cols;\n  }\n  getColsToShow() {\n    if (!this.cols) {\n      return [];\n    }\n    const showAutoGroupAndValuesOnly = this.isPivotMode() && !this.showingPivotResult;\n    const valueColumns = this.beans.valueColsSvc?.columns;\n    const res = this.cols.list.filter((col) => {\n      const isAutoGroupCol = isColumnGroupAutoCol(col);\n      if (showAutoGroupAndValuesOnly) {\n        const isValueCol = valueColumns?.includes(col);\n        return isAutoGroupCol || isValueCol;\n      } else {\n        return isAutoGroupCol || col.isVisible();\n      }\n    });\n    return res;\n  }\n  // on events 'groupDisplayType', 'treeData', 'treeDataDisplayType', 'groupHideOpenParents'\n  refreshAll(source) {\n    if (!this.ready) {\n      return;\n    }\n    this.refreshCols(false);\n    this.beans.visibleCols.refresh(source);\n  }\n  setColsVisible(keys, visible = false, source) {\n    _applyColumnState(\n      this.beans,\n      {\n        state: keys.map((key) => ({\n          colId: typeof key === \"string\" ? key : key.getColId(),\n          hide: !visible\n        }))\n      },\n      source\n    );\n  }\n  restoreColOrder(cols) {\n    const lastOrder = this.showingPivotResult ? this.lastPivotOrder : this.lastOrder;\n    if (!lastOrder) {\n      return;\n    }\n    const lastOrderMapped = new Map(lastOrder.map((col, index) => [col, index]));\n    const noColsFound = !cols.list.some((col) => lastOrderMapped.has(col));\n    if (noColsFound) {\n      return;\n    }\n    const colsMap = new Map(cols.list.map((col) => [col, true]));\n    const lastOrderFiltered = lastOrder.filter((col) => colsMap.has(col));\n    const lastOrderFilteredMap = new Map(lastOrderFiltered.map((col) => [col, true]));\n    const missingFromLastOrder = cols.list.filter((col) => !lastOrderFilteredMap.has(col));\n    const res = lastOrderFiltered.slice();\n    missingFromLastOrder.forEach((newCol) => {\n      let parent = newCol.getOriginalParent();\n      if (!parent) {\n        res.push(newCol);\n        return;\n      }\n      const siblings = [];\n      while (!siblings.length && parent) {\n        const leafCols = parent.getLeafColumns();\n        leafCols.forEach((leafCol) => {\n          const presentInNewCols = res.indexOf(leafCol) >= 0;\n          const notYetInSiblings = siblings.indexOf(leafCol) < 0;\n          if (presentInNewCols && notYetInSiblings) {\n            siblings.push(leafCol);\n          }\n        });\n        parent = parent.getOriginalParent();\n      }\n      if (!siblings.length) {\n        res.push(newCol);\n        return;\n      }\n      const indexes = siblings.map((col) => res.indexOf(col));\n      const lastIndex = Math.max(...indexes);\n      res.splice(lastIndex + 1, 0, newCol);\n    });\n    cols.list = res;\n  }\n  positionLockedCols(cols) {\n    cols.list = placeLockedColumns(cols.list, this.gos);\n  }\n  saveColOrder() {\n    if (this.showingPivotResult) {\n      this.lastPivotOrder = this.cols?.list ?? null;\n    } else {\n      this.lastOrder = this.cols?.list ?? null;\n    }\n  }\n  getColumnDefs() {\n    return this.colDefCols ? this.beans.colDefFactory?.getColumnDefs(\n      this.colDefCols.list,\n      this.showingPivotResult,\n      this.lastOrder,\n      this.cols?.list ?? []\n    ) : void 0;\n  }\n  setColSpanActive() {\n    this.colSpanActive = !!this.cols?.list.some((col) => col.getColDef().colSpan != null);\n  }\n  isPivotMode() {\n    return this.pivotMode;\n  }\n  setPivotMode(pivotMode, source) {\n    if (pivotMode === this.pivotMode) {\n      return;\n    }\n    this.pivotMode = pivotMode;\n    if (!this.ready) {\n      return;\n    }\n    this.refreshCols(false);\n    const { visibleCols, eventSvc } = this.beans;\n    visibleCols.refresh(source);\n    eventSvc.dispatchEvent({\n      type: \"columnPivotModeChanged\"\n    });\n  }\n  // + clientSideRowModel\n  isPivotActive() {\n    const pivotColumns = this.beans.pivotColsSvc?.columns;\n    return this.pivotMode && !!pivotColumns?.length;\n  }\n  // called when dataTypes change\n  recreateColumnDefs(e) {\n    if (!this.cols) {\n      return;\n    }\n    this.beans.autoColSvc?.updateColumns(e);\n    const source = _convertColumnEventSourceType(e.source);\n    this.createColsFromColDefs(source);\n  }\n  setColumnDefs(columnDefs, source) {\n    this.colDefs = columnDefs;\n    this.createColsFromColDefs(source);\n  }\n  destroy() {\n    _destroyColumnTree(this.beans, this.colDefCols?.tree);\n    super.destroy();\n  }\n  getColTree() {\n    return this.cols?.tree ?? [];\n  }\n  // + columnSelectPanel\n  getColDefColTree() {\n    return this.colDefCols?.tree ?? [];\n  }\n  // + clientSideRowController -> sorting, building quick filter text\n  // + headerRenderer -> sorting (clearing icon)\n  getColDefCols() {\n    return this.colDefCols?.list ?? null;\n  }\n  // + moveColumnController\n  getCols() {\n    return this.cols?.list ?? [];\n  }\n  // returns colDefCols, pivotResultCols and autoCols\n  getAllCols() {\n    const { pivotResultCols, autoColSvc, selectionColSvc } = this.beans;\n    const pivotResultColsList = pivotResultCols?.getPivotResultCols()?.list;\n    return [\n      this.colDefCols?.list ?? [],\n      autoColSvc?.columns?.list ?? [],\n      selectionColSvc?.columns?.list ?? [],\n      pivotResultColsList ?? []\n    ].flat();\n  }\n  getColsForKeys(keys) {\n    if (!keys) {\n      return [];\n    }\n    return keys.map((key) => this.getCol(key)).filter((col) => col != null);\n  }\n  getColDefCol(key) {\n    if (!this.colDefCols?.list) {\n      return null;\n    }\n    return this.getColFromCollection(key, this.colDefCols);\n  }\n  getCol(key) {\n    if (key == null) {\n      return null;\n    }\n    return this.getColFromCollection(key, this.cols);\n  }\n  getColFromCollection(key, cols) {\n    if (cols == null) {\n      return null;\n    }\n    const { map, list } = cols;\n    if (typeof key == \"string\" && map[key]) {\n      return map[key];\n    }\n    for (let i = 0; i < list.length; i++) {\n      if (_columnsMatch(list[i], key)) {\n        return list[i];\n      }\n    }\n    return this.beans.autoColSvc?.getColumn(key) ?? this.beans.selectionColSvc?.getColumn(key) ?? null;\n  }\n};\n\n// packages/ag-grid-community/src/columns/baseColsService.ts\nvar BaseColsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.dispatchColumnChangedEvent = dispatchColumnChangedEvent;\n    this.columns = [];\n  }\n  wireBeans(beans) {\n    this.colModel = beans.colModel;\n    this.aggFuncSvc = beans.aggFuncSvc;\n    this.visibleCols = beans.visibleCols;\n  }\n  sortColumns(compareFn) {\n    this.columns.sort(compareFn);\n  }\n  setColumns(colKeys, source) {\n    this.setColList(colKeys, this.columns, this.eventName, true, true, this.columnProcessors.set, source);\n  }\n  addColumns(colKeys, source) {\n    this.updateColList(colKeys, this.columns, true, true, this.columnProcessors.add, this.eventName, source);\n  }\n  removeColumns(colKeys, source) {\n    this.updateColList(colKeys, this.columns, false, true, this.columnProcessors.remove, this.eventName, source);\n  }\n  setColList(colKeys = [], masterList, eventName, detectOrderChange, autoGroupsNeedBuilding, columnCallback, source) {\n    const gridColumns = this.colModel.getCols();\n    if (!gridColumns || gridColumns.length === 0) {\n      return;\n    }\n    const changes = /* @__PURE__ */ new Map();\n    masterList.forEach((col, idx) => changes.set(col, idx));\n    masterList.length = 0;\n    if (_exists(colKeys)) {\n      colKeys.forEach((key) => {\n        const column = this.colModel.getColDefCol(key);\n        if (column) {\n          masterList.push(column);\n        }\n      });\n    }\n    masterList.forEach((col, idx) => {\n      const oldIndex = changes.get(col);\n      if (oldIndex === void 0) {\n        changes.set(col, 0);\n        return;\n      }\n      if (detectOrderChange && oldIndex !== idx) {\n        return;\n      }\n      changes.delete(col);\n    });\n    const primaryCols = this.colModel.getColDefCols();\n    (primaryCols || []).forEach((column) => {\n      const added = masterList.indexOf(column) >= 0;\n      columnCallback(column, added, source);\n    });\n    autoGroupsNeedBuilding && this.colModel.refreshCols(false);\n    this.visibleCols.refresh(source);\n    this.dispatchColumnChangedEvent(this.eventSvc, eventName, [...changes.keys()], source);\n  }\n  updateColList(keys = [], masterList, actionIsAdd, autoGroupsNeedBuilding, columnCallback, eventType, source) {\n    if (!keys || keys.length === 0) {\n      return;\n    }\n    let atLeastOne = false;\n    const updatedCols = /* @__PURE__ */ new Set();\n    keys.forEach((key) => {\n      if (!key) {\n        return;\n      }\n      const columnToAdd = this.colModel.getColDefCol(key);\n      if (!columnToAdd) {\n        return;\n      }\n      updatedCols.add(columnToAdd);\n      if (actionIsAdd) {\n        if (masterList.indexOf(columnToAdd) >= 0) {\n          return;\n        }\n        masterList.push(columnToAdd);\n      } else {\n        const currentIndex = masterList.indexOf(columnToAdd);\n        if (currentIndex < 0) {\n          return;\n        }\n        for (let i = currentIndex + 1; i < masterList.length; i++) {\n          updatedCols.add(masterList[i]);\n        }\n        _removeFromArray(masterList, columnToAdd);\n      }\n      columnCallback(columnToAdd, actionIsAdd, source);\n      atLeastOne = true;\n    });\n    if (!atLeastOne) {\n      return;\n    }\n    if (autoGroupsNeedBuilding) {\n      this.colModel.refreshCols(false);\n    }\n    this.visibleCols.refresh(source);\n    const eventColumns = Array.from(updatedCols);\n    this.eventSvc.dispatchEvent({\n      type: eventType,\n      columns: eventColumns,\n      column: eventColumns.length === 1 ? eventColumns[0] : null,\n      source\n    });\n  }\n  extractCols(source, oldProvidedCols = []) {\n    const previousCols = this.columns;\n    const colsWithIndex = [];\n    const colsWithValue = [];\n    const { setFlagFunc, getIndexFunc, getInitialIndexFunc, getValueFunc, getInitialValueFunc } = this.columnExtractors;\n    const primaryCols = this.colModel.getColDefCols() || [];\n    primaryCols.forEach((col) => {\n      const colIsNew = oldProvidedCols.indexOf(col) < 0;\n      const colDef = col.getColDef();\n      const value = getValueFunc(colDef);\n      const initialValue = getInitialValueFunc(colDef);\n      const index = getIndexFunc(colDef);\n      const initialIndex = getInitialIndexFunc(colDef);\n      let include;\n      const valuePresent = value !== void 0;\n      const indexPresent = index !== void 0;\n      const initialValuePresent = initialValue !== void 0;\n      const initialIndexPresent = initialIndex !== void 0;\n      if (valuePresent) {\n        include = value;\n      } else if (indexPresent) {\n        if (index === null) {\n          include = false;\n        } else {\n          include = index >= 0;\n        }\n      } else {\n        if (colIsNew) {\n          if (initialValuePresent) {\n            include = initialValue;\n          } else if (initialIndexPresent) {\n            include = initialIndex != null && initialIndex >= 0;\n          } else {\n            include = false;\n          }\n        } else {\n          include = previousCols.indexOf(col) >= 0;\n        }\n      }\n      if (include) {\n        const useIndex = colIsNew ? index != null || initialIndex != null : index != null;\n        useIndex ? colsWithIndex.push(col) : colsWithValue.push(col);\n      }\n    });\n    const getIndexForCol = (col) => {\n      const index = getIndexFunc(col.getColDef());\n      const defaultIndex = getInitialIndexFunc(col.getColDef());\n      return index != null ? index : defaultIndex;\n    };\n    colsWithIndex.sort((colA, colB) => {\n      const indexA = getIndexForCol(colA);\n      const indexB = getIndexForCol(colB);\n      if (indexA === indexB) {\n        return 0;\n      }\n      if (indexA < indexB) {\n        return -1;\n      }\n      return 1;\n    });\n    const res = [].concat(colsWithIndex);\n    previousCols.forEach((col) => {\n      if (colsWithValue.indexOf(col) >= 0) {\n        res.push(col);\n      }\n    });\n    colsWithValue.forEach((col) => {\n      if (res.indexOf(col) < 0) {\n        res.push(col);\n      }\n    });\n    previousCols.forEach((col) => {\n      if (res.indexOf(col) < 0) {\n        setFlagFunc(col, false, source);\n      }\n    });\n    res.forEach((col) => {\n      if (previousCols.indexOf(col) < 0) {\n        setFlagFunc(col, true, source);\n      }\n    });\n    return this.columns = res;\n  }\n  restoreColumnOrder(columnStateAccumulator, incomingColumnState) {\n    const colList = this.columns;\n    const primaryCols = this.colModel.getColDefCols();\n    if (!colList.length || !primaryCols) {\n      return columnStateAccumulator;\n    }\n    const updatedColIdArray = Object.keys(incomingColumnState);\n    const updatedColIds = new Set(updatedColIdArray);\n    const newColIds = new Set(updatedColIdArray);\n    const allColIds = new Set(\n      colList.map((column) => {\n        const colId = column.getColId();\n        newColIds.delete(colId);\n        return colId;\n      }).concat(updatedColIdArray)\n    );\n    const colIdsInOriginalOrder = [];\n    const originalOrderMap = {};\n    let orderIndex = 0;\n    for (let i = 0; i < primaryCols.length; i++) {\n      const colId = primaryCols[i].getColId();\n      if (allColIds.has(colId)) {\n        colIdsInOriginalOrder.push(colId);\n        originalOrderMap[colId] = orderIndex++;\n      }\n    }\n    let index = 1e3;\n    let hasAddedNewCols = false;\n    let lastIndex = 0;\n    const enableProp = this.columnOrdering.enableProp;\n    const initialEnableProp = this.columnOrdering.initialEnableProp;\n    const indexProp = this.columnOrdering.indexProp;\n    const initialIndexProp = this.columnOrdering.initialIndexProp;\n    const processPrecedingNewCols = (colId) => {\n      const originalOrderIndex = originalOrderMap[colId];\n      for (let i = lastIndex; i < originalOrderIndex; i++) {\n        const newColId = colIdsInOriginalOrder[i];\n        if (newColIds.has(newColId)) {\n          incomingColumnState[newColId][indexProp] = index++;\n          newColIds.delete(newColId);\n        }\n      }\n      lastIndex = originalOrderIndex;\n    };\n    colList.forEach((column) => {\n      const colId = column.getColId();\n      if (updatedColIds.has(colId)) {\n        processPrecedingNewCols(colId);\n        incomingColumnState[colId][indexProp] = index++;\n      } else {\n        const colDef = column.getColDef();\n        const missingIndex = colDef[indexProp] === null || colDef[indexProp] === void 0 && colDef[initialIndexProp] == null;\n        if (missingIndex) {\n          if (!hasAddedNewCols) {\n            const propEnabled = colDef[enableProp] || colDef[enableProp] === void 0 && colDef[initialEnableProp];\n            if (propEnabled) {\n              processPrecedingNewCols(colId);\n            } else {\n              newColIds.forEach((newColId) => {\n                incomingColumnState[newColId][indexProp] = index + originalOrderMap[newColId];\n              });\n              index += colIdsInOriginalOrder.length;\n              hasAddedNewCols = true;\n            }\n          }\n          if (!columnStateAccumulator[colId]) {\n            columnStateAccumulator[colId] = { colId };\n          }\n          columnStateAccumulator[colId][indexProp] = index++;\n        }\n      }\n    });\n    return columnStateAccumulator;\n  }\n};\n\n// packages/ag-grid-community/src/columns/groupInstanceIdCreator.ts\nvar GroupInstanceIdCreator = class {\n  constructor() {\n    // this map contains keys to numbers, so we remember what the last call was\n    this.existingIds = {};\n  }\n  getInstanceIdForKey(key) {\n    const lastResult = this.existingIds[key];\n    let result;\n    if (typeof lastResult !== \"number\") {\n      result = 0;\n    } else {\n      result = lastResult + 1;\n    }\n    this.existingIds[key] = result;\n    return result;\n  }\n};\n\n// packages/ag-grid-community/src/components/emptyBean.ts\nvar EmptyBean = class extends BeanStub {\n};\nfunction setupCompBean(ctrl, ctx, compBean) {\n  if (compBean) {\n    ctrl.addDestroyFunc(() => ctx.destroyBean(compBean));\n  }\n  return compBean ?? ctrl;\n}\n\n// packages/ag-grid-community/src/rendering/cssClassManager.ts\nvar CssClassManager = class {\n  constructor(getGui) {\n    // to minimise DOM hits, we only apply CSS classes if they have changed. as adding a CSS class that is already\n    // there, or removing one that wasn't present, all takes CPU.\n    this.cssClassStates = {};\n    this.getGui = getGui;\n  }\n  addCssClass(className) {\n    this.addOrRemoveCssClass(className, true);\n  }\n  removeCssClass(className) {\n    this.addOrRemoveCssClass(className, false);\n  }\n  containsCssClass(className) {\n    const eGui = this.getGui();\n    if (!eGui) {\n      return false;\n    }\n    return eGui.classList.contains(className);\n  }\n  addOrRemoveCssClass(className, addOrRemove) {\n    if (!className) {\n      return;\n    }\n    if (className.indexOf(\" \") >= 0) {\n      const list = (className || \"\").split(\" \");\n      if (list.length > 1) {\n        list.forEach((cls) => this.addOrRemoveCssClass(cls, addOrRemove));\n        return;\n      }\n    }\n    const updateNeeded = this.cssClassStates[className] !== addOrRemove;\n    if (updateNeeded && className.length) {\n      const eGui = this.getGui();\n      if (eGui) {\n        eGui.classList.toggle(className, addOrRemove);\n      }\n      this.cssClassStates[className] = addOrRemove;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/widgets/component.ts\nvar compIdSequence = 0;\nvar RefPlaceholder = null;\nvar Component = class extends BeanStub {\n  constructor(template, componentSelectors) {\n    super();\n    this.suppressDataRefValidation = false;\n    // if false, then CSS class \"ag-hidden\" is applied, which sets \"display: none\"\n    this.displayed = true;\n    // if false, then CSS class \"ag-invisible\" is applied, which sets \"visibility: hidden\"\n    this.visible = true;\n    // unique id for this row component. this is used for getting a reference to the HTML dom.\n    // we cannot use the RowNode id as this is not unique (due to animation, old rows can be lying\n    // around as we create a new rowComp instance for the same row node).\n    this.compId = compIdSequence++;\n    this.cssClassManager = new CssClassManager(() => this.eGui);\n    this.componentSelectors = new Map((componentSelectors ?? []).map((comp) => [comp.selector, comp]));\n    if (template) {\n      this.setTemplate(template);\n    }\n  }\n  preConstruct() {\n    this.wireTemplate(this.getGui());\n    const debugId = \"component-\" + Object.getPrototypeOf(this)?.constructor?.name;\n    this.css?.forEach((css) => this.beans.environment.addGlobalCSS(css, debugId));\n  }\n  wireTemplate(element, paramsMap) {\n    if (element && this.gos) {\n      this.applyElementsToComponent(element);\n      this.createChildComponentsFromTags(element, paramsMap);\n    }\n  }\n  getCompId() {\n    return this.compId;\n  }\n  getDataRefAttribute(element) {\n    if (element.getAttribute) {\n      return element.getAttribute(\"data-ref\");\n    }\n    return null;\n  }\n  applyElementsToComponent(element, elementRef, paramsMap, newComponent = null) {\n    if (elementRef === void 0) {\n      elementRef = this.getDataRefAttribute(element);\n    }\n    if (elementRef) {\n      const current = this[elementRef];\n      if (current === RefPlaceholder) {\n        this[elementRef] = newComponent ?? element;\n      } else {\n        const usedAsParamRef = paramsMap && paramsMap[elementRef];\n        if (!this.suppressDataRefValidation && !usedAsParamRef) {\n          throw new Error(`data-ref: ${elementRef} on ${this.constructor.name} with ${current}`);\n        }\n      }\n    }\n  }\n  // for registered components only, eg creates AgCheckbox instance from ag-checkbox HTML tag\n  createChildComponentsFromTags(parentNode, paramsMap) {\n    const childNodeList = _copyNodeList(parentNode.childNodes);\n    childNodeList.forEach((childNode) => {\n      if (!(childNode instanceof HTMLElement)) {\n        return;\n      }\n      const childComp = this.createComponentFromElement(\n        childNode,\n        (childComp2) => {\n          const childGui = childComp2.getGui();\n          if (childGui) {\n            this.copyAttributesFromNode(childNode, childComp2.getGui());\n          }\n        },\n        paramsMap\n      );\n      if (childComp) {\n        if (childComp.addItems && childNode.children.length) {\n          this.createChildComponentsFromTags(childNode, paramsMap);\n          const items = Array.prototype.slice.call(childNode.children);\n          childComp.addItems(items);\n        }\n        this.swapComponentForNode(childComp, parentNode, childNode);\n      } else if (childNode.childNodes) {\n        this.createChildComponentsFromTags(childNode, paramsMap);\n      }\n    });\n  }\n  createComponentFromElement(element, afterPreCreateCallback, paramsMap) {\n    const key = element.nodeName;\n    const elementRef = this.getDataRefAttribute(element);\n    const isAgGridComponent = key.indexOf(\"AG-\") === 0;\n    const componentSelector = isAgGridComponent ? this.componentSelectors.get(key) : null;\n    let newComponent = null;\n    if (componentSelector) {\n      const componentParams = paramsMap && elementRef ? paramsMap[elementRef] : void 0;\n      newComponent = new componentSelector.component(componentParams);\n      newComponent.setParentComponent(this);\n      this.createBean(newComponent, null, afterPreCreateCallback);\n    } else if (isAgGridComponent) {\n      throw new Error(`selector: ${key}`);\n    }\n    this.applyElementsToComponent(element, elementRef, paramsMap, newComponent);\n    return newComponent;\n  }\n  copyAttributesFromNode(source, dest) {\n    _iterateNamedNodeMap(source.attributes, (name, value) => dest.setAttribute(name, value));\n  }\n  swapComponentForNode(newComponent, parentNode, childNode) {\n    const eComponent = newComponent.getGui();\n    parentNode.replaceChild(eComponent, childNode);\n    parentNode.insertBefore(document.createComment(childNode.nodeName), eComponent);\n    this.addDestroyFunc(this.destroyBean.bind(this, newComponent));\n  }\n  activateTabIndex(elements) {\n    const tabIndex = this.gos.get(\"tabIndex\");\n    if (!elements) {\n      elements = [];\n    }\n    if (!elements.length) {\n      elements.push(this.getGui());\n    }\n    elements.forEach((el) => el.setAttribute(\"tabindex\", tabIndex.toString()));\n  }\n  setTemplate(template, componentSelectors, paramsMap) {\n    const eGui = _loadTemplate(template);\n    this.setTemplateFromElement(eGui, componentSelectors, paramsMap);\n  }\n  setTemplateFromElement(element, components, paramsMap, suppressDataRefValidation = false) {\n    this.eGui = element;\n    this.suppressDataRefValidation = suppressDataRefValidation;\n    if (components) {\n      for (let i = 0; i < components.length; i++) {\n        const component = components[i];\n        this.componentSelectors.set(component.selector, component);\n      }\n    }\n    this.wireTemplate(element, paramsMap);\n  }\n  getGui() {\n    return this.eGui;\n  }\n  getFocusableElement() {\n    return this.eGui;\n  }\n  getAriaElement() {\n    return this.getFocusableElement();\n  }\n  setParentComponent(component) {\n    this.parentComponent = component;\n  }\n  getParentComponent() {\n    return this.parentComponent;\n  }\n  // this method is for older code, that wants to provide the gui element,\n  // it is not intended for this to be in ag-Stack\n  setGui(eGui) {\n    this.eGui = eGui;\n  }\n  queryForHtmlElement(cssSelector) {\n    return this.eGui.querySelector(cssSelector);\n  }\n  getContainerAndElement(newChild, container) {\n    let parent = container;\n    if (newChild == null) {\n      return null;\n    }\n    if (!parent) {\n      parent = this.eGui;\n    }\n    if (_isNodeOrElement(newChild)) {\n      return {\n        element: newChild,\n        parent\n      };\n    }\n    return {\n      element: newChild.getGui(),\n      parent\n    };\n  }\n  prependChild(newChild, container) {\n    const { element, parent } = this.getContainerAndElement(newChild, container) || {};\n    if (!element || !parent) {\n      return;\n    }\n    parent.insertAdjacentElement(\"afterbegin\", element);\n  }\n  appendChild(newChild, container) {\n    const { element, parent } = this.getContainerAndElement(newChild, container) || {};\n    if (!element || !parent) {\n      return;\n    }\n    parent.appendChild(element);\n  }\n  isDisplayed() {\n    return this.displayed;\n  }\n  setVisible(visible, options = {}) {\n    if (visible !== this.visible) {\n      this.visible = visible;\n      const { skipAriaHidden } = options;\n      _setVisible(this.eGui, visible, { skipAriaHidden });\n    }\n  }\n  setDisplayed(displayed, options = {}) {\n    if (displayed !== this.displayed) {\n      this.displayed = displayed;\n      const { skipAriaHidden } = options;\n      _setDisplayed(this.eGui, displayed, { skipAriaHidden });\n      const event = {\n        type: \"displayChanged\",\n        visible: this.displayed\n      };\n      this.dispatchLocalEvent(event);\n    }\n  }\n  destroy() {\n    if (this.parentComponent) {\n      this.parentComponent = void 0;\n    }\n    super.destroy();\n  }\n  addGuiEventListener(event, listener, options) {\n    this.eGui.addEventListener(event, listener, options);\n    this.addDestroyFunc(() => this.eGui.removeEventListener(event, listener));\n  }\n  addCssClass(className) {\n    this.cssClassManager.addCssClass(className);\n  }\n  removeCssClass(className) {\n    this.cssClassManager.removeCssClass(className);\n  }\n  containsCssClass(className) {\n    return this.cssClassManager.containsCssClass(className);\n  }\n  addOrRemoveCssClass(className, addOrRemove) {\n    this.cssClassManager.addOrRemoveCssClass(className, addOrRemove);\n  }\n  registerCSS(css) {\n    this.css || (this.css = []);\n    this.css.push(css);\n  }\n};\n\n// packages/ag-grid-community/src/utils/promise.ts\nfunction _isPromise(fn) {\n  if (typeof fn.then === \"function\") {\n    return true;\n  }\n  return false;\n}\nvar AgPromise = class _AgPromise {\n  constructor(callback) {\n    this.status = 0 /* IN_PROGRESS */;\n    this.resolution = null;\n    this.waiters = [];\n    callback(\n      (value) => this.onDone(value),\n      (params) => this.onReject(params)\n    );\n  }\n  static all(promises) {\n    return promises.length ? new _AgPromise((resolve) => {\n      let remainingToResolve = promises.length;\n      const combinedValues = new Array(remainingToResolve);\n      promises.forEach((promise, index) => {\n        promise.then((value) => {\n          combinedValues[index] = value;\n          remainingToResolve--;\n          if (remainingToResolve === 0) {\n            resolve(combinedValues);\n          }\n        });\n      });\n    }) : _AgPromise.resolve();\n  }\n  static resolve(value = null) {\n    return new _AgPromise((resolve) => resolve(value));\n  }\n  then(func) {\n    return new _AgPromise((resolve) => {\n      if (this.status === 1 /* RESOLVED */) {\n        resolve(func(this.resolution));\n      } else {\n        this.waiters.push((value) => resolve(func(value)));\n      }\n    });\n  }\n  onDone(value) {\n    this.status = 1 /* RESOLVED */;\n    this.resolution = value;\n    this.waiters.forEach((waiter) => waiter(value));\n  }\n  onReject(_) {\n  }\n};\n\n// packages/ag-grid-community/src/components/framework/userComponentFactory.ts\nfunction doesImplementIComponent(candidate) {\n  if (!candidate) {\n    return false;\n  }\n  return candidate.prototype && \"getGui\" in candidate.prototype;\n}\nfunction _getUserCompKeys(frameworkOverrides, defObject, type, params) {\n  const { name } = type;\n  let compName;\n  let jsComp;\n  let fwComp;\n  let paramsFromSelector;\n  let popupFromSelector;\n  let popupPositionFromSelector;\n  if (defObject) {\n    const defObjectAny = defObject;\n    const selectorFunc = defObjectAny[name + \"Selector\"];\n    const selectorRes = selectorFunc ? selectorFunc(params) : null;\n    const assignComp = (providedJsComp) => {\n      if (typeof providedJsComp === \"string\") {\n        compName = providedJsComp;\n      } else if (providedJsComp != null && providedJsComp !== true) {\n        const isFwkComp = frameworkOverrides.isFrameworkComponent(providedJsComp);\n        if (isFwkComp) {\n          fwComp = providedJsComp;\n        } else {\n          jsComp = providedJsComp;\n        }\n      }\n    };\n    if (selectorRes) {\n      assignComp(selectorRes.component);\n      paramsFromSelector = selectorRes.params;\n      popupFromSelector = selectorRes.popup;\n      popupPositionFromSelector = selectorRes.popupPosition;\n    } else {\n      assignComp(defObjectAny[name]);\n    }\n  }\n  return { compName, jsComp, fwComp, paramsFromSelector, popupFromSelector, popupPositionFromSelector };\n}\nvar UserComponentFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"userCompFactory\";\n  }\n  wireBeans(beans) {\n    this.agCompUtils = beans.agCompUtils;\n    this.registry = beans.registry;\n    this.frameworkCompWrapper = beans.frameworkCompWrapper;\n    this.gridOptions = beans.gridOptions;\n  }\n  getCompDetailsFromGridOptions(type, defaultName, params, mandatory = false) {\n    return this.getCompDetails(this.gridOptions, type, defaultName, params, mandatory);\n  }\n  getCompDetails(defObject, type, defaultName, params, mandatory = false) {\n    const { name, cellRenderer } = type;\n    let { compName, jsComp, fwComp, paramsFromSelector, popupFromSelector, popupPositionFromSelector } = _getUserCompKeys(this.beans.frameworkOverrides, defObject, type, params);\n    let defaultCompParams;\n    const lookupFromRegistry = (key) => {\n      const item = this.registry.getUserComponent(name, key);\n      if (item) {\n        jsComp = !item.componentFromFramework ? item.component : void 0;\n        fwComp = item.componentFromFramework ? item.component : void 0;\n        defaultCompParams = item.params;\n      }\n    };\n    if (compName != null) {\n      lookupFromRegistry(compName);\n    }\n    if (jsComp == null && fwComp == null && defaultName != null) {\n      lookupFromRegistry(defaultName);\n    }\n    if (jsComp && cellRenderer && !doesImplementIComponent(jsComp)) {\n      jsComp = this.agCompUtils?.adaptFunction(type, jsComp);\n    }\n    if (!jsComp && !fwComp) {\n      const { validation: validation2 } = this.beans;\n      if (mandatory && (compName !== defaultName || !defaultName)) {\n        if (compName) {\n          if (!validation2?.isProvidedUserComp(compName)) {\n            _error(50, { compName });\n          }\n        } else {\n          if (defaultName) {\n            if (!validation2) {\n              _error(260, {\n                ...this.gos.getModuleErrorParams(),\n                propName: name,\n                compName: defaultName\n              });\n            }\n          } else {\n            _error(216, { name });\n          }\n        }\n      } else if (defaultName && !validation2) {\n        _error(146, { comp: defaultName });\n      }\n      return;\n    }\n    const paramsMerged = this.mergeParams(defObject, type, params, paramsFromSelector, defaultCompParams);\n    const componentFromFramework = jsComp == null;\n    const componentClass = jsComp ?? fwComp;\n    return {\n      componentFromFramework,\n      componentClass,\n      params: paramsMerged,\n      type,\n      popupFromSelector,\n      popupPositionFromSelector,\n      newAgStackInstance: () => this.newAgStackInstance(componentClass, componentFromFramework, paramsMerged, type)\n    };\n  }\n  newAgStackInstance(ComponentClass, componentFromFramework, params, type) {\n    const jsComponent = !componentFromFramework;\n    let instance;\n    if (jsComponent) {\n      instance = new ComponentClass();\n    } else {\n      instance = this.frameworkCompWrapper.wrap(\n        ComponentClass,\n        type.mandatoryMethods,\n        type.optionalMethods,\n        type\n      );\n    }\n    this.createBean(instance);\n    const deferredInit = instance.init?.(params);\n    if (deferredInit == null) {\n      return AgPromise.resolve(instance);\n    }\n    return deferredInit.then(() => instance);\n  }\n  /**\n   * merges params with application provided params\n   * used by Floating Filter\n   */\n  mergeParams(defObject, type, paramsFromGrid, paramsFromSelector = null, defaultCompParams) {\n    const params = { ...paramsFromGrid, ...defaultCompParams };\n    const defObjectAny = defObject;\n    const userParams = defObjectAny && defObjectAny[type.name + \"Params\"];\n    if (typeof userParams === \"function\") {\n      const userParamsFromFunc = userParams(paramsFromGrid);\n      _mergeDeep(params, userParamsFromFunc);\n    } else if (typeof userParams === \"object\") {\n      _mergeDeep(params, userParams);\n    }\n    _mergeDeep(params, paramsFromSelector);\n    return params;\n  }\n};\n\n// packages/ag-grid-community/src/components/framework/userCompUtils.ts\nvar DateComponent = {\n  name: \"dateComponent\",\n  mandatoryMethods: [\"getDate\", \"setDate\"],\n  optionalMethods: [\"afterGuiAttached\", \"setInputPlaceholder\", \"setInputAriaLabel\", \"setDisabled\", \"refresh\"]\n};\nvar DragAndDropImageComponent = {\n  name: \"dragAndDropImageComponent\",\n  mandatoryMethods: [\"setIcon\", \"setLabel\"]\n};\nvar HeaderComponent = { name: \"headerComponent\", optionalMethods: [\"refresh\"] };\nvar InnerHeaderComponent = { name: \"innerHeaderComponent\" };\nvar InnerHeaderGroupComponent = { name: \"innerHeaderGroupComponent\" };\nvar HeaderGroupComponent = { name: \"headerGroupComponent\" };\nvar InnerCellRendererComponent = {\n  name: \"innerRenderer\",\n  cellRenderer: true,\n  optionalMethods: [\"afterGuiAttached\"]\n};\nvar CellRendererComponent = {\n  name: \"cellRenderer\",\n  optionalMethods: [\"refresh\", \"afterGuiAttached\"],\n  cellRenderer: true\n};\nvar EditorRendererComponent = {\n  name: \"cellRenderer\",\n  optionalMethods: [\"refresh\", \"afterGuiAttached\"]\n};\nvar LoadingCellRendererComponent = { name: \"loadingCellRenderer\", cellRenderer: true };\nvar CellEditorComponent = {\n  name: \"cellEditor\",\n  mandatoryMethods: [\"getValue\"],\n  optionalMethods: [\n    \"isPopup\",\n    \"isCancelBeforeStart\",\n    \"isCancelAfterEnd\",\n    \"getPopupPosition\",\n    \"focusIn\",\n    \"focusOut\",\n    \"afterGuiAttached\",\n    \"refresh\"\n  ]\n};\nvar LoadingOverlayComponent = { name: \"loadingOverlayComponent\", optionalMethods: [\"refresh\"] };\nvar NoRowsOverlayComponent = { name: \"noRowsOverlayComponent\", optionalMethods: [\"refresh\"] };\nvar TooltipComponent = { name: \"tooltipComponent\" };\nvar FilterComponent = {\n  name: \"filter\",\n  mandatoryMethods: [\"isFilterActive\", \"doesFilterPass\", \"getModel\", \"setModel\"],\n  optionalMethods: [\n    \"afterGuiAttached\",\n    \"afterGuiDetached\",\n    \"onNewRowsLoaded\",\n    \"getModelAsString\",\n    \"onFloatingFilterChanged\",\n    \"onAnyFilterChanged\",\n    \"refresh\"\n  ]\n};\nvar FloatingFilterComponent = {\n  name: \"floatingFilterComponent\",\n  mandatoryMethods: [\"onParentModelChanged\"],\n  optionalMethods: [\"afterGuiAttached\", \"refresh\"]\n};\nvar FullWidth = {\n  name: \"fullWidthCellRenderer\",\n  optionalMethods: [\"refresh\", \"afterGuiAttached\"],\n  cellRenderer: true\n};\nvar FullWidthLoading = { name: \"loadingCellRenderer\", cellRenderer: true };\nvar FullWidthGroup = {\n  name: \"groupRowRenderer\",\n  optionalMethods: [\"afterGuiAttached\"],\n  cellRenderer: true\n};\nvar FullWidthDetail = { name: \"detailCellRenderer\", optionalMethods: [\"refresh\"], cellRenderer: true };\nfunction _getDragAndDropImageCompDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(DragAndDropImageComponent, \"agDragAndDropImage\", params, true);\n}\nfunction _getInnerCellRendererDetails(userCompFactory, def, params) {\n  return userCompFactory.getCompDetails(def, InnerCellRendererComponent, void 0, params);\n}\nfunction _getHeaderCompDetails(userCompFactory, colDef, params) {\n  return userCompFactory.getCompDetails(colDef, HeaderComponent, \"agColumnHeader\", params);\n}\nfunction _getInnerHeaderCompDetails(userCompFactory, headerCompParams, params) {\n  return userCompFactory.getCompDetails(headerCompParams, InnerHeaderComponent, void 0, params);\n}\nfunction _getHeaderGroupCompDetails(userCompFactory, params) {\n  const colGroupDef = params.columnGroup.getColGroupDef();\n  return userCompFactory.getCompDetails(colGroupDef, HeaderGroupComponent, \"agColumnGroupHeader\", params);\n}\nfunction _getInnerHeaderGroupCompDetails(userCompFactory, headerGroupCompParams, params) {\n  return userCompFactory.getCompDetails(headerGroupCompParams, InnerHeaderGroupComponent, void 0, params);\n}\nfunction _getFullWidthCellRendererDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(FullWidth, void 0, params, true);\n}\nfunction _getFullWidthLoadingCellRendererDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(FullWidthLoading, \"agLoadingCellRenderer\", params, true);\n}\nfunction _getFullWidthGroupCellRendererDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(FullWidthGroup, \"agGroupRowRenderer\", params, true);\n}\nfunction _getFullWidthDetailCellRendererDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(FullWidthDetail, \"agDetailCellRenderer\", params, true);\n}\nfunction _getCellRendererDetails(userCompFactory, def, params) {\n  return userCompFactory.getCompDetails(def, CellRendererComponent, void 0, params);\n}\nfunction _getEditorRendererDetails(userCompFactory, def, params) {\n  return userCompFactory.getCompDetails(\n    def,\n    EditorRendererComponent,\n    void 0,\n    params\n  );\n}\nfunction _getLoadingCellRendererDetails(userCompFactory, def, params) {\n  return userCompFactory.getCompDetails(def, LoadingCellRendererComponent, \"agSkeletonCellRenderer\", params, true);\n}\nfunction _getCellEditorDetails(userCompFactory, def, params) {\n  return userCompFactory.getCompDetails(def, CellEditorComponent, \"agCellEditor\", params, true);\n}\nfunction _getFilterDetails(userCompFactory, def, params, defaultFilter) {\n  return userCompFactory.getCompDetails(def, FilterComponent, defaultFilter, params, true);\n}\nfunction _getDateCompDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(DateComponent, \"agDateInput\", params, true);\n}\nfunction _getLoadingOverlayCompDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(LoadingOverlayComponent, \"agLoadingOverlay\", params, true);\n}\nfunction _getNoRowsOverlayCompDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetailsFromGridOptions(NoRowsOverlayComponent, \"agNoRowsOverlay\", params, true);\n}\nfunction _getTooltipCompDetails(userCompFactory, params) {\n  return userCompFactory.getCompDetails(params.colDef, TooltipComponent, \"agTooltipComponent\", params, true);\n}\nfunction _getFloatingFilterCompDetails(userCompFactory, def, params, defaultFloatingFilter) {\n  return userCompFactory.getCompDetails(def, FloatingFilterComponent, defaultFloatingFilter, params);\n}\nfunction _getFilterCompKeys(frameworkOverrides, def) {\n  return _getUserCompKeys(frameworkOverrides, def, FilterComponent);\n}\nfunction _mergeFilterParamsWithApplicationProvidedParams(userCompFactory, defObject, paramsFromGrid) {\n  return userCompFactory.mergeParams(defObject, FilterComponent, paramsFromGrid);\n}\n\n// packages/ag-grid-community/src/components/framework/unwrapUserComp.ts\nfunction _unwrapUserComp(comp) {\n  const compAsAny = comp;\n  const isProxy = compAsAny != null && compAsAny.getFrameworkComponentInstance != null;\n  return isProxy ? compAsAny.getFrameworkComponentInstance() : comp;\n}\n\n// packages/ag-grid-community/src/modules/moduleRegistry.ts\nvar allRegisteredModules = /* @__PURE__ */ new Set();\nvar globalModulesMap = {};\nvar gridModulesMap = {};\nvar currentModuleVersion;\nvar areGridScopedModules = false;\nvar isUmd = false;\nfunction isValidModuleVersion(module) {\n  const [moduleMajor, moduleMinor] = module.version.split(\".\") || [];\n  const [currentModuleMajor, currentModuleMinor] = currentModuleVersion.split(\".\") || [];\n  return moduleMajor === currentModuleMajor && moduleMinor === currentModuleMinor;\n}\nfunction runVersionChecks(module) {\n  if (!currentModuleVersion) {\n    currentModuleVersion = module.version;\n  }\n  const errorMsg = (details) => `You are using incompatible versions of AG Grid modules. Major and minor versions should always match across modules. ${details} Please update all modules to the same version.`;\n  if (!module.version) {\n    _errorOnce(errorMsg(`'${module.moduleName}' is incompatible.`));\n  } else if (!isValidModuleVersion(module)) {\n    _errorOnce(\n      errorMsg(\n        `'${module.moduleName}' is version ${module.version} but the other modules are version ${currentModuleVersion}.`\n      )\n    );\n  }\n  if (module.validate) {\n    const result = module.validate();\n    if (!result.isValid) {\n      const errorResult = result;\n      _errorOnce(`${errorResult.message}`);\n    }\n  }\n}\nfunction _registerModule(module, gridId) {\n  runVersionChecks(module);\n  const rowModels = module.rowModels ?? [\"all\"];\n  allRegisteredModules.add(module);\n  let moduleStore;\n  if (gridId !== void 0) {\n    areGridScopedModules = true;\n    if (gridModulesMap[gridId] === void 0) {\n      gridModulesMap[gridId] = {};\n    }\n    moduleStore = gridModulesMap[gridId];\n  } else {\n    moduleStore = globalModulesMap;\n  }\n  rowModels.forEach((rowModel) => {\n    if (moduleStore[rowModel] === void 0) {\n      moduleStore[rowModel] = {};\n    }\n    moduleStore[rowModel][module.moduleName] = module;\n  });\n  if (module.dependsOn) {\n    module.dependsOn.forEach((dependency) => _registerModule(dependency, gridId));\n  }\n}\nfunction _unRegisterGridModules(gridId) {\n  delete gridModulesMap[gridId];\n}\nfunction _isModuleRegistered(moduleName, gridId, rowModel) {\n  const isRegisteredForRowModel = (model) => !!globalModulesMap[model]?.[moduleName] || !!gridModulesMap[gridId]?.[model]?.[moduleName];\n  return isRegisteredForRowModel(rowModel) || isRegisteredForRowModel(\"all\");\n}\nfunction _areModulesGridScoped() {\n  return areGridScopedModules;\n}\nfunction _getRegisteredModules(gridId, rowModel) {\n  const gridModules = gridModulesMap[gridId] ?? {};\n  return [\n    ...Object.values(globalModulesMap[\"all\"] ?? {}),\n    ...Object.values(gridModules[\"all\"] ?? {}),\n    ...Object.values(globalModulesMap[rowModel] ?? {}),\n    ...Object.values(gridModules[rowModel] ?? {})\n  ];\n}\nfunction _getAllRegisteredModules() {\n  return new Set(allRegisteredModules);\n}\nfunction _getGridRegisteredModules(gridId, rowModel) {\n  const gridModules = gridModulesMap[gridId] ?? {};\n  return [...Object.values(gridModules[\"all\"] ?? {}), ...Object.values(gridModules[rowModel] ?? {})];\n}\nfunction _isUmd() {\n  return isUmd;\n}\nfunction _setUmd() {\n  isUmd = true;\n}\nvar ModuleRegistry = class {\n  /**\n   * @deprecated v33 Use `registerModules([module])` instead.\n   */\n  static register(module) {\n    _registerModule(module, void 0);\n  }\n  /**\n   * Globally register the given modules for all grids.\n   * @param modules - modules to register\n   */\n  static registerModules(modules) {\n    modules.forEach((module) => _registerModule(module, void 0));\n  }\n};\n\n// packages/ag-grid-community/src/context/genericContext.ts\nvar GenericContext = class {\n  constructor(params) {\n    this.beans = {};\n    this.createdBeans = [];\n    this.destroyed = false;\n    if (!params || !params.beanClasses) {\n      return;\n    }\n    this.beanDestroyComparator = params.beanDestroyComparator;\n    this.init(params);\n  }\n  init(params) {\n    for (const beanName of Object.keys(params.providedBeanInstances)) {\n      this.beans[beanName] = params.providedBeanInstances[beanName];\n    }\n    params.beanClasses.forEach((BeanClass) => {\n      const instance = new BeanClass();\n      if (instance.beanName) {\n        this.beans[instance.beanName] = instance;\n      } else {\n        console.error(`Bean ${BeanClass.name} is missing beanName`);\n      }\n      this.createdBeans.push(instance);\n    });\n    params.derivedBeans?.forEach((beanFunc) => {\n      const { beanName, bean } = beanFunc(this);\n      this.beans[beanName] = bean;\n      this.createdBeans.push(bean);\n    });\n    if (params.beanInitComparator) {\n      this.createdBeans.sort(params.beanInitComparator);\n    }\n    this.initBeans(this.createdBeans);\n  }\n  getBeanInstances() {\n    return Object.values(this.beans);\n  }\n  createBean(bean, afterPreCreateCallback) {\n    if (!bean) {\n      throw Error(\"null bean\");\n    }\n    this.initBeans([bean], afterPreCreateCallback);\n    return bean;\n  }\n  initBeans(beanInstances, afterPreCreateCallback) {\n    beanInstances.forEach((instance) => {\n      instance.preWireBeans?.(this.beans);\n      instance.wireBeans?.(this.beans);\n    });\n    beanInstances.forEach((instance) => instance.preConstruct?.());\n    if (afterPreCreateCallback) {\n      beanInstances.forEach(afterPreCreateCallback);\n    }\n    beanInstances.forEach((instance) => instance.postConstruct?.());\n  }\n  getBeans() {\n    return this.beans;\n  }\n  getBean(name) {\n    return this.beans[name];\n  }\n  destroy() {\n    if (this.destroyed) {\n      return;\n    }\n    this.destroyed = true;\n    const beanInstances = this.getBeanInstances();\n    if (this.beanDestroyComparator) {\n      beanInstances.sort(this.beanDestroyComparator);\n    }\n    this.destroyBeans(beanInstances);\n    this.beans = {};\n    this.createdBeans = [];\n  }\n  /**\n   * Destroys a bean and returns undefined to support destruction and clean up in a single line.\n   * this.dateComp = this.context.destroyBean(this.dateComp);\n   */\n  destroyBean(bean) {\n    bean?.destroy?.();\n  }\n  /**\n   * Destroys an array of beans and returns an empty array to support destruction and clean up in a single line.\n   * this.dateComps = this.context.destroyBeans(this.dateComps);\n   */\n  destroyBeans(beans) {\n    if (beans) {\n      for (let i = 0; i < beans.length; i++) {\n        this.destroyBean(beans[i]);\n      }\n    }\n    return [];\n  }\n  isDestroyed() {\n    return this.destroyed;\n  }\n};\n\n// packages/ag-grid-community/src/context/context.ts\nvar Context = class extends GenericContext {\n  init(params) {\n    this.gridId = params.gridId;\n    this.beans.context = this;\n    this.destroyCallback = params.destroyCallback;\n    super.init(params);\n  }\n  destroy() {\n    super.destroy();\n    _unRegisterGridModules(this.gridId);\n    this.destroyCallback?.();\n  }\n  getGridId() {\n    return this.gridId;\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/cssClassApplier.ts\nvar CSS_FIRST_COLUMN = \"ag-column-first\";\nvar CSS_LAST_COLUMN = \"ag-column-last\";\nfunction _getHeaderClassesFromColDef(abstractColDef, gos, column, columnGroup) {\n  if (_missing(abstractColDef)) {\n    return [];\n  }\n  return getColumnClassesFromCollDef(abstractColDef.headerClass, abstractColDef, gos, column, columnGroup);\n}\nfunction _getToolPanelClassesFromColDef(abstractColDef, gos, column, columnGroup) {\n  if (_missing(abstractColDef)) {\n    return [];\n  }\n  return getColumnClassesFromCollDef(abstractColDef.toolPanelClass, abstractColDef, gos, column, columnGroup);\n}\nfunction refreshFirstAndLastStyles(comp, column, presentedColsService) {\n  comp.addOrRemoveCssClass(CSS_FIRST_COLUMN, presentedColsService.isColAtEdge(column, \"first\"));\n  comp.addOrRemoveCssClass(CSS_LAST_COLUMN, presentedColsService.isColAtEdge(column, \"last\"));\n}\nfunction getClassParams(abstractColDef, gos, column, columnGroup) {\n  return _addGridCommonParams(gos, {\n    // bad naming, as colDef here can be a group or a column,\n    // however most people won't appreciate the difference,\n    // so keeping it as colDef to avoid confusion.\n    colDef: abstractColDef,\n    column,\n    columnGroup\n  });\n}\nfunction getColumnClassesFromCollDef(classesOrFunc, abstractColDef, gos, column, columnGroup) {\n  if (_missing(classesOrFunc)) {\n    return [];\n  }\n  let classToUse;\n  if (typeof classesOrFunc === \"function\") {\n    const params = getClassParams(abstractColDef, gos, column, columnGroup);\n    classToUse = classesOrFunc(params);\n  } else {\n    classToUse = classesOrFunc;\n  }\n  if (typeof classToUse === \"string\") {\n    return [classToUse];\n  }\n  if (Array.isArray(classToUse)) {\n    return [...classToUse];\n  }\n  return [];\n}\n\n// packages/ag-grid-community/src/misc/animationFrameService.ts\nfunction _requestAnimationFrame(beans, callback) {\n  const win = _getWindow(beans);\n  if (win.requestAnimationFrame) {\n    win.requestAnimationFrame(callback);\n  } else if (win.webkitRequestAnimationFrame) {\n    win.webkitRequestAnimationFrame(callback);\n  } else {\n    win.setTimeout(callback, 0);\n  }\n}\nvar AnimationFrameService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"animationFrameSvc\";\n    // p1 and p2 are create tasks are to do with row and cell creation.\n    // for them we want to execute according to row order, so we use\n    // TaskItem so we know what index the item is for.\n    this.createTasksP1 = { list: [], sorted: false };\n    // eg drawing back-ground of rows\n    this.createTasksP2 = { list: [], sorted: false };\n    // eg cell renderers, adding hover functionality\n    // destroy tasks are to do with row removal. they are done after row creation as the user will need to see new\n    // rows first (as blank is scrolled into view), when we remove the old rows (no longer in view) is not as\n    // important.\n    this.destroyTasks = [];\n    this.ticking = false;\n    // we need to know direction of scroll, to build up rows in the direction of\n    // the scroll. eg if user scrolls down, we extend the rows by building down.\n    this.scrollGoingDown = true;\n    this.lastPage = 0;\n    this.lastScrollTop = 0;\n    this.taskCount = 0;\n    this.cancelledTasks = /* @__PURE__ */ new Set();\n  }\n  setScrollTop(scrollTop) {\n    const { gos, pagination } = this.beans;\n    const isPaginationActive = gos.get(\"pagination\");\n    this.scrollGoingDown = scrollTop >= this.lastScrollTop;\n    if (isPaginationActive && scrollTop === 0) {\n      const currentPage = pagination?.getCurrentPage() ?? 0;\n      if (currentPage !== this.lastPage) {\n        this.lastPage = currentPage;\n        this.scrollGoingDown = true;\n      }\n    }\n    this.lastScrollTop = scrollTop;\n  }\n  postConstruct() {\n    this.active = !this.gos.get(\"suppressAnimationFrame\");\n  }\n  // this method is for our AG Grid sanity only - if animation frames are turned off,\n  // then no place in the code should be looking to add any work to be done in animation\n  // frames. this stops bugs - where some code is asking for a frame to be executed\n  // when it should not.\n  verifyAnimationFrameOn(methodName) {\n    if (this.active === false) {\n      _warn(92, { methodName });\n    }\n  }\n  createTask(task, index, list) {\n    this.verifyAnimationFrameOn(list);\n    const taskItem = { task, index, createOrder: ++this.taskCount };\n    this.addTaskToList(this[list], taskItem);\n    this.schedule();\n  }\n  cancelTask(task) {\n    this.cancelledTasks.add(task);\n  }\n  addTaskToList(taskList, task) {\n    taskList.list.push(task);\n    taskList.sorted = false;\n  }\n  sortTaskList(taskList) {\n    if (taskList.sorted) {\n      return;\n    }\n    const sortDirection = this.scrollGoingDown ? 1 : -1;\n    taskList.list.sort(\n      (a, b) => a.index !== b.index ? sortDirection * (b.index - a.index) : b.createOrder - a.createOrder\n    );\n    taskList.sorted = true;\n  }\n  addDestroyTask(task) {\n    this.verifyAnimationFrameOn(\"createTasksP3\");\n    this.destroyTasks.push(task);\n    this.schedule();\n  }\n  executeFrame(millis) {\n    this.verifyAnimationFrameOn(\"executeFrame\");\n    const p1TaskList = this.createTasksP1;\n    const p1Tasks = p1TaskList.list;\n    const p2TaskList = this.createTasksP2;\n    const p2Tasks = p2TaskList.list;\n    const destroyTasks = this.destroyTasks;\n    const frameStart = (/* @__PURE__ */ new Date()).getTime();\n    let duration = (/* @__PURE__ */ new Date()).getTime() - frameStart;\n    const noMaxMillis = millis <= 0;\n    const scrollFeature = this.beans.ctrlsSvc.getScrollFeature();\n    while (noMaxMillis || duration < millis) {\n      const gridBodyDidSomething = scrollFeature.scrollGridIfNeeded();\n      if (!gridBodyDidSomething) {\n        let task;\n        if (p1Tasks.length) {\n          this.sortTaskList(p1TaskList);\n          task = p1Tasks.pop().task;\n        } else if (p2Tasks.length) {\n          this.sortTaskList(p2TaskList);\n          task = p2Tasks.pop().task;\n        } else if (destroyTasks.length) {\n          task = destroyTasks.pop();\n        } else {\n          this.cancelledTasks.clear();\n          break;\n        }\n        if (!this.cancelledTasks.has(task)) {\n          task();\n        }\n      }\n      duration = (/* @__PURE__ */ new Date()).getTime() - frameStart;\n    }\n    if (p1Tasks.length || p2Tasks.length || destroyTasks.length) {\n      this.requestFrame();\n    } else {\n      this.ticking = false;\n    }\n  }\n  flushAllFrames() {\n    if (!this.active) {\n      return;\n    }\n    this.executeFrame(-1);\n  }\n  schedule() {\n    if (!this.active) {\n      return;\n    }\n    if (!this.ticking) {\n      this.ticking = true;\n      this.requestFrame();\n    }\n  }\n  requestFrame() {\n    const callback = this.executeFrame.bind(this, 60);\n    _requestAnimationFrame(this.beans, callback);\n  }\n  isQueueEmpty() {\n    return !this.ticking;\n  }\n};\n\n// packages/ag-grid-community/src/constants/keyCode.ts\nvar KeyCode = {\n  BACKSPACE: \"Backspace\",\n  TAB: \"Tab\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  SPACE: \" \",\n  LEFT: \"ArrowLeft\",\n  UP: \"ArrowUp\",\n  RIGHT: \"ArrowRight\",\n  DOWN: \"ArrowDown\",\n  DELETE: \"Delete\",\n  F2: \"F2\",\n  PAGE_UP: \"PageUp\",\n  PAGE_DOWN: \"PageDown\",\n  PAGE_HOME: \"Home\",\n  PAGE_END: \"End\",\n  // these should be used with `event.code` instead of `event.key`\n  // as `event.key` changes when non-latin keyboards are used\n  A: \"KeyA\",\n  C: \"KeyC\",\n  D: \"KeyD\",\n  V: \"KeyV\",\n  X: \"KeyX\",\n  Y: \"KeyY\",\n  Z: \"KeyZ\"\n};\n\n// packages/ag-grid-community/src/utils/focus.ts\nvar keyboardModeActive = false;\nvar instanceCount = 0;\nfunction addKeyboardModeEvents(doc) {\n  if (instanceCount > 0) {\n    return;\n  }\n  doc.addEventListener(\"keydown\", toggleKeyboardMode);\n  doc.addEventListener(\"mousedown\", toggleKeyboardMode);\n}\nfunction removeKeyboardModeEvents(doc) {\n  if (instanceCount > 0)\n    return;\n  doc.removeEventListener(\"keydown\", toggleKeyboardMode);\n  doc.removeEventListener(\"mousedown\", toggleKeyboardMode);\n}\nfunction toggleKeyboardMode(event) {\n  const isKeyboardActive = keyboardModeActive;\n  const isKeyboardEvent = event.type === \"keydown\";\n  if (isKeyboardEvent) {\n    if (event.ctrlKey || event.metaKey || event.altKey) {\n      return;\n    }\n  }\n  if (isKeyboardActive === isKeyboardEvent) {\n    return;\n  }\n  keyboardModeActive = isKeyboardEvent;\n}\nfunction _registerKeyboardFocusEvents(beans) {\n  const eDocument = _getDocument(beans);\n  addKeyboardModeEvents(eDocument);\n  instanceCount++;\n  return () => {\n    instanceCount--;\n    removeKeyboardModeEvents(eDocument);\n  };\n}\nfunction _isKeyboardMode() {\n  return keyboardModeActive;\n}\nfunction _addFocusableContainerListener(beans, comp, eGui) {\n  comp.addManagedElementListeners(eGui, {\n    keydown: (e) => {\n      if (!e.defaultPrevented && e.key === KeyCode.TAB) {\n        const backwards = e.shiftKey;\n        if (!_findNextFocusableElement(beans, eGui, false, backwards)) {\n          if (_focusNextGridCoreContainer(beans, backwards)) {\n            e.preventDefault();\n          }\n        }\n      }\n    }\n  });\n}\nfunction _findFocusableElements(rootNode, exclude, onlyUnmanaged = false) {\n  const focusableString = FOCUSABLE_SELECTOR;\n  let excludeString = FOCUSABLE_EXCLUDE;\n  if (exclude) {\n    excludeString += \", \" + exclude;\n  }\n  if (onlyUnmanaged) {\n    excludeString += ', [tabindex=\"-1\"]';\n  }\n  const nodes = Array.prototype.slice.apply(rootNode.querySelectorAll(focusableString)).filter((node) => {\n    return _isVisible(node);\n  });\n  const excludeNodes = Array.prototype.slice.apply(rootNode.querySelectorAll(excludeString));\n  if (!excludeNodes.length) {\n    return nodes;\n  }\n  const diff = (a, b) => a.filter((element) => b.indexOf(element) === -1);\n  return diff(nodes, excludeNodes);\n}\nfunction _focusInto(rootNode, up = false, onlyUnmanaged = false, excludeTabGuards = false) {\n  const focusableElements = _findFocusableElements(\n    rootNode,\n    excludeTabGuards ? \".ag-tab-guard\" : null,\n    onlyUnmanaged\n  );\n  const toFocus = up ? _last(focusableElements) : focusableElements[0];\n  if (toFocus) {\n    toFocus.focus({ preventScroll: true });\n    return true;\n  }\n  return false;\n}\nfunction _findNextFocusableElement(beans, rootNode, onlyManaged, backwards) {\n  const focusable = _findFocusableElements(rootNode, onlyManaged ? ':not([tabindex=\"-1\"])' : null);\n  const activeEl = _getActiveDomElement(beans);\n  let currentIndex;\n  if (onlyManaged) {\n    currentIndex = focusable.findIndex((el) => el.contains(activeEl));\n  } else {\n    currentIndex = focusable.indexOf(activeEl);\n  }\n  const nextIndex = currentIndex + (backwards ? -1 : 1);\n  if (nextIndex < 0 || nextIndex >= focusable.length) {\n    return null;\n  }\n  return focusable[nextIndex];\n}\nfunction _findTabbableParent(node, limit = 5) {\n  let counter = 0;\n  while (node && _getTabIndex(node) === null && ++counter <= limit) {\n    node = node.parentElement;\n  }\n  if (_getTabIndex(node) === null) {\n    return null;\n  }\n  return node;\n}\nfunction _focusGridInnerElement(beans, fromBottom) {\n  return beans.ctrlsSvc.get(\"gridCtrl\").focusInnerElement(fromBottom);\n}\nfunction _isHeaderFocusSuppressed(beans) {\n  return beans.gos.get(\"suppressHeaderFocus\") || !!beans.overlays?.isExclusive();\n}\nfunction _isCellFocusSuppressed(beans) {\n  return beans.gos.get(\"suppressCellFocus\") || !!beans.overlays?.isExclusive();\n}\nfunction _focusNextGridCoreContainer(beans, backwards, forceOut = false) {\n  const gridCtrl = beans.ctrlsSvc.get(\"gridCtrl\");\n  if (!forceOut && gridCtrl.focusNextInnerContainer(backwards)) {\n    return true;\n  }\n  if (forceOut || !backwards && !gridCtrl.isDetailGrid()) {\n    gridCtrl.forceFocusOutOfContainer(backwards);\n  }\n  return false;\n}\n\n// packages/ag-grid-community/src/rendering/cell/cellKeyboardListenerFeature.ts\nfunction _isDeleteKey(key, alwaysReturnFalseOnBackspace = false) {\n  if (key === KeyCode.DELETE) {\n    return true;\n  }\n  if (!alwaysReturnFalseOnBackspace && key === KeyCode.BACKSPACE) {\n    return _isMacOsUserAgent();\n  }\n  return false;\n}\nvar CellKeyboardListenerFeature = class extends BeanStub {\n  constructor(cellCtrl, beans, rowNode, rowCtrl) {\n    super();\n    this.cellCtrl = cellCtrl;\n    this.rowNode = rowNode;\n    this.rowCtrl = rowCtrl;\n    this.beans = beans;\n  }\n  init() {\n    this.eGui = this.cellCtrl.eGui;\n  }\n  onKeyDown(event) {\n    const key = event.key;\n    switch (key) {\n      case KeyCode.ENTER:\n        this.onEnterKeyDown(event);\n        break;\n      case KeyCode.F2:\n        this.onF2KeyDown(event);\n        break;\n      case KeyCode.ESCAPE:\n        this.onEscapeKeyDown(event);\n        break;\n      case KeyCode.TAB:\n        this.onTabKeyDown(event);\n        break;\n      case KeyCode.BACKSPACE:\n      case KeyCode.DELETE:\n        this.onBackspaceOrDeleteKeyDown(key, event);\n        break;\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n      case KeyCode.RIGHT:\n      case KeyCode.LEFT:\n        this.onNavigationKeyDown(event, key);\n        break;\n    }\n  }\n  onNavigationKeyDown(event, key) {\n    if (this.cellCtrl.editing) {\n      return;\n    }\n    if (event.shiftKey && this.cellCtrl.isRangeSelectionEnabled()) {\n      this.onShiftRangeSelect(event);\n    } else {\n      const currentCellPosition = this.cellCtrl.getFocusedCellPosition();\n      this.beans.navigation?.navigateToNextCell(event, key, currentCellPosition, true);\n    }\n    event.preventDefault();\n  }\n  onShiftRangeSelect(event) {\n    const { rangeSvc, navigation } = this.beans;\n    if (!rangeSvc) {\n      return;\n    }\n    const endCell = rangeSvc.extendLatestRangeInDirection(event);\n    if (endCell) {\n      navigation?.ensureCellVisible(endCell);\n    }\n  }\n  onTabKeyDown(event) {\n    this.beans.navigation?.onTabKeyDown(this.cellCtrl, event);\n  }\n  onBackspaceOrDeleteKeyDown(key, event) {\n    const { cellCtrl, beans, rowNode } = this;\n    const { gos, rangeSvc, eventSvc } = beans;\n    if (cellCtrl.editing) {\n      return;\n    }\n    eventSvc.dispatchEvent({ type: \"keyShortcutChangedCellStart\" });\n    if (_isDeleteKey(key, gos.get(\"enableCellEditingOnBackspace\"))) {\n      if (rangeSvc && _isCellSelectionEnabled(gos)) {\n        rangeSvc.clearCellRangeCellValues({ dispatchWrapperEvents: true, wrapperEventSource: \"deleteKey\" });\n      } else if (cellCtrl.isCellEditable()) {\n        const { column } = cellCtrl;\n        const emptyValue = this.beans.valueSvc.getDeleteValue(column, rowNode);\n        rowNode.setDataValue(column, emptyValue, \"cellClear\");\n      }\n    } else {\n      beans.editSvc?.startRowOrCellEdit(cellCtrl, key, event);\n    }\n    eventSvc.dispatchEvent({ type: \"keyShortcutChangedCellEnd\" });\n  }\n  onEnterKeyDown(e) {\n    const { cellCtrl, beans } = this;\n    if (cellCtrl.editing || this.rowCtrl.editing) {\n      cellCtrl.stopEditingAndFocus(false, e.shiftKey);\n    } else {\n      if (beans.gos.get(\"enterNavigatesVertically\")) {\n        const key = e.shiftKey ? KeyCode.UP : KeyCode.DOWN;\n        beans.navigation?.navigateToNextCell(null, key, cellCtrl.cellPosition, false);\n      } else {\n        beans.editSvc?.startRowOrCellEdit(cellCtrl, KeyCode.ENTER, e);\n        if (cellCtrl.editing) {\n          e.preventDefault();\n        }\n      }\n    }\n  }\n  onF2KeyDown(event) {\n    const { cellCtrl, beans } = this;\n    if (!cellCtrl.editing) {\n      beans.editSvc?.startRowOrCellEdit(cellCtrl, KeyCode.F2, event);\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onEscapeKeyDown(event) {\n    const { cellCtrl, beans } = this;\n    if (cellCtrl.editing) {\n      beans.editSvc?.stopRowOrCellEdit(cellCtrl, true);\n      cellCtrl.focusCell(true);\n    }\n  }\n  processCharacter(event) {\n    const eventTarget = event.target;\n    const eventOnChildComponent = eventTarget !== this.eGui;\n    if (eventOnChildComponent || this.cellCtrl.editing) {\n      return;\n    }\n    const key = event.key;\n    if (key === KeyCode.SPACE) {\n      this.onSpaceKeyDown(event);\n    } else {\n      if (this.beans.editSvc?.startRowOrCellEdit(this.cellCtrl, key, event)) {\n        event.preventDefault();\n      }\n    }\n  }\n  onSpaceKeyDown(event) {\n    const { gos } = this.beans;\n    if (!this.cellCtrl.editing && _isRowSelection(gos)) {\n      this.beans.selectionSvc?.handleSelectionEvent(event, this.rowNode, \"spaceKey\");\n    }\n    event.preventDefault();\n  }\n  destroy() {\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cell/cellMouseListenerFeature.ts\nvar CellMouseListenerFeature = class extends BeanStub {\n  constructor(cellCtrl, beans, column) {\n    super();\n    this.cellCtrl = cellCtrl;\n    this.column = column;\n    this.beans = beans;\n  }\n  onMouseEvent(eventName, mouseEvent) {\n    if (_isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    switch (eventName) {\n      case \"click\":\n        this.onCellClicked(mouseEvent);\n        break;\n      case \"mousedown\":\n      case \"touchstart\":\n        this.onMouseDown(mouseEvent);\n        break;\n      case \"dblclick\":\n        this.onCellDoubleClicked(mouseEvent);\n        break;\n      case \"mouseout\":\n        this.onMouseOut(mouseEvent);\n        break;\n      case \"mouseover\":\n        this.onMouseOver(mouseEvent);\n        break;\n    }\n  }\n  onCellClicked(mouseEvent) {\n    if (this.beans.touchSvc?.handleCellDoubleClick(this, mouseEvent)) {\n      return;\n    }\n    const { eventSvc, rangeSvc, gos, editSvc } = this.beans;\n    const isMultiKey = mouseEvent.ctrlKey || mouseEvent.metaKey;\n    if (rangeSvc && isMultiKey) {\n      if (rangeSvc.getCellRangeCount(this.cellCtrl.cellPosition) > 1) {\n        rangeSvc.intersectLastRange(true);\n      }\n    }\n    const cellClickedEvent = this.cellCtrl.createEvent(mouseEvent, \"cellClicked\");\n    eventSvc.dispatchEvent(cellClickedEvent);\n    const colDef = this.column.getColDef();\n    if (colDef.onCellClicked) {\n      window.setTimeout(() => {\n        this.beans.frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellClicked(cellClickedEvent);\n        });\n      }, 0);\n    }\n    const editOnSingleClick = (gos.get(\"singleClickEdit\") || colDef.singleClickEdit) && !gos.get(\"suppressClickEdit\");\n    if (editOnSingleClick && !(mouseEvent.shiftKey && rangeSvc?.getCellRanges().length != 0)) {\n      editSvc?.startRowOrCellEdit(this.cellCtrl, void 0, mouseEvent);\n    }\n  }\n  onCellDoubleClicked(mouseEvent) {\n    const { column, beans, cellCtrl } = this;\n    const { eventSvc, frameworkOverrides, gos, editSvc } = beans;\n    const colDef = column.getColDef();\n    const cellDoubleClickedEvent = cellCtrl.createEvent(mouseEvent, \"cellDoubleClicked\");\n    eventSvc.dispatchEvent(cellDoubleClickedEvent);\n    if (typeof colDef.onCellDoubleClicked === \"function\") {\n      window.setTimeout(() => {\n        frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellDoubleClicked(cellDoubleClickedEvent);\n        });\n      }, 0);\n    }\n    const editOnDoubleClick = !gos.get(\"singleClickEdit\") && !gos.get(\"suppressClickEdit\");\n    if (editOnDoubleClick) {\n      editSvc?.startRowOrCellEdit(cellCtrl, null, mouseEvent);\n    }\n  }\n  onMouseDown(mouseEvent) {\n    const { ctrlKey, metaKey, shiftKey } = mouseEvent;\n    const target = mouseEvent.target;\n    const { cellCtrl, beans } = this;\n    const { eventSvc, rangeSvc, rowNumbersSvc, focusSvc, gos } = beans;\n    if (this.isRightClickInExistingRange(mouseEvent)) {\n      return;\n    }\n    const hasRanges = rangeSvc && !rangeSvc.isEmpty();\n    const containsWidget = this.containsWidget(target);\n    const { cellPosition } = cellCtrl;\n    const isRowNumberColumn = isRowNumberCol(cellPosition.column);\n    if (rowNumbersSvc && isRowNumberColumn && !rowNumbersSvc.handleMouseDownOnCell(cellPosition, mouseEvent)) {\n      if (rangeSvc) {\n        mouseEvent.preventDefault();\n      }\n      mouseEvent.stopImmediatePropagation();\n      return;\n    }\n    if (!shiftKey || !hasRanges) {\n      const isEnableCellTextSelection = gos.get(\"enableCellTextSelection\");\n      const shouldFocus = isEnableCellTextSelection && mouseEvent.defaultPrevented;\n      const forceBrowserFocus = (_isBrowserSafari() || shouldFocus) && !cellCtrl.editing && !_isFocusableFormField(target) && !containsWidget;\n      cellCtrl.focusCell(forceBrowserFocus);\n    }\n    if (shiftKey && hasRanges && !focusSvc.isCellFocused(cellPosition)) {\n      mouseEvent.preventDefault();\n      const focusedCellPosition = focusSvc.getFocusedCell();\n      if (focusedCellPosition) {\n        const { column, rowIndex, rowPinned } = focusedCellPosition;\n        const focusedRowCtrl = beans.rowRenderer.getRowByPosition({ rowIndex, rowPinned });\n        const focusedCellCtrl = focusedRowCtrl?.getCellCtrl(column);\n        if (focusedCellCtrl?.editing) {\n          focusedCellCtrl.stopEditing();\n        }\n        focusSvc.setFocusedCell({\n          column,\n          rowIndex,\n          rowPinned,\n          forceBrowserFocus: true,\n          preventScrollOnBrowserFocus: true\n        });\n      }\n    }\n    if (containsWidget) {\n      return;\n    }\n    if (rangeSvc) {\n      if (isRowNumberColumn) {\n        mouseEvent.preventDefault();\n      }\n      if (shiftKey) {\n        rangeSvc.extendLatestRangeToCell(cellPosition);\n      } else {\n        const isMultiKey = ctrlKey || metaKey;\n        rangeSvc.setRangeToCell(cellPosition, isMultiKey);\n      }\n    }\n    eventSvc.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, \"cellMouseDown\"));\n  }\n  isRightClickInExistingRange(mouseEvent) {\n    const { rangeSvc } = this.beans;\n    if (rangeSvc) {\n      const cellInRange = rangeSvc.isCellInAnyRange(this.cellCtrl.cellPosition);\n      const isRightClick = mouseEvent.button === 2 || mouseEvent.ctrlKey && this.beans.gos.get(\"allowContextMenuWithControlKey\");\n      if (cellInRange && isRightClick) {\n        return true;\n      }\n    }\n    return false;\n  }\n  containsWidget(target) {\n    return _isElementChildOfClass(target, \"ag-selection-checkbox\", 3) || _isElementChildOfClass(target, \"ag-drag-handle\", 3);\n  }\n  onMouseOut(mouseEvent) {\n    if (this.mouseStayingInsideCell(mouseEvent)) {\n      return;\n    }\n    const { eventSvc, colHover } = this.beans;\n    eventSvc.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, \"cellMouseOut\"));\n    colHover?.clearMouseOver();\n  }\n  onMouseOver(mouseEvent) {\n    if (this.mouseStayingInsideCell(mouseEvent)) {\n      return;\n    }\n    const { eventSvc, colHover } = this.beans;\n    eventSvc.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, \"cellMouseOver\"));\n    colHover?.setMouseOver([this.column]);\n  }\n  mouseStayingInsideCell(e) {\n    if (!e.target || !e.relatedTarget) {\n      return false;\n    }\n    const eCell = this.cellCtrl.eGui;\n    const cellContainsTarget = eCell.contains(e.target);\n    const cellContainsRelatedTarget = eCell.contains(e.relatedTarget);\n    return cellContainsTarget && cellContainsRelatedTarget;\n  }\n  destroy() {\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cell/cellPositionFeature.ts\nvar CellPositionFeature = class extends BeanStub {\n  constructor(cellCtrl, beans) {\n    super();\n    this.cellCtrl = cellCtrl;\n    this.beans = beans;\n    this.column = cellCtrl.column;\n    this.rowNode = cellCtrl.rowNode;\n  }\n  setupRowSpan() {\n    this.rowSpan = this.column.getRowSpan(this.rowNode);\n    this.addManagedListeners(this.beans.eventSvc, { newColumnsLoaded: () => this.onNewColumnsLoaded() });\n  }\n  init() {\n    this.eSetLeft = this.cellCtrl.getRootElement();\n    this.eContent = this.cellCtrl.eGui;\n    const cellSpan = this.cellCtrl.getCellSpan();\n    if (!cellSpan) {\n      this.setupColSpan();\n      this.setupRowSpan();\n    }\n    this.onLeftChanged();\n    this.onWidthChanged();\n    if (!cellSpan) {\n      this._legacyApplyRowSpan();\n    }\n    if (cellSpan) {\n      this.refreshSpanHeight(cellSpan);\n      this.addManagedListeners(this.beans.eventSvc, {\n        modelUpdated: this.refreshSpanHeight.bind(this, cellSpan),\n        recalculateRowBounds: this.refreshSpanHeight.bind(this, cellSpan)\n      });\n    }\n  }\n  refreshSpanHeight(cellSpan) {\n    const spanHeight = cellSpan.getCellHeight();\n    if (spanHeight != null) {\n      this.eContent.style.height = `${spanHeight}px`;\n    }\n  }\n  onNewColumnsLoaded() {\n    const rowSpan = this.column.getRowSpan(this.rowNode);\n    if (this.rowSpan === rowSpan) {\n      return;\n    }\n    this.rowSpan = rowSpan;\n    this._legacyApplyRowSpan(true);\n  }\n  onDisplayColumnsChanged() {\n    const colsSpanning = this.getColSpanningList();\n    if (!_areEqual(this.colsSpanning, colsSpanning)) {\n      this.colsSpanning = colsSpanning;\n      this.onWidthChanged();\n      this.onLeftChanged();\n    }\n  }\n  setupColSpan() {\n    if (this.column.getColDef().colSpan == null) {\n      return;\n    }\n    this.colsSpanning = this.getColSpanningList();\n    this.addManagedListeners(this.beans.eventSvc, {\n      // because we are col spanning, a reorder of the cols can change what cols we are spanning over\n      displayedColumnsChanged: this.onDisplayColumnsChanged.bind(this),\n      // because we are spanning over multiple cols, we check for width any time any cols width changes.\n      // this is expensive - really we should be explicitly checking only the cols we are spanning over\n      // instead of every col, however it would be tricky code to track the cols we are spanning over, so\n      // because hardly anyone will be using colSpan, am favouring this easier way for more maintainable code.\n      displayedColumnsWidthChanged: this.onWidthChanged.bind(this)\n    });\n  }\n  onWidthChanged() {\n    if (!this.eContent) {\n      return;\n    }\n    const width = this.getCellWidth();\n    this.eContent.style.width = `${width}px`;\n  }\n  getCellWidth() {\n    if (!this.colsSpanning) {\n      return this.column.getActualWidth();\n    }\n    return this.colsSpanning.reduce((width, col) => width + col.getActualWidth(), 0);\n  }\n  getColSpanningList() {\n    const { column, rowNode } = this;\n    const colSpan = column.getColSpan(rowNode);\n    const colsSpanning = [];\n    if (colSpan === 1) {\n      colsSpanning.push(column);\n    } else {\n      let pointer = column;\n      const pinned = column.getPinned();\n      for (let i = 0; pointer && i < colSpan; i++) {\n        colsSpanning.push(pointer);\n        pointer = this.beans.visibleCols.getColAfter(pointer);\n        if (!pointer || _missing(pointer)) {\n          break;\n        }\n        if (pinned !== pointer.getPinned()) {\n          break;\n        }\n      }\n    }\n    return colsSpanning;\n  }\n  onLeftChanged() {\n    if (!this.eSetLeft) {\n      return;\n    }\n    const left = this.modifyLeftForPrintLayout(this.getCellLeft());\n    this.eSetLeft.style.left = left + \"px\";\n  }\n  getCellLeft() {\n    let mostLeftCol;\n    if (this.beans.gos.get(\"enableRtl\") && this.colsSpanning) {\n      mostLeftCol = _last(this.colsSpanning);\n    } else {\n      mostLeftCol = this.column;\n    }\n    return mostLeftCol.getLeft();\n  }\n  modifyLeftForPrintLayout(leftPosition) {\n    if (!this.cellCtrl.printLayout || this.column.getPinned() === \"left\") {\n      return leftPosition;\n    }\n    const { visibleCols } = this.beans;\n    const leftWidth = visibleCols.getColsLeftWidth();\n    if (this.column.getPinned() === \"right\") {\n      const bodyWidth = visibleCols.bodyWidth;\n      return leftWidth + bodyWidth + (leftPosition || 0);\n    }\n    return leftWidth + (leftPosition || 0);\n  }\n  _legacyApplyRowSpan(force) {\n    if (this.rowSpan === 1 && !force) {\n      return;\n    }\n    const singleRowHeight = _getRowHeightAsNumber(this.beans);\n    const totalRowHeight = singleRowHeight * this.rowSpan;\n    this.eContent.style.height = `${totalRowHeight}px`;\n    this.eContent.style.zIndex = \"1\";\n  }\n  // overriding to make public, as we don't dispose this bean via context\n  destroy() {\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cell/cellCtrl.ts\nvar CSS_CELL = \"ag-cell\";\nvar CSS_AUTO_HEIGHT = \"ag-cell-auto-height\";\nvar CSS_NORMAL_HEIGHT = \"ag-cell-normal-height\";\nvar CSS_CELL_FOCUS = \"ag-cell-focus\";\nvar CSS_CELL_FIRST_RIGHT_PINNED = \"ag-cell-first-right-pinned\";\nvar CSS_CELL_LAST_LEFT_PINNED = \"ag-cell-last-left-pinned\";\nvar CSS_CELL_NOT_INLINE_EDITING = \"ag-cell-not-inline-editing\";\nvar CSS_CELL_WRAP_TEXT = \"ag-cell-wrap-text\";\nvar DOM_DATA_KEY_CELL_CTRL = \"cellCtrl\";\nfunction _getCellCtrlForEventTarget(gos, eventTarget) {\n  return _getCtrlForEventTarget(gos, eventTarget, DOM_DATA_KEY_CELL_CTRL);\n}\nvar instanceIdSequence2 = 0;\nvar CellCtrl = class extends BeanStub {\n  constructor(column, rowNode, beans, rowCtrl) {\n    super();\n    this.column = column;\n    this.rowNode = rowNode;\n    this.rowCtrl = rowCtrl;\n    this.rangeFeature = void 0;\n    this.positionFeature = void 0;\n    this.customStyleFeature = void 0;\n    this.tooltipFeature = void 0;\n    this.mouseListener = void 0;\n    this.keyboardListener = void 0;\n    this.suppressRefreshCell = false;\n    this.onCompAttachedFuncs = [];\n    this.onEditorAttachedFuncs = [];\n    this.beans = beans;\n    const { colId, colIdSanitised } = column;\n    this.instanceId = colId + \"-\" + instanceIdSequence2++;\n    this.colIdSanitised = colIdSanitised;\n    this.createCellPosition();\n    this.updateAndFormatValue(false);\n  }\n  shouldRestoreFocus() {\n    return this.beans.focusSvc.shouldRestoreFocus(this.cellPosition);\n  }\n  onFocusOut() {\n    this.beans.focusSvc.clearRestoreFocus();\n  }\n  addFeatures() {\n    const { beans } = this;\n    this.positionFeature = new CellPositionFeature(this, beans);\n    this.customStyleFeature = beans.cellStyles?.createCellCustomStyleFeature(this, beans);\n    this.mouseListener = new CellMouseListenerFeature(this, beans, this.column);\n    this.keyboardListener = new CellKeyboardListenerFeature(this, beans, this.rowNode, this.rowCtrl);\n    if (this.column.isTooltipEnabled()) {\n      this.enableTooltipFeature();\n    }\n    const { rangeSvc } = beans;\n    const cellSelectionEnabled = rangeSvc && _isCellSelectionEnabled(beans.gos);\n    if (cellSelectionEnabled) {\n      this.rangeFeature = rangeSvc.createCellRangeFeature(beans, this);\n    }\n  }\n  isCellSpanning() {\n    return false;\n  }\n  getCellSpan() {\n    return void 0;\n  }\n  removeFeatures() {\n    const context = this.beans.context;\n    this.positionFeature = context.destroyBean(this.positionFeature);\n    this.customStyleFeature = context.destroyBean(this.customStyleFeature);\n    this.mouseListener = context.destroyBean(this.mouseListener);\n    this.keyboardListener = context.destroyBean(this.keyboardListener);\n    this.rangeFeature = context.destroyBean(this.rangeFeature);\n    this.disableTooltipFeature();\n  }\n  enableTooltipFeature(value, shouldDisplayTooltip) {\n    this.tooltipFeature = this.beans.tooltipSvc?.enableCellTooltipFeature(this, value, shouldDisplayTooltip);\n  }\n  disableTooltipFeature() {\n    this.tooltipFeature = this.beans.context.destroyBean(this.tooltipFeature);\n  }\n  setComp(comp, eCell, _eWrapper, eCellWrapper, printLayout, startEditing, compBean) {\n    this.comp = comp;\n    this.eGui = eCell;\n    this.printLayout = printLayout;\n    compBean ?? (compBean = this);\n    this.addDomData(compBean);\n    this.addFeatures();\n    compBean.addDestroyFunc(() => this.removeFeatures());\n    this.onSuppressCellFocusChanged(this.beans.gos.get(\"suppressCellFocus\"));\n    this.onCellFocused(this.focusEventToRestore);\n    this.applyStaticCssClasses();\n    this.setWrapText();\n    this.onFirstRightPinnedChanged();\n    this.onLastLeftPinnedChanged();\n    this.onColumnHover();\n    this.setupControlComps();\n    this.setupAutoHeight(eCellWrapper, compBean);\n    this.refreshFirstAndLastStyles();\n    this.refreshAriaColIndex();\n    this.positionFeature?.init();\n    this.customStyleFeature?.setComp(comp);\n    this.tooltipFeature?.refreshTooltip();\n    this.keyboardListener?.init();\n    this.rangeFeature?.setComp(comp);\n    if (startEditing && this.isCellEditable()) {\n      this.beans.editSvc?.startEditing(this);\n    } else {\n      this.showValue(false, true);\n    }\n    if (this.onCompAttachedFuncs.length) {\n      this.onCompAttachedFuncs.forEach((func) => func());\n      this.onCompAttachedFuncs = [];\n    }\n  }\n  setupAutoHeight(eCellWrapper, compBean) {\n    this.isAutoHeight = this.beans.rowAutoHeight?.setupCellAutoHeight(this, eCellWrapper, compBean) ?? false;\n  }\n  getCellAriaRole() {\n    return this.column.getColDef().cellAriaRole ?? \"gridcell\";\n  }\n  isCellRenderer() {\n    const colDef = this.column.getColDef();\n    return colDef.cellRenderer != null || colDef.cellRendererSelector != null;\n  }\n  getValueToDisplay() {\n    return this.valueFormatted ?? this.value;\n  }\n  showValue(forceNewCellRendererInstance, skipRangeHandleRefresh) {\n    const { beans, column, rowNode, rangeFeature } = this;\n    const { userCompFactory } = beans;\n    const valueToDisplay = this.getValueToDisplay();\n    let compDetails;\n    const isSsrmLoading = rowNode.stub && rowNode.groupData?.[column.getId()] == null;\n    if (isSsrmLoading) {\n      const params = this.createCellRendererParams();\n      compDetails = _getLoadingCellRendererDetails(userCompFactory, column.getColDef(), params);\n    } else if (this.isCellRenderer()) {\n      const params = this.createCellRendererParams();\n      compDetails = _getCellRendererDetails(userCompFactory, column.getColDef(), params);\n    }\n    this.comp.setRenderDetails(compDetails, valueToDisplay, forceNewCellRendererInstance);\n    if (!skipRangeHandleRefresh && rangeFeature) {\n      _requestAnimationFrame(beans, () => rangeFeature?.refreshHandle());\n    }\n  }\n  setupControlComps() {\n    const colDef = this.column.getColDef();\n    this.includeSelection = this.isIncludeControl(this.isCheckboxSelection(colDef));\n    this.includeRowDrag = this.isIncludeControl(colDef.rowDrag);\n    this.includeDndSource = this.isIncludeControl(colDef.dndSource);\n    this.comp.setIncludeSelection(this.includeSelection);\n    this.comp.setIncludeDndSource(this.includeDndSource);\n    this.comp.setIncludeRowDrag(this.includeRowDrag);\n  }\n  isForceWrapper() {\n    const forceWrapper = this.beans.gos.get(\"enableCellTextSelection\") || this.column.isAutoHeight();\n    return forceWrapper;\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  isIncludeControl(value) {\n    const rowNodePinned = this.rowNode.rowPinned != null;\n    const isFunc = typeof value === \"function\";\n    const res = rowNodePinned ? false : isFunc || value === true;\n    return res;\n  }\n  isCheckboxSelection(colDef) {\n    const { rowSelection } = this.beans.gridOptions;\n    return colDef.checkboxSelection || isColumnSelectionCol(this.column) && rowSelection && typeof rowSelection !== \"string\" && _getCheckboxes(rowSelection);\n  }\n  refreshShouldDestroy() {\n    const colDef = this.column.getColDef();\n    const selectionChanged = this.includeSelection != this.isIncludeControl(this.isCheckboxSelection(colDef));\n    const rowDragChanged = this.includeRowDrag != this.isIncludeControl(colDef.rowDrag);\n    const dndSourceChanged = this.includeDndSource != this.isIncludeControl(colDef.dndSource);\n    const autoHeightChanged = this.isAutoHeight != this.column.isAutoHeight();\n    return selectionChanged || rowDragChanged || dndSourceChanged || autoHeightChanged;\n  }\n  onPopupEditorClosed() {\n    if (!this.editing) {\n      return;\n    }\n    this.stopEditingAndFocus();\n  }\n  /**\n   * Ends the Cell Editing\n   * @param cancel `True` if the edit process is being canceled.\n   * @returns `True` if the value of the `GridCell` has been updated, otherwise `False`.\n   */\n  stopEditing(cancel = false) {\n    return this.beans.editSvc?.stopEditing(this, cancel) ?? false;\n  }\n  createCellRendererParams() {\n    const {\n      value,\n      valueFormatted,\n      column,\n      rowNode,\n      comp,\n      eGui,\n      beans: { valueSvc, gos }\n    } = this;\n    const res = _addGridCommonParams(gos, {\n      value,\n      valueFormatted,\n      getValue: () => valueSvc.getValueForDisplay(column, rowNode),\n      setValue: (value2) => valueSvc.setValue(rowNode, column, value2),\n      formatValue: this.formatValue.bind(this),\n      data: rowNode.data,\n      node: rowNode,\n      pinned: column.getPinned(),\n      colDef: column.getColDef(),\n      column,\n      refreshCell: this.refreshCell.bind(this),\n      eGridCell: eGui,\n      eParentOfValue: comp.getParentOfValue(),\n      registerRowDragger: (rowDraggerElement, dragStartPixels, value2, suppressVisibilityChange) => this.registerRowDragger(rowDraggerElement, dragStartPixels, suppressVisibilityChange),\n      setTooltip: (value2, shouldDisplayTooltip) => {\n        gos.assertModuleRegistered(\"Tooltip\", 3);\n        if (this.tooltipFeature) {\n          this.disableTooltipFeature();\n        }\n        this.enableTooltipFeature(value2, shouldDisplayTooltip);\n        this.tooltipFeature?.refreshTooltip();\n      }\n    });\n    return res;\n  }\n  onCellChanged(event) {\n    const eventImpactsThisCell = event.column === this.column;\n    if (eventImpactsThisCell) {\n      this.refreshCell({});\n    }\n  }\n  refreshOrDestroyCell(params) {\n    if (this.refreshShouldDestroy()) {\n      this.rowCtrl?.recreateCell(this);\n    } else {\n      this.refreshCell(params);\n    }\n  }\n  // + stop editing {forceRefresh: true, suppressFlash: true}\n  // + event cellChanged {}\n  // + cellRenderer.params.refresh() {} -> method passes 'as is' to the cellRenderer, so params could be anything\n  // + rowCtrl: event dataChanged {suppressFlash: !update, newData: !update}\n  // + rowCtrl: api refreshCells() {animate: true/false}\n  // + rowRenderer: api softRefreshView() {}\n  refreshCell(params) {\n    if (this.suppressRefreshCell || this.editing) {\n      return;\n    }\n    const colDef = this.column.getColDef();\n    const newData = params != null && !!params.newData;\n    const suppressFlash = params != null && !!params.suppressFlash;\n    const noValueProvided = colDef.field == null && colDef.valueGetter == null && colDef.showRowGroup == null;\n    const forceRefresh = params && params.forceRefresh || noValueProvided || newData;\n    const isCellCompReady = !!this.comp;\n    const valuesDifferent = this.updateAndFormatValue(isCellCompReady);\n    const dataNeedsUpdating = forceRefresh || valuesDifferent;\n    if (!isCellCompReady) {\n      return;\n    }\n    if (dataNeedsUpdating) {\n      this.showValue(newData, false);\n      const processingFilterChange = this.beans.filterManager?.isSuppressFlashingCellsBecauseFiltering();\n      const flashCell = !suppressFlash && !processingFilterChange && colDef.enableCellChangeFlash;\n      if (flashCell) {\n        this.beans.cellFlashSvc?.flashCell(this);\n      }\n      this.customStyleFeature?.applyUserStyles();\n      this.customStyleFeature?.applyClassesFromColDef();\n    }\n    this.tooltipFeature?.refreshTooltip();\n    this.customStyleFeature?.applyCellClassRules();\n  }\n  // cell editors call this, when they want to stop for reasons other\n  // than what we pick up on. eg selecting from a dropdown ends editing.\n  stopEditingAndFocus(suppressNavigateAfterEdit = false, shiftKey = false) {\n    this.beans.editSvc?.stopEditingAndFocus(this, suppressNavigateAfterEdit, shiftKey);\n  }\n  isCellEditable() {\n    return this.column.isCellEditable(this.rowNode);\n  }\n  formatValue(value) {\n    return this.callValueFormatter(value) ?? value;\n  }\n  callValueFormatter(value) {\n    return this.beans.valueSvc.formatValue(this.column, this.rowNode, value);\n  }\n  updateAndFormatValue(compareValues) {\n    const oldValue = this.value;\n    const oldValueFormatted = this.valueFormatted;\n    this.value = this.beans.valueSvc.getValueForDisplay(this.column, this.rowNode);\n    this.valueFormatted = this.callValueFormatter(this.value);\n    if (compareValues) {\n      return !this.valuesAreEqual(oldValue, this.value) || this.valueFormatted != oldValueFormatted;\n    }\n    return true;\n  }\n  valuesAreEqual(val1, val2) {\n    const colDef = this.column.getColDef();\n    return colDef.equals ? colDef.equals(val1, val2) : val1 === val2;\n  }\n  addDomData(compBean) {\n    const element = this.eGui;\n    _setDomData(this.beans.gos, element, DOM_DATA_KEY_CELL_CTRL, this);\n    compBean.addDestroyFunc(() => _setDomData(this.beans.gos, element, DOM_DATA_KEY_CELL_CTRL, null));\n  }\n  createEvent(domEvent, eventType) {\n    const { rowNode, column, value, beans } = this;\n    const event = _addGridCommonParams(beans.gos, {\n      type: eventType,\n      node: rowNode,\n      data: rowNode.data,\n      value,\n      column,\n      colDef: column.getColDef(),\n      rowPinned: rowNode.rowPinned,\n      event: domEvent,\n      rowIndex: rowNode.rowIndex\n    });\n    return event;\n  }\n  processCharacter(event) {\n    this.keyboardListener?.processCharacter(event);\n  }\n  onKeyDown(event) {\n    this.keyboardListener?.onKeyDown(event);\n  }\n  onMouseEvent(eventName, mouseEvent) {\n    this.mouseListener?.onMouseEvent(eventName, mouseEvent);\n  }\n  getColSpanningList() {\n    return this.positionFeature.getColSpanningList();\n  }\n  onLeftChanged() {\n    if (!this.comp) {\n      return;\n    }\n    this.positionFeature?.onLeftChanged();\n  }\n  onDisplayedColumnsChanged() {\n    if (!this.eGui) {\n      return;\n    }\n    this.refreshAriaColIndex();\n    this.refreshFirstAndLastStyles();\n  }\n  refreshFirstAndLastStyles() {\n    const { comp, column, beans } = this;\n    refreshFirstAndLastStyles(comp, column, beans.visibleCols);\n  }\n  refreshAriaColIndex() {\n    const colIdx = this.beans.visibleCols.getAriaColIndex(this.column);\n    _setAriaColIndex(this.eGui, colIdx);\n  }\n  onWidthChanged() {\n    return this.positionFeature?.onWidthChanged();\n  }\n  getRowPosition() {\n    const { rowIndex, rowPinned } = this.cellPosition;\n    return {\n      rowIndex,\n      rowPinned\n    };\n  }\n  updateRangeBordersIfRangeCount() {\n    if (!this.comp) {\n      return;\n    }\n    this.rangeFeature?.updateRangeBordersIfRangeCount();\n  }\n  onCellSelectionChanged() {\n    if (!this.comp) {\n      return;\n    }\n    this.rangeFeature?.onCellSelectionChanged();\n  }\n  isRangeSelectionEnabled() {\n    return this.rangeFeature != null;\n  }\n  focusCell(forceBrowserFocus = false) {\n    this.beans.focusSvc.setFocusedCell({\n      ...this.getFocusedCellPosition(),\n      forceBrowserFocus\n    });\n  }\n  onRowIndexChanged() {\n    this.createCellPosition();\n    this.onCellFocused();\n    this.rangeFeature?.onCellSelectionChanged();\n  }\n  onSuppressCellFocusChanged(suppressCellFocus) {\n    const element = this.eGui;\n    if (!element) {\n      return;\n    }\n    if (isRowNumberCol(this.column)) {\n      suppressCellFocus = true;\n    }\n    _addOrRemoveAttribute(element, \"tabindex\", suppressCellFocus ? void 0 : -1);\n  }\n  onFirstRightPinnedChanged() {\n    if (!this.comp) {\n      return;\n    }\n    const firstRightPinned = this.column.isFirstRightPinned();\n    this.comp.addOrRemoveCssClass(CSS_CELL_FIRST_RIGHT_PINNED, firstRightPinned);\n  }\n  onLastLeftPinnedChanged() {\n    if (!this.comp) {\n      return;\n    }\n    const lastLeftPinned = this.column.isLastLeftPinned();\n    this.comp.addOrRemoveCssClass(CSS_CELL_LAST_LEFT_PINNED, lastLeftPinned);\n  }\n  isCellFocused() {\n    return this.beans.focusSvc.isCellFocused(this.cellPosition);\n  }\n  onCellFocused(event) {\n    const { beans } = this;\n    if (_isCellFocusSuppressed(beans)) {\n      return;\n    }\n    const cellFocused = this.isCellFocused();\n    if (!this.comp) {\n      if (cellFocused && event?.forceBrowserFocus) {\n        this.focusEventToRestore = event;\n      }\n      return;\n    }\n    this.focusEventToRestore = void 0;\n    this.comp.addOrRemoveCssClass(CSS_CELL_FOCUS, cellFocused);\n    if (cellFocused && event && event.forceBrowserFocus) {\n      let focusEl = this.comp.getFocusableElement();\n      if (this.editing) {\n        const focusableEls = _findFocusableElements(focusEl, null, true);\n        if (focusableEls.length) {\n          focusEl = focusableEls[0];\n        }\n      }\n      focusEl.focus({ preventScroll: !!event.preventScrollOnBrowserFocus });\n    }\n    const fullRowEdit = beans.gos.get(\"editType\") === \"fullRow\";\n    if (!cellFocused && !fullRowEdit && this.editing) {\n      beans.editSvc?.stopRowOrCellEdit(this);\n    }\n    if (cellFocused) {\n      this.rowCtrl.announceDescription();\n    }\n  }\n  createCellPosition() {\n    const { rowIndex, rowPinned } = this.rowNode;\n    this.cellPosition = {\n      rowIndex,\n      rowPinned: _makeNull(rowPinned),\n      column: this.column\n    };\n  }\n  setInlineEditingCss() {\n    this.beans.editSvc?.setInlineEditingCss(this.rowCtrl);\n  }\n  // CSS Classes that only get applied once, they never change\n  applyStaticCssClasses() {\n    const { comp } = this;\n    comp.addOrRemoveCssClass(CSS_CELL, true);\n    comp.addOrRemoveCssClass(CSS_CELL_NOT_INLINE_EDITING, true);\n    const autoHeight = this.column.isAutoHeight() == true;\n    comp.addOrRemoveCssClass(CSS_AUTO_HEIGHT, autoHeight);\n    comp.addOrRemoveCssClass(CSS_NORMAL_HEIGHT, !autoHeight);\n  }\n  onColumnHover() {\n    this.beans.colHover?.onCellColumnHover(this.column, this.comp);\n  }\n  onColDefChanged() {\n    if (!this.comp) {\n      return;\n    }\n    if (this.column.isTooltipEnabled()) {\n      this.disableTooltipFeature();\n      this.enableTooltipFeature();\n    } else {\n      this.disableTooltipFeature();\n    }\n    this.setWrapText();\n    if (!this.editing) {\n      this.refreshOrDestroyCell({ forceRefresh: true, suppressFlash: true });\n    } else {\n      this.beans.editSvc?.handleColDefChanged(this);\n    }\n  }\n  setWrapText() {\n    const value = this.column.getColDef().wrapText == true;\n    this.comp.addOrRemoveCssClass(CSS_CELL_WRAP_TEXT, value);\n  }\n  dispatchCellContextMenuEvent(event) {\n    const colDef = this.column.getColDef();\n    const cellContextMenuEvent = this.createEvent(event, \"cellContextMenu\");\n    const { beans } = this;\n    beans.eventSvc.dispatchEvent(cellContextMenuEvent);\n    if (colDef.onCellContextMenu) {\n      window.setTimeout(() => {\n        beans.frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellContextMenu(cellContextMenuEvent);\n        });\n      }, 0);\n    }\n  }\n  getCellRenderer() {\n    return this.comp?.getCellRenderer() ?? null;\n  }\n  destroy() {\n    this.onCompAttachedFuncs = [];\n    this.onEditorAttachedFuncs = [];\n    super.destroy();\n  }\n  createSelectionCheckbox() {\n    const cbSelectionComponent = this.beans.selectionSvc?.createCheckboxSelectionComponent();\n    if (!cbSelectionComponent) {\n      return void 0;\n    }\n    this.beans.context.createBean(cbSelectionComponent);\n    cbSelectionComponent.init({ rowNode: this.rowNode, column: this.column });\n    return cbSelectionComponent;\n  }\n  createDndSource() {\n    const dndSourceComp = this.beans.registry.createDynamicBean(\n      \"dndSourceComp\",\n      false,\n      this.rowNode,\n      this.column,\n      this.eGui\n    );\n    if (dndSourceComp) {\n      this.beans.context.createBean(dndSourceComp);\n    }\n    return dndSourceComp;\n  }\n  registerRowDragger(customElement, dragStartPixels, suppressVisibilityChange) {\n    if (this.customRowDragComp) {\n      this.customRowDragComp.setDragElement(customElement, dragStartPixels);\n      return;\n    }\n    const newComp = this.createRowDragComp(customElement, dragStartPixels, suppressVisibilityChange);\n    if (newComp) {\n      this.customRowDragComp = newComp;\n      this.addDestroyFunc(() => {\n        this.beans.context.destroyBean(newComp);\n        this.customRowDragComp = null;\n      });\n    }\n  }\n  createRowDragComp(customElement, dragStartPixels, suppressVisibilityChange) {\n    const rowDragComp = this.beans.rowDragSvc?.createRowDragCompForCell(\n      this.rowNode,\n      this.column,\n      () => this.value,\n      customElement,\n      dragStartPixels,\n      suppressVisibilityChange\n    );\n    if (!rowDragComp) {\n      return void 0;\n    }\n    this.beans.context.createBean(rowDragComp);\n    return rowDragComp;\n  }\n  cellEditorAttached() {\n    this.onEditorAttachedFuncs.forEach((func) => func());\n    this.onEditorAttachedFuncs = [];\n  }\n  setFocusedCellPosition(_cellPosition) {\n  }\n  getFocusedCellPosition() {\n    return this.cellPosition;\n  }\n  // used by spannedCellCtrl\n  refreshAriaRowIndex() {\n  }\n  /**\n   * Returns the root element of the cell, could be a span container rather than the cell element.\n   * @returns The root element of the cell.\n   */\n  getRootElement() {\n    return this.eGui;\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/mouseEventUtils.ts\nvar GRID_DOM_KEY = \"__ag_grid_instance\";\nfunction _stampTopLevelGridCompWithGridInstance(gos, eGridDiv) {\n  eGridDiv[GRID_DOM_KEY] = gos.gridInstanceId;\n}\nfunction _isEventFromThisGrid(gos, event) {\n  const res = _isElementInThisGrid(gos, event.target);\n  return res;\n}\nfunction _isElementInThisGrid(gos, element) {\n  let pointer = element;\n  while (pointer) {\n    const instanceId = pointer[GRID_DOM_KEY];\n    if (_exists(instanceId)) {\n      const eventFromThisGrid = instanceId === gos.gridInstanceId;\n      return eventFromThisGrid;\n    }\n    pointer = pointer.parentElement;\n  }\n  return false;\n}\nfunction _getCellPositionForEvent(gos, event) {\n  return _getCellCtrlForEventTarget(gos, event.target)?.getFocusedCellPosition() ?? null;\n}\nfunction _getNormalisedMousePosition(beans, event) {\n  const gridPanelHasScrolls = _isDomLayout(beans.gos, \"normal\");\n  const e = event;\n  let x;\n  let y;\n  if (e.clientX != null || e.clientY != null) {\n    x = e.clientX;\n    y = e.clientY;\n  } else {\n    x = e.x;\n    y = e.y;\n  }\n  if (gridPanelHasScrolls) {\n    const scrollFeature = beans.ctrlsSvc.getScrollFeature();\n    const vRange = scrollFeature.getVScrollPosition();\n    const hRange = scrollFeature.getHScrollPosition();\n    x += hRange.left;\n    y += vRange.top;\n  }\n  return { x, y };\n}\n\n// packages/ag-grid-community/src/dragAndDrop/dragAndDropService.ts\nvar DragSourceType = /* @__PURE__ */ ((DragSourceType2) => {\n  DragSourceType2[DragSourceType2[\"ToolPanel\"] = 0] = \"ToolPanel\";\n  DragSourceType2[DragSourceType2[\"HeaderCell\"] = 1] = \"HeaderCell\";\n  DragSourceType2[DragSourceType2[\"RowDrag\"] = 2] = \"RowDrag\";\n  DragSourceType2[DragSourceType2[\"ChartPanel\"] = 3] = \"ChartPanel\";\n  DragSourceType2[DragSourceType2[\"AdvancedFilterBuilder\"] = 4] = \"AdvancedFilterBuilder\";\n  return DragSourceType2;\n})(DragSourceType || {});\nvar DragAndDropService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"dragAndDrop\";\n    this.dragSourceAndParamsList = [];\n    this.dropTargets = [];\n  }\n  wireBeans(beans) {\n    this.ctrlsSvc = beans.ctrlsSvc;\n    this.dragSvc = beans.dragSvc;\n    this.environment = beans.environment;\n    this.userCompFactory = beans.userCompFactory;\n  }\n  addDragSource(dragSource, allowTouch = false) {\n    const params = {\n      eElement: dragSource.eElement,\n      dragStartPixels: dragSource.dragStartPixels,\n      onDragStart: this.onDragStart.bind(this, dragSource),\n      onDragStop: this.onDragStop.bind(this),\n      onDragging: this.onDragging.bind(this),\n      onDragCancel: this.onDragCancel.bind(this),\n      includeTouch: allowTouch\n    };\n    this.dragSourceAndParamsList.push({ params, dragSource });\n    this.dragSvc.addDragSource(params);\n  }\n  getDragAndDropImageComponent() {\n    const { dragAndDropImageComp } = this;\n    if (!dragAndDropImageComp || !dragAndDropImageComp.comp) {\n      return null;\n    }\n    return dragAndDropImageComp.comp;\n  }\n  removeDragSource(dragSource) {\n    const { dragSourceAndParamsList, dragSvc } = this;\n    const sourceAndParams = dragSourceAndParamsList.find((item) => item.dragSource === dragSource);\n    if (sourceAndParams) {\n      dragSvc.removeDragSource(sourceAndParams.params);\n      _removeFromArray(dragSourceAndParamsList, sourceAndParams);\n    }\n  }\n  destroy() {\n    const { dragSourceAndParamsList, dragSvc, dropTargets } = this;\n    dragSourceAndParamsList.forEach((sourceAndParams) => dragSvc.removeDragSource(sourceAndParams.params));\n    dragSourceAndParamsList.length = 0;\n    dropTargets.length = 0;\n    this.clearDragAndDropProperties();\n    super.destroy();\n  }\n  nudge() {\n    if (this.dragging) {\n      this.onDragging(this.eventLastTime, true);\n    }\n  }\n  onDragStart(dragSource, mouseEvent) {\n    this.dragging = true;\n    this.dragSource = dragSource;\n    this.eventLastTime = mouseEvent;\n    this.dragItem = dragSource.getDragItem();\n    dragSource.onDragStarted?.();\n    this.createDragAndDropImageComponent();\n  }\n  onDragStop(mouseEvent) {\n    this.dragSource?.onDragStopped?.();\n    const { lastDropTarget } = this;\n    if (lastDropTarget?.onDragStop) {\n      const draggingEvent = this.createDropTargetEvent(lastDropTarget, mouseEvent, null, null, false);\n      lastDropTarget.onDragStop(draggingEvent);\n    }\n    this.clearDragAndDropProperties();\n  }\n  onDragCancel() {\n    const { dragSource, lastDropTarget } = this;\n    dragSource?.onDragCancelled?.();\n    if (lastDropTarget?.onDragCancel) {\n      lastDropTarget.onDragCancel(\n        this.createDropTargetEvent(lastDropTarget, this.eventLastTime, null, null, false)\n      );\n    }\n    this.clearDragAndDropProperties();\n  }\n  clearDragAndDropProperties() {\n    this.eventLastTime = null;\n    this.dragging = false;\n    this.lastDropTarget = void 0;\n    this.dragItem = null;\n    this.dragSource = null;\n    this.removeDragAndDropImageComponent();\n  }\n  onDragging(mouseEvent, fromNudge = false) {\n    const hDirection = this.getHorizontalDirection(mouseEvent);\n    const vDirection = this.getVerticalDirection(mouseEvent);\n    this.eventLastTime = mouseEvent;\n    this.positionDragAndDropImageComp(mouseEvent);\n    const validDropTargets = this.dropTargets.filter((target) => this.isMouseOnDropTarget(mouseEvent, target));\n    const dropTarget = this.findCurrentDropTarget(mouseEvent, validDropTargets);\n    const { lastDropTarget, dragSource, dragAndDropImageComp, dragItem } = this;\n    if (dropTarget !== lastDropTarget) {\n      this.leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge);\n      if (lastDropTarget !== null && dropTarget === null) {\n        dragSource?.onGridExit?.(dragItem);\n      }\n      if (lastDropTarget === null && dropTarget !== null) {\n        dragSource?.onGridEnter?.(dragItem);\n      }\n      this.enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      if (dropTarget && dragAndDropImageComp) {\n        const { comp, promise } = dragAndDropImageComp;\n        if (comp) {\n          comp.setIcon(dropTarget.getIconName ? dropTarget.getIconName() : null, false);\n        } else {\n          promise.then((resolvedComponent) => {\n            if (resolvedComponent) {\n              resolvedComponent.setIcon(dropTarget.getIconName ? dropTarget.getIconName() : null, false);\n            }\n          });\n        }\n      }\n      this.lastDropTarget = dropTarget;\n    } else if (dropTarget && dropTarget.onDragging) {\n      const draggingEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      dropTarget.onDragging(draggingEvent);\n    }\n  }\n  getAllContainersFromDropTarget(dropTarget) {\n    const secondaryContainers = dropTarget.getSecondaryContainers ? dropTarget.getSecondaryContainers() : null;\n    const containers = [[dropTarget.getContainer()]];\n    return secondaryContainers ? containers.concat(secondaryContainers) : containers;\n  }\n  // checks if the mouse is on the drop target. it checks eContainer and eSecondaryContainers\n  isMouseOnDropTarget(mouseEvent, dropTarget) {\n    const allContainersFromDropTarget = this.getAllContainersFromDropTarget(dropTarget);\n    let mouseOverTarget = false;\n    const allContainersIntersect = (mouseEvent2, containers) => {\n      for (const container of containers) {\n        const { width, height, left, right, top, bottom } = container.getBoundingClientRect();\n        if (width === 0 || height === 0) {\n          return false;\n        }\n        const horizontalFit = mouseEvent2.clientX >= left && mouseEvent2.clientX < right;\n        const verticalFit = mouseEvent2.clientY >= top && mouseEvent2.clientY < bottom;\n        if (!horizontalFit || !verticalFit) {\n          return false;\n        }\n      }\n      return true;\n    };\n    for (const currentContainers of allContainersFromDropTarget) {\n      if (allContainersIntersect(mouseEvent, currentContainers)) {\n        mouseOverTarget = true;\n        break;\n      }\n    }\n    const { eElement, type } = this.dragSource;\n    if (dropTarget.targetContainsSource && !dropTarget.getContainer().contains(eElement)) {\n      return false;\n    }\n    return mouseOverTarget && dropTarget.isInterestedIn(type, eElement);\n  }\n  findCurrentDropTarget(mouseEvent, validDropTargets) {\n    const len = validDropTargets.length;\n    if (len === 0) {\n      return null;\n    }\n    if (len === 1) {\n      return validDropTargets[0];\n    }\n    const rootNode = _getRootNode(this.beans);\n    const elementStack = rootNode.elementsFromPoint(mouseEvent.clientX, mouseEvent.clientY);\n    for (const el of elementStack) {\n      for (const dropTarget of validDropTargets) {\n        const containers = this.getAllContainersFromDropTarget(dropTarget).flatMap((a) => a);\n        if (containers.indexOf(el) !== -1) {\n          return dropTarget;\n        }\n      }\n    }\n    return null;\n  }\n  enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge) {\n    if (!dropTarget) {\n      return;\n    }\n    if (dropTarget.onDragEnter) {\n      const dragEnterEvent = this.createDropTargetEvent(\n        dropTarget,\n        mouseEvent,\n        hDirection,\n        vDirection,\n        fromNudge\n      );\n      dropTarget.onDragEnter(dragEnterEvent);\n    }\n  }\n  leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge) {\n    const { lastDropTarget } = this;\n    if (!lastDropTarget) {\n      return;\n    }\n    if (lastDropTarget.onDragLeave) {\n      const dragLeaveEvent = this.createDropTargetEvent(\n        lastDropTarget,\n        mouseEvent,\n        hDirection,\n        vDirection,\n        fromNudge\n      );\n      lastDropTarget.onDragLeave(dragLeaveEvent);\n    }\n    const dragAndDropImageComponent = this.getDragAndDropImageComponent();\n    if (dragAndDropImageComponent) {\n      dragAndDropImageComponent.setIcon(null, false);\n    }\n  }\n  addDropTarget(dropTarget) {\n    this.dropTargets.push(dropTarget);\n  }\n  removeDropTarget(dropTarget) {\n    this.dropTargets = this.dropTargets.filter((target) => target.getContainer() !== dropTarget.getContainer());\n  }\n  hasExternalDropZones() {\n    return this.dropTargets.some((zones) => zones.external);\n  }\n  findExternalZone(params) {\n    const externalTargets = this.dropTargets.filter((target) => target.external);\n    return externalTargets.find((zone) => zone.getContainer() === params.getContainer()) || null;\n  }\n  isDropZoneWithinThisGrid(draggingEvent) {\n    const gridBodyCon = this.ctrlsSvc.getGridBodyCtrl();\n    const gridGui = gridBodyCon.eGridBody;\n    const { dropZoneTarget } = draggingEvent;\n    return gridGui.contains(dropZoneTarget);\n  }\n  getHorizontalDirection(event) {\n    const clientX = this.eventLastTime?.clientX;\n    const eClientX = event.clientX;\n    if (clientX === eClientX) {\n      return null;\n    }\n    return clientX > eClientX ? \"left\" : \"right\";\n  }\n  getVerticalDirection(event) {\n    const clientY = this.eventLastTime?.clientY;\n    const eClientY = event.clientY;\n    if (clientY === eClientY) {\n      return null;\n    }\n    return clientY > eClientY ? \"up\" : \"down\";\n  }\n  createDropTargetEvent(dropTarget, event, hDirection, vDirection, fromNudge) {\n    const dropZoneTarget = dropTarget.getContainer();\n    const rect = dropZoneTarget.getBoundingClientRect();\n    const { dragItem, dragSource, gos } = this;\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    return _addGridCommonParams(gos, {\n      event,\n      x,\n      y,\n      vDirection,\n      hDirection,\n      dragSource,\n      fromNudge,\n      dragItem,\n      dropZoneTarget\n    });\n  }\n  positionDragAndDropImageComp(event) {\n    const dragAndDropImageComponent = this.getDragAndDropImageComponent();\n    if (!dragAndDropImageComponent) {\n      return;\n    }\n    _anchorElementToMouseMoveEvent(dragAndDropImageComponent.getGui(), event, this.beans);\n  }\n  removeDragAndDropImageComponent() {\n    const { dragAndDropImageComp } = this;\n    if (dragAndDropImageComp) {\n      const { comp } = dragAndDropImageComp;\n      if (comp) {\n        const eGui = comp.getGui();\n        this.dragAndDropImageParent?.removeChild(eGui);\n        this.destroyBean(comp);\n      }\n    }\n    this.dragAndDropImageComp = null;\n  }\n  createDragAndDropImageComponent() {\n    const { dragSource, gos, userCompFactory } = this;\n    if (!dragSource) {\n      return;\n    }\n    const userCompDetails = _getDragAndDropImageCompDetails(\n      userCompFactory,\n      _addGridCommonParams(gos, {\n        dragSource\n      })\n    );\n    if (!userCompDetails) {\n      return;\n    }\n    const promise = userCompDetails.newAgStackInstance();\n    this.dragAndDropImageComp = {\n      promise\n    };\n    promise.then((comp) => {\n      if (!comp || !this.isAlive()) {\n        return;\n      }\n      this.processDragAndDropImageComponent(comp);\n      this.dragAndDropImageComp.comp = comp;\n    });\n  }\n  processDragAndDropImageComponent(dragAndDropImageComponent) {\n    const { dragSource, environment } = this;\n    if (!dragSource) {\n      return;\n    }\n    const eGui = dragAndDropImageComponent.getGui();\n    eGui.style.setProperty(\"position\", \"absolute\");\n    eGui.style.setProperty(\"z-index\", \"9999\");\n    _stampTopLevelGridCompWithGridInstance(this.gos, eGui);\n    environment.applyThemeClasses(eGui);\n    dragAndDropImageComponent.setIcon(null, false);\n    let { dragItemName } = dragSource;\n    if (typeof dragItemName === \"function\") {\n      dragItemName = dragItemName();\n    }\n    dragAndDropImageComponent.setLabel(dragItemName || \"\");\n    eGui.style.top = \"20px\";\n    eGui.style.left = \"20px\";\n    const targetEl = _getPageBody(this.beans);\n    this.dragAndDropImageParent = targetEl;\n    if (!targetEl) {\n      _warn(54);\n    } else {\n      targetEl.appendChild(eGui);\n    }\n  }\n  registerGridDropTarget(elementFn, ctrl) {\n    const dropTarget = {\n      getContainer: elementFn,\n      isInterestedIn: (type) => type === 1 /* HeaderCell */ || type === 0 /* ToolPanel */,\n      getIconName: () => \"notAllowed\"\n    };\n    this.addDropTarget(dropTarget);\n    ctrl.addDestroyFunc(() => this.removeDropTarget(dropTarget));\n  }\n};\n\n// packages/ag-grid-community/src/autoScrollService.ts\nvar AutoScrollService = class {\n  constructor(params) {\n    this.tickingInterval = null;\n    this.onScrollCallback = null;\n    this.scrollContainer = params.scrollContainer;\n    this.scrollHorizontally = params.scrollAxis.indexOf(\"x\") !== -1;\n    this.scrollVertically = params.scrollAxis.indexOf(\"y\") !== -1;\n    this.scrollByTick = params.scrollByTick != null ? params.scrollByTick : 20;\n    if (params.onScrollCallback) {\n      this.onScrollCallback = params.onScrollCallback;\n    }\n    if (this.scrollVertically) {\n      this.getVerticalPosition = params.getVerticalPosition;\n      this.setVerticalPosition = params.setVerticalPosition;\n    }\n    if (this.scrollHorizontally) {\n      this.getHorizontalPosition = params.getHorizontalPosition;\n      this.setHorizontalPosition = params.setHorizontalPosition;\n    }\n    this.shouldSkipVerticalScroll = params.shouldSkipVerticalScroll || (() => false);\n    this.shouldSkipHorizontalScroll = params.shouldSkipHorizontalScroll || (() => false);\n  }\n  check(mouseEvent, forceSkipVerticalScroll = false) {\n    const skipVerticalScroll = forceSkipVerticalScroll || this.shouldSkipVerticalScroll();\n    if (skipVerticalScroll && this.shouldSkipHorizontalScroll()) {\n      return;\n    }\n    const rect = this.scrollContainer.getBoundingClientRect();\n    const scrollTick = this.scrollByTick;\n    this.tickLeft = mouseEvent.clientX < rect.left + scrollTick;\n    this.tickRight = mouseEvent.clientX > rect.right - scrollTick;\n    this.tickUp = mouseEvent.clientY < rect.top + scrollTick && !skipVerticalScroll;\n    this.tickDown = mouseEvent.clientY > rect.bottom - scrollTick && !skipVerticalScroll;\n    if (this.tickLeft || this.tickRight || this.tickUp || this.tickDown) {\n      this.ensureTickingStarted();\n    } else {\n      this.ensureCleared();\n    }\n  }\n  ensureTickingStarted() {\n    if (this.tickingInterval === null) {\n      this.tickingInterval = window.setInterval(this.doTick.bind(this), 100);\n      this.tickCount = 0;\n    }\n  }\n  doTick() {\n    this.tickCount++;\n    const tickAmount = this.tickCount > 20 ? 200 : this.tickCount > 10 ? 80 : 40;\n    if (this.scrollVertically) {\n      const vScrollPosition = this.getVerticalPosition();\n      if (this.tickUp) {\n        this.setVerticalPosition(vScrollPosition - tickAmount);\n      }\n      if (this.tickDown) {\n        this.setVerticalPosition(vScrollPosition + tickAmount);\n      }\n    }\n    if (this.scrollHorizontally) {\n      const hScrollPosition = this.getHorizontalPosition();\n      if (this.tickLeft) {\n        this.setHorizontalPosition(hScrollPosition - tickAmount);\n      }\n      if (this.tickRight) {\n        this.setHorizontalPosition(hScrollPosition + tickAmount);\n      }\n    }\n    if (this.onScrollCallback) {\n      this.onScrollCallback();\n    }\n  }\n  ensureCleared() {\n    if (this.tickingInterval) {\n      window.clearInterval(this.tickingInterval);\n      this.tickingInterval = null;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/entities/positionUtils.ts\nfunction _createCellId(cellPosition) {\n  const { rowIndex, rowPinned, column } = cellPosition;\n  return `${rowIndex}.${rowPinned == null ? \"null\" : rowPinned}.${column.getId()}`;\n}\nfunction _areCellsEqual(cellA, cellB) {\n  const colsMatch = cellA.column === cellB.column;\n  const floatingMatch = cellA.rowPinned === cellB.rowPinned;\n  const indexMatch = cellA.rowIndex === cellB.rowIndex;\n  return colsMatch && floatingMatch && indexMatch;\n}\nfunction _isRowBefore(rowA, rowB) {\n  switch (rowA.rowPinned) {\n    case \"top\":\n      if (rowB.rowPinned !== \"top\") {\n        return true;\n      }\n      break;\n    case \"bottom\":\n      if (rowB.rowPinned !== \"bottom\") {\n        return false;\n      }\n      break;\n    default:\n      if (_exists(rowB.rowPinned)) {\n        return rowB.rowPinned !== \"top\";\n      }\n      break;\n  }\n  return rowA.rowIndex < rowB.rowIndex;\n}\nfunction _isSameRow(rowA, rowB) {\n  if (!rowA && !rowB) {\n    return true;\n  }\n  if (rowA && !rowB || !rowA && rowB) {\n    return false;\n  }\n  return rowA.rowIndex === rowB.rowIndex && rowA.rowPinned == rowB.rowPinned;\n}\nfunction _getFirstRow(beans) {\n  let rowIndex = 0;\n  let rowPinned;\n  const { pinnedRowModel, rowModel, pageBounds } = beans;\n  if (pinnedRowModel?.getPinnedTopRowCount()) {\n    rowPinned = \"top\";\n  } else if (rowModel.getRowCount()) {\n    rowPinned = null;\n    rowIndex = pageBounds.getFirstRow();\n  } else if (pinnedRowModel?.getPinnedBottomRowCount()) {\n    rowPinned = \"bottom\";\n  }\n  return rowPinned === void 0 ? null : { rowIndex, rowPinned };\n}\nfunction _getLastRow(beans) {\n  let rowIndex;\n  let rowPinned = null;\n  const { pinnedRowModel, pageBounds } = beans;\n  const pinnedBottomCount = pinnedRowModel?.getPinnedBottomRowCount();\n  const pinnedTopCount = pinnedRowModel?.getPinnedTopRowCount();\n  if (pinnedBottomCount) {\n    rowPinned = \"bottom\";\n    rowIndex = pinnedBottomCount - 1;\n  } else if (beans.rowModel.getRowCount()) {\n    rowPinned = null;\n    rowIndex = pageBounds.getLastRow();\n  } else if (pinnedTopCount) {\n    rowPinned = \"top\";\n    rowIndex = pinnedTopCount - 1;\n  }\n  return rowIndex === void 0 ? null : { rowIndex, rowPinned };\n}\nfunction _getRowNode(beans, gridRow) {\n  switch (gridRow.rowPinned) {\n    case \"top\":\n      return beans.pinnedRowModel?.getPinnedTopRow(gridRow.rowIndex);\n    case \"bottom\":\n      return beans.pinnedRowModel?.getPinnedBottomRow(gridRow.rowIndex);\n    default:\n      return beans.rowModel.getRow(gridRow.rowIndex);\n  }\n}\nfunction _getCellByPosition(beans, cellPosition) {\n  const spannedCellCtrl = beans.spannedRowRenderer?.getCellByPosition(cellPosition);\n  if (spannedCellCtrl) {\n    return spannedCellCtrl;\n  }\n  const rowCtrl = beans.rowRenderer.getRowByPosition(cellPosition);\n  if (!rowCtrl) {\n    return null;\n  }\n  return rowCtrl.getCellCtrl(cellPosition.column);\n}\n\n// packages/ag-grid-community/src/dragAndDrop/rowDragFeature.ts\nvar RowDragFeature = class extends BeanStub {\n  constructor(eContainer) {\n    super();\n    this.eContainer = eContainer;\n  }\n  postConstruct() {\n    const { rowModel, gos, ctrlsSvc } = this.beans;\n    if (_isClientSideRowModel(gos, rowModel)) {\n      this.clientSideRowModel = rowModel;\n    }\n    ctrlsSvc.whenReady(this, (p) => {\n      const gridBodyCon = p.gridBodyCtrl;\n      this.autoScrollService = new AutoScrollService({\n        scrollContainer: gridBodyCon.eBodyViewport,\n        scrollAxis: \"y\",\n        getVerticalPosition: () => gridBodyCon.scrollFeature.getVScrollPosition().top,\n        setVerticalPosition: (position) => gridBodyCon.scrollFeature.setVerticalScrollPosition(position),\n        onScrollCallback: () => {\n          this.onDragging(this.lastDraggingEvent);\n        }\n      });\n    });\n  }\n  getContainer() {\n    return this.eContainer;\n  }\n  isInterestedIn(type) {\n    return type === 2 /* RowDrag */;\n  }\n  getIconName() {\n    const managedDrag = this.gos.get(\"rowDragManaged\");\n    if (managedDrag && this.shouldPreventRowMove()) {\n      return \"notAllowed\";\n    }\n    return \"move\";\n  }\n  shouldPreventRowMove() {\n    const { rowGroupColsSvc, filterManager, sortSvc } = this.beans;\n    const rowGroupCols = rowGroupColsSvc?.columns ?? [];\n    if (rowGroupCols.length) {\n      return true;\n    }\n    const isFilterPresent = filterManager?.isAnyFilterPresent();\n    if (isFilterPresent) {\n      return true;\n    }\n    const isSortActive = sortSvc?.isSortActive();\n    if (isSortActive) {\n      return true;\n    }\n    return false;\n  }\n  getRowNodes(draggingEvent) {\n    if (!this.isFromThisGrid(draggingEvent)) {\n      return draggingEvent.dragItem.rowNodes || [];\n    }\n    const currentNode = draggingEvent.dragItem.rowNode;\n    const isRowDragMultiRow = this.gos.get(\"rowDragMultiRow\");\n    if (isRowDragMultiRow) {\n      const selectedNodes = [...this.beans.selectionSvc?.getSelectedNodes() ?? []].sort((a, b) => {\n        if (a.rowIndex == null || b.rowIndex == null) {\n          return 0;\n        }\n        return this.getRowIndexNumber(a) - this.getRowIndexNumber(b);\n      });\n      if (selectedNodes.indexOf(currentNode) !== -1) {\n        return selectedNodes;\n      }\n    }\n    return [currentNode];\n  }\n  onDragEnter(draggingEvent) {\n    draggingEvent.dragItem.rowNodes = this.getRowNodes(draggingEvent);\n    this.dispatchGridEvent(\"rowDragEnter\", draggingEvent);\n    this.getRowNodes(draggingEvent).forEach((rowNode) => {\n      this.setRowNodeDragging(rowNode, true);\n    });\n    this.onEnterOrDragging(draggingEvent);\n  }\n  onDragging(draggingEvent) {\n    this.onEnterOrDragging(draggingEvent);\n  }\n  isFromThisGrid(draggingEvent) {\n    const { dragSourceDomDataKey } = draggingEvent.dragSource;\n    return dragSourceDomDataKey === this.gos.getDomDataKey();\n  }\n  onEnterOrDragging(draggingEvent) {\n    this.dispatchGridEvent(\"rowDragMove\", draggingEvent);\n    this.lastDraggingEvent = draggingEvent;\n    const pixel = _getNormalisedMousePosition(this.beans, draggingEvent).y;\n    const managedDrag = this.gos.get(\"rowDragManaged\");\n    if (managedDrag) {\n      this.doManagedDrag(draggingEvent, pixel);\n    }\n    this.autoScrollService.check(draggingEvent.event);\n  }\n  doManagedDrag(draggingEvent, pixel) {\n    const { dragAndDrop, gos } = this.beans;\n    const isFromThisGrid = this.isFromThisGrid(draggingEvent);\n    const managedDrag = gos.get(\"rowDragManaged\");\n    const rowNodes = draggingEvent.dragItem.rowNodes;\n    if (managedDrag && this.shouldPreventRowMove()) {\n      return;\n    }\n    if (gos.get(\"suppressMoveWhenRowDragging\") || !isFromThisGrid) {\n      if (dragAndDrop.isDropZoneWithinThisGrid(draggingEvent)) {\n        this.clientSideRowModel.highlightRowAtPixel(rowNodes[0], pixel);\n      }\n    } else {\n      this.moveRows(rowNodes, pixel);\n    }\n  }\n  getRowIndexNumber(rowNode) {\n    const rowIndexStr = rowNode.getRowIndexString();\n    return parseInt(_last(rowIndexStr.split(\"-\")), 10);\n  }\n  moveRowAndClearHighlight(draggingEvent) {\n    const clientSideRowModel = this.clientSideRowModel;\n    const lastHighlightedRowNode = clientSideRowModel.getLastHighlightedRowNode();\n    const isBelow = lastHighlightedRowNode && lastHighlightedRowNode.highlighted === \"Below\";\n    const pixel = _getNormalisedMousePosition(this.beans, draggingEvent).y;\n    const rowNodes = draggingEvent.dragItem.rowNodes;\n    let increment = isBelow ? 1 : 0;\n    if (this.isFromThisGrid(draggingEvent)) {\n      rowNodes.forEach((rowNode) => {\n        if (rowNode.rowTop < pixel) {\n          increment -= 1;\n        }\n      });\n      this.moveRows(rowNodes, pixel, increment);\n    } else {\n      const getRowIdFunc = _getRowIdCallback(this.gos);\n      let addIndex = clientSideRowModel.getRowIndexAtPixel(pixel) + 1;\n      if (clientSideRowModel.getHighlightPosition(pixel) === \"Above\") {\n        addIndex--;\n      }\n      clientSideRowModel.updateRowData({\n        add: rowNodes.filter(\n          (node) => !clientSideRowModel.getRowNode(\n            getRowIdFunc?.({ data: node.data, level: 0, rowPinned: node.rowPinned }) ?? node.data.id\n          )\n        ).map((node) => node.data),\n        addIndex\n      });\n    }\n    this.clearRowHighlight();\n  }\n  clearRowHighlight() {\n    this.clientSideRowModel.highlightRowAtPixel(null);\n  }\n  moveRows(rowNodes, pixel, increment = 0) {\n    const focusSvc = this.beans.focusSvc;\n    const cellPosition = focusSvc.getFocusedCell();\n    const cellCtrl = cellPosition && _getCellByPosition(this.beans, cellPosition);\n    const rowWasMoved = this.clientSideRowModel.ensureRowsAtPixel(rowNodes, pixel, increment);\n    if (rowWasMoved) {\n      if (cellCtrl) {\n        cellCtrl.focusCell();\n      } else {\n        focusSvc.clearFocusedCell();\n      }\n    }\n  }\n  addRowDropZone(params) {\n    if (!params.getContainer()) {\n      _warn(55);\n      return;\n    }\n    const dragAndDrop = this.beans.dragAndDrop;\n    if (dragAndDrop.findExternalZone(params)) {\n      _warn(56);\n      return;\n    }\n    let processedParams = {\n      getContainer: params.getContainer\n    };\n    if (params.fromGrid) {\n      processedParams = params;\n    } else {\n      if (params.onDragEnter) {\n        processedParams.onDragEnter = (e) => {\n          params.onDragEnter(this.draggingToRowDragEvent(\"rowDragEnter\", e));\n        };\n      }\n      if (params.onDragLeave) {\n        processedParams.onDragLeave = (e) => {\n          params.onDragLeave(this.draggingToRowDragEvent(\"rowDragLeave\", e));\n        };\n      }\n      if (params.onDragging) {\n        processedParams.onDragging = (e) => {\n          params.onDragging(this.draggingToRowDragEvent(\"rowDragMove\", e));\n        };\n      }\n      if (params.onDragStop) {\n        processedParams.onDragStop = (e) => {\n          params.onDragStop(this.draggingToRowDragEvent(\"rowDragEnd\", e));\n        };\n      }\n      if (params.onDragCancel) {\n        processedParams.onDragCancel = (e) => {\n          params.onDragCancel(this.draggingToRowDragEvent(\"rowDragCancel\", e));\n        };\n      }\n    }\n    const dropTarget = {\n      isInterestedIn: (type) => type === 2 /* RowDrag */,\n      getIconName: () => \"move\",\n      external: true,\n      ...processedParams\n    };\n    dragAndDrop.addDropTarget(dropTarget);\n    this.addDestroyFunc(() => dragAndDrop.removeDropTarget(dropTarget));\n  }\n  getRowDropZone(events) {\n    const getContainer = this.getContainer.bind(this);\n    const onDragEnter = this.onDragEnter.bind(this);\n    const onDragLeave = this.onDragLeave.bind(this);\n    const onDragging = this.onDragging.bind(this);\n    const onDragStop = this.onDragStop.bind(this);\n    const onDragCancel = this.onDragCancel.bind(this);\n    let params;\n    if (!events) {\n      params = {\n        getContainer,\n        onDragEnter,\n        onDragLeave,\n        onDragging,\n        onDragStop,\n        onDragCancel,\n        /* @private */\n        fromGrid: true\n      };\n    } else {\n      params = {\n        getContainer,\n        onDragEnter: events.onDragEnter ? (e) => {\n          onDragEnter(e);\n          events.onDragEnter(this.draggingToRowDragEvent(\"rowDragEnter\", e));\n        } : onDragEnter,\n        onDragLeave: events.onDragLeave ? (e) => {\n          onDragLeave(e);\n          events.onDragLeave(this.draggingToRowDragEvent(\"rowDragLeave\", e));\n        } : onDragLeave,\n        onDragging: events.onDragging ? (e) => {\n          onDragging(e);\n          events.onDragging(this.draggingToRowDragEvent(\"rowDragMove\", e));\n        } : onDragging,\n        onDragStop: events.onDragStop ? (e) => {\n          onDragStop(e);\n          events.onDragStop(this.draggingToRowDragEvent(\"rowDragEnd\", e));\n        } : onDragStop,\n        onDragCancel: events.onDragCancel ? (e) => {\n          onDragCancel(e);\n          events.onDragCancel(this.draggingToRowDragEvent(\"rowDragCancel\", e));\n        } : onDragCancel,\n        fromGrid: true\n      };\n    }\n    return params;\n  }\n  draggingToRowDragEvent(type, draggingEvent) {\n    const beans = this.beans;\n    const { pageBounds, rowModel, gos } = beans;\n    const yNormalised = _getNormalisedMousePosition(beans, draggingEvent).y;\n    const mouseIsPastLastRow = yNormalised > pageBounds.getCurrentPageHeight();\n    let overIndex = -1;\n    let overNode;\n    if (!mouseIsPastLastRow) {\n      overIndex = rowModel.getRowIndexAtPixel(yNormalised);\n      overNode = rowModel.getRow(overIndex);\n    }\n    const event = _addGridCommonParams(gos, {\n      type,\n      event: draggingEvent.event,\n      node: draggingEvent.dragItem.rowNode,\n      nodes: draggingEvent.dragItem.rowNodes,\n      overIndex,\n      overNode,\n      y: yNormalised,\n      vDirection: draggingEvent.vDirection\n    });\n    return event;\n  }\n  dispatchGridEvent(type, draggingEvent) {\n    const event = this.draggingToRowDragEvent(type, draggingEvent);\n    this.eventSvc.dispatchEvent(event);\n  }\n  onDragLeave(draggingEvent) {\n    this.dispatchGridEvent(\"rowDragLeave\", draggingEvent);\n    this.stopDragging(draggingEvent);\n    if (this.gos.get(\"rowDragManaged\")) {\n      this.clearRowHighlight();\n    }\n  }\n  onDragStop(draggingEvent) {\n    this.dispatchGridEvent(\"rowDragEnd\", draggingEvent);\n    this.stopDragging(draggingEvent);\n    const { dragAndDrop, gos } = this.beans;\n    if (gos.get(\"rowDragManaged\") && (gos.get(\"suppressMoveWhenRowDragging\") || !this.isFromThisGrid(draggingEvent)) && dragAndDrop.isDropZoneWithinThisGrid(draggingEvent)) {\n      this.moveRowAndClearHighlight(draggingEvent);\n    }\n  }\n  onDragCancel(draggingEvent) {\n    this.dispatchGridEvent(\"rowDragCancel\", draggingEvent);\n    this.stopDragging(draggingEvent);\n    const { dragAndDrop, gos } = this.beans;\n    if (gos.get(\"rowDragManaged\") && (gos.get(\"suppressMoveWhenRowDragging\") || !this.isFromThisGrid(draggingEvent)) && dragAndDrop.isDropZoneWithinThisGrid(draggingEvent)) {\n      this.clearRowHighlight();\n    }\n  }\n  stopDragging(draggingEvent) {\n    this.autoScrollService.ensureCleared();\n    this.getRowNodes(draggingEvent).forEach((rowNode) => {\n      this.setRowNodeDragging(rowNode, false);\n    });\n  }\n  setRowNodeDragging(rowNode, dragging) {\n    if (rowNode.dragging !== dragging) {\n      rowNode.dragging = dragging;\n      rowNode.dispatchRowEvent(\"draggingChanged\");\n    }\n  }\n};\n\n// packages/ag-grid-community/src/utils/mouse.ts\nfunction _areEventsNear(e1, e2, pixelCount) {\n  if (pixelCount === 0) {\n    return false;\n  }\n  const diffX = Math.abs(e1.clientX - e2.clientX);\n  const diffY = Math.abs(e1.clientY - e2.clientY);\n  return Math.max(diffX, diffY) <= pixelCount;\n}\n\n// packages/ag-grid-community/src/dragAndDrop/dragService.ts\nvar DragService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"dragSvc\";\n    this.dragEndFunctions = [];\n    this.dragSources = [];\n  }\n  destroy() {\n    const { dragSources } = this;\n    dragSources.forEach(this.removeListener.bind(this));\n    dragSources.length = 0;\n    super.destroy();\n  }\n  removeListener(dragSourceAndListener) {\n    const element = dragSourceAndListener.dragSource.eElement;\n    const mouseDownListener = dragSourceAndListener.mouseDownListener;\n    element.removeEventListener(\"mousedown\", mouseDownListener);\n    if (dragSourceAndListener.touchEnabled) {\n      const touchStartListener = dragSourceAndListener.touchStartListener;\n      element.removeEventListener(\"touchstart\", touchStartListener, { passive: true });\n    }\n  }\n  removeDragSource(params) {\n    const { dragSources } = this;\n    const dragSourceAndListener = dragSources.find((item) => item.dragSource === params);\n    if (!dragSourceAndListener) {\n      return;\n    }\n    this.removeListener(dragSourceAndListener);\n    _removeFromArray(dragSources, dragSourceAndListener);\n  }\n  addDragSource(params) {\n    const mouseListener = this.onMouseDown.bind(this, params);\n    const { eElement, includeTouch, stopPropagationForTouch } = params;\n    eElement.addEventListener(\"mousedown\", mouseListener);\n    let touchListener = null;\n    const suppressTouch = this.gos.get(\"suppressTouch\");\n    if (includeTouch && !suppressTouch) {\n      touchListener = (touchEvent) => {\n        if (_isFocusableFormField(touchEvent.target)) {\n          return;\n        }\n        if (stopPropagationForTouch) {\n          touchEvent.stopPropagation();\n        }\n        this.onTouchStart(params, touchEvent);\n      };\n      eElement.addEventListener(\"touchstart\", touchListener, { passive: false });\n    }\n    this.dragSources.push({\n      dragSource: params,\n      mouseDownListener: mouseListener,\n      touchStartListener: touchListener,\n      touchEnabled: !!includeTouch\n    });\n  }\n  // gets called whenever mouse down on any drag source\n  onTouchStart(params, touchEvent) {\n    this.currentDragParams = params;\n    this.dragging = false;\n    const touch = touchEvent.touches[0];\n    this.touchLastTime = touch;\n    this.touchStart = touch;\n    const touchMoveEvent = (e) => this.onTouchMove(e, params.eElement);\n    const touchEndEvent = (e) => this.onTouchUp(e, params.eElement);\n    const documentTouchMove = (e) => {\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n    };\n    const target = touchEvent.target;\n    const events = [\n      // Prevents the page document from moving while we are dragging items around.\n      // preventDefault needs to be called in the touchmove listener and never inside the\n      // touchstart, because using touchstart causes the click event to be cancelled on touch devices.\n      {\n        target: _getRootNode(this.beans),\n        type: \"touchmove\",\n        listener: documentTouchMove,\n        options: { passive: false }\n      },\n      { target, type: \"touchmove\", listener: touchMoveEvent, options: { passive: true } },\n      { target, type: \"touchend\", listener: touchEndEvent, options: { passive: true } },\n      { target, type: \"touchcancel\", listener: touchEndEvent, options: { passive: true } }\n    ];\n    this.addTemporaryEvents(events);\n    if (params.dragStartPixels === 0) {\n      this.onCommonMove(touch, this.touchStart, params.eElement);\n    }\n  }\n  // gets called whenever mouse down on any drag source\n  onMouseDown(params, mouseEvent) {\n    const e = mouseEvent;\n    if (params.skipMouseEvent && params.skipMouseEvent(mouseEvent)) {\n      return;\n    }\n    if (e._alreadyProcessedByDragService) {\n      return;\n    }\n    e._alreadyProcessedByDragService = true;\n    if (mouseEvent.button !== 0) {\n      return;\n    }\n    if (this.shouldPreventMouseEvent(mouseEvent)) {\n      mouseEvent.preventDefault();\n    }\n    this.currentDragParams = params;\n    this.dragging = false;\n    this.mouseStartEvent = mouseEvent;\n    this.startTarget = mouseEvent.target;\n    const mouseMoveEvent = (event) => this.onMouseMove(event, params.eElement);\n    const mouseUpEvent = (event) => this.onMouseUp(event, params.eElement);\n    const contextEvent = (event) => event.preventDefault();\n    const keydownEvent = (event) => {\n      if (event.key === KeyCode.ESCAPE) {\n        this.cancelDrag(params.eElement);\n      }\n    };\n    const target = _getRootNode(this.beans);\n    const events = [\n      { target, type: \"mousemove\", listener: mouseMoveEvent },\n      { target, type: \"mouseup\", listener: mouseUpEvent },\n      { target, type: \"contextmenu\", listener: contextEvent },\n      { target, type: \"keydown\", listener: keydownEvent }\n    ];\n    this.addTemporaryEvents(events);\n    if (params.dragStartPixels === 0) {\n      this.onMouseMove(mouseEvent, params.eElement);\n    }\n  }\n  addTemporaryEvents(events) {\n    events.forEach((currentEvent) => {\n      const { target, type, listener, options } = currentEvent;\n      target.addEventListener(type, listener, options);\n    });\n    this.dragEndFunctions.push(() => {\n      events.forEach((currentEvent) => {\n        const { target, type, listener, options } = currentEvent;\n        target.removeEventListener(type, listener, options);\n      });\n    });\n  }\n  // returns true if the event is close to the original event by X pixels either vertically or horizontally.\n  // we only start dragging after X pixels so this allows us to know if we should start dragging yet.\n  isEventNearStartEvent(currentEvent, startEvent) {\n    const { dragStartPixels } = this.currentDragParams;\n    const requiredPixelDiff = _exists(dragStartPixels) ? dragStartPixels : 4;\n    return _areEventsNear(currentEvent, startEvent, requiredPixelDiff);\n  }\n  getFirstActiveTouch(touchList) {\n    for (let i = 0; i < touchList.length; i++) {\n      if (touchList[i].identifier === this.touchStart.identifier) {\n        return touchList[i];\n      }\n    }\n    return null;\n  }\n  onCommonMove(currentEvent, startEvent, el) {\n    if (!this.dragging) {\n      if (this.isEventNearStartEvent(currentEvent, startEvent)) {\n        return;\n      }\n      this.dragging = true;\n      this.eventSvc.dispatchEvent({\n        type: \"dragStarted\",\n        target: el\n      });\n      this.currentDragParams.onDragStart(startEvent);\n      if (!this.currentDragParams) {\n        this.dragging = false;\n        return;\n      }\n      this.currentDragParams.onDragging(startEvent);\n    }\n    this.currentDragParams?.onDragging(currentEvent);\n  }\n  onTouchMove(touchEvent, el) {\n    const touch = this.getFirstActiveTouch(touchEvent.touches);\n    if (!touch) {\n      return;\n    }\n    this.onCommonMove(touch, this.touchStart, el);\n  }\n  // only gets called after a mouse down - as this is only added after mouseDown\n  // and is removed when mouseUp happens\n  onMouseMove(mouseEvent, el) {\n    if (_isBrowserSafari()) {\n      const eDocument = _getDocument(this.beans);\n      eDocument.getSelection()?.removeAllRanges();\n    }\n    if (this.shouldPreventMouseEvent(mouseEvent)) {\n      mouseEvent.preventDefault();\n    }\n    this.onCommonMove(mouseEvent, this.mouseStartEvent, el);\n  }\n  shouldPreventMouseEvent(mouseEvent) {\n    const { gos } = this;\n    const isEnableCellTextSelect = gos.get(\"enableCellTextSelection\");\n    const isMouseMove = mouseEvent.type === \"mousemove\";\n    const isOverFormFieldElement = (mouseEvent2) => {\n      const el = mouseEvent2.target;\n      const tagName = el?.tagName.toLocaleLowerCase();\n      return !!tagName?.match(\"^a$|textarea|input|select|button\");\n    };\n    return (\n      // when `isEnableCellTextSelect` is `true`, we need to preventDefault on mouseMove\n      // to avoid the grid text being selected while dragging components.\n      isEnableCellTextSelect && isMouseMove && mouseEvent.cancelable && _isEventFromThisGrid(gos, mouseEvent) && !isOverFormFieldElement(mouseEvent)\n    );\n  }\n  onTouchUp(touchEvent, el) {\n    let touch = this.getFirstActiveTouch(touchEvent.changedTouches);\n    if (!touch) {\n      touch = this.touchLastTime;\n    }\n    this.onUpCommon(touch, el);\n  }\n  onMouseUp(mouseEvent, el) {\n    this.onUpCommon(mouseEvent, el);\n  }\n  onUpCommon(eventOrTouch, el) {\n    if (this.dragging) {\n      this.dragging = false;\n      this.currentDragParams.onDragStop(eventOrTouch);\n      this.eventSvc.dispatchEvent({\n        type: \"dragStopped\",\n        target: el\n      });\n    }\n    this.resetDragProperties();\n  }\n  cancelDrag(el) {\n    this.eventSvc.dispatchEvent({\n      type: \"dragCancelled\",\n      target: el\n    });\n    this.currentDragParams?.onDragCancel?.();\n    this.resetDragProperties();\n  }\n  resetDragProperties() {\n    this.mouseStartEvent = null;\n    this.startTarget = null;\n    this.touchStart = null;\n    this.touchLastTime = null;\n    this.currentDragParams = null;\n    const { dragEndFunctions } = this;\n    dragEndFunctions.forEach((func) => func());\n    dragEndFunctions.length = 0;\n  }\n};\n\n// packages/ag-grid-community/src/entities/agColumnGroup.ts\nfunction createUniqueColumnGroupId(groupId, instanceId) {\n  return groupId + \"_\" + instanceId;\n}\nfunction isColumnGroup2(col) {\n  return col instanceof AgColumnGroup;\n}\nvar AgColumnGroup = class extends BeanStub {\n  constructor(providedColumnGroup, groupId, partId, pinned) {\n    super();\n    this.providedColumnGroup = providedColumnGroup;\n    this.groupId = groupId;\n    this.partId = partId;\n    this.pinned = pinned;\n    this.isColumn = false;\n    // depends on the open/closed state of the group, only displaying columns are stored here\n    this.displayedChildren = [];\n    // The measured height of this column's header when autoHeaderHeight is enabled\n    this.autoHeaderHeight = null;\n    this.parent = null;\n  }\n  // as the user is adding and removing columns, the groups are recalculated.\n  // this reset clears out all children, ready for children to be added again\n  reset() {\n    this.parent = null;\n    this.children = null;\n    this.displayedChildren = null;\n  }\n  getParent() {\n    return this.parent;\n  }\n  getUniqueId() {\n    return createUniqueColumnGroupId(this.groupId, this.partId);\n  }\n  isEmptyGroup() {\n    return this.displayedChildren.length === 0;\n  }\n  isMoving() {\n    const allLeafColumns = this.getProvidedColumnGroup().getLeafColumns();\n    if (!allLeafColumns || allLeafColumns.length === 0) {\n      return false;\n    }\n    return allLeafColumns.every((col) => col.isMoving());\n  }\n  checkLeft() {\n    this.displayedChildren.forEach((child) => {\n      if (isColumnGroup2(child)) {\n        child.checkLeft();\n      }\n    });\n    if (this.displayedChildren.length > 0) {\n      if (this.gos.get(\"enableRtl\")) {\n        const lastChild = _last(this.displayedChildren);\n        const lastChildLeft = lastChild.getLeft();\n        this.setLeft(lastChildLeft);\n      } else {\n        const firstChildLeft = this.displayedChildren[0].getLeft();\n        this.setLeft(firstChildLeft);\n      }\n    } else {\n      this.setLeft(null);\n    }\n  }\n  getLeft() {\n    return this.left;\n  }\n  getOldLeft() {\n    return this.oldLeft;\n  }\n  setLeft(left) {\n    this.oldLeft = this.left;\n    if (this.left !== left) {\n      this.left = left;\n      this.dispatchLocalEvent({ type: \"leftChanged\" });\n    }\n  }\n  getPinned() {\n    return this.pinned;\n  }\n  getGroupId() {\n    return this.groupId;\n  }\n  getPartId() {\n    return this.partId;\n  }\n  getActualWidth() {\n    let groupActualWidth = 0;\n    this.displayedChildren?.forEach((child) => {\n      groupActualWidth += child.getActualWidth();\n    });\n    return groupActualWidth;\n  }\n  isResizable() {\n    if (!this.displayedChildren) {\n      return false;\n    }\n    let result = false;\n    this.displayedChildren.forEach((child) => {\n      if (child.isResizable()) {\n        result = true;\n      }\n    });\n    return result;\n  }\n  getMinWidth() {\n    let result = 0;\n    this.displayedChildren.forEach((groupChild) => {\n      result += groupChild.getMinWidth();\n    });\n    return result;\n  }\n  addChild(child) {\n    if (!this.children) {\n      this.children = [];\n    }\n    this.children.push(child);\n  }\n  getDisplayedChildren() {\n    return this.displayedChildren;\n  }\n  getLeafColumns() {\n    const result = [];\n    this.addLeafColumns(result);\n    return result;\n  }\n  getDisplayedLeafColumns() {\n    const result = [];\n    this.addDisplayedLeafColumns(result);\n    return result;\n  }\n  getDefinition() {\n    return this.providedColumnGroup.getColGroupDef();\n  }\n  getColGroupDef() {\n    return this.providedColumnGroup.getColGroupDef();\n  }\n  isPadding() {\n    return this.providedColumnGroup.isPadding();\n  }\n  isExpandable() {\n    return this.providedColumnGroup.isExpandable();\n  }\n  isExpanded() {\n    return this.providedColumnGroup.isExpanded();\n  }\n  setExpanded(expanded) {\n    this.providedColumnGroup.setExpanded(expanded);\n  }\n  isAutoHeaderHeight() {\n    return !!this.getColGroupDef()?.autoHeaderHeight;\n  }\n  getAutoHeaderHeight() {\n    return this.autoHeaderHeight;\n  }\n  /** Returns true if the header height has changed */\n  setAutoHeaderHeight(height) {\n    const changed = height !== this.autoHeaderHeight;\n    this.autoHeaderHeight = height;\n    return changed;\n  }\n  addDisplayedLeafColumns(leafColumns) {\n    this.displayedChildren.forEach((child) => {\n      if (isColumn(child)) {\n        leafColumns.push(child);\n      } else if (isColumnGroup2(child)) {\n        child.addDisplayedLeafColumns(leafColumns);\n      }\n    });\n  }\n  addLeafColumns(leafColumns) {\n    this.children.forEach((child) => {\n      if (isColumn(child)) {\n        leafColumns.push(child);\n      } else if (isColumnGroup2(child)) {\n        child.addLeafColumns(leafColumns);\n      }\n    });\n  }\n  getChildren() {\n    return this.children;\n  }\n  getColumnGroupShow() {\n    return this.providedColumnGroup.getColumnGroupShow();\n  }\n  getProvidedColumnGroup() {\n    return this.providedColumnGroup;\n  }\n  getPaddingLevel() {\n    const parent = this.getParent();\n    if (!this.isPadding() || !parent || !parent.isPadding()) {\n      return 0;\n    }\n    return 1 + parent.getPaddingLevel();\n  }\n  calculateDisplayedColumns() {\n    this.displayedChildren = [];\n    let parentWithExpansion = this;\n    while (parentWithExpansion != null && parentWithExpansion.isPadding()) {\n      parentWithExpansion = parentWithExpansion.getParent();\n    }\n    const isExpandable = parentWithExpansion ? parentWithExpansion.getProvidedColumnGroup().isExpandable() : false;\n    if (!isExpandable) {\n      this.displayedChildren = this.children;\n      this.dispatchLocalEvent({ type: \"displayedChildrenChanged\" });\n      return;\n    }\n    this.children.forEach((child) => {\n      const emptyGroup = isColumnGroup2(child) && (!child.displayedChildren || !child.displayedChildren.length);\n      if (emptyGroup) {\n        return;\n      }\n      const headerGroupShow = child.getColumnGroupShow();\n      switch (headerGroupShow) {\n        case \"open\":\n          if (parentWithExpansion.getProvidedColumnGroup().isExpanded()) {\n            this.displayedChildren.push(child);\n          }\n          break;\n        case \"closed\":\n          if (!parentWithExpansion.getProvidedColumnGroup().isExpanded()) {\n            this.displayedChildren.push(child);\n          }\n          break;\n        default:\n          this.displayedChildren.push(child);\n          break;\n      }\n    });\n    this.dispatchLocalEvent({ type: \"displayedChildrenChanged\" });\n  }\n};\n\n// packages/ag-grid-community/src/entities/rowNode.ts\nvar ROW_ID_PREFIX_ROW_GROUP = \"row-group-\";\nvar ROW_ID_PREFIX_TOP_PINNED = \"t-\";\nvar ROW_ID_PREFIX_BOTTOM_PINNED = \"b-\";\nvar OBJECT_ID_SEQUENCE = 0;\nvar RowNode = class {\n  constructor(beans) {\n    /** `true` if this row is a master row, part of master / detail (ie row can be expanded to show detail) */\n    this.master = false;\n    /** `true` if this row is a detail row, part of master / detail (ie child row of an expanded master row)*/\n    this.detail = void 0;\n    /** The current row index. If the row is filtered out or in a collapsed group, this value will be `null`. */\n    this.rowIndex = null;\n    /** The key for the group eg Ireland, UK, USA */\n    this.key = null;\n    /**\n     * The index of the row in the source rowData array including any updates via transactions.\n     * It does not change when sorting, filtering, grouping, pivoting or any other UI related operations.\n     * If this is a filler node (a visual row created by AG Grid in tree data or grouping) the value will be `-1`.\n     *\n     * Generally readonly. It is modified only by:\n     * - ClientSideNodeManager, cast to ClientSideNodeManagerRowNode\n     * - ClientSideRowModel, cast to ClientSideRowModelRowNode\n     */\n    this.sourceRowIndex = -1;\n    /**\n     * Children mapped by the pivot columns.\n     *\n     * TODO: this field is currently used only by the GroupStrategy and Pivot.\n     * TreeStrategy does not use it, and pivot cannot be enabled with tree data.\n     * Creating a new object for every row when not pivoting and not grouping\n     * consumes memory unnecessarily. Setting it to null however currently breaks\n     * transactional updates in groups so this requires a deeper investigation on GroupStrategy.\n     */\n    this.childrenMapped = {};\n    /** The TreeNode associated to this row. Used only with tree data. */\n    this.treeNode = null;\n    /** The flags associated to this node. Used only with tree data. */\n    this.treeNodeFlags = 0;\n    /**\n     * This will be `true` if it has a rowIndex assigned, otherwise `false`.\n     */\n    this.displayed = false;\n    /** The row top position in pixels. */\n    this.rowTop = null;\n    /** The top pixel for this row last time, makes sense if data set was ordered or filtered,\n     * it is used so new rows can animate in from their old position. */\n    this.oldRowTop = null;\n    /** `true` by default - can be overridden via gridOptions.isRowSelectable(rowNode) */\n    this.selectable = true;\n    /**\n     * Used by sorting service - to give deterministic sort to groups. Previously we\n     * just id for this, however id is a string and had slower sorting compared to numbers.\n     * If re-naming this property, you must also update `IGNORED_SIBLING_PROPERTIES`\n     */\n    this.__objectId = OBJECT_ID_SEQUENCE++;\n    /** `true` when nodes with the same id are being removed and added as part of the same batch transaction */\n    this.alreadyRendered = false;\n    this.highlighted = null;\n    this.hovered = false;\n    this.__selected = false;\n    this.beans = beans;\n  }\n  /**\n   * Replaces the data on the `rowNode`. When this method is called, the grid will refresh the entire rendered row if it is displayed.\n   */\n  setData(data) {\n    this.setDataCommon(data, false);\n  }\n  // similar to setRowData, however it is expected that the data is the same data item. this\n  // is intended to be used with Redux type stores, where the whole data can be changed. we are\n  // guaranteed that the data is the same entity (so grid doesn't need to worry about the id of the\n  // underlying data changing, hence doesn't need to worry about selection). the grid, upon receiving\n  // dataChanged event, will refresh the cells rather than rip them all out (so user can show transitions).\n  /**\n   * Updates the data on the `rowNode`. When this method is called, the grid will refresh the entire rendered row if it is displayed.\n   */\n  updateData(data) {\n    this.setDataCommon(data, true);\n  }\n  setDataCommon(data, update) {\n    const { valueCache, selectionSvc, rowSpanSvc } = this.beans;\n    const oldData = this.data;\n    this.data = data;\n    valueCache?.onDataChanged();\n    this.updateDataOnDetailNode();\n    selectionSvc?.updateRowSelectable(this);\n    this.resetQuickFilterAggregateText();\n    const event = this.createDataChangedEvent(data, oldData, update);\n    this.__localEventService?.dispatchEvent(event);\n    rowSpanSvc?.onRowDataUpdated(this);\n  }\n  // when we are doing master / detail, the detail node is lazy created, but then kept around.\n  // so if we show / hide the detail, the same detail rowNode is used. so we need to keep the data\n  // in sync, otherwise expand/collapse of the detail would still show the old values.\n  updateDataOnDetailNode() {\n    if (this.detailNode) {\n      this.detailNode.data = this.data;\n    }\n  }\n  createDataChangedEvent(newData, oldData, update) {\n    return {\n      type: \"dataChanged\",\n      node: this,\n      oldData,\n      newData,\n      update\n    };\n  }\n  getRowIndexString() {\n    if (this.rowIndex == null) {\n      _error(13);\n      return null;\n    }\n    if (this.rowPinned === \"top\") {\n      return ROW_ID_PREFIX_TOP_PINNED + this.rowIndex;\n    }\n    if (this.rowPinned === \"bottom\") {\n      return ROW_ID_PREFIX_BOTTOM_PINNED + this.rowIndex;\n    }\n    return this.rowIndex.toString();\n  }\n  setDataAndId(data, id) {\n    const { selectionSvc } = this.beans;\n    const oldNode = selectionSvc?.createDaemonNode?.(this);\n    const oldData = this.data;\n    this.data = data;\n    this.updateDataOnDetailNode();\n    this.setId(id);\n    if (selectionSvc) {\n      selectionSvc.updateRowSelectable(this);\n      selectionSvc.syncInRowNode(this, oldNode);\n    }\n    const event = this.createDataChangedEvent(data, oldData, false);\n    this.__localEventService?.dispatchEvent(event);\n  }\n  setId(id) {\n    const getRowIdFunc = _getRowIdCallback(this.beans.gos);\n    if (getRowIdFunc) {\n      if (this.data) {\n        const parentKeys = this.parent?.getRoute() ?? [];\n        this.id = getRowIdFunc({\n          data: this.data,\n          parentKeys: parentKeys.length > 0 ? parentKeys : void 0,\n          level: this.level,\n          rowPinned: this.rowPinned\n        });\n        if (this.id.startsWith(ROW_ID_PREFIX_ROW_GROUP)) {\n          _error(14, {\n            groupPrefix: ROW_ID_PREFIX_ROW_GROUP\n          });\n        }\n      } else {\n        this.id = void 0;\n      }\n    } else {\n      this.id = id;\n    }\n  }\n  setRowTop(rowTop) {\n    this.oldRowTop = this.rowTop;\n    if (this.rowTop === rowTop) {\n      return;\n    }\n    this.rowTop = rowTop;\n    this.dispatchRowEvent(\"topChanged\");\n    this.setDisplayed(rowTop !== null);\n  }\n  clearRowTopAndRowIndex() {\n    this.oldRowTop = null;\n    this.setRowTop(null);\n    this.setRowIndex(null);\n  }\n  setHovered(hovered) {\n    this.hovered = hovered;\n  }\n  isHovered() {\n    return this.hovered;\n  }\n  /**\n   * Sets the row height.\n   * Call if you want to change the height initially assigned to the row.\n   * After calling, you must call `api.onRowHeightChanged()` so the grid knows it needs to work out the placement of the rows. */\n  setRowHeight(rowHeight, estimated = false) {\n    this.rowHeight = rowHeight;\n    this.rowHeightEstimated = estimated;\n    this.dispatchRowEvent(\"heightChanged\");\n  }\n  setExpanded(expanded, e, forceSync) {\n    this.beans.expansionSvc?.setExpanded(this, expanded, e, forceSync);\n  }\n  /**\n   * Replaces the value on the `rowNode` for the specified column. When complete,\n   * the grid will refresh the rendered cell on the required row only.\n   * **Note**: This method only fires `onCellEditRequest` when the Grid is in **Read Only** mode.\n   *\n   * @param colKey The column where the value should be updated\n   * @param newValue The new value\n   * @param eventSource The source of the event\n   * @returns `true` if the value was changed, otherwise `false`.\n   */\n  setDataValue(colKey, newValue, eventSource) {\n    const { colModel, valueSvc, gos, selectionSvc, rowSpanSvc } = this.beans;\n    const column = typeof colKey !== \"string\" ? colKey : colModel.getCol(colKey) ?? colModel.getColDefCol(colKey);\n    if (!column) {\n      return false;\n    }\n    const oldValue = valueSvc.getValueForDisplay(column, this);\n    if (gos.get(\"readOnlyEdit\")) {\n      const {\n        beans: { eventSvc },\n        data,\n        rowIndex,\n        rowPinned\n      } = this;\n      eventSvc.dispatchEvent({\n        type: \"cellEditRequest\",\n        event: null,\n        rowIndex,\n        rowPinned,\n        column,\n        colDef: column.colDef,\n        data,\n        node: this,\n        oldValue,\n        newValue,\n        value: newValue,\n        source: eventSource\n      });\n      return false;\n    }\n    const valueChanged = valueSvc.setValue(this, column, newValue, eventSource);\n    this.dispatchCellChangedEvent(column, newValue, oldValue);\n    selectionSvc?.updateRowSelectable(this);\n    rowSpanSvc?.onRowDataUpdated(this);\n    return valueChanged;\n  }\n  updateHasChildren() {\n    let newValue = this.group && !this.footer || this.childrenAfterGroup && this.childrenAfterGroup.length > 0;\n    const { rowChildrenSvc } = this.beans;\n    if (rowChildrenSvc) {\n      newValue = rowChildrenSvc.getHasChildrenValue(this);\n    }\n    if (newValue !== this.__hasChildren) {\n      this.__hasChildren = !!newValue;\n      this.dispatchRowEvent(\"hasChildrenChanged\");\n    }\n  }\n  hasChildren() {\n    if (this.__hasChildren == null) {\n      this.updateHasChildren();\n    }\n    return this.__hasChildren;\n  }\n  dispatchCellChangedEvent(column, newValue, oldValue) {\n    const cellChangedEvent = {\n      type: \"cellChanged\",\n      node: this,\n      column,\n      newValue,\n      oldValue\n    };\n    this.__localEventService?.dispatchEvent(cellChangedEvent);\n  }\n  /**\n   * The first time `quickFilter` runs, the grid creates a one-off string representation of the row.\n   * This string is then used for the quick filter instead of hitting each column separately.\n   * When you edit, using grid editing, this string gets cleared down.\n   * However if you edit without using grid editing, you will need to clear this string down for the row to be updated with the new values.\n   * Otherwise new values will not work with the `quickFilter`. */\n  resetQuickFilterAggregateText() {\n    this.quickFilterAggregateText = null;\n  }\n  /** Returns:\n   * - `true` if the node can be expanded, i.e it is a group or master row.\n   * - `false` if the node cannot be expanded\n   */\n  isExpandable() {\n    return this.beans.expansionSvc?.isExpandable(this) ?? false;\n  }\n  /** Returns:\n   * - `true` if node is selected,\n   * - `false` if the node isn't selected\n   * - `undefined` if it's partially selected (group where not all children are selected). */\n  isSelected() {\n    if (this.footer) {\n      return this.sibling.isSelected();\n    }\n    return this.__selected;\n  }\n  /** Perform a depth-first search of this node and its children. */\n  depthFirstSearch(callback) {\n    this.childrenAfterGroup?.forEach((child) => child.depthFirstSearch(callback));\n    callback(this);\n  }\n  dispatchRowEvent(type) {\n    this.__localEventService?.dispatchEvent({\n      type,\n      node: this\n    });\n  }\n  /**\n   * Select (or deselect) the node.\n   * @param newValue -`true` for selection, `false` for deselection.\n   * @param clearSelection - If selecting, then passing `true` will select the node exclusively (i.e. NOT do multi select). If doing deselection, `clearSelection` has no impact.\n   * @param source - Source property that will appear in the `selectionChanged` event.\n   */\n  setSelected(newValue, clearSelection = false, source = \"api\") {\n    this.beans.selectionSvc?.setNodesSelected({\n      nodes: [this],\n      newValue,\n      clearSelection,\n      source\n    });\n  }\n  /**\n   * Returns:\n   * - `true` if node is either pinned to the `top` or `bottom`\n   * - `false` if the node isn't pinned\n   */\n  isRowPinned() {\n    return !!this.rowPinned;\n  }\n  __addEventListener(eventType, listener) {\n    if (!this.__localEventService) {\n      this.__localEventService = new LocalEventService();\n    }\n    this.__localEventService.addEventListener(eventType, listener);\n  }\n  __removeEventListener(eventType, listener) {\n    this.removeLocalListener(eventType, listener);\n  }\n  /**\n   * PUBLIC USE ONLY: for internal use within AG Grid use the `__addEventListener` and `__removeEventListener` methods.\n   */\n  addEventListener(eventType, userListener) {\n    this.beans.validation?.checkRowEvents(eventType);\n    if (!this.__localEventService) {\n      this.__localEventService = new LocalEventService();\n    }\n    this.frameworkEventListenerService = this.beans.frameworkOverrides.createLocalEventListenerWrapper?.(\n      this.frameworkEventListenerService,\n      this.__localEventService\n    );\n    const listener = this.frameworkEventListenerService?.wrap(userListener) ?? userListener;\n    this.__localEventService.addEventListener(eventType, listener);\n  }\n  /**\n   * PUBLIC USE ONLY: for internal use within AG Grid use the `__addEventListener` and `__removeEventListener` methods.\n   */\n  removeEventListener(eventType, userListener) {\n    const listener = this.frameworkEventListenerService?.unwrap(userListener) ?? userListener;\n    this.removeLocalListener(eventType, listener);\n  }\n  removeLocalListener(eventType, listener) {\n    this.__localEventService?.removeEventListener(eventType, listener);\n    if (this.__localEventService?.noRegisteredListenersExist()) {\n      this.__localEventService = null;\n    }\n  }\n  /**\n   * @deprecated v32.2.0 Check `node.detail` then user provided callback `isFullWidthRow` instead.\n   *\n   * Returns:\n   * - `true` if the node is a full width cell\n   * - `false` if the node is not a full width cell\n   */\n  isFullWidthCell() {\n    _warn(61);\n    if (this.detail) {\n      return true;\n    }\n    const isFullWidthCellFunc = this.beans.gos.getCallback(\"isFullWidthRow\");\n    return isFullWidthCellFunc ? isFullWidthCellFunc({ rowNode: this }) : false;\n  }\n  /**\n   * Returns the route of keys to the row node. Returns undefined if the node has no key.\n   */\n  getRoute() {\n    if (this.level === -1) {\n      return [];\n    }\n    if (this.key == null) {\n      return void 0;\n    }\n    const res = [];\n    let pointer = this;\n    while (pointer && pointer.key != null) {\n      res.push(pointer.key);\n      pointer = pointer.parent;\n    }\n    return res.reverse();\n  }\n  setFirstChild(firstChild) {\n    if (this.firstChild !== firstChild) {\n      this.firstChild = firstChild;\n      this.dispatchRowEvent(\"firstChildChanged\");\n    }\n  }\n  setDisplayed(displayed) {\n    if (this.displayed !== displayed) {\n      this.displayed = displayed;\n      this.dispatchRowEvent(\"displayedChanged\");\n    }\n  }\n  setRowIndex(rowIndex) {\n    if (this.rowIndex !== rowIndex) {\n      this.rowIndex = rowIndex;\n      this.dispatchRowEvent(\"rowIndexChanged\");\n    }\n  }\n  setAllChildrenCount(allChildrenCount) {\n    if (this.allChildrenCount !== allChildrenCount) {\n      this.allChildrenCount = allChildrenCount;\n      this.dispatchRowEvent(\"allChildrenCountChanged\");\n    }\n  }\n  setUiLevel(uiLevel) {\n    if (this.uiLevel !== uiLevel) {\n      this.uiLevel = uiLevel;\n      this.dispatchRowEvent(\"uiLevelChanged\");\n    }\n  }\n};\n\n// packages/ag-grid-community/src/entities/rowNodeUtils.ts\nfunction _createGlobalRowEvent(rowNode, gos, type) {\n  return _addGridCommonParams(gos, {\n    type,\n    node: rowNode,\n    data: rowNode.data,\n    rowIndex: rowNode.rowIndex,\n    rowPinned: rowNode.rowPinned\n  });\n}\n\n// packages/ag-grid-community/src/filter/filterWrapperComp.ts\nvar FilterWrapperComp = class extends Component {\n  constructor(column, source) {\n    super(\n      /* html */\n      `<div class=\"ag-filter\"></div>`\n    );\n    this.column = column;\n    this.source = source;\n    this.filterWrapper = null;\n  }\n  postConstruct() {\n    this.createFilter(true);\n    this.addManagedEventListeners({ filterDestroyed: this.onFilterDestroyed.bind(this) });\n  }\n  hasFilter() {\n    return !!this.filterWrapper;\n  }\n  getFilter() {\n    return this.filterWrapper?.filterPromise ?? null;\n  }\n  afterInit() {\n    return this.filterWrapper?.filterPromise?.then(() => {\n    }) ?? AgPromise.resolve();\n  }\n  afterGuiAttached(params) {\n    this.filterWrapper?.filterPromise?.then((filter) => {\n      filter?.afterGuiAttached?.(params);\n    });\n  }\n  afterGuiDetached() {\n    this.filterWrapper?.filterPromise?.then((filter) => {\n      filter?.afterGuiDetached?.();\n    });\n  }\n  createFilter(init) {\n    const { column, source } = this;\n    this.filterWrapper = this.beans.filterManager?.getOrCreateFilterWrapper(column) ?? null;\n    if (!this.filterWrapper?.filterPromise) {\n      return;\n    }\n    this.filterWrapper.filterPromise.then((filter) => {\n      const guiFromFilter = filter.getGui();\n      if (!_exists(guiFromFilter)) {\n        _warn(69, { guiFromFilter });\n      }\n      this.appendChild(guiFromFilter);\n      if (init) {\n        this.eventSvc.dispatchEvent({\n          type: \"filterOpened\",\n          column,\n          source,\n          eGui: this.getGui()\n        });\n      }\n    });\n  }\n  onFilterDestroyed(event) {\n    if ((event.source === \"api\" || event.source === \"paramsUpdated\") && event.column.getId() === this.column.getId() && this.beans.colModel.getColDefCol(this.column)) {\n      _clearElement(this.getGui());\n      this.createFilter();\n    }\n  }\n  destroy() {\n    this.filterWrapper = null;\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/rendering/features/positionableFeature.ts\nvar RESIZE_CONTAINER_STYLE = \"ag-resizer-wrapper\";\nvar makeDiv = (dataRefPrefix, classSuffix) => `<div data-ref=\"${dataRefPrefix}Resizer\" class=\"ag-resizer ag-resizer-${classSuffix}\"></div>`;\nvar RESIZE_TEMPLATE = (\n  /* html */\n  `<div class=\"${RESIZE_CONTAINER_STYLE}\">\n        ${makeDiv(\"eTopLeft\", \"topLeft\")}\n        ${makeDiv(\"eTop\", \"top\")}\n        ${makeDiv(\"eTopRight\", \"topRight\")}\n        ${makeDiv(\"eRight\", \"right\")}\n        ${makeDiv(\"eBottomRight\", \"bottomRight\")}\n        ${makeDiv(\"eBottom\", \"bottom\")}\n        ${makeDiv(\"eBottomLeft\", \"bottomLeft\")}\n        ${makeDiv(\"eLeft\", \"left\")}\n    </div>`\n);\nvar PositionableFeature = class extends BeanStub {\n  constructor(element, config) {\n    super();\n    this.element = element;\n    this.dragStartPosition = {\n      x: 0,\n      y: 0\n    };\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this.lastSize = {\n      width: -1,\n      height: -1\n    };\n    this.positioned = false;\n    this.resizersAdded = false;\n    this.resizeListeners = [];\n    this.boundaryEl = null;\n    this.isResizing = false;\n    this.isMoving = false;\n    this.resizable = {};\n    this.movable = false;\n    this.currentResizer = null;\n    this.config = Object.assign({}, { popup: false }, config);\n  }\n  wireBeans(beans) {\n    this.popupSvc = beans.popupSvc;\n    this.dragSvc = beans.dragSvc;\n  }\n  center() {\n    const { clientHeight, clientWidth } = this.offsetParent;\n    const x = clientWidth / 2 - this.getWidth() / 2;\n    const y = clientHeight / 2 - this.getHeight() / 2;\n    this.offsetElement(x, y);\n  }\n  initialisePosition() {\n    if (this.positioned) {\n      return;\n    }\n    const { centered, forcePopupParentAsOffsetParent, minWidth, width, minHeight, height, x, y } = this.config;\n    if (!this.offsetParent) {\n      this.setOffsetParent();\n    }\n    let computedMinHeight = 0;\n    let computedMinWidth = 0;\n    const isElementVisible = _isVisible(this.element);\n    if (isElementVisible) {\n      const boundaryEl = this.findBoundaryElement();\n      const offsetParentComputedStyles = window.getComputedStyle(boundaryEl);\n      if (offsetParentComputedStyles.minWidth != null) {\n        const paddingWidth = boundaryEl.offsetWidth - this.element.offsetWidth;\n        computedMinWidth = parseInt(offsetParentComputedStyles.minWidth, 10) - paddingWidth;\n      }\n      if (offsetParentComputedStyles.minHeight != null) {\n        const paddingHeight = boundaryEl.offsetHeight - this.element.offsetHeight;\n        computedMinHeight = parseInt(offsetParentComputedStyles.minHeight, 10) - paddingHeight;\n      }\n    }\n    this.minHeight = minHeight || computedMinHeight;\n    this.minWidth = minWidth || computedMinWidth;\n    if (width) {\n      this.setWidth(width);\n    }\n    if (height) {\n      this.setHeight(height);\n    }\n    if (!width || !height) {\n      this.refreshSize();\n    }\n    if (centered) {\n      this.center();\n    } else if (x || y) {\n      this.offsetElement(x, y);\n    } else if (isElementVisible && forcePopupParentAsOffsetParent) {\n      let boundaryEl = this.boundaryEl;\n      let initialisedDuringPositioning = true;\n      if (!boundaryEl) {\n        boundaryEl = this.findBoundaryElement();\n        initialisedDuringPositioning = false;\n      }\n      if (boundaryEl) {\n        const top = parseFloat(boundaryEl.style.top);\n        const left = parseFloat(boundaryEl.style.left);\n        if (initialisedDuringPositioning) {\n          this.offsetElement(isNaN(left) ? 0 : left, isNaN(top) ? 0 : top);\n        } else {\n          this.setPosition(left, top);\n        }\n      }\n    }\n    this.positioned = !!this.offsetParent;\n  }\n  isPositioned() {\n    return this.positioned;\n  }\n  getPosition() {\n    return this.position;\n  }\n  setMovable(movable, moveElement) {\n    if (!this.config.popup || movable === this.movable) {\n      return;\n    }\n    this.movable = movable;\n    const params = this.moveElementDragListener || {\n      eElement: moveElement,\n      onDragStart: this.onMoveStart.bind(this),\n      onDragging: this.onMove.bind(this),\n      onDragStop: this.onMoveEnd.bind(this)\n    };\n    if (movable) {\n      this.dragSvc?.addDragSource(params);\n      this.moveElementDragListener = params;\n    } else {\n      this.dragSvc?.removeDragSource(params);\n      this.moveElementDragListener = void 0;\n    }\n  }\n  setResizable(resizable) {\n    this.clearResizeListeners();\n    if (resizable) {\n      this.addResizers();\n    } else {\n      this.removeResizers();\n    }\n    if (typeof resizable === \"boolean\") {\n      if (resizable === false) {\n        return;\n      }\n      resizable = {\n        topLeft: resizable,\n        top: resizable,\n        topRight: resizable,\n        right: resizable,\n        bottomRight: resizable,\n        bottom: resizable,\n        bottomLeft: resizable,\n        left: resizable\n      };\n    }\n    Object.keys(resizable).forEach((side) => {\n      const resizableStructure = resizable;\n      const isSideResizable = !!resizableStructure[side];\n      const resizerEl = this.getResizerElement(side);\n      const params = {\n        dragStartPixels: 0,\n        eElement: resizerEl,\n        onDragStart: (e) => this.onResizeStart(e, side),\n        onDragging: this.onResize.bind(this),\n        onDragStop: (e) => this.onResizeEnd(e, side)\n      };\n      if (isSideResizable || !this.isAlive() && !isSideResizable) {\n        if (isSideResizable) {\n          this.dragSvc?.addDragSource(params);\n          this.resizeListeners.push(params);\n          resizerEl.style.pointerEvents = \"all\";\n        } else {\n          resizerEl.style.pointerEvents = \"none\";\n        }\n        this.resizable[side] = isSideResizable;\n      }\n    });\n  }\n  removeSizeFromEl() {\n    this.element.style.removeProperty(\"height\");\n    this.element.style.removeProperty(\"width\");\n    this.element.style.removeProperty(\"flex\");\n  }\n  restoreLastSize() {\n    this.element.style.flex = \"0 0 auto\";\n    const { height, width } = this.lastSize;\n    if (width !== -1) {\n      this.element.style.width = `${width}px`;\n    }\n    if (height !== -1) {\n      this.element.style.height = `${height}px`;\n    }\n  }\n  getHeight() {\n    return this.element.offsetHeight;\n  }\n  setHeight(height) {\n    const { popup } = this.config;\n    const eGui = this.element;\n    let isPercent = false;\n    if (typeof height === \"string\" && height.indexOf(\"%\") !== -1) {\n      _setFixedHeight(eGui, height);\n      height = _getAbsoluteHeight(eGui);\n      isPercent = true;\n    } else {\n      height = Math.max(this.minHeight, height);\n      if (this.positioned) {\n        const availableHeight = this.getAvailableHeight();\n        if (availableHeight && height > availableHeight) {\n          height = availableHeight;\n        }\n      }\n    }\n    if (this.getHeight() === height) {\n      return;\n    }\n    if (!isPercent) {\n      if (popup) {\n        _setFixedHeight(eGui, height);\n      } else {\n        eGui.style.height = `${height}px`;\n        eGui.style.flex = \"0 0 auto\";\n        this.lastSize.height = typeof height === \"number\" ? height : parseFloat(height);\n      }\n    } else {\n      eGui.style.maxHeight = \"unset\";\n      eGui.style.minHeight = \"unset\";\n    }\n  }\n  getAvailableHeight() {\n    const { popup, forcePopupParentAsOffsetParent } = this.config;\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    const { clientHeight } = this.offsetParent;\n    if (!clientHeight) {\n      return null;\n    }\n    const elRect = this.element.getBoundingClientRect();\n    const offsetParentRect = this.offsetParent.getBoundingClientRect();\n    const yPosition = popup ? this.position.y : elRect.top;\n    const parentTop = popup ? 0 : offsetParentRect.top;\n    let additionalHeight = 0;\n    if (forcePopupParentAsOffsetParent) {\n      const parentEl = this.element.parentElement;\n      if (parentEl) {\n        const { bottom } = parentEl.getBoundingClientRect();\n        additionalHeight = bottom - elRect.bottom;\n      }\n    }\n    const availableHeight = clientHeight + parentTop - yPosition - additionalHeight;\n    return availableHeight;\n  }\n  getWidth() {\n    return this.element.offsetWidth;\n  }\n  setWidth(width) {\n    const eGui = this.element;\n    const { popup } = this.config;\n    let isPercent = false;\n    if (typeof width === \"string\" && width.indexOf(\"%\") !== -1) {\n      _setFixedWidth(eGui, width);\n      width = _getAbsoluteWidth(eGui);\n      isPercent = true;\n    } else if (this.positioned) {\n      width = Math.max(this.minWidth, width);\n      const { clientWidth } = this.offsetParent;\n      const xPosition = popup ? this.position.x : this.element.getBoundingClientRect().left;\n      if (clientWidth && width + xPosition > clientWidth) {\n        width = clientWidth - xPosition;\n      }\n    }\n    if (this.getWidth() === width) {\n      return;\n    }\n    if (!isPercent) {\n      if (this.config.popup) {\n        _setFixedWidth(eGui, width);\n      } else {\n        eGui.style.width = `${width}px`;\n        eGui.style.flex = \" unset\";\n        this.lastSize.width = typeof width === \"number\" ? width : parseFloat(width);\n      }\n    } else {\n      eGui.style.maxWidth = \"unset\";\n      eGui.style.minWidth = \"unset\";\n    }\n  }\n  offsetElement(x = 0, y = 0) {\n    const { forcePopupParentAsOffsetParent } = this.config;\n    const ePopup = forcePopupParentAsOffsetParent ? this.boundaryEl : this.element;\n    if (!ePopup) {\n      return;\n    }\n    this.popupSvc?.positionPopup({\n      ePopup,\n      keepWithinBounds: true,\n      skipObserver: this.movable || this.isResizable(),\n      updatePosition: () => ({ x, y })\n    });\n    this.setPosition(parseFloat(ePopup.style.left), parseFloat(ePopup.style.top));\n  }\n  constrainSizeToAvailableHeight(constrain) {\n    if (!this.config.forcePopupParentAsOffsetParent) {\n      return;\n    }\n    const applyMaxHeightToElement = () => {\n      const availableHeight = this.getAvailableHeight();\n      this.element.style.setProperty(\"max-height\", `${availableHeight}px`);\n    };\n    if (constrain && this.popupSvc) {\n      this.resizeObserverSubscriber = _observeResize(\n        this.beans,\n        this.popupSvc?.getPopupParent(),\n        applyMaxHeightToElement\n      );\n    } else {\n      this.element.style.removeProperty(\"max-height\");\n      if (this.resizeObserverSubscriber) {\n        this.resizeObserverSubscriber();\n        this.resizeObserverSubscriber = void 0;\n      }\n    }\n  }\n  setPosition(x, y) {\n    this.position.x = x;\n    this.position.y = y;\n  }\n  updateDragStartPosition(x, y) {\n    this.dragStartPosition = { x, y };\n  }\n  calculateMouseMovement(params) {\n    const { e, isLeft, isTop, anywhereWithin, topBuffer } = params;\n    const xDiff = e.clientX - this.dragStartPosition.x;\n    const yDiff = e.clientY - this.dragStartPosition.y;\n    const movementX = this.shouldSkipX(e, !!isLeft, !!anywhereWithin, xDiff) ? 0 : xDiff;\n    const movementY = this.shouldSkipY(e, !!isTop, topBuffer, yDiff) ? 0 : yDiff;\n    return { movementX, movementY };\n  }\n  shouldSkipX(e, isLeft, anywhereWithin, diff) {\n    const elRect = this.element.getBoundingClientRect();\n    const parentRect = this.offsetParent.getBoundingClientRect();\n    const boundaryElRect = this.boundaryEl.getBoundingClientRect();\n    const xPosition = this.config.popup ? this.position.x : elRect.left;\n    let skipX = xPosition <= 0 && parentRect.left >= e.clientX || parentRect.right <= e.clientX && parentRect.right <= boundaryElRect.right;\n    if (skipX) {\n      return true;\n    }\n    if (isLeft) {\n      skipX = // skip if we are moving to the left and the cursor\n      // is positioned to the right of the left side anchor\n      diff < 0 && e.clientX > xPosition + parentRect.left || // skip if we are moving to the right and the cursor\n      // is positioned to the left of the dialog\n      diff > 0 && e.clientX < xPosition + parentRect.left;\n    } else {\n      if (anywhereWithin) {\n        skipX = diff < 0 && e.clientX > boundaryElRect.right || diff > 0 && e.clientX < xPosition + parentRect.left;\n      } else {\n        skipX = // if the movement is bound to the right side of the dialog\n        // we skip if we are moving to the left and the cursor\n        // is to the right of the dialog\n        diff < 0 && e.clientX > boundaryElRect.right || // or skip if we are moving to the right and the cursor\n        // is to the left of the right side anchor\n        diff > 0 && e.clientX < boundaryElRect.right;\n      }\n    }\n    return skipX;\n  }\n  shouldSkipY(e, isTop, topBuffer = 0, diff) {\n    const elRect = this.element.getBoundingClientRect();\n    const parentRect = this.offsetParent.getBoundingClientRect();\n    const boundaryElRect = this.boundaryEl.getBoundingClientRect();\n    const yPosition = this.config.popup ? this.position.y : elRect.top;\n    let skipY = yPosition <= 0 && parentRect.top >= e.clientY || parentRect.bottom <= e.clientY && parentRect.bottom <= boundaryElRect.bottom;\n    if (skipY) {\n      return true;\n    }\n    if (isTop) {\n      skipY = // skip if we are moving to towards top and the cursor is\n      // below the top anchor + topBuffer\n      // note: topBuffer is used when moving the dialog using the title bar\n      diff < 0 && e.clientY > yPosition + parentRect.top + topBuffer || // skip if we are moving to the bottom and the cursor is\n      // above the top anchor\n      diff > 0 && e.clientY < yPosition + parentRect.top;\n    } else {\n      skipY = // skip if we are moving towards the top and the cursor\n      // is below the bottom anchor\n      diff < 0 && e.clientY > boundaryElRect.bottom || // skip if we are moving towards the bottom and the cursor\n      // is above the bottom anchor\n      diff > 0 && e.clientY < boundaryElRect.bottom;\n    }\n    return skipY;\n  }\n  createResizeMap() {\n    const eGui = this.element;\n    this.resizerMap = {\n      topLeft: { element: eGui.querySelector(\"[data-ref=eTopLeftResizer]\") },\n      top: { element: eGui.querySelector(\"[data-ref=eTopResizer]\") },\n      topRight: { element: eGui.querySelector(\"[data-ref=eTopRightResizer]\") },\n      right: { element: eGui.querySelector(\"[data-ref=eRightResizer]\") },\n      bottomRight: { element: eGui.querySelector(\"[data-ref=eBottomRightResizer]\") },\n      bottom: { element: eGui.querySelector(\"[data-ref=eBottomResizer]\") },\n      bottomLeft: { element: eGui.querySelector(\"[data-ref=eBottomLeftResizer]\") },\n      left: { element: eGui.querySelector(\"[data-ref=eLeftResizer]\") }\n    };\n  }\n  addResizers() {\n    if (this.resizersAdded) {\n      return;\n    }\n    const eGui = this.element;\n    if (!eGui) {\n      return;\n    }\n    const parser = new DOMParser();\n    const resizers = parser.parseFromString(RESIZE_TEMPLATE, \"text/html\").body;\n    eGui.appendChild(resizers.firstChild);\n    this.createResizeMap();\n    this.resizersAdded = true;\n  }\n  removeResizers() {\n    this.resizerMap = void 0;\n    const resizerEl = this.element.querySelector(`.${RESIZE_CONTAINER_STYLE}`);\n    if (resizerEl) {\n      this.element.removeChild(resizerEl);\n    }\n    this.resizersAdded = false;\n  }\n  getResizerElement(side) {\n    return this.resizerMap[side].element;\n  }\n  onResizeStart(e, side) {\n    this.boundaryEl = this.findBoundaryElement();\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    this.currentResizer = {\n      isTop: !!side.match(/top/i),\n      isRight: !!side.match(/right/i),\n      isBottom: !!side.match(/bottom/i),\n      isLeft: !!side.match(/left/i)\n    };\n    this.element.classList.add(\"ag-resizing\");\n    this.resizerMap[side].element.classList.add(\"ag-active\");\n    const { popup, forcePopupParentAsOffsetParent } = this.config;\n    if (!popup && !forcePopupParentAsOffsetParent) {\n      this.applySizeToSiblings(this.currentResizer.isBottom || this.currentResizer.isTop);\n    }\n    this.isResizing = true;\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  getSiblings() {\n    const element = this.element;\n    const parent = element.parentElement;\n    if (!parent) {\n      return null;\n    }\n    return Array.prototype.slice.call(parent.children).filter((el) => !el.classList.contains(\"ag-hidden\"));\n  }\n  getMinSizeOfSiblings() {\n    const siblings = this.getSiblings() || [];\n    let height = 0;\n    let width = 0;\n    for (let i = 0; i < siblings.length; i++) {\n      const currentEl = siblings[i];\n      const isFlex = !!currentEl.style.flex && currentEl.style.flex !== \"0 0 auto\";\n      if (currentEl === this.element) {\n        continue;\n      }\n      let nextHeight = this.minHeight || 0;\n      let nextWidth = this.minWidth || 0;\n      if (isFlex) {\n        const computedStyle = window.getComputedStyle(currentEl);\n        if (computedStyle.minHeight) {\n          nextHeight = parseInt(computedStyle.minHeight, 10);\n        }\n        if (computedStyle.minWidth) {\n          nextWidth = parseInt(computedStyle.minWidth, 10);\n        }\n      } else {\n        nextHeight = currentEl.offsetHeight;\n        nextWidth = currentEl.offsetWidth;\n      }\n      height += nextHeight;\n      width += nextWidth;\n    }\n    return { height, width };\n  }\n  applySizeToSiblings(vertical) {\n    let containerToFlex = null;\n    const siblings = this.getSiblings();\n    if (!siblings) {\n      return;\n    }\n    for (let i = 0; i < siblings.length; i++) {\n      const el = siblings[i];\n      if (el === containerToFlex) {\n        continue;\n      }\n      if (vertical) {\n        el.style.height = `${el.offsetHeight}px`;\n      } else {\n        el.style.width = `${el.offsetWidth}px`;\n      }\n      el.style.flex = \"0 0 auto\";\n      if (el === this.element) {\n        containerToFlex = siblings[i + 1];\n      }\n    }\n    if (containerToFlex) {\n      containerToFlex.style.removeProperty(\"height\");\n      containerToFlex.style.removeProperty(\"min-height\");\n      containerToFlex.style.removeProperty(\"max-height\");\n      containerToFlex.style.flex = \"1 1 auto\";\n    }\n  }\n  isResizable() {\n    return Object.values(this.resizable).some((value) => value);\n  }\n  onResize(e) {\n    if (!this.isResizing || !this.currentResizer) {\n      return;\n    }\n    const { popup, forcePopupParentAsOffsetParent } = this.config;\n    const { isTop, isRight, isBottom, isLeft } = this.currentResizer;\n    const isHorizontal = isRight || isLeft;\n    const isVertical = isBottom || isTop;\n    const { movementX, movementY } = this.calculateMouseMovement({ e, isLeft, isTop });\n    const xPosition = this.position.x;\n    const yPosition = this.position.y;\n    let offsetLeft = 0;\n    let offsetTop = 0;\n    if (isHorizontal && movementX) {\n      const direction = isLeft ? -1 : 1;\n      const oldWidth = this.getWidth();\n      const newWidth = oldWidth + movementX * direction;\n      let skipWidth = false;\n      if (isLeft) {\n        offsetLeft = oldWidth - newWidth;\n        if (xPosition + offsetLeft <= 0 || newWidth <= this.minWidth) {\n          skipWidth = true;\n          offsetLeft = 0;\n        }\n      }\n      if (!skipWidth) {\n        this.setWidth(newWidth);\n      }\n    }\n    if (isVertical && movementY) {\n      const direction = isTop ? -1 : 1;\n      const oldHeight = this.getHeight();\n      const newHeight = oldHeight + movementY * direction;\n      let skipHeight = false;\n      if (isTop) {\n        offsetTop = oldHeight - newHeight;\n        if (yPosition + offsetTop <= 0 || newHeight <= this.minHeight) {\n          skipHeight = true;\n          offsetTop = 0;\n        }\n      } else {\n        if (!this.config.popup && !this.config.forcePopupParentAsOffsetParent && oldHeight < newHeight && this.getMinSizeOfSiblings().height + newHeight > this.element.parentElement.offsetHeight) {\n          skipHeight = true;\n        }\n      }\n      if (!skipHeight) {\n        this.setHeight(newHeight);\n      }\n    }\n    this.updateDragStartPosition(e.clientX, e.clientY);\n    if ((popup || forcePopupParentAsOffsetParent) && offsetLeft || offsetTop) {\n      this.offsetElement(xPosition + offsetLeft, yPosition + offsetTop);\n    }\n  }\n  onResizeEnd(e, side) {\n    this.isResizing = false;\n    this.currentResizer = null;\n    this.boundaryEl = null;\n    this.element.classList.remove(\"ag-resizing\");\n    this.resizerMap[side].element.classList.remove(\"ag-active\");\n    this.dispatchLocalEvent({ type: \"resize\" });\n  }\n  refreshSize() {\n    const eGui = this.element;\n    if (this.config.popup) {\n      if (!this.config.width) {\n        this.setWidth(eGui.offsetWidth);\n      }\n      if (!this.config.height) {\n        this.setHeight(eGui.offsetHeight);\n      }\n    }\n  }\n  onMoveStart(e) {\n    this.boundaryEl = this.findBoundaryElement();\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    this.isMoving = true;\n    this.element.classList.add(\"ag-moving\");\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  onMove(e) {\n    if (!this.isMoving) {\n      return;\n    }\n    const { x, y } = this.position;\n    let topBuffer;\n    if (this.config.calculateTopBuffer) {\n      topBuffer = this.config.calculateTopBuffer();\n    }\n    const { movementX, movementY } = this.calculateMouseMovement({\n      e,\n      isTop: true,\n      anywhereWithin: true,\n      topBuffer\n    });\n    this.offsetElement(x + movementX, y + movementY);\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  onMoveEnd() {\n    this.isMoving = false;\n    this.boundaryEl = null;\n    this.element.classList.remove(\"ag-moving\");\n  }\n  setOffsetParent() {\n    if (this.config.forcePopupParentAsOffsetParent && this.popupSvc) {\n      this.offsetParent = this.popupSvc.getPopupParent();\n    } else {\n      this.offsetParent = this.element.offsetParent;\n    }\n  }\n  findBoundaryElement() {\n    let el = this.element;\n    while (el) {\n      if (window.getComputedStyle(el).position !== \"static\") {\n        return el;\n      }\n      el = el.parentElement;\n    }\n    return this.element;\n  }\n  clearResizeListeners() {\n    while (this.resizeListeners.length) {\n      const params = this.resizeListeners.pop();\n      this.dragSvc?.removeDragSource(params);\n    }\n  }\n  destroy() {\n    super.destroy();\n    if (this.moveElementDragListener) {\n      this.dragSvc?.removeDragSource(this.moveElementDragListener);\n    }\n    this.constrainSizeToAvailableHeight(false);\n    this.clearResizeListeners();\n    this.removeResizers();\n  }\n};\n\n// packages/ag-grid-community/src/widgets/managedFocusFeature.ts\nvar FOCUS_MANAGED_CLASS = \"ag-focus-managed\";\nvar ManagedFocusFeature = class extends BeanStub {\n  constructor(eFocusable, callbacks = {}) {\n    super();\n    this.eFocusable = eFocusable;\n    this.callbacks = callbacks;\n    this.callbacks = {\n      shouldStopEventPropagation: () => false,\n      onTabKeyDown: (e) => {\n        if (e.defaultPrevented) {\n          return;\n        }\n        const nextRoot = _findNextFocusableElement(this.beans, this.eFocusable, false, e.shiftKey);\n        if (!nextRoot) {\n          return;\n        }\n        nextRoot.focus();\n        e.preventDefault();\n      },\n      ...callbacks\n    };\n  }\n  postConstruct() {\n    const {\n      eFocusable,\n      callbacks: { onFocusIn, onFocusOut }\n    } = this;\n    eFocusable.classList.add(FOCUS_MANAGED_CLASS);\n    this.addKeyDownListeners(eFocusable);\n    if (onFocusIn) {\n      this.addManagedElementListeners(eFocusable, { focusin: onFocusIn });\n    }\n    if (onFocusOut) {\n      this.addManagedElementListeners(eFocusable, { focusout: onFocusOut });\n    }\n  }\n  addKeyDownListeners(eGui) {\n    this.addManagedElementListeners(eGui, {\n      keydown: (e) => {\n        if (e.defaultPrevented || _isStopPropagationForAgGrid(e)) {\n          return;\n        }\n        const { callbacks } = this;\n        if (callbacks.shouldStopEventPropagation(e)) {\n          _stopPropagationForAgGrid(e);\n          return;\n        }\n        if (e.key === KeyCode.TAB) {\n          callbacks.onTabKeyDown(e);\n        } else if (callbacks.handleKeyDown) {\n          callbacks.handleKeyDown(e);\n        }\n      }\n    });\n  }\n};\n\n// packages/ag-grid-community/src/filter/filterLocaleText.ts\nvar FILTER_LOCALE_TEXT = {\n  applyFilter: \"Apply\",\n  clearFilter: \"Clear\",\n  resetFilter: \"Reset\",\n  cancelFilter: \"Cancel\",\n  textFilter: \"Text Filter\",\n  numberFilter: \"Number Filter\",\n  dateFilter: \"Date Filter\",\n  setFilter: \"Set Filter\",\n  filterOoo: \"Filter...\",\n  empty: \"Choose one\",\n  equals: \"Equals\",\n  notEqual: \"Does not equal\",\n  lessThan: \"Less than\",\n  greaterThan: \"Greater than\",\n  inRange: \"Between\",\n  inRangeStart: \"From\",\n  inRangeEnd: \"To\",\n  lessThanOrEqual: \"Less than or equal to\",\n  greaterThanOrEqual: \"Greater than or equal to\",\n  contains: \"Contains\",\n  notContains: \"Does not contain\",\n  startsWith: \"Begins with\",\n  endsWith: \"Ends with\",\n  blank: \"Blank\",\n  notBlank: \"Not blank\",\n  before: \"Before\",\n  after: \"After\",\n  andCondition: \"AND\",\n  orCondition: \"OR\",\n  dateFormatOoo: \"yyyy-mm-dd\"\n};\n\n// packages/ag-grid-community/src/filter/floating/provided/providedFilterUtils.ts\nfunction getDebounceMs(params, debounceDefault) {\n  const { debounceMs } = params;\n  if (isUseApplyButton(params)) {\n    if (debounceMs != null) {\n      _warn(71);\n    }\n    return 0;\n  }\n  return debounceMs ?? debounceDefault;\n}\nfunction isUseApplyButton(params) {\n  return (params.buttons?.indexOf(\"apply\") ?? -1) >= 0;\n}\n\n// packages/ag-grid-community/src/filter/provided/providedFilter.ts\nvar ProvidedFilter = class extends Component {\n  constructor(filterNameKey) {\n    super();\n    this.filterNameKey = filterNameKey;\n    this.applyActive = false;\n    this.hidePopup = null;\n    this.debouncePending = false;\n    // after the user hits 'apply' the model gets copied to here. this is then the model that we use for\n    // all filtering. so if user changes UI but doesn't hit apply, then the UI will be out of sync with this model.\n    // this is what we want, as the UI should only become the 'active' filter once it's applied. when apply is\n    // inactive, this model will be in sync (following the debounce ms). if the UI is not a valid filter\n    // (eg the value is missing so nothing to filter on, or for set filter all checkboxes are checked so filter\n    // not active) then this appliedModel will be null/undefined.\n    this.appliedModel = null;\n    this.eFilterBody = RefPlaceholder;\n    this.buttonListeners = [];\n    // subclasses can override this to provide alternative debounce defaults\n    this.defaultDebounceMs = 0;\n  }\n  postConstruct() {\n    this.resetTemplate();\n    this.createManagedBean(\n      new ManagedFocusFeature(this.getFocusableElement(), {\n        handleKeyDown: this.handleKeyDown.bind(this)\n      })\n    );\n    this.positionableFeature = new PositionableFeature(this.getPositionableElement(), {\n      forcePopupParentAsOffsetParent: true\n    });\n    this.createBean(this.positionableFeature);\n  }\n  // override\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  handleKeyDown(e) {\n  }\n  getFilterTitle() {\n    return this.translate(this.filterNameKey);\n  }\n  isFilterActive() {\n    return !!this.appliedModel;\n  }\n  resetTemplate(paramsMap) {\n    let eGui = this.getGui();\n    if (eGui) {\n      eGui.removeEventListener(\"submit\", this.onFormSubmit);\n    }\n    const templateString = (\n      /* html */\n      `\n            <form class=\"ag-filter-wrapper\">\n                <div class=\"ag-filter-body-wrapper ag-${this.getCssIdentifier()}-body-wrapper\" data-ref=\"eFilterBody\">\n                    ${this.createBodyTemplate()}\n                </div>\n            </form>`\n    );\n    this.setTemplate(templateString, this.getAgComponents(), paramsMap);\n    eGui = this.getGui();\n    eGui?.addEventListener(\"submit\", this.onFormSubmit);\n  }\n  isReadOnly() {\n    return !!this.params.readOnly;\n  }\n  init(params) {\n    this.setParams(params);\n    this.resetUiToDefaults(true).then(() => {\n      this.updateUiVisibility();\n      this.setupOnBtApplyDebounce();\n    });\n  }\n  setParams(params) {\n    this.params = params;\n    this.applyActive = isUseApplyButton(params);\n    this.resetButtonsPanel(params);\n  }\n  updateParams(params) {\n    this.params = params;\n    this.applyActive = isUseApplyButton(params);\n    this.resetUiToActiveModel(this.getModel(), () => {\n      this.updateUiVisibility();\n      this.setupOnBtApplyDebounce();\n    });\n  }\n  resetButtonsPanel(newParams, oldParams) {\n    const { buttons: oldButtons, readOnly: oldReadOnly } = oldParams ?? {};\n    const { buttons, readOnly } = newParams;\n    if (oldReadOnly === readOnly && _jsonEquals(oldButtons, buttons)) {\n      return;\n    }\n    const hasButtons = buttons && buttons.length > 0 && !this.isReadOnly();\n    if (!this.eButtonsPanel) {\n      if (hasButtons) {\n        this.eButtonsPanel = document.createElement(\"div\");\n        this.eButtonsPanel.classList.add(\"ag-filter-apply-panel\");\n      }\n    } else {\n      _clearElement(this.eButtonsPanel);\n      this.buttonListeners.forEach((destroyFunc) => destroyFunc());\n      this.buttonListeners = [];\n    }\n    if (!hasButtons) {\n      if (this.eButtonsPanel) {\n        _removeFromParent(this.eButtonsPanel);\n      }\n      return;\n    }\n    const fragment = document.createDocumentFragment();\n    const addButton = (type) => {\n      let clickListener;\n      const text = type ? this.translate(`${type}Filter`) : void 0;\n      switch (type) {\n        case \"apply\":\n          clickListener = (e) => this.onBtApply(false, false, e);\n          break;\n        case \"clear\":\n          clickListener = () => this.onBtClear();\n          break;\n        case \"reset\":\n          clickListener = () => this.onBtReset();\n          break;\n        case \"cancel\":\n          clickListener = (e) => {\n            this.onBtCancel(e);\n          };\n          break;\n        default:\n          _warn(75);\n          return;\n      }\n      const buttonType = type === \"apply\" ? \"submit\" : \"button\";\n      const button = _loadTemplate(\n        /* html */\n        `<button\n                    type=\"${buttonType}\"\n                    data-ref=\"${type}FilterButton\"\n                    class=\"ag-button ag-standard-button ag-filter-apply-panel-button\"\n                >${text}\n                </button>`\n      );\n      this.buttonListeners.push(...this.addManagedElementListeners(button, { click: clickListener }));\n      fragment.append(button);\n    };\n    buttons.forEach((type) => addButton(type));\n    this.eButtonsPanel.append(fragment);\n    this.getGui().appendChild(this.eButtonsPanel);\n  }\n  setupOnBtApplyDebounce() {\n    const debounceMs = getDebounceMs(this.params, this.defaultDebounceMs);\n    const debounceFunc = _debounce(this, this.checkApplyDebounce.bind(this), debounceMs);\n    this.onBtApplyDebounce = () => {\n      this.debouncePending = true;\n      debounceFunc();\n    };\n  }\n  checkApplyDebounce() {\n    if (this.debouncePending) {\n      this.debouncePending = false;\n      this.onBtApply();\n    }\n  }\n  getModel() {\n    return this.appliedModel ?? null;\n  }\n  setModel(model) {\n    const promise = model != null ? this.setModelIntoUi(model) : this.resetUiToDefaults();\n    return promise.then(() => {\n      this.updateUiVisibility();\n      this.applyModel(\"api\");\n    });\n  }\n  onBtCancel(e) {\n    this.resetUiToActiveModel(this.getModel(), () => {\n      this.handleCancelEnd(e);\n    });\n  }\n  handleCancelEnd(e) {\n    if (this.params.closeOnApply) {\n      this.close(e);\n    }\n  }\n  resetUiToActiveModel(currentModel, afterUiUpdatedFunc) {\n    const afterAppliedFunc = () => {\n      this.onUiChanged(false, \"prevent\");\n      afterUiUpdatedFunc?.();\n    };\n    if (currentModel != null) {\n      this.setModelIntoUi(currentModel).then(afterAppliedFunc);\n    } else {\n      this.resetUiToDefaults().then(afterAppliedFunc);\n    }\n  }\n  onBtClear() {\n    this.resetUiToDefaults().then(() => this.onUiChanged());\n  }\n  onBtReset() {\n    this.onBtClear();\n    this.onBtApply();\n  }\n  /**\n   * Applies changes made in the UI to the filter, and returns true if the model has changed.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  applyModel(source = \"api\") {\n    const newModel = this.getModelFromUi();\n    if (!this.isModelValid(newModel)) {\n      return false;\n    }\n    const previousModel = this.appliedModel;\n    this.appliedModel = newModel;\n    return !this.areModelsEqual(previousModel, newModel);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isModelValid(model) {\n    return true;\n  }\n  onFormSubmit(e) {\n    e.preventDefault();\n  }\n  onBtApply(afterFloatingFilter = false, afterDataChange = false, e) {\n    if (e) {\n      e.preventDefault();\n    }\n    if (this.applyModel(afterDataChange ? \"rowDataUpdated\" : \"ui\")) {\n      const source = \"columnFilter\";\n      this.params.filterChangedCallback({ afterFloatingFilter, afterDataChange, source });\n    }\n    const { closeOnApply } = this.params;\n    if (closeOnApply && this.applyActive && !afterFloatingFilter && !afterDataChange) {\n      this.close(e);\n    }\n  }\n  onNewRowsLoaded() {\n  }\n  close(e) {\n    if (!this.hidePopup) {\n      return;\n    }\n    const keyboardEvent = e;\n    const key = keyboardEvent && keyboardEvent.key;\n    let params;\n    if (key === \"Enter\" || key === \"Space\") {\n      params = { keyboardEvent };\n    }\n    this.hidePopup(params);\n    this.hidePopup = null;\n  }\n  /**\n   * By default, if the change came from a floating filter it will be applied immediately, otherwise if there is no\n   * apply button it will be applied after a debounce, otherwise it will not be applied at all. This behaviour can\n   * be adjusted by using the apply parameter.\n   */\n  onUiChanged(fromFloatingFilter = false, apply) {\n    this.updateUiVisibility();\n    this.params.filterModifiedCallback();\n    if (this.applyActive && !this.isReadOnly()) {\n      const isValid = this.isModelValid(this.getModelFromUi());\n      const applyFilterButton = this.queryForHtmlElement(`[data-ref=\"applyFilterButton\"]`);\n      if (applyFilterButton) {\n        _setDisabled(applyFilterButton, !isValid);\n      }\n    }\n    if (fromFloatingFilter && !apply || apply === \"immediately\") {\n      this.onBtApply(fromFloatingFilter);\n    } else if (!this.applyActive && !apply || apply === \"debounce\") {\n      this.onBtApplyDebounce();\n    }\n  }\n  afterGuiAttached(params) {\n    if (params) {\n      this.hidePopup = params.hidePopup;\n    }\n    this.refreshFilterResizer(params?.container);\n  }\n  refreshFilterResizer(containerType) {\n    const { positionableFeature, gos } = this;\n    if (!positionableFeature || containerType === \"toolPanel\") {\n      return;\n    }\n    const isResizable = containerType === \"floatingFilter\" || containerType === \"columnFilter\";\n    if (isResizable) {\n      positionableFeature.restoreLastSize();\n      positionableFeature.setResizable(\n        gos.get(\"enableRtl\") ? { bottom: true, bottomLeft: true, left: true } : { bottom: true, bottomRight: true, right: true }\n      );\n    } else {\n      positionableFeature.removeSizeFromEl();\n      positionableFeature.setResizable(false);\n    }\n    positionableFeature.constrainSizeToAvailableHeight(true);\n  }\n  afterGuiDetached() {\n    this.checkApplyDebounce();\n    this.positionableFeature?.constrainSizeToAvailableHeight(false);\n  }\n  refresh(newParams) {\n    const oldParams = this.params;\n    this.params = newParams;\n    this.resetButtonsPanel(newParams, oldParams);\n    return true;\n  }\n  destroy() {\n    const eGui = this.getGui();\n    if (eGui) {\n      eGui.removeEventListener(\"submit\", this.onFormSubmit);\n    }\n    this.hidePopup = null;\n    if (this.positionableFeature) {\n      this.positionableFeature = this.destroyBean(this.positionableFeature);\n    }\n    this.appliedModel = null;\n    super.destroy();\n  }\n  translate(key) {\n    return this.getLocaleTextFunc()(key, FILTER_LOCALE_TEXT[key]);\n  }\n  getCellValue(rowNode) {\n    return this.params.getValue(rowNode);\n  }\n  // override to control positionable feature\n  getPositionableElement() {\n    return this.eFilterBody;\n  }\n};\n\n// packages/ag-grid-community/src/filter/floating/floatingFilterMapper.ts\nfunction _getDefaultFloatingFilterType(frameworkOverrides, def, getFromDefault) {\n  if (def == null) {\n    return null;\n  }\n  let defaultFloatingFilterType = null;\n  const { compName, jsComp, fwComp } = _getFilterCompKeys(frameworkOverrides, def);\n  if (compName) {\n    const floatingFilterTypeMap = {\n      agSetColumnFilter: \"agSetColumnFloatingFilter\",\n      agMultiColumnFilter: \"agMultiColumnFloatingFilter\",\n      agGroupColumnFilter: \"agGroupColumnFloatingFilter\",\n      agNumberColumnFilter: \"agNumberColumnFloatingFilter\",\n      agDateColumnFilter: \"agDateColumnFloatingFilter\",\n      agTextColumnFilter: \"agTextColumnFloatingFilter\"\n    };\n    defaultFloatingFilterType = floatingFilterTypeMap[compName];\n  } else {\n    const usingDefaultFilter = jsComp == null && fwComp == null && def.filter === true;\n    if (usingDefaultFilter) {\n      defaultFloatingFilterType = getFromDefault();\n    }\n  }\n  return defaultFloatingFilterType;\n}\n\n// packages/ag-grid-community/src/styling/layoutFeature.ts\nvar LayoutCssClasses = {\n  AUTO_HEIGHT: \"ag-layout-auto-height\",\n  NORMAL: \"ag-layout-normal\",\n  PRINT: \"ag-layout-print\"\n};\nvar LayoutFeature = class extends BeanStub {\n  constructor(view) {\n    super();\n    this.view = view;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"domLayout\", this.updateLayoutClasses.bind(this));\n    this.updateLayoutClasses();\n  }\n  updateLayoutClasses() {\n    const domLayout = this.gos.get(\"domLayout\");\n    const params = {\n      autoHeight: domLayout === \"autoHeight\",\n      normal: domLayout === \"normal\",\n      print: domLayout === \"print\"\n    };\n    const cssClass = params.autoHeight ? LayoutCssClasses.AUTO_HEIGHT : params.print ? LayoutCssClasses.PRINT : LayoutCssClasses.NORMAL;\n    this.view.updateLayoutClasses(cssClass, params);\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/gridBodyScrollFeature.ts\nvar VIEWPORT = \"Viewport\";\nvar FAKE_V_SCROLLBAR = \"fakeVScrollComp\";\nvar HORIZONTAL_SOURCES = [\n  \"fakeHScrollComp\",\n  \"centerHeader\",\n  \"topCenter\",\n  \"bottomCenter\",\n  \"stickyTopCenter\",\n  \"stickyBottomCenter\"\n];\nvar SCROLL_DEBOUNCE_TIMEOUT = 100;\nvar SCROLL_END_TIMEOUT = 150;\nvar GridBodyScrollFeature = class extends BeanStub {\n  constructor(eBodyViewport) {\n    super();\n    this.lastScrollSource = [null, null];\n    this.scrollLeft = -1;\n    this.nextScrollTop = -1;\n    this.scrollTop = -1;\n    // Used to provide approximate values of scrollTop and offsetHeight\n    // without forcing the browser to recalculate styles.\n    this.lastOffsetHeight = -1;\n    this.lastScrollTop = -1;\n    this.scrollTimer = 0;\n    this.needsRefreshedScrollPosition = true;\n    this.eBodyViewport = eBodyViewport;\n    this.resetLastHScrollDebounced = _debounce(\n      this,\n      () => this.lastScrollSource[1 /* Horizontal */] = null,\n      SCROLL_END_TIMEOUT\n    );\n    this.resetLastVScrollDebounced = _debounce(\n      this,\n      () => this.lastScrollSource[0 /* Vertical */] = null,\n      SCROLL_END_TIMEOUT\n    );\n  }\n  wireBeans(beans) {\n    this.ctrlsSvc = beans.ctrlsSvc;\n    this.animationFrameSvc = beans.animationFrameSvc;\n    this.visibleCols = beans.visibleCols;\n  }\n  destroy() {\n    super.destroy();\n    window.clearTimeout(this.scrollTimer);\n  }\n  postConstruct() {\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    const requireUpdatedScrollPosition = this.requireUpdatedScrollPosition.bind(this);\n    this.addManagedEventListeners({\n      displayedColumnsWidthChanged: this.onDisplayedColumnsWidthChanged.bind(this),\n      gridSizeChanged: requireUpdatedScrollPosition\n    });\n    this.addManagedElementListeners(this.eBodyViewport, {\n      scroll: requireUpdatedScrollPosition\n    });\n    this.ctrlsSvc.whenReady(this, (p) => {\n      this.centerRowsCtrl = p.center;\n      this.onDisplayedColumnsWidthChanged();\n      this.addScrollListener();\n    });\n  }\n  requireUpdatedScrollPosition() {\n    this.needsRefreshedScrollPosition = true;\n  }\n  addScrollListener() {\n    this.addHorizontalScrollListeners();\n    this.addVerticalScrollListeners();\n  }\n  addHorizontalScrollListeners() {\n    this.addManagedElementListeners(this.centerRowsCtrl.eViewport, {\n      scroll: this.onHScroll.bind(this, VIEWPORT)\n    });\n    for (const source of HORIZONTAL_SOURCES) {\n      const scrollPartner = this.ctrlsSvc.get(source);\n      this.registerScrollPartner(scrollPartner, this.onHScroll.bind(this, source));\n    }\n  }\n  addVerticalScrollListeners() {\n    const fakeVScrollComp = this.ctrlsSvc.get(\"fakeVScrollComp\");\n    const isDebounce = this.gos.get(\"debounceVerticalScrollbar\");\n    const onVScroll = isDebounce ? _debounce(this, this.onVScroll.bind(this, VIEWPORT), SCROLL_DEBOUNCE_TIMEOUT) : this.onVScroll.bind(this, VIEWPORT);\n    const onFakeVScroll = isDebounce ? _debounce(this, this.onVScroll.bind(this, FAKE_V_SCROLLBAR), SCROLL_DEBOUNCE_TIMEOUT) : this.onVScroll.bind(this, FAKE_V_SCROLLBAR);\n    this.addManagedElementListeners(this.eBodyViewport, { scroll: onVScroll });\n    this.registerScrollPartner(fakeVScrollComp, onFakeVScroll);\n  }\n  registerScrollPartner(comp, callback) {\n    comp.onScrollCallback(callback);\n  }\n  onDisplayedColumnsWidthChanged() {\n    if (this.enableRtl) {\n      this.horizontallyScrollHeaderCenterAndFloatingCenter();\n    }\n  }\n  horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft) {\n    const notYetInitialised = this.centerRowsCtrl == null;\n    if (notYetInitialised) {\n      return;\n    }\n    if (scrollLeft === void 0) {\n      scrollLeft = this.centerRowsCtrl.getCenterViewportScrollLeft();\n    }\n    this.setScrollLeftForAllContainersExceptCurrent(Math.abs(scrollLeft));\n  }\n  setScrollLeftForAllContainersExceptCurrent(scrollLeft) {\n    for (const container of [...HORIZONTAL_SOURCES, VIEWPORT]) {\n      if (this.lastScrollSource[1 /* Horizontal */] === container) {\n        continue;\n      }\n      const viewport = this.getViewportForSource(container);\n      _setScrollLeft(viewport, scrollLeft, this.enableRtl);\n    }\n  }\n  getViewportForSource(source) {\n    if (source === VIEWPORT) {\n      return this.centerRowsCtrl.eViewport;\n    }\n    return this.ctrlsSvc.get(source).eViewport;\n  }\n  isControllingScroll(source, direction) {\n    if (this.lastScrollSource[direction] == null) {\n      if (direction === 0 /* Vertical */) {\n        this.lastScrollSource[0] = source;\n      } else {\n        this.lastScrollSource[1] = source;\n      }\n      return true;\n    }\n    return this.lastScrollSource[direction] === source;\n  }\n  onHScroll(source) {\n    if (!this.isControllingScroll(source, 1 /* Horizontal */)) {\n      return;\n    }\n    const centerContainerViewport = this.centerRowsCtrl.eViewport;\n    const { scrollLeft } = centerContainerViewport;\n    if (this.shouldBlockScrollUpdate(1 /* Horizontal */, scrollLeft, true)) {\n      return;\n    }\n    const newScrollLeft = _getScrollLeft(this.getViewportForSource(source), this.enableRtl);\n    this.doHorizontalScroll(newScrollLeft);\n    this.resetLastHScrollDebounced();\n  }\n  onVScroll(source) {\n    if (!this.isControllingScroll(source, 0 /* Vertical */)) {\n      return;\n    }\n    let scrollTop;\n    if (source === VIEWPORT) {\n      scrollTop = this.eBodyViewport.scrollTop;\n    } else {\n      scrollTop = this.ctrlsSvc.get(\"fakeVScrollComp\").getScrollPosition();\n    }\n    if (this.shouldBlockScrollUpdate(0 /* Vertical */, scrollTop, true)) {\n      return;\n    }\n    const { animationFrameSvc } = this;\n    animationFrameSvc?.setScrollTop(scrollTop);\n    this.nextScrollTop = scrollTop;\n    if (source === VIEWPORT) {\n      this.ctrlsSvc.get(\"fakeVScrollComp\").setScrollPosition(scrollTop);\n    } else {\n      this.eBodyViewport.scrollTop = scrollTop;\n    }\n    if (!animationFrameSvc || this.gos.get(\"suppressAnimationFrame\")) {\n      this.scrollGridIfNeeded(true);\n    } else {\n      animationFrameSvc.schedule();\n    }\n    this.resetLastVScrollDebounced();\n  }\n  doHorizontalScroll(scrollLeft) {\n    const fakeScrollLeft = this.ctrlsSvc.get(\"fakeHScrollComp\").getScrollPosition();\n    if (this.scrollLeft === scrollLeft && scrollLeft === fakeScrollLeft) {\n      return;\n    }\n    this.scrollLeft = scrollLeft;\n    this.fireScrollEvent(1 /* Horizontal */);\n    this.horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft);\n    this.centerRowsCtrl.onHorizontalViewportChanged(true);\n  }\n  fireScrollEvent(direction) {\n    const bodyScrollEvent = {\n      type: \"bodyScroll\",\n      direction: direction === 1 /* Horizontal */ ? \"horizontal\" : \"vertical\",\n      left: this.scrollLeft,\n      top: this.scrollTop\n    };\n    this.eventSvc.dispatchEvent(bodyScrollEvent);\n    window.clearTimeout(this.scrollTimer);\n    this.scrollTimer = window.setTimeout(() => {\n      this.scrollTimer = 0;\n      this.eventSvc.dispatchEvent({\n        ...bodyScrollEvent,\n        type: \"bodyScrollEnd\"\n      });\n    }, SCROLL_END_TIMEOUT);\n  }\n  shouldBlockScrollUpdate(direction, scrollTo, touchOnly = false) {\n    if (touchOnly && !_isIOSUserAgent()) {\n      return false;\n    }\n    if (direction === 0 /* Vertical */) {\n      return this.shouldBlockVerticalScroll(scrollTo);\n    }\n    return this.shouldBlockHorizontalScroll(scrollTo);\n  }\n  shouldBlockVerticalScroll(scrollTo) {\n    const clientHeight = _getInnerHeight(this.eBodyViewport);\n    const { scrollHeight } = this.eBodyViewport;\n    if (scrollTo < 0 || scrollTo + clientHeight > scrollHeight) {\n      return true;\n    }\n    return false;\n  }\n  shouldBlockHorizontalScroll(scrollTo) {\n    const clientWidth = this.centerRowsCtrl.getCenterWidth();\n    const { scrollWidth } = this.centerRowsCtrl.eViewport;\n    if (this.enableRtl && _isRtlNegativeScroll()) {\n      if (scrollTo > 0) {\n        return true;\n      }\n    } else if (scrollTo < 0) {\n      return true;\n    }\n    if (Math.abs(scrollTo) + clientWidth > scrollWidth) {\n      return true;\n    }\n    return false;\n  }\n  redrawRowsAfterScroll() {\n    this.fireScrollEvent(0 /* Vertical */);\n  }\n  // this is to cater for AG-3274, where grid is removed from the dom and then inserted back in again.\n  // (which happens with some implementations of tabbing). this can result in horizontal scroll getting\n  // reset back to the left, however no scroll event is fired. so we need to get header to also scroll\n  // back to the left to be kept in sync.\n  // adding and removing the grid from the DOM both resets the scroll position and\n  // triggers a resize event, so notify listeners if the scroll position has changed\n  checkScrollLeft() {\n    if (this.scrollLeft !== this.centerRowsCtrl.getCenterViewportScrollLeft()) {\n      this.onHScroll(VIEWPORT);\n    }\n  }\n  scrollGridIfNeeded(suppressedAnimationFrame = false) {\n    const frameNeeded = this.scrollTop != this.nextScrollTop;\n    if (frameNeeded) {\n      this.scrollTop = this.nextScrollTop;\n      if (suppressedAnimationFrame) {\n        this.requireUpdatedScrollPosition();\n      }\n      this.redrawRowsAfterScroll();\n    }\n    return frameNeeded;\n  }\n  // called by scrollHorizontally method and alignedGridsService\n  setHorizontalScrollPosition(hScrollPosition, fromAlignedGridsService = false) {\n    const minScrollLeft = 0;\n    const maxScrollLeft = this.centerRowsCtrl.eViewport.scrollWidth - this.centerRowsCtrl.getCenterWidth();\n    if (!fromAlignedGridsService && this.shouldBlockScrollUpdate(1 /* Horizontal */, hScrollPosition)) {\n      if (this.enableRtl && _isRtlNegativeScroll()) {\n        hScrollPosition = hScrollPosition > 0 ? 0 : maxScrollLeft;\n      } else {\n        hScrollPosition = Math.min(Math.max(hScrollPosition, minScrollLeft), maxScrollLeft);\n      }\n    }\n    _setScrollLeft(this.centerRowsCtrl.eViewport, Math.abs(hScrollPosition), this.enableRtl);\n    this.doHorizontalScroll(hScrollPosition);\n  }\n  setVerticalScrollPosition(vScrollPosition) {\n    this.requireUpdatedScrollPosition();\n    this.eBodyViewport.scrollTop = vScrollPosition;\n  }\n  getVScrollPosition() {\n    if (!this.needsRefreshedScrollPosition) {\n      const { lastOffsetHeight, lastScrollTop } = this;\n      return {\n        top: lastScrollTop,\n        bottom: lastScrollTop + lastOffsetHeight\n      };\n    }\n    this.needsRefreshedScrollPosition = false;\n    const { scrollTop, offsetHeight } = this.eBodyViewport;\n    this.lastScrollTop = scrollTop;\n    this.lastOffsetHeight = offsetHeight;\n    return {\n      top: scrollTop,\n      bottom: scrollTop + offsetHeight\n    };\n  }\n  /** Get an approximate scroll position that returns the last real value read.\n   * This is useful for avoiding repeated DOM reads that force the browser to recalculate styles.\n   * This can have big performance improvements but may not be 100% accurate so only use if this is acceptable.\n   */\n  getApproximateVScollPosition() {\n    if (this.lastScrollTop >= 0 && this.lastOffsetHeight >= 0) {\n      return {\n        top: this.scrollTop,\n        bottom: this.scrollTop + this.lastOffsetHeight\n      };\n    }\n    return this.getVScrollPosition();\n  }\n  getHScrollPosition() {\n    return this.centerRowsCtrl.getHScrollPosition();\n  }\n  isHorizontalScrollShowing() {\n    return this.centerRowsCtrl.isHorizontalScrollShowing();\n  }\n  // called by the headerRootComp and moveColumnController\n  scrollHorizontally(pixels) {\n    const oldScrollPosition = this.centerRowsCtrl.eViewport.scrollLeft;\n    this.setHorizontalScrollPosition(oldScrollPosition + pixels);\n    return this.centerRowsCtrl.eViewport.scrollLeft - oldScrollPosition;\n  }\n  // gets called by rowRenderer when new data loaded, as it will want to scroll to the top\n  scrollToTop() {\n    this.eBodyViewport.scrollTop = 0;\n  }\n  // Valid values for position are bottom, middle and top\n  ensureNodeVisible(comparator, position = null) {\n    const { rowModel } = this.beans;\n    const rowCount = rowModel.getRowCount();\n    let indexToSelect = -1;\n    for (let i = 0; i < rowCount; i++) {\n      const node = rowModel.getRow(i);\n      if (typeof comparator === \"function\") {\n        const predicate = comparator;\n        if (node && predicate(node)) {\n          indexToSelect = i;\n          break;\n        }\n      } else {\n        if (comparator === node || comparator === node.data) {\n          indexToSelect = i;\n          break;\n        }\n      }\n    }\n    if (indexToSelect >= 0) {\n      this.ensureIndexVisible(indexToSelect, position);\n    }\n  }\n  // Valid values for position are bottom, middle and top\n  // position should be {'top','middle','bottom', or undefined/null}.\n  // if undefined/null, then the grid will to the minimal amount of scrolling,\n  // eg if grid needs to scroll up, it scrolls until row is on top,\n  //    if grid needs to scroll down, it scrolls until row is on bottom,\n  //    if row is already in view, grid does not scroll\n  ensureIndexVisible(index, position) {\n    if (_isDomLayout(this.gos, \"print\")) {\n      return;\n    }\n    const { rowModel } = this.beans;\n    const rowCount = rowModel.getRowCount();\n    if (typeof index !== \"number\" || index < 0 || index >= rowCount) {\n      _warn(88, { index });\n      return;\n    }\n    const isPaging = this.gos.get(\"pagination\");\n    const paginationPanelEnabled = isPaging && !this.gos.get(\"suppressPaginationPanel\");\n    const {\n      frameworkOverrides,\n      pagination,\n      pageBounds,\n      rowContainerHeight: heightScaler,\n      rowRenderer\n    } = this.beans;\n    frameworkOverrides.wrapIncoming(() => {\n      if (!paginationPanelEnabled) {\n        pagination?.goToPageWithIndex(index);\n      }\n      const gridBodyCtrl = this.ctrlsSvc.getGridBodyCtrl();\n      const stickyTopHeight = gridBodyCtrl.stickyTopHeight;\n      const stickyBottomHeight = gridBodyCtrl.stickyBottomHeight;\n      const rowNode = rowModel.getRow(index);\n      let rowGotShiftedDuringOperation;\n      do {\n        const startingRowTop = rowNode.rowTop;\n        const startingRowHeight = rowNode.rowHeight;\n        const paginationOffset = pageBounds.getPixelOffset();\n        const rowTopPixel = rowNode.rowTop - paginationOffset;\n        const rowBottomPixel = rowTopPixel + rowNode.rowHeight;\n        const scrollPosition = this.getVScrollPosition();\n        const heightOffset = heightScaler.divStretchOffset;\n        const vScrollTop = scrollPosition.top + heightOffset;\n        const vScrollBottom = scrollPosition.bottom + heightOffset;\n        const viewportHeight = vScrollBottom - vScrollTop;\n        const pxTop = heightScaler.getScrollPositionForPixel(rowTopPixel);\n        const pxBottom = heightScaler.getScrollPositionForPixel(rowBottomPixel - viewportHeight);\n        const pxMiddle = Math.min((pxTop + pxBottom) / 2, rowTopPixel);\n        const rowAboveViewport = vScrollTop + stickyTopHeight > rowTopPixel;\n        const rowBelowViewport = vScrollBottom - stickyBottomHeight < rowBottomPixel;\n        let newScrollPosition = null;\n        if (position === \"top\") {\n          newScrollPosition = pxTop;\n        } else if (position === \"bottom\") {\n          newScrollPosition = pxBottom;\n        } else if (position === \"middle\") {\n          newScrollPosition = pxMiddle;\n        } else if (rowAboveViewport) {\n          newScrollPosition = pxTop - stickyTopHeight;\n        } else if (rowBelowViewport) {\n          newScrollPosition = pxBottom + stickyBottomHeight;\n        }\n        if (newScrollPosition !== null) {\n          this.setVerticalScrollPosition(newScrollPosition);\n          rowRenderer.redraw({ afterScroll: true });\n        }\n        rowGotShiftedDuringOperation = startingRowTop !== rowNode.rowTop || startingRowHeight !== rowNode.rowHeight;\n      } while (rowGotShiftedDuringOperation);\n      this.animationFrameSvc?.flushAllFrames();\n    });\n  }\n  ensureColumnVisible(key, position = \"auto\") {\n    const { colModel, frameworkOverrides } = this.beans;\n    const column = colModel.getCol(key);\n    if (!column) {\n      return;\n    }\n    if (column.isPinned()) {\n      return;\n    }\n    if (!this.visibleCols.isColDisplayed(column)) {\n      return;\n    }\n    const newHorizontalScroll = this.getPositionedHorizontalScroll(column, position);\n    frameworkOverrides.wrapIncoming(() => {\n      if (newHorizontalScroll !== null) {\n        this.centerRowsCtrl.setCenterViewportScrollLeft(newHorizontalScroll);\n      }\n      this.centerRowsCtrl.onHorizontalViewportChanged();\n      this.animationFrameSvc?.flushAllFrames();\n    });\n  }\n  getPositionedHorizontalScroll(column, position) {\n    const { columnBeforeStart, columnAfterEnd } = this.isColumnOutsideViewport(column);\n    const viewportTooSmallForColumn = this.centerRowsCtrl.getCenterWidth() < column.getActualWidth();\n    const viewportWidth = this.centerRowsCtrl.getCenterWidth();\n    const isRtl = this.enableRtl;\n    let alignColToStart = (isRtl ? columnBeforeStart : columnAfterEnd) || viewportTooSmallForColumn;\n    let alignColToEnd = isRtl ? columnAfterEnd : columnBeforeStart;\n    if (position !== \"auto\") {\n      alignColToStart = position === \"start\";\n      alignColToEnd = position === \"end\";\n    }\n    const isMiddle = position === \"middle\";\n    if (alignColToStart || alignColToEnd || isMiddle) {\n      const { colLeft, colMiddle, colRight } = this.getColumnBounds(column);\n      if (isMiddle) {\n        return colMiddle - viewportWidth / 2;\n      }\n      if (alignColToStart) {\n        return isRtl ? colRight : colLeft;\n      }\n      return isRtl ? colLeft - viewportWidth : colRight - viewportWidth;\n    }\n    return null;\n  }\n  isColumnOutsideViewport(column) {\n    const { start: viewportStart, end: viewportEnd } = this.getViewportBounds();\n    const { colLeft, colRight } = this.getColumnBounds(column);\n    const isRtl = this.enableRtl;\n    const columnBeforeStart = isRtl ? viewportStart > colRight : viewportEnd < colRight;\n    const columnAfterEnd = isRtl ? viewportEnd < colLeft : viewportStart > colLeft;\n    return { columnBeforeStart, columnAfterEnd };\n  }\n  getColumnBounds(column) {\n    const isRtl = this.enableRtl;\n    const bodyWidth = this.visibleCols.bodyWidth;\n    const colWidth = column.getActualWidth();\n    const colLeft = column.getLeft();\n    const multiplier = isRtl ? -1 : 1;\n    const colLeftPixel = isRtl ? bodyWidth - colLeft : colLeft;\n    const colRightPixel = colLeftPixel + colWidth * multiplier;\n    const colMidPixel = colLeftPixel + colWidth / 2 * multiplier;\n    return { colLeft: colLeftPixel, colMiddle: colMidPixel, colRight: colRightPixel };\n  }\n  getViewportBounds() {\n    const viewportWidth = this.centerRowsCtrl.getCenterWidth();\n    const scrollPosition = this.centerRowsCtrl.getCenterViewportScrollLeft();\n    const viewportStartPixel = scrollPosition;\n    const viewportEndPixel = viewportWidth + scrollPosition;\n    return { start: viewportStartPixel, end: viewportEndPixel, width: viewportWidth };\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/centerWidthFeature.ts\nvar CenterWidthFeature = class extends BeanStub {\n  constructor(callback, addSpacer = false) {\n    super();\n    this.callback = callback;\n    this.addSpacer = addSpacer;\n  }\n  postConstruct() {\n    const listener = this.setWidth.bind(this);\n    this.addManagedPropertyListener(\"domLayout\", listener);\n    this.addManagedEventListeners({\n      columnContainerWidthChanged: listener,\n      displayedColumnsChanged: listener,\n      leftPinnedWidthChanged: listener\n    });\n    if (this.addSpacer) {\n      this.addManagedEventListeners({\n        rightPinnedWidthChanged: listener,\n        scrollVisibilityChanged: listener,\n        scrollbarWidthChanged: listener\n      });\n    }\n    this.setWidth();\n  }\n  setWidth() {\n    const printLayout = _isDomLayout(this.gos, \"print\");\n    const { visibleCols, scrollVisibleSvc } = this.beans;\n    const centerWidth = visibleCols.bodyWidth;\n    const leftWidth = visibleCols.getColsLeftWidth();\n    const rightWidth = visibleCols.getDisplayedColumnsRightWidth();\n    let totalWidth;\n    if (printLayout) {\n      totalWidth = centerWidth + leftWidth + rightWidth;\n    } else {\n      totalWidth = centerWidth;\n      if (this.addSpacer) {\n        const relevantWidth = this.gos.get(\"enableRtl\") ? leftWidth : rightWidth;\n        if (relevantWidth === 0 && scrollVisibleSvc.verticalScrollShowing) {\n          totalWidth += scrollVisibleSvc.getScrollbarWidth();\n        }\n      }\n    }\n    this.callback(totalWidth);\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/viewportSizeFeature.ts\nvar ViewportSizeFeature = class extends BeanStub {\n  constructor(centerContainerCtrl) {\n    super();\n    this.centerContainerCtrl = centerContainerCtrl;\n  }\n  wireBeans(beans) {\n    this.scrollVisibleSvc = beans.scrollVisibleSvc;\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n      this.listenForResize();\n    });\n    this.addManagedEventListeners({ scrollbarWidthChanged: this.onScrollbarWidthChanged.bind(this) });\n    this.addManagedPropertyListeners([\"alwaysShowHorizontalScroll\", \"alwaysShowVerticalScroll\"], () => {\n      this.checkViewportAndScrolls();\n    });\n  }\n  listenForResize() {\n    const { beans, centerContainerCtrl, gridBodyCtrl } = this;\n    const listener = () => {\n      _requestAnimationFrame(beans, () => {\n        this.onCenterViewportResized();\n      });\n    };\n    centerContainerCtrl.registerViewportResizeListener(listener);\n    gridBodyCtrl.registerBodyViewportResizeListener(listener);\n  }\n  onScrollbarWidthChanged() {\n    this.checkViewportAndScrolls();\n  }\n  onCenterViewportResized() {\n    this.scrollVisibleSvc.updateScrollGap();\n    if (this.centerContainerCtrl.isViewportInTheDOMTree()) {\n      const { pinnedCols, colFlex } = this.beans;\n      pinnedCols?.keepPinnedColumnsNarrowerThanViewport();\n      this.checkViewportAndScrolls();\n      const newWidth = this.centerContainerCtrl.getCenterWidth();\n      if (newWidth !== this.centerWidth) {\n        this.centerWidth = newWidth;\n        colFlex?.refreshFlexedColumns({\n          viewportWidth: this.centerWidth,\n          updateBodyWidths: true,\n          fireResizedEvent: true\n        });\n      }\n    } else {\n      this.bodyHeight = 0;\n    }\n  }\n  // gets called every time the viewport size changes. we use this to check visibility of scrollbars\n  // in the grid panel, and also to check size and position of viewport for row and column virtualisation.\n  checkViewportAndScrolls() {\n    this.updateScrollVisibleService();\n    this.checkBodyHeight();\n    this.onHorizontalViewportChanged();\n    this.gridBodyCtrl.scrollFeature.checkScrollLeft();\n  }\n  getBodyHeight() {\n    return this.bodyHeight;\n  }\n  checkBodyHeight() {\n    const eBodyViewport = this.gridBodyCtrl.eBodyViewport;\n    const bodyHeight = _getInnerHeight(eBodyViewport);\n    if (this.bodyHeight !== bodyHeight) {\n      this.bodyHeight = bodyHeight;\n      this.eventSvc.dispatchEvent({\n        type: \"bodyHeightChanged\"\n      });\n    }\n  }\n  updateScrollVisibleService() {\n    this.updateScrollVisibleServiceImpl();\n    setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);\n  }\n  updateScrollVisibleServiceImpl() {\n    const params = {\n      horizontalScrollShowing: this.centerContainerCtrl.isHorizontalScrollShowing(),\n      verticalScrollShowing: this.gridBodyCtrl.isVerticalScrollShowing()\n    };\n    this.scrollVisibleSvc.setScrollsVisible(params);\n  }\n  // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n  // out the virtual columns again. gets called from following locations:\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged\n  onHorizontalViewportChanged() {\n    const scrollWidth = this.centerContainerCtrl.getCenterWidth();\n    const scrollPosition = this.centerContainerCtrl.getViewportScrollLeft();\n    this.beans.colViewport.setScrollPosition(scrollWidth, scrollPosition);\n  }\n};\n\n// packages/ag-grid-community/src/styling/stylingUtils.ts\nfunction processClassRules(expressionSvc, previousClassRules, classRules, params, onApplicableClass, onNotApplicableClass) {\n  if (classRules == null && previousClassRules == null) {\n    return;\n  }\n  const classesToApply = {};\n  const classesToRemove = {};\n  const forEachSingleClass = (className, callback) => {\n    className.split(\" \").forEach((singleClass) => {\n      if (singleClass.trim() == \"\")\n        return;\n      callback(singleClass);\n    });\n  };\n  if (classRules) {\n    const classNames = Object.keys(classRules);\n    for (let i = 0; i < classNames.length; i++) {\n      const className = classNames[i];\n      const rule = classRules[className];\n      let resultOfRule;\n      if (typeof rule === \"string\") {\n        resultOfRule = expressionSvc ? expressionSvc.evaluate(rule, params) : true;\n      } else if (typeof rule === \"function\") {\n        resultOfRule = rule(params);\n      }\n      forEachSingleClass(className, (singleClass) => {\n        resultOfRule ? classesToApply[singleClass] = true : classesToRemove[singleClass] = true;\n      });\n    }\n  }\n  if (previousClassRules && onNotApplicableClass) {\n    Object.keys(previousClassRules).forEach(\n      (className) => forEachSingleClass(className, (singleClass) => {\n        if (!classesToApply[singleClass]) {\n          classesToRemove[singleClass] = true;\n        }\n      })\n    );\n  }\n  if (onNotApplicableClass) {\n    Object.keys(classesToRemove).forEach(onNotApplicableClass);\n  }\n  Object.keys(classesToApply).forEach(onApplicableClass);\n}\n\n// packages/ag-grid-community/src/styling/rowStyleService.ts\nfunction calculateRowLevel(rowNode) {\n  if (rowNode.group) {\n    return rowNode.level;\n  }\n  const parent = rowNode.parent;\n  return parent ? parent.level + 1 : 0;\n}\nvar RowStyleService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowStyleSvc\";\n  }\n  processClassesFromGridOptions(classes, rowNode) {\n    const gos = this.gos;\n    const process = (rowCls) => {\n      if (typeof rowCls === \"string\") {\n        classes.push(rowCls);\n      } else if (Array.isArray(rowCls)) {\n        rowCls.forEach((e) => classes.push(e));\n      }\n    };\n    const rowClass = gos.get(\"rowClass\");\n    if (rowClass) {\n      process(rowClass);\n    }\n    const rowClassFunc = gos.getCallback(\"getRowClass\");\n    if (rowClassFunc) {\n      const params = {\n        data: rowNode.data,\n        node: rowNode,\n        rowIndex: rowNode.rowIndex\n      };\n      const rowClassFuncResult = rowClassFunc(params);\n      process(rowClassFuncResult);\n    }\n  }\n  preProcessRowClassRules(classes, rowNode) {\n    this.processRowClassRules(\n      rowNode,\n      (className) => {\n        classes.push(className);\n      },\n      () => {\n      }\n    );\n  }\n  processRowClassRules(rowNode, onApplicableClass, onNotApplicableClass) {\n    const { gos, expressionSvc } = this.beans;\n    const rowClassParams = _addGridCommonParams(gos, {\n      data: rowNode.data,\n      node: rowNode,\n      rowIndex: rowNode.rowIndex\n    });\n    processClassRules(\n      expressionSvc,\n      void 0,\n      gos.get(\"rowClassRules\"),\n      rowClassParams,\n      onApplicableClass,\n      onNotApplicableClass\n    );\n  }\n  processStylesFromGridOptions(rowNode) {\n    const gos = this.gos;\n    const rowStyle = gos.get(\"rowStyle\");\n    const rowStyleFunc = gos.getCallback(\"getRowStyle\");\n    let rowStyleFuncResult;\n    if (rowStyleFunc) {\n      const params = {\n        data: rowNode.data,\n        node: rowNode,\n        rowIndex: rowNode.rowIndex\n      };\n      rowStyleFuncResult = rowStyleFunc(params);\n    }\n    if (rowStyleFuncResult || rowStyle) {\n      return Object.assign({}, rowStyle, rowStyleFuncResult);\n    }\n    return void 0;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/row/rowCtrl.ts\nvar instanceIdSequence3 = 0;\nvar DOM_DATA_KEY_ROW_CTRL = \"renderedRow\";\nvar RowCtrl = class extends BeanStub {\n  constructor(rowNode, beans, animateIn, useAnimationFrameForCreate, printLayout) {\n    super();\n    this.rowNode = rowNode;\n    this.useAnimationFrameForCreate = useAnimationFrameForCreate;\n    this.printLayout = printLayout;\n    this.allRowGuis = [];\n    this.active = true;\n    this.centerCellCtrls = { list: [], map: {} };\n    this.leftCellCtrls = { list: [], map: {} };\n    this.rightCellCtrls = { list: [], map: {} };\n    this.slideInAnimation = {\n      left: false,\n      center: false,\n      right: false,\n      fullWidth: false\n    };\n    this.fadeInAnimation = {\n      left: false,\n      center: false,\n      right: false,\n      fullWidth: false\n    };\n    this.rowDragComps = [];\n    this.lastMouseDownOnDragger = false;\n    this.emptyStyle = {};\n    this.updateColumnListsPending = false;\n    this.rowId = null;\n    /** sanitised */\n    this.businessKey = null;\n    this.beans = beans;\n    this.gos = beans.gos;\n    this.paginationPage = beans.pagination?.getCurrentPage() ?? 0;\n    this.suppressRowTransform = this.gos.get(\"suppressRowTransform\");\n    this.instanceId = rowNode.id + \"-\" + instanceIdSequence3++;\n    this.rowId = _escapeString(rowNode.id);\n    this.initRowBusinessKey();\n    this.rowFocused = beans.focusSvc.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n    this.rowLevel = calculateRowLevel(this.rowNode);\n    this.setRowType();\n    this.setAnimateFlags(animateIn);\n    this.rowStyles = this.processStylesFromGridOptions();\n    this.addListeners();\n  }\n  initRowBusinessKey() {\n    this.businessKeyForNodeFunc = this.gos.get(\"getBusinessKeyForNode\");\n    this.updateRowBusinessKey();\n  }\n  updateRowBusinessKey() {\n    if (typeof this.businessKeyForNodeFunc !== \"function\") {\n      return;\n    }\n    const businessKey = this.businessKeyForNodeFunc(this.rowNode);\n    this.businessKey = _escapeString(businessKey);\n  }\n  updateGui(containerType, gui) {\n    if (containerType === \"left\") {\n      this.leftGui = gui;\n    } else if (containerType === \"right\") {\n      this.rightGui = gui;\n    } else if (containerType === \"fullWidth\") {\n      this.fullWidthGui = gui;\n    } else {\n      this.centerGui = gui;\n    }\n  }\n  setComp(rowComp, element, containerType, compBean) {\n    compBean = setupCompBean(this, this.beans.context, compBean);\n    const gui = { rowComp, element, containerType, compBean };\n    this.allRowGuis.push(gui);\n    this.updateGui(containerType, gui);\n    this.initialiseRowComp(gui);\n    const isSsrmLoadingRow = this.rowType === \"FullWidthLoading\" || this.rowNode.stub;\n    if (!isSsrmLoadingRow && !this.rowNode.rowPinned) {\n      this.beans.rowRenderer.dispatchFirstDataRenderedEvent();\n    }\n  }\n  unsetComp(containerType) {\n    this.allRowGuis = this.allRowGuis.filter((rowGui) => rowGui.containerType !== containerType);\n    this.updateGui(containerType, void 0);\n  }\n  isCacheable() {\n    return this.rowType === \"FullWidthDetail\" && this.gos.get(\"keepDetailRows\");\n  }\n  setCached(cached) {\n    const displayValue = cached ? \"none\" : \"\";\n    this.allRowGuis.forEach((rg) => rg.element.style.display = displayValue);\n  }\n  initialiseRowComp(gui) {\n    const gos = this.gos;\n    this.onSuppressCellFocusChanged(this.beans.gos.get(\"suppressCellFocus\"));\n    this.listenOnDomOrder(gui);\n    this.onRowHeightChanged(gui);\n    this.updateRowIndexes(gui);\n    this.setFocusedClasses(gui);\n    this.setStylesFromGridOptions(false, gui);\n    if (_isRowSelection(gos) && this.rowNode.selectable) {\n      this.onRowSelected(gui);\n    }\n    this.updateColumnLists(!this.useAnimationFrameForCreate);\n    const comp = gui.rowComp;\n    const initialRowClasses = this.getInitialRowClasses(gui.containerType);\n    initialRowClasses.forEach((name) => comp.addOrRemoveCssClass(name, true));\n    this.executeSlideAndFadeAnimations(gui);\n    if (this.rowNode.group) {\n      _setAriaExpanded(gui.element, this.rowNode.expanded == true);\n    }\n    this.setRowCompRowId(comp);\n    this.setRowCompRowBusinessKey(comp);\n    _setDomData(gos, gui.element, DOM_DATA_KEY_ROW_CTRL, this);\n    gui.compBean.addDestroyFunc(() => _setDomData(gos, gui.element, DOM_DATA_KEY_ROW_CTRL, null));\n    if (this.useAnimationFrameForCreate) {\n      this.beans.animationFrameSvc.createTask(\n        this.addHoverFunctionality.bind(this, gui),\n        this.rowNode.rowIndex,\n        \"createTasksP2\"\n      );\n    } else {\n      this.addHoverFunctionality(gui);\n    }\n    if (this.isFullWidth()) {\n      this.setupFullWidth(gui);\n    }\n    if (gos.get(\"rowDragEntireRow\")) {\n      this.addRowDraggerToRow(gui);\n    }\n    if (this.useAnimationFrameForCreate) {\n      this.beans.animationFrameSvc.addDestroyTask(() => {\n        if (!this.isAlive()) {\n          return;\n        }\n        gui.rowComp.addOrRemoveCssClass(\"ag-after-created\", true);\n      });\n    }\n    this.executeProcessRowPostCreateFunc();\n  }\n  setRowCompRowBusinessKey(comp) {\n    if (this.businessKey == null) {\n      return;\n    }\n    comp.setRowBusinessKey(this.businessKey);\n  }\n  setRowCompRowId(comp) {\n    const rowId = _escapeString(this.rowNode.id);\n    this.rowId = rowId;\n    if (rowId == null) {\n      return;\n    }\n    comp.setRowId(rowId);\n  }\n  executeSlideAndFadeAnimations(gui) {\n    const { containerType } = gui;\n    const shouldSlide = this.slideInAnimation[containerType];\n    if (shouldSlide) {\n      _executeNextVMTurn(() => {\n        this.onTopChanged();\n      });\n      this.slideInAnimation[containerType] = false;\n    }\n    const shouldFade = this.fadeInAnimation[containerType];\n    if (shouldFade) {\n      _executeNextVMTurn(() => {\n        gui.rowComp.addOrRemoveCssClass(\"ag-opacity-zero\", false);\n      });\n      this.fadeInAnimation[containerType] = false;\n    }\n  }\n  addRowDraggerToRow(gui) {\n    const rowDragComp = this.beans.rowDragSvc?.createRowDragCompForRow(this.rowNode, gui.element);\n    if (!rowDragComp) {\n      return;\n    }\n    const rowDragBean = this.createBean(rowDragComp, this.beans.context);\n    this.rowDragComps.push(rowDragBean);\n    gui.compBean.addDestroyFunc(() => {\n      this.rowDragComps = this.rowDragComps.filter((r) => r !== rowDragBean);\n      this.destroyBean(rowDragBean, this.beans.context);\n    });\n  }\n  setupFullWidth(gui) {\n    const pinned = this.getPinnedForContainer(gui.containerType);\n    const compDetails = this.createFullWidthCompDetails(gui.element, pinned);\n    gui.rowComp.showFullWidth(compDetails);\n  }\n  getFullWidthCellRenderers() {\n    if (this.gos.get(\"embedFullWidthRows\")) {\n      return this.allRowGuis.map((gui) => gui?.rowComp?.getFullWidthCellRenderer());\n    }\n    return [this.fullWidthGui?.rowComp?.getFullWidthCellRenderer()];\n  }\n  executeProcessRowPostCreateFunc() {\n    const func = this.gos.getCallback(\"processRowPostCreate\");\n    if (!func || !this.areAllContainersReady()) {\n      return;\n    }\n    const params = {\n      // areAllContainersReady asserts that centerGui is not null\n      eRow: this.centerGui.element,\n      ePinnedLeftRow: this.leftGui ? this.leftGui.element : void 0,\n      ePinnedRightRow: this.rightGui ? this.rightGui.element : void 0,\n      node: this.rowNode,\n      rowIndex: this.rowNode.rowIndex,\n      addRenderedRowListener: this.addEventListener.bind(this)\n    };\n    func(params);\n  }\n  areAllContainersReady() {\n    const {\n      leftGui,\n      centerGui,\n      rightGui,\n      beans: { visibleCols }\n    } = this;\n    const isLeftReady = !!leftGui || !visibleCols.isPinningLeft();\n    const isCenterReady = !!centerGui;\n    const isRightReady = !!rightGui || !visibleCols.isPinningRight();\n    return isLeftReady && isCenterReady && isRightReady;\n  }\n  isNodeFullWidthCell() {\n    if (this.rowNode.detail) {\n      return true;\n    }\n    const isFullWidthCellFunc = this.beans.gos.getCallback(\"isFullWidthRow\");\n    return isFullWidthCellFunc ? isFullWidthCellFunc({ rowNode: this.rowNode }) : false;\n  }\n  setRowType() {\n    const isStub = this.rowNode.stub && !this.gos.get(\"suppressServerSideFullWidthLoadingRow\") && !this.gos.get(\"groupHideOpenParents\");\n    const isFullWidthCell = this.isNodeFullWidthCell();\n    const isDetailCell = this.gos.get(\"masterDetail\") && this.rowNode.detail;\n    const pivotMode = this.beans.colModel.isPivotMode();\n    const isGroupRow = !!this.rowNode.group && !this.rowNode.footer;\n    const isFullWidthGroup = isGroupRow && _isGroupUseEntireRow(this.gos, pivotMode);\n    if (isStub) {\n      this.rowType = \"FullWidthLoading\";\n    } else if (isDetailCell) {\n      this.rowType = \"FullWidthDetail\";\n    } else if (isFullWidthCell) {\n      this.rowType = \"FullWidth\";\n    } else if (isFullWidthGroup) {\n      this.rowType = \"FullWidthGroup\";\n    } else {\n      this.rowType = \"Normal\";\n    }\n  }\n  updateColumnLists(suppressAnimationFrame = false, useFlushSync = false) {\n    if (this.isFullWidth()) {\n      return;\n    }\n    const { animationFrameSvc } = this.beans;\n    const noAnimation = !animationFrameSvc || suppressAnimationFrame || this.gos.get(\"suppressAnimationFrame\") || this.printLayout;\n    if (noAnimation) {\n      this.updateColumnListsImpl(useFlushSync);\n      return;\n    }\n    if (this.updateColumnListsPending) {\n      return;\n    }\n    animationFrameSvc.createTask(\n      () => {\n        if (!this.active) {\n          return;\n        }\n        this.updateColumnListsImpl(true);\n      },\n      this.rowNode.rowIndex,\n      \"createTasksP1\"\n    );\n    this.updateColumnListsPending = true;\n  }\n  /**\n   * Overridden by SpannedRowCtrl\n   */\n  getNewCellCtrl(col) {\n    const isCellSpan = this.beans.rowSpanSvc?.isCellSpanning(col, this.rowNode);\n    if (isCellSpan) {\n      return void 0;\n    }\n    return new CellCtrl(col, this.rowNode, this.beans, this);\n  }\n  /**\n   * Overridden by SpannedRowCtrl, if span context changes cell needs rebuilt\n   */\n  shouldRecreateCellCtrl(cell) {\n    return !!this.beans.rowSpanSvc?.isCellSpanning(cell.column, this.rowNode);\n  }\n  createCellCtrls(prev, cols, pinned = null) {\n    const res = {\n      list: [],\n      map: {}\n    };\n    const addCell = (colInstanceId, cellCtrl, index) => {\n      if (index != null) {\n        res.list.splice(index, 0, cellCtrl);\n      } else {\n        res.list.push(cellCtrl);\n      }\n      res.map[colInstanceId] = cellCtrl;\n    };\n    const colsFromPrev = [];\n    for (const col of cols) {\n      const colInstanceId = col.getInstanceId();\n      let cellCtrl = prev.map[colInstanceId];\n      if (cellCtrl && this.shouldRecreateCellCtrl(cellCtrl)) {\n        cellCtrl.destroy();\n        cellCtrl = void 0;\n      }\n      if (!cellCtrl) {\n        cellCtrl = this.getNewCellCtrl(col);\n      }\n      if (!cellCtrl) {\n        continue;\n      }\n      addCell(colInstanceId, cellCtrl);\n    }\n    for (const prevCellCtrl of prev.list) {\n      const colInstanceId = prevCellCtrl.column.getInstanceId();\n      const cellInResult = res.map[colInstanceId] != null;\n      if (cellInResult) {\n        continue;\n      }\n      const keepCell = !this.isCellEligibleToBeRemoved(prevCellCtrl, pinned);\n      if (keepCell) {\n        colsFromPrev.push([colInstanceId, prevCellCtrl]);\n      } else {\n        prevCellCtrl.destroy();\n      }\n    }\n    if (colsFromPrev.length) {\n      for (const [colInstanceId, cellCtrl] of colsFromPrev) {\n        const index = res.list.findIndex((ctrl) => ctrl.column.getLeft() > cellCtrl.column.getLeft());\n        const normalisedIndex = index === -1 ? void 0 : Math.max(index - 1, 0);\n        addCell(colInstanceId, cellCtrl, normalisedIndex);\n      }\n    }\n    return res;\n  }\n  updateColumnListsImpl(useFlushSync) {\n    this.updateColumnListsPending = false;\n    this.createAllCellCtrls();\n    this.setCellCtrls(useFlushSync);\n  }\n  setCellCtrls(useFlushSync) {\n    this.allRowGuis.forEach((item) => {\n      const cellControls = this.getCellCtrlsForContainer(item.containerType);\n      item.rowComp.setCellCtrls(cellControls, useFlushSync);\n    });\n  }\n  getCellCtrlsForContainer(containerType) {\n    switch (containerType) {\n      case \"left\":\n        return this.leftCellCtrls.list;\n      case \"right\":\n        return this.rightCellCtrls.list;\n      case \"fullWidth\":\n        return [];\n      case \"center\":\n        return this.centerCellCtrls.list;\n    }\n  }\n  createAllCellCtrls() {\n    const colViewport = this.beans.colViewport;\n    const presentedColsService = this.beans.visibleCols;\n    if (this.printLayout) {\n      this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, presentedColsService.allCols);\n      this.leftCellCtrls = { list: [], map: {} };\n      this.rightCellCtrls = { list: [], map: {} };\n    } else {\n      const centerCols = colViewport.getColsWithinViewport(this.rowNode);\n      this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, centerCols);\n      const leftCols = presentedColsService.getLeftColsForRow(this.rowNode);\n      this.leftCellCtrls = this.createCellCtrls(this.leftCellCtrls, leftCols, \"left\");\n      const rightCols = presentedColsService.getRightColsForRow(this.rowNode);\n      this.rightCellCtrls = this.createCellCtrls(this.rightCellCtrls, rightCols, \"right\");\n    }\n  }\n  isCellEligibleToBeRemoved(cellCtrl, nextContainerPinned) {\n    const REMOVE_CELL = true;\n    const KEEP_CELL = false;\n    const { column } = cellCtrl;\n    if (column.getPinned() != nextContainerPinned) {\n      return REMOVE_CELL;\n    }\n    const { editing, cellPosition } = cellCtrl;\n    const { focusSvc, visibleCols } = this.beans;\n    const focused = focusSvc.isCellFocused(cellPosition);\n    const mightWantToKeepCell = editing || focused;\n    if (mightWantToKeepCell) {\n      const displayedColumns = visibleCols.allCols;\n      const cellStillDisplayed = displayedColumns.indexOf(column) >= 0;\n      return cellStillDisplayed ? KEEP_CELL : REMOVE_CELL;\n    }\n    return REMOVE_CELL;\n  }\n  getDomOrder() {\n    const isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n    return isEnsureDomOrder || _isDomLayout(this.gos, \"print\");\n  }\n  listenOnDomOrder(gui) {\n    const listener = () => {\n      gui.rowComp.setDomOrder(this.getDomOrder());\n    };\n    gui.compBean.addManagedPropertyListeners([\"domLayout\", \"ensureDomOrder\"], listener);\n  }\n  setAnimateFlags(animateIn) {\n    if (this.rowNode.sticky || !animateIn) {\n      return;\n    }\n    const oldRowTopExists = _exists(this.rowNode.oldRowTop);\n    const { visibleCols } = this.beans;\n    const pinningLeft = visibleCols.isPinningLeft();\n    const pinningRight = visibleCols.isPinningRight();\n    if (oldRowTopExists) {\n      const { slideInAnimation } = this;\n      if (this.isFullWidth() && !this.gos.get(\"embedFullWidthRows\")) {\n        slideInAnimation.fullWidth = true;\n        return;\n      }\n      slideInAnimation.center = true;\n      slideInAnimation.left = pinningLeft;\n      slideInAnimation.right = pinningRight;\n    } else {\n      const { fadeInAnimation } = this;\n      if (this.isFullWidth() && !this.gos.get(\"embedFullWidthRows\")) {\n        fadeInAnimation.fullWidth = true;\n        return;\n      }\n      fadeInAnimation.center = true;\n      fadeInAnimation.left = pinningLeft;\n      fadeInAnimation.right = pinningRight;\n    }\n  }\n  isFullWidth() {\n    return this.rowType !== \"Normal\";\n  }\n  refreshFullWidth() {\n    const tryRefresh = (gui, pinned) => {\n      if (!gui) {\n        return true;\n      }\n      return gui.rowComp.refreshFullWidth(() => {\n        const compDetails = this.createFullWidthCompDetails(gui.element, pinned);\n        return compDetails.params;\n      });\n    };\n    const fullWidthSuccess = tryRefresh(this.fullWidthGui, null);\n    const centerSuccess = tryRefresh(this.centerGui, null);\n    const leftSuccess = tryRefresh(this.leftGui, \"left\");\n    const rightSuccess = tryRefresh(this.rightGui, \"right\");\n    const allFullWidthRowsRefreshed = fullWidthSuccess && centerSuccess && leftSuccess && rightSuccess;\n    return allFullWidthRowsRefreshed;\n  }\n  addListeners() {\n    this.addManagedListeners(this.rowNode, {\n      heightChanged: () => this.onRowHeightChanged(),\n      rowSelected: () => this.onRowSelected(),\n      rowIndexChanged: this.onRowIndexChanged.bind(this),\n      topChanged: this.onTopChanged.bind(this),\n      ...this.beans.expansionSvc?.getRowExpandedListeners(this) ?? {}\n    });\n    if (this.rowNode.detail) {\n      this.addManagedListeners(this.rowNode.parent, { dataChanged: this.onRowNodeDataChanged.bind(this) });\n    }\n    this.addManagedListeners(this.rowNode, {\n      dataChanged: this.onRowNodeDataChanged.bind(this),\n      cellChanged: this.postProcessCss.bind(this),\n      rowHighlightChanged: this.onRowNodeHighlightChanged.bind(this),\n      draggingChanged: this.postProcessRowDragging.bind(this),\n      uiLevelChanged: this.onUiLevelChanged.bind(this)\n    });\n    this.addManagedListeners(this.beans.eventSvc, {\n      paginationPixelOffsetChanged: this.onPaginationPixelOffsetChanged.bind(this),\n      heightScaleChanged: this.onTopChanged.bind(this),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      virtualColumnsChanged: this.onVirtualColumnsChanged.bind(this),\n      cellFocused: this.onCellFocusChanged.bind(this),\n      cellFocusCleared: this.onCellFocusChanged.bind(this),\n      paginationChanged: this.onPaginationChanged.bind(this),\n      modelUpdated: this.refreshFirstAndLastRowStyles.bind(this),\n      columnMoved: () => this.updateColumnLists()\n    });\n    if (this.beans.rowSpanSvc) {\n      this.addManagedListeners(this.beans.rowSpanSvc, {\n        spannedCellsUpdated: ({ pinned }) => {\n          if (pinned && !this.rowNode.rowPinned) {\n            return;\n          }\n          this.updateColumnLists();\n        }\n      });\n    }\n    this.addDestroyFunc(() => {\n      this.rowDragComps = this.destroyBeans(this.rowDragComps, this.beans.context);\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature, this.beans.context);\n    });\n    this.addManagedPropertyListeners(\n      [\"rowStyle\", \"getRowStyle\", \"rowClass\", \"getRowClass\", \"rowClassRules\"],\n      this.postProcessCss.bind(this)\n    );\n    this.addManagedPropertyListener(\"rowDragEntireRow\", () => {\n      const useRowDragEntireRow = this.gos.get(\"rowDragEntireRow\");\n      if (useRowDragEntireRow) {\n        this.allRowGuis.forEach((gui) => {\n          this.addRowDraggerToRow(gui);\n        });\n        return;\n      }\n      this.rowDragComps = this.destroyBeans(this.rowDragComps, this.beans.context);\n    });\n    this.addListenersForCellComps();\n  }\n  addListenersForCellComps() {\n    this.addManagedListeners(this.rowNode, {\n      rowIndexChanged: () => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onRowIndexChanged());\n      },\n      cellChanged: (event) => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onCellChanged(event));\n      }\n    });\n  }\n  onRowNodeDataChanged(event) {\n    const fullWidthChanged = this.isFullWidth() !== !!this.isNodeFullWidthCell();\n    if (fullWidthChanged) {\n      this.beans.rowRenderer.redrawRow(this.rowNode);\n      return;\n    }\n    if (this.isFullWidth()) {\n      const refresh = this.refreshFullWidth();\n      if (!refresh) {\n        this.beans.rowRenderer.redrawRow(this.rowNode);\n      }\n      return;\n    }\n    this.getAllCellCtrls().forEach(\n      (cellCtrl) => cellCtrl.refreshCell({\n        suppressFlash: !event.update,\n        newData: !event.update\n      })\n    );\n    this.allRowGuis.forEach((gui) => {\n      this.setRowCompRowId(gui.rowComp);\n      this.updateRowBusinessKey();\n      this.setRowCompRowBusinessKey(gui.rowComp);\n    });\n    this.onRowSelected();\n    this.postProcessCss();\n  }\n  postProcessCss() {\n    this.setStylesFromGridOptions(true);\n    this.postProcessClassesFromGridOptions();\n    this.postProcessRowClassRules();\n    this.postProcessRowDragging();\n  }\n  onRowNodeHighlightChanged() {\n    const highlighted = this.rowNode.highlighted;\n    this.allRowGuis.forEach((gui) => {\n      const aboveOn = highlighted === \"Above\";\n      const belowOn = highlighted === \"Below\";\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-highlight-above\", aboveOn);\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-highlight-below\", belowOn);\n    });\n  }\n  postProcessRowDragging() {\n    const dragging = this.rowNode.dragging;\n    this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(\"ag-row-dragging\", dragging));\n  }\n  verifyCells() {\n    this.onDisplayedColumnsChanged();\n  }\n  onDisplayedColumnsChanged() {\n    this.updateColumnLists(true);\n    this.beans.rowAutoHeight?.requestCheckAutoHeight();\n  }\n  onVirtualColumnsChanged() {\n    this.updateColumnLists(false, true);\n  }\n  getRowPosition() {\n    return {\n      rowPinned: _makeNull(this.rowNode.rowPinned),\n      rowIndex: this.rowNode.rowIndex\n    };\n  }\n  onKeyboardNavigate(keyboardEvent) {\n    const groupInfo = this.findFullWidthInfoForEvent(keyboardEvent);\n    if (!groupInfo) {\n      return;\n    }\n    const { rowGui, column } = groupInfo;\n    const currentFullWidthContainer = rowGui.element;\n    const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n    if (!isFullWidthContainerFocused) {\n      return;\n    }\n    const node = this.rowNode;\n    const { focusSvc, navigation } = this.beans;\n    const lastFocusedCell = focusSvc.getFocusedCell();\n    const cellPosition = {\n      rowIndex: node.rowIndex,\n      rowPinned: node.rowPinned,\n      column: lastFocusedCell?.column ?? column\n    };\n    navigation?.navigateToNextCell(keyboardEvent, keyboardEvent.key, cellPosition, true);\n    keyboardEvent.preventDefault();\n  }\n  onTabKeyDown(keyboardEvent) {\n    if (keyboardEvent.defaultPrevented || _isStopPropagationForAgGrid(keyboardEvent)) {\n      return;\n    }\n    const currentFullWidthComp = this.allRowGuis.find(\n      (c) => c.element.contains(keyboardEvent.target)\n    );\n    const currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n    const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n    const activeEl = _getActiveDomElement(this.beans);\n    let isDetailGridCellFocused = false;\n    if (currentFullWidthContainer && activeEl) {\n      isDetailGridCellFocused = currentFullWidthContainer.contains(activeEl) && activeEl.classList.contains(\"ag-cell\");\n    }\n    let nextEl = null;\n    if (!isFullWidthContainerFocused && !isDetailGridCellFocused) {\n      nextEl = _findNextFocusableElement(this.beans, currentFullWidthContainer, false, keyboardEvent.shiftKey);\n    }\n    if (this.isFullWidth() && isFullWidthContainerFocused || !nextEl) {\n      this.beans.navigation?.onTabKeyDown(this, keyboardEvent);\n    }\n  }\n  getFullWidthElement() {\n    if (this.fullWidthGui) {\n      return this.fullWidthGui.element;\n    }\n    return null;\n  }\n  getRowYPosition() {\n    const displayedEl = this.allRowGuis.find((el) => _isVisible(el.element))?.element;\n    if (displayedEl) {\n      return displayedEl.getBoundingClientRect().top;\n    }\n    return 0;\n  }\n  onSuppressCellFocusChanged(suppressCellFocus) {\n    const tabIndex = this.isFullWidth() && suppressCellFocus ? void 0 : -1;\n    this.allRowGuis.forEach((gui) => {\n      _addOrRemoveAttribute(gui.element, \"tabindex\", tabIndex);\n    });\n  }\n  onFullWidthRowFocused(event) {\n    const node = this.rowNode;\n    const isFocused = !event ? false : this.isFullWidth() && event.rowIndex === node.rowIndex && event.rowPinned == node.rowPinned;\n    const element = this.fullWidthGui ? this.fullWidthGui.element : this.centerGui?.element;\n    if (!element) {\n      return;\n    }\n    element.classList.toggle(\"ag-full-width-focus\", isFocused);\n    if (isFocused && event?.forceBrowserFocus) {\n      element.focus({ preventScroll: true });\n    }\n  }\n  recreateCell(cellCtrl) {\n    this.centerCellCtrls = this.removeCellCtrl(this.centerCellCtrls, cellCtrl);\n    this.leftCellCtrls = this.removeCellCtrl(this.leftCellCtrls, cellCtrl);\n    this.rightCellCtrls = this.removeCellCtrl(this.rightCellCtrls, cellCtrl);\n    cellCtrl.destroy();\n    this.updateColumnLists();\n  }\n  removeCellCtrl(prev, cellCtrlToRemove) {\n    const res = {\n      list: [],\n      map: {}\n    };\n    prev.list.forEach((cellCtrl) => {\n      if (cellCtrl === cellCtrlToRemove) {\n        return;\n      }\n      res.list.push(cellCtrl);\n      res.map[cellCtrl.column.getInstanceId()] = cellCtrl;\n    });\n    return res;\n  }\n  onMouseEvent(eventName, mouseEvent) {\n    switch (eventName) {\n      case \"dblclick\":\n        this.onRowDblClick(mouseEvent);\n        break;\n      case \"click\":\n        this.onRowClick(mouseEvent);\n        break;\n      case \"touchstart\":\n      case \"mousedown\":\n        this.onRowMouseDown(mouseEvent);\n        break;\n    }\n  }\n  createRowEvent(type, domEvent) {\n    const { rowNode } = this;\n    return _addGridCommonParams(this.gos, {\n      type,\n      node: rowNode,\n      data: rowNode.data,\n      rowIndex: rowNode.rowIndex,\n      rowPinned: rowNode.rowPinned,\n      event: domEvent\n    });\n  }\n  createRowEventWithSource(type, domEvent) {\n    const event = this.createRowEvent(type, domEvent);\n    event.source = this;\n    return event;\n  }\n  onRowDblClick(mouseEvent) {\n    if (_isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    this.beans.eventSvc.dispatchEvent(this.createRowEventWithSource(\"rowDoubleClicked\", mouseEvent));\n  }\n  findFullWidthInfoForEvent(event) {\n    if (!event) {\n      return;\n    }\n    const rowGui = this.findFullWidthRowGui(event.target);\n    const column = this.getColumnForFullWidth(rowGui);\n    if (!rowGui || !column) {\n      return;\n    }\n    return { rowGui, column };\n  }\n  findFullWidthRowGui(target) {\n    return this.allRowGuis.find((c) => c.element.contains(target));\n  }\n  getColumnForFullWidth(fullWidthRowGui) {\n    const { visibleCols } = this.beans;\n    switch (fullWidthRowGui?.containerType) {\n      case \"center\":\n        return visibleCols.centerCols[0];\n      case \"left\":\n        return visibleCols.leftCols[0];\n      case \"right\":\n        return visibleCols.rightCols[0];\n      default:\n        return visibleCols.allCols[0];\n    }\n  }\n  onRowMouseDown(mouseEvent) {\n    this.lastMouseDownOnDragger = _isElementChildOfClass(mouseEvent.target, \"ag-row-drag\", 3);\n    if (!this.isFullWidth()) {\n      return;\n    }\n    const node = this.rowNode;\n    const { rangeSvc, focusSvc } = this.beans;\n    rangeSvc?.removeAllCellRanges();\n    const groupInfo = this.findFullWidthInfoForEvent(mouseEvent);\n    if (!groupInfo) {\n      return;\n    }\n    const { rowGui, column } = groupInfo;\n    const element = rowGui.element;\n    const target = mouseEvent.target;\n    let forceBrowserFocus = mouseEvent.defaultPrevented || _isBrowserSafari();\n    if (element && element.contains(target) && _isFocusableFormField(target)) {\n      forceBrowserFocus = false;\n    }\n    focusSvc.setFocusedCell({\n      rowIndex: node.rowIndex,\n      column,\n      rowPinned: node.rowPinned,\n      forceBrowserFocus\n    });\n  }\n  onRowClick(mouseEvent) {\n    const stop = _isStopPropagationForAgGrid(mouseEvent) || this.lastMouseDownOnDragger;\n    if (stop) {\n      return;\n    }\n    const { eventSvc, selectionSvc } = this.beans;\n    eventSvc.dispatchEvent(this.createRowEventWithSource(\"rowClicked\", mouseEvent));\n    selectionSvc?.handleSelectionEvent(mouseEvent, this.rowNode, \"rowClicked\");\n  }\n  setupDetailRowAutoHeight(eDetailGui) {\n    if (this.rowType !== \"FullWidthDetail\") {\n      return;\n    }\n    this.beans.masterDetailSvc?.setupDetailRowAutoHeight(this, eDetailGui);\n  }\n  createFullWidthCompDetails(eRow, pinned) {\n    const { gos, rowNode } = this;\n    const params = _addGridCommonParams(gos, {\n      fullWidth: true,\n      data: rowNode.data,\n      node: rowNode,\n      value: rowNode.key,\n      valueFormatted: rowNode.key,\n      // these need to be taken out, as part of 'afterAttached' now\n      eGridCell: eRow,\n      eParentOfValue: eRow,\n      pinned,\n      addRenderedRowListener: this.addEventListener.bind(this),\n      // This is not on the type of ICellRendererParams\n      registerRowDragger: (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) => this.addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value, suppressVisibilityChange),\n      setTooltip: (value, shouldDisplayTooltip) => {\n        gos.assertModuleRegistered(\"Tooltip\", 3);\n        this.refreshRowTooltip(value, shouldDisplayTooltip);\n      }\n    });\n    const compFactory = this.beans.userCompFactory;\n    switch (this.rowType) {\n      case \"FullWidthDetail\":\n        return _getFullWidthDetailCellRendererDetails(compFactory, params);\n      case \"FullWidthGroup\":\n        return _getFullWidthGroupCellRendererDetails(compFactory, params);\n      case \"FullWidthLoading\":\n        return _getFullWidthLoadingCellRendererDetails(compFactory, params);\n      default:\n        return _getFullWidthCellRendererDetails(compFactory, params);\n    }\n  }\n  refreshRowTooltip(value, shouldDisplayTooltip) {\n    if (!this.fullWidthGui) {\n      return;\n    }\n    this.tooltipFeature = this.beans.tooltipSvc?.refreshRowTooltip(\n      this.tooltipFeature,\n      this,\n      value,\n      shouldDisplayTooltip\n    );\n  }\n  addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value = \"\", suppressVisibilityChange) {\n    const { rowDragSvc, context } = this.beans;\n    if (!rowDragSvc || !this.isFullWidth()) {\n      return;\n    }\n    const rowDragComp = rowDragSvc.createRowDragComp(\n      () => value,\n      this.rowNode,\n      void 0,\n      rowDraggerElement,\n      dragStartPixels,\n      suppressVisibilityChange\n    );\n    this.createBean(rowDragComp, context);\n    this.addDestroyFunc(() => {\n      this.destroyBean(rowDragComp, context);\n    });\n  }\n  onUiLevelChanged() {\n    const newLevel = calculateRowLevel(this.rowNode);\n    if (this.rowLevel != newLevel) {\n      const classToAdd = \"ag-row-level-\" + newLevel;\n      const classToRemove = \"ag-row-level-\" + this.rowLevel;\n      this.allRowGuis.forEach((gui) => {\n        gui.rowComp.addOrRemoveCssClass(classToAdd, true);\n        gui.rowComp.addOrRemoveCssClass(classToRemove, false);\n      });\n    }\n    this.rowLevel = newLevel;\n  }\n  isFirstRowOnPage() {\n    return this.rowNode.rowIndex === this.beans.pageBounds.getFirstRow();\n  }\n  isLastRowOnPage() {\n    return this.rowNode.rowIndex === this.beans.pageBounds.getLastRow();\n  }\n  refreshFirstAndLastRowStyles() {\n    const newFirst = this.isFirstRowOnPage();\n    const newLast = this.isLastRowOnPage();\n    if (this.firstRowOnPage !== newFirst) {\n      this.firstRowOnPage = newFirst;\n      this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(\"ag-row-first\", newFirst));\n    }\n    if (this.lastRowOnPage !== newLast) {\n      this.lastRowOnPage = newLast;\n      this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(\"ag-row-last\", newLast));\n    }\n  }\n  getAllCellCtrls() {\n    if (this.leftCellCtrls.list.length === 0 && this.rightCellCtrls.list.length === 0) {\n      return this.centerCellCtrls.list;\n    }\n    const res = [...this.centerCellCtrls.list, ...this.leftCellCtrls.list, ...this.rightCellCtrls.list];\n    return res;\n  }\n  postProcessClassesFromGridOptions() {\n    const cssClasses = [];\n    this.beans.rowStyleSvc?.processClassesFromGridOptions(cssClasses, this.rowNode);\n    if (!cssClasses.length) {\n      return;\n    }\n    cssClasses.forEach((classStr) => {\n      this.allRowGuis.forEach((c) => c.rowComp.addOrRemoveCssClass(classStr, true));\n    });\n  }\n  postProcessRowClassRules() {\n    this.beans.rowStyleSvc?.processRowClassRules(\n      this.rowNode,\n      (className) => {\n        this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(className, true));\n      },\n      (className) => {\n        this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(className, false));\n      }\n    );\n  }\n  setStylesFromGridOptions(updateStyles, gui) {\n    if (updateStyles) {\n      this.rowStyles = this.processStylesFromGridOptions();\n    }\n    this.forEachGui(gui, (gui2) => gui2.rowComp.setUserStyles(this.rowStyles));\n  }\n  getPinnedForContainer(rowContainerType) {\n    if (rowContainerType === \"left\" || rowContainerType === \"right\") {\n      return rowContainerType;\n    }\n    return null;\n  }\n  getInitialRowClasses(rowContainerType) {\n    const pinned = this.getPinnedForContainer(rowContainerType);\n    const fullWidthRow = this.isFullWidth();\n    const { rowNode, beans } = this;\n    const classes = [];\n    classes.push(\"ag-row\");\n    classes.push(this.rowFocused ? \"ag-row-focus\" : \"ag-row-no-focus\");\n    if (this.fadeInAnimation[rowContainerType]) {\n      classes.push(\"ag-opacity-zero\");\n    }\n    classes.push(rowNode.rowIndex % 2 === 0 ? \"ag-row-even\" : \"ag-row-odd\");\n    if (rowNode.isRowPinned()) {\n      classes.push(\"ag-row-pinned\");\n    }\n    if (rowNode.isSelected()) {\n      classes.push(\"ag-row-selected\");\n    }\n    if (rowNode.footer) {\n      classes.push(\"ag-row-footer\");\n    }\n    classes.push(\"ag-row-level-\" + this.rowLevel);\n    if (rowNode.stub) {\n      classes.push(\"ag-row-loading\");\n    }\n    if (fullWidthRow) {\n      classes.push(\"ag-full-width-row\");\n    }\n    beans.expansionSvc?.addExpandedCss(classes, rowNode);\n    if (rowNode.dragging) {\n      classes.push(\"ag-row-dragging\");\n    }\n    const { rowStyleSvc } = beans;\n    if (rowStyleSvc) {\n      rowStyleSvc.processClassesFromGridOptions(classes, rowNode);\n      rowStyleSvc.preProcessRowClassRules(classes, rowNode);\n    }\n    classes.push(this.printLayout ? \"ag-row-position-relative\" : \"ag-row-position-absolute\");\n    if (this.isFirstRowOnPage()) {\n      classes.push(\"ag-row-first\");\n    }\n    if (this.isLastRowOnPage()) {\n      classes.push(\"ag-row-last\");\n    }\n    if (fullWidthRow) {\n      if (pinned === \"left\") {\n        classes.push(\"ag-cell-last-left-pinned\");\n      }\n      if (pinned === \"right\") {\n        classes.push(\"ag-cell-first-right-pinned\");\n      }\n    }\n    return classes;\n  }\n  processStylesFromGridOptions() {\n    return this.beans.rowStyleSvc?.processStylesFromGridOptions(this.rowNode) ?? this.emptyStyle;\n  }\n  onRowSelected(gui) {\n    this.beans.selectionSvc?.onRowCtrlSelected(\n      this,\n      (gui2) => {\n        if (gui2 === this.centerGui || gui2 === this.fullWidthGui) {\n          this.announceDescription();\n        }\n      },\n      gui\n    );\n  }\n  announceDescription() {\n    this.beans.selectionSvc?.announceAriaRowSelection(this.rowNode);\n  }\n  addHoverFunctionality(eGui) {\n    if (!this.active) {\n      return;\n    }\n    const { element, compBean } = eGui;\n    const { rowNode, beans, gos } = this;\n    compBean.addManagedListeners(element, {\n      mouseenter: () => rowNode.dispatchRowEvent(\"mouseEnter\"),\n      mouseleave: () => rowNode.dispatchRowEvent(\"mouseLeave\")\n    });\n    compBean.addManagedListeners(rowNode, {\n      mouseEnter: () => {\n        if (!beans.dragSvc?.dragging && !gos.get(\"suppressRowHoverHighlight\")) {\n          element.classList.add(\"ag-row-hover\");\n          rowNode.setHovered(true);\n        }\n      },\n      mouseLeave: () => {\n        this.resetHoveredStatus(element);\n      }\n    });\n  }\n  resetHoveredStatus(el) {\n    const elements = el ? [el] : this.allRowGuis.map((gui) => gui.element);\n    for (const element of elements) {\n      element.classList.remove(\"ag-row-hover\");\n    }\n    this.rowNode.setHovered(false);\n  }\n  // for animation, we don't want to animate entry or exit to a very far away pixel,\n  // otherwise the row would move so fast, it would appear to disappear. so this method\n  // moves the row closer to the viewport if it is far away, so the row slide in / out\n  // at a speed the user can see.\n  roundRowTopToBounds(rowTop) {\n    const range = this.beans.ctrlsSvc.getScrollFeature().getApproximateVScollPosition();\n    const minPixel = this.applyPaginationOffset(range.top, true) - 100;\n    const maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\n    return Math.min(Math.max(minPixel, rowTop), maxPixel);\n  }\n  forEachGui(gui, callback) {\n    if (gui) {\n      callback(gui);\n    } else {\n      this.allRowGuis.forEach(callback);\n    }\n  }\n  onRowHeightChanged(gui) {\n    if (this.rowNode.rowHeight == null) {\n      return;\n    }\n    const rowHeight = this.rowNode.rowHeight;\n    const defaultRowHeight = this.beans.environment.getDefaultRowHeight();\n    const isHeightFromFunc = _isGetRowHeightFunction(this.gos);\n    const heightFromFunc = isHeightFromFunc ? _getRowHeightForNode(this.beans, this.rowNode).height : void 0;\n    const lineHeight = heightFromFunc ? `${Math.min(defaultRowHeight, heightFromFunc) - 2}px` : void 0;\n    this.forEachGui(gui, (gui2) => {\n      gui2.element.style.height = `${rowHeight}px`;\n      if (lineHeight) {\n        gui2.element.style.setProperty(\"--ag-line-height\", lineHeight);\n      }\n    });\n  }\n  // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n  destroyFirstPass(suppressAnimation = false) {\n    this.active = false;\n    const { rowNode } = this;\n    if (!suppressAnimation && _isAnimateRows(this.gos) && !rowNode.sticky) {\n      const rowStillVisibleJustNotInViewport = rowNode.rowTop != null;\n      if (rowStillVisibleJustNotInViewport) {\n        const rowTop = this.roundRowTopToBounds(rowNode.rowTop);\n        this.setRowTop(rowTop);\n      } else {\n        this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(\"ag-opacity-zero\", true));\n      }\n    }\n    rowNode.setHovered(false);\n    const event = this.createRowEvent(\"virtualRowRemoved\");\n    this.dispatchLocalEvent(event);\n    this.beans.eventSvc.dispatchEvent(event);\n    super.destroy();\n  }\n  destroySecondPass() {\n    this.allRowGuis.length = 0;\n    this.beans.editSvc?.stopRowEditing(this);\n    const destroyCellCtrls = (ctrls) => {\n      ctrls.list.forEach((c) => c.destroy());\n      return { list: [], map: {} };\n    };\n    this.centerCellCtrls = destroyCellCtrls(this.centerCellCtrls);\n    this.leftCellCtrls = destroyCellCtrls(this.leftCellCtrls);\n    this.rightCellCtrls = destroyCellCtrls(this.rightCellCtrls);\n  }\n  setFocusedClasses(gui) {\n    this.forEachGui(gui, (gui2) => {\n      gui2.rowComp.addOrRemoveCssClass(\"ag-row-focus\", this.rowFocused);\n      gui2.rowComp.addOrRemoveCssClass(\"ag-row-no-focus\", !this.rowFocused);\n    });\n  }\n  onCellFocusChanged() {\n    const { focusSvc, editSvc } = this.beans;\n    const rowFocused = focusSvc.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n    if (rowFocused !== this.rowFocused) {\n      this.rowFocused = rowFocused;\n      this.setFocusedClasses();\n    }\n    if (!rowFocused && this.editing) {\n      editSvc?.stopRowEditing(this, false);\n    }\n  }\n  onPaginationChanged() {\n    const currentPage = this.beans.pagination?.getCurrentPage() ?? 0;\n    if (this.paginationPage !== currentPage) {\n      this.paginationPage = currentPage;\n      this.onTopChanged();\n    }\n    this.refreshFirstAndLastRowStyles();\n  }\n  onTopChanged() {\n    this.setRowTop(this.rowNode.rowTop);\n  }\n  onPaginationPixelOffsetChanged() {\n    this.onTopChanged();\n  }\n  // applies pagination offset, eg if on second page, and page height is 500px, then removes\n  // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\n  // reverse will take the offset away rather than add.\n  applyPaginationOffset(topPx, reverse = false) {\n    if (this.rowNode.isRowPinned() || this.rowNode.sticky) {\n      return topPx;\n    }\n    const pixelOffset = this.beans.pageBounds.getPixelOffset();\n    const multiplier = reverse ? 1 : -1;\n    return topPx + pixelOffset * multiplier;\n  }\n  setRowTop(pixels) {\n    if (this.printLayout) {\n      return;\n    }\n    if (_exists(pixels)) {\n      const afterPaginationPixels = this.applyPaginationOffset(pixels);\n      const skipScaling = this.rowNode.isRowPinned() || this.rowNode.sticky;\n      const afterScalingPixels = skipScaling ? afterPaginationPixels : this.beans.rowContainerHeight.getRealPixelPosition(afterPaginationPixels);\n      const topPx = `${afterScalingPixels}px`;\n      this.setRowTopStyle(topPx);\n    }\n  }\n  // the top needs to be set into the DOM element when the element is created, not updated afterwards.\n  // otherwise the transition would not work, as it would be transitioning from zero (the unset value).\n  // for example, suppose a row that is outside the viewport, then user does a filter to remove other rows\n  // and this row now appears in the viewport, and the row moves up (ie it was under the viewport and not rendered,\n  // but now is in the viewport) then a new RowComp is created, however it should have it's position initialised\n  // to below the viewport, so the row will appear to animate up. if we didn't set the initial position at creation\n  // time, the row would animate down (ie from position zero).\n  getInitialRowTop(rowContainerType) {\n    return this.suppressRowTransform ? this.getInitialRowTopShared(rowContainerType) : void 0;\n  }\n  getInitialTransform(rowContainerType) {\n    return this.suppressRowTransform ? void 0 : `translateY(${this.getInitialRowTopShared(rowContainerType)})`;\n  }\n  getInitialRowTopShared(rowContainerType) {\n    if (this.printLayout) {\n      return \"\";\n    }\n    const rowNode = this.rowNode;\n    let rowTop;\n    if (rowNode.sticky) {\n      rowTop = rowNode.stickyRowTop;\n    } else {\n      const pixels = this.slideInAnimation[rowContainerType] ? this.roundRowTopToBounds(rowNode.oldRowTop) : rowNode.rowTop;\n      const afterPaginationPixels = this.applyPaginationOffset(pixels);\n      rowTop = rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeight.getRealPixelPosition(afterPaginationPixels);\n    }\n    return rowTop + \"px\";\n  }\n  setRowTopStyle(topPx) {\n    this.allRowGuis.forEach(\n      (gui) => this.suppressRowTransform ? gui.rowComp.setTop(topPx) : gui.rowComp.setTransform(`translateY(${topPx})`)\n    );\n  }\n  getCellCtrl(column, skipColSpanSearch = false) {\n    let res = null;\n    this.getAllCellCtrls().forEach((cellCtrl) => {\n      if (cellCtrl.column == column) {\n        res = cellCtrl;\n      }\n    });\n    if (res != null || skipColSpanSearch) {\n      return res;\n    }\n    this.getAllCellCtrls().forEach((cellCtrl) => {\n      if (cellCtrl.getColSpanningList().indexOf(column) >= 0) {\n        res = cellCtrl;\n      }\n    });\n    return res;\n  }\n  onRowIndexChanged() {\n    if (this.rowNode.rowIndex != null) {\n      this.onCellFocusChanged();\n      this.updateRowIndexes();\n      this.postProcessCss();\n    }\n  }\n  updateRowIndexes(gui) {\n    const rowIndexStr = this.rowNode.getRowIndexString();\n    if (rowIndexStr === null) {\n      return;\n    }\n    const headerRowCount = (this.beans.ctrlsSvc.getHeaderRowContainerCtrl()?.getRowCount() ?? 0) + (this.beans.filterManager?.getHeaderRowCount() ?? 0);\n    const rowIsEven = this.rowNode.rowIndex % 2 === 0;\n    const ariaRowIndex = headerRowCount + this.rowNode.rowIndex + 1;\n    this.forEachGui(gui, (c) => {\n      c.rowComp.setRowIndex(rowIndexStr);\n      c.rowComp.addOrRemoveCssClass(\"ag-row-even\", rowIsEven);\n      c.rowComp.addOrRemoveCssClass(\"ag-row-odd\", !rowIsEven);\n      _setAriaRowIndex(c.element, ariaRowIndex);\n    });\n  }\n};\n\n// packages/ag-grid-community/src/utils/keyboard.ts\nfunction _isEventFromPrintableCharacter(event) {\n  if (event.altKey || event.ctrlKey || event.metaKey) {\n    return false;\n  }\n  const printableCharacter = event.key?.length === 1;\n  return printableCharacter;\n}\nfunction _isUserSuppressingKeyboardEvent(gos, keyboardEvent, rowNode, column, editing) {\n  const colDefFunc = column ? column.getColDef().suppressKeyboardEvent : void 0;\n  if (!colDefFunc) {\n    return false;\n  }\n  const params = _addGridCommonParams(gos, {\n    event: keyboardEvent,\n    editing,\n    column,\n    node: rowNode,\n    data: rowNode.data,\n    colDef: column.getColDef()\n  });\n  if (colDefFunc) {\n    const colDefFuncResult = colDefFunc(params);\n    if (colDefFuncResult) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// packages/ag-grid-community/src/utils/selection.ts\nfunction _selectAllCells(beans) {\n  const { pinnedRowModel, rowModel } = beans;\n  const [isEmptyPinnedTop, isEmptyPinnedBottom] = [\n    pinnedRowModel?.isEmpty(\"top\") ?? true,\n    pinnedRowModel?.isEmpty(\"bottom\") ?? true\n  ];\n  const floatingStart = isEmptyPinnedTop ? null : \"top\";\n  let floatingEnd;\n  let rowEnd;\n  if (isEmptyPinnedBottom) {\n    floatingEnd = null;\n    rowEnd = rowModel.getRowCount() - 1;\n  } else {\n    floatingEnd = \"bottom\";\n    rowEnd = pinnedRowModel?.getPinnedBottomRowCount() ?? 0 - 1;\n  }\n  const { visibleCols, rangeSvc } = beans;\n  const allDisplayedColumns = visibleCols.allCols;\n  if (!rangeSvc || !allDisplayedColumns?.length) {\n    return;\n  }\n  rangeSvc.setCellRange({\n    rowStartIndex: 0,\n    rowStartPinned: floatingStart,\n    rowEndIndex: rowEnd,\n    rowEndPinned: floatingEnd\n  });\n}\n\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/rowContainerEventsFeature.ts\nvar A_KEYCODE = 65;\nvar C_KEYCODE = 67;\nvar V_KEYCODE = 86;\nvar D_KEYCODE = 68;\nvar Z_KEYCODE = 90;\nvar Y_KEYCODE = 89;\nfunction _normaliseQwertyAzerty(keyboardEvent) {\n  const { keyCode } = keyboardEvent;\n  let code;\n  switch (keyCode) {\n    case A_KEYCODE:\n      code = KeyCode.A;\n      break;\n    case C_KEYCODE:\n      code = KeyCode.C;\n      break;\n    case V_KEYCODE:\n      code = KeyCode.V;\n      break;\n    case D_KEYCODE:\n      code = KeyCode.D;\n      break;\n    case Z_KEYCODE:\n      code = KeyCode.Z;\n      break;\n    case Y_KEYCODE:\n      code = KeyCode.Y;\n      break;\n    default:\n      code = keyboardEvent.code;\n  }\n  return code;\n}\nvar RowContainerEventsFeature = class extends BeanStub {\n  constructor(element) {\n    super();\n    this.element = element;\n  }\n  postConstruct() {\n    this.addKeyboardListeners();\n    this.addMouseListeners();\n    this.beans.touchSvc?.mockRowContextMenu(this);\n  }\n  addKeyboardListeners() {\n    const eventName = \"keydown\";\n    const listener = this.processKeyboardEvent.bind(this, eventName);\n    this.addManagedElementListeners(this.element, { [eventName]: listener });\n  }\n  addMouseListeners() {\n    const mouseDownEvent = _isEventSupported(\"touchstart\") ? \"touchstart\" : \"mousedown\";\n    const eventNames = [\"dblclick\", \"contextmenu\", \"mouseover\", \"mouseout\", \"click\", mouseDownEvent];\n    eventNames.forEach((eventName) => {\n      const listener = this.processMouseEvent.bind(this, eventName);\n      this.addManagedElementListeners(this.element, { [eventName]: listener });\n    });\n  }\n  processMouseEvent(eventName, mouseEvent) {\n    if (!_isEventFromThisGrid(this.gos, mouseEvent) || _isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(mouseEvent.target);\n    if (eventName === \"contextmenu\") {\n      if (cellCtrl?.column) {\n        cellCtrl.dispatchCellContextMenuEvent(mouseEvent);\n      }\n      this.beans.contextMenuSvc?.handleContextMenuMouseEvent(mouseEvent, void 0, rowCtrl, cellCtrl);\n    } else {\n      if (cellCtrl) {\n        cellCtrl.onMouseEvent(eventName, mouseEvent);\n      }\n      if (rowCtrl) {\n        rowCtrl.onMouseEvent(eventName, mouseEvent);\n      }\n    }\n  }\n  getControlsForEventTarget(target) {\n    const { gos } = this;\n    return {\n      cellCtrl: _getCellCtrlForEventTarget(gos, target),\n      rowCtrl: _getCtrlForEventTarget(gos, target, DOM_DATA_KEY_ROW_CTRL)\n    };\n  }\n  processKeyboardEvent(eventName, keyboardEvent) {\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(keyboardEvent.target);\n    if (keyboardEvent.defaultPrevented) {\n      return;\n    }\n    if (cellCtrl) {\n      this.processCellKeyboardEvent(cellCtrl, eventName, keyboardEvent);\n    } else if (rowCtrl && rowCtrl.isFullWidth()) {\n      this.processFullWidthRowKeyboardEvent(rowCtrl, eventName, keyboardEvent);\n    }\n  }\n  processCellKeyboardEvent(cellCtrl, eventName, keyboardEvent) {\n    const { rowNode, column, editing } = cellCtrl;\n    const gridProcessingAllowed = !_isUserSuppressingKeyboardEvent(\n      this.gos,\n      keyboardEvent,\n      rowNode,\n      column,\n      editing\n    );\n    if (gridProcessingAllowed) {\n      if (eventName === \"keydown\") {\n        const wasScrollKey = !editing && this.beans.navigation?.handlePageScrollingKey(keyboardEvent);\n        if (!wasScrollKey) {\n          cellCtrl.onKeyDown(keyboardEvent);\n        }\n        this.doGridOperations(keyboardEvent, cellCtrl.editing);\n        if (_isEventFromPrintableCharacter(keyboardEvent)) {\n          cellCtrl.processCharacter(keyboardEvent);\n        }\n      }\n    }\n    if (eventName === \"keydown\") {\n      this.eventSvc.dispatchEvent(cellCtrl.createEvent(keyboardEvent, \"cellKeyDown\"));\n    }\n  }\n  processFullWidthRowKeyboardEvent(rowComp, eventName, keyboardEvent) {\n    const { rowNode } = rowComp;\n    const { focusSvc, navigation } = this.beans;\n    const focusedCell = focusSvc.getFocusedCell();\n    const column = focusedCell && focusedCell.column;\n    const gridProcessingAllowed = !_isUserSuppressingKeyboardEvent(this.gos, keyboardEvent, rowNode, column, false);\n    if (gridProcessingAllowed) {\n      const key = keyboardEvent.key;\n      if (eventName === \"keydown\") {\n        switch (key) {\n          case KeyCode.PAGE_HOME:\n          case KeyCode.PAGE_END:\n          case KeyCode.PAGE_UP:\n          case KeyCode.PAGE_DOWN:\n            navigation?.handlePageScrollingKey(keyboardEvent, true);\n            break;\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n            rowComp.onKeyboardNavigate(keyboardEvent);\n            break;\n          case KeyCode.TAB:\n            rowComp.onTabKeyDown(keyboardEvent);\n            break;\n          default:\n        }\n      }\n    }\n    if (eventName === \"keydown\") {\n      this.eventSvc.dispatchEvent(rowComp.createRowEvent(\"cellKeyDown\", keyboardEvent));\n    }\n  }\n  doGridOperations(keyboardEvent, editing) {\n    if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n      return;\n    }\n    if (editing) {\n      return;\n    }\n    if (!_isEventFromThisGrid(this.gos, keyboardEvent)) {\n      return;\n    }\n    const keyCode = _normaliseQwertyAzerty(keyboardEvent);\n    const { clipboardSvc, undoRedo } = this.beans;\n    if (keyCode === KeyCode.A) {\n      return this.onCtrlAndA(keyboardEvent);\n    }\n    if (keyCode === KeyCode.C) {\n      return this.onCtrlAndC(clipboardSvc, keyboardEvent);\n    }\n    if (keyCode === KeyCode.D) {\n      return this.onCtrlAndD(clipboardSvc, keyboardEvent);\n    }\n    if (keyCode === KeyCode.V) {\n      return this.onCtrlAndV(clipboardSvc, keyboardEvent);\n    }\n    if (keyCode === KeyCode.X) {\n      return this.onCtrlAndX(clipboardSvc, keyboardEvent);\n    }\n    if (keyCode === KeyCode.Y) {\n      return this.onCtrlAndY(undoRedo);\n    }\n    if (keyCode === KeyCode.Z) {\n      return this.onCtrlAndZ(undoRedo, keyboardEvent);\n    }\n  }\n  onCtrlAndA(event) {\n    const {\n      beans: { rowModel, rangeSvc, selectionSvc },\n      gos\n    } = this;\n    if (rangeSvc && _isCellSelectionEnabled(gos) && rowModel.isRowsToRender()) {\n      _selectAllCells(this.beans);\n    } else if (selectionSvc) {\n      selectionSvc?.selectAllRowNodes({ source: \"keyboardSelectAll\", selectAll: _getSelectAll(gos) });\n    }\n    event.preventDefault();\n  }\n  onCtrlAndC(clipboardSvc, event) {\n    if (!clipboardSvc || this.gos.get(\"enableCellTextSelection\")) {\n      return;\n    }\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(event.target);\n    if (cellCtrl?.editing || rowCtrl?.editing) {\n      return;\n    }\n    event.preventDefault();\n    clipboardSvc.copyToClipboard();\n  }\n  onCtrlAndX(clipboardSvc, event) {\n    if (!clipboardSvc || this.gos.get(\"enableCellTextSelection\") || this.gos.get(\"suppressCutToClipboard\")) {\n      return;\n    }\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(event.target);\n    if (cellCtrl?.editing || rowCtrl?.editing) {\n      return;\n    }\n    event.preventDefault();\n    clipboardSvc.cutToClipboard(void 0, \"ui\");\n  }\n  onCtrlAndV(clipboardSvc, event) {\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(event.target);\n    if (cellCtrl?.editing || rowCtrl?.editing) {\n      return;\n    }\n    if (clipboardSvc && !this.gos.get(\"suppressClipboardPaste\")) {\n      clipboardSvc.pasteFromClipboard();\n    }\n  }\n  onCtrlAndD(clipboardSvc, event) {\n    if (clipboardSvc && !this.gos.get(\"suppressClipboardPaste\")) {\n      clipboardSvc.copyRangeDown();\n    }\n    event.preventDefault();\n  }\n  onCtrlAndZ(undoRedo, event) {\n    if (!this.gos.get(\"undoRedoCellEditing\") || !undoRedo) {\n      return;\n    }\n    event.preventDefault();\n    if (event.shiftKey) {\n      undoRedo.redo(\"ui\");\n    } else {\n      undoRedo.undo(\"ui\");\n    }\n  }\n  onCtrlAndY(undoRedo) {\n    undoRedo?.redo(\"ui\");\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/setHeightFeature.ts\nvar SetHeightFeature = class extends BeanStub {\n  constructor(eContainer, eViewport) {\n    super();\n    this.eContainer = eContainer;\n    this.eViewport = eViewport;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      rowContainerHeightChanged: this.onHeightChanged.bind(this, this.beans.rowContainerHeight)\n    });\n  }\n  onHeightChanged(maxDivHeightScaler) {\n    const height = maxDivHeightScaler.uiContainerHeight;\n    const heightString = height != null ? `${height}px` : ``;\n    this.eContainer.style.height = heightString;\n    if (this.eViewport) {\n      this.eViewport.style.height = heightString;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/rowContainerCtrl.ts\nvar getTopRowCtrls = (r) => r.topRowCtrls;\nvar getStickyTopRowCtrls = (r) => r.getStickyTopRowCtrls();\nvar getStickyBottomRowCtrls = (r) => r.getStickyBottomRowCtrls();\nvar getBottomRowCtrls = (r) => r.bottomRowCtrls;\nvar getCentreRowCtrls = (r) => r.allRowCtrls;\nvar getSpannedTopRowCtrls = (r) => r.getCtrls(\"top\");\nvar getSpannedCenterRowCtrls = (r) => r.getCtrls(\"center\");\nvar getSpannedBottomRowCtrls = (r) => r.getCtrls(\"bottom\");\nvar ContainerCssClasses = {\n  center: {\n    type: \"center\",\n    name: \"center-cols\",\n    getRowCtrls: getCentreRowCtrls,\n    getSpannedRowCtrls: getSpannedCenterRowCtrls\n  },\n  left: {\n    type: \"left\",\n    name: \"pinned-left-cols\",\n    pinnedType: \"left\",\n    getRowCtrls: getCentreRowCtrls,\n    getSpannedRowCtrls: getSpannedCenterRowCtrls\n  },\n  right: {\n    type: \"right\",\n    name: \"pinned-right-cols\",\n    pinnedType: \"right\",\n    getRowCtrls: getCentreRowCtrls,\n    getSpannedRowCtrls: getSpannedCenterRowCtrls\n  },\n  fullWidth: {\n    type: \"fullWidth\",\n    name: \"full-width\",\n    fullWidth: true,\n    getRowCtrls: getCentreRowCtrls\n  },\n  topCenter: {\n    type: \"center\",\n    name: \"floating-top\",\n    getRowCtrls: getTopRowCtrls,\n    getSpannedRowCtrls: getSpannedTopRowCtrls\n  },\n  topLeft: {\n    type: \"left\",\n    name: \"pinned-left-floating\",\n    container: \"ag-pinned-left-floating-top\",\n    pinnedType: \"left\",\n    getRowCtrls: getTopRowCtrls,\n    getSpannedRowCtrls: getSpannedTopRowCtrls\n  },\n  topRight: {\n    type: \"right\",\n    name: \"pinned-right-floating\",\n    container: \"ag-pinned-right-floating-top\",\n    pinnedType: \"right\",\n    getRowCtrls: getTopRowCtrls,\n    getSpannedRowCtrls: getSpannedTopRowCtrls\n  },\n  topFullWidth: {\n    type: \"fullWidth\",\n    name: \"floating-top-full-width\",\n    fullWidth: true,\n    getRowCtrls: getTopRowCtrls\n  },\n  stickyTopCenter: {\n    type: \"center\",\n    name: \"sticky-top\",\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyTopLeft: {\n    type: \"left\",\n    name: \"pinned-left-sticky-top\",\n    container: \"ag-pinned-left-sticky-top\",\n    pinnedType: \"left\",\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyTopRight: {\n    type: \"right\",\n    name: \"pinned-right-sticky-top\",\n    container: \"ag-pinned-right-sticky-top\",\n    pinnedType: \"right\",\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyTopFullWidth: {\n    type: \"fullWidth\",\n    name: \"sticky-top-full-width\",\n    fullWidth: true,\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyBottomCenter: {\n    type: \"center\",\n    name: \"sticky-bottom\",\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  stickyBottomLeft: {\n    type: \"left\",\n    name: \"pinned-left-sticky-bottom\",\n    container: \"ag-pinned-left-sticky-bottom\",\n    pinnedType: \"left\",\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  stickyBottomRight: {\n    type: \"right\",\n    name: \"pinned-right-sticky-bottom\",\n    container: \"ag-pinned-right-sticky-bottom\",\n    pinnedType: \"right\",\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  stickyBottomFullWidth: {\n    type: \"fullWidth\",\n    name: \"sticky-bottom-full-width\",\n    fullWidth: true,\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  bottomCenter: {\n    type: \"center\",\n    name: \"floating-bottom\",\n    getRowCtrls: getBottomRowCtrls,\n    getSpannedRowCtrls: getSpannedBottomRowCtrls\n  },\n  bottomLeft: {\n    type: \"left\",\n    name: \"pinned-left-floating-bottom\",\n    container: \"ag-pinned-left-floating-bottom\",\n    pinnedType: \"left\",\n    getRowCtrls: getBottomRowCtrls,\n    getSpannedRowCtrls: getSpannedBottomRowCtrls\n  },\n  bottomRight: {\n    type: \"right\",\n    name: \"pinned-right-floating-bottom\",\n    container: \"ag-pinned-right-floating-bottom\",\n    pinnedType: \"right\",\n    getRowCtrls: getBottomRowCtrls,\n    getSpannedRowCtrls: getSpannedBottomRowCtrls\n  },\n  bottomFullWidth: {\n    type: \"fullWidth\",\n    name: \"floating-bottom-full-width\",\n    fullWidth: true,\n    getRowCtrls: getBottomRowCtrls\n  }\n};\nfunction _getRowViewportClass(name) {\n  const options = _getRowContainerOptions(name);\n  return `ag-${options.name}-viewport`;\n}\nfunction _getRowContainerClass(name) {\n  const options = _getRowContainerOptions(name);\n  return options.container ?? `ag-${options.name}-container`;\n}\nfunction _getRowSpanContainerClass(name) {\n  const options = _getRowContainerOptions(name);\n  return `ag-${options.name}-spanned-cells-container`;\n}\nfunction _getRowContainerOptions(name) {\n  return ContainerCssClasses[name];\n}\nvar allTopNoFW = [\"topCenter\", \"topLeft\", \"topRight\"];\nvar allBottomNoFW = [\"bottomCenter\", \"bottomLeft\", \"bottomRight\"];\nvar allMiddleNoFW = [\"center\", \"left\", \"right\"];\nvar allMiddle = [\"center\", \"left\", \"right\", \"fullWidth\"];\nvar allCenter = [\"stickyTopCenter\", \"stickyBottomCenter\", \"center\", \"topCenter\", \"bottomCenter\"];\nvar allLeft = [\"left\", \"bottomLeft\", \"topLeft\", \"stickyTopLeft\", \"stickyBottomLeft\"];\nvar allRight = [\"right\", \"bottomRight\", \"topRight\", \"stickyTopRight\", \"stickyBottomRight\"];\nvar allStickyTopNoFW = [\"stickyTopCenter\", \"stickyTopLeft\", \"stickyTopRight\"];\nvar allStickyBottomNoFW = [\"stickyBottomCenter\", \"stickyBottomLeft\", \"stickyBottomRight\"];\nvar allStickyContainers = [\n  ...allStickyTopNoFW,\n  \"stickyTopFullWidth\",\n  ...allStickyBottomNoFW,\n  \"stickyBottomFullWidth\"\n];\nvar allNoFW = [\n  ...allTopNoFW,\n  ...allBottomNoFW,\n  ...allMiddleNoFW,\n  ...allStickyTopNoFW,\n  ...allStickyBottomNoFW\n];\nvar RowContainerCtrl = class extends BeanStub {\n  constructor(name) {\n    super();\n    this.name = name;\n    this.visible = true;\n    // Maintaining a constant reference enables optimization in React.\n    this.EMPTY_CTRLS = [];\n    this.options = _getRowContainerOptions(name);\n  }\n  postConstruct() {\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    this.forContainers([\"center\"], () => {\n      this.viewportSizeFeature = this.createManagedBean(new ViewportSizeFeature(this));\n      this.addManagedEventListeners({\n        stickyTopOffsetChanged: this.onStickyTopOffsetChanged.bind(this)\n      });\n    });\n  }\n  onStickyTopOffsetChanged(event) {\n    this.comp.setOffsetTop(`${event.offset}px`);\n  }\n  registerWithCtrlsService() {\n    if (this.options.fullWidth)\n      return;\n    this.beans.ctrlsSvc.register(this.name, this);\n  }\n  forContainers(names, callback) {\n    if (names.indexOf(this.name) >= 0) {\n      callback();\n    }\n  }\n  setComp(view, eContainer, eSpannedContainer, eViewport) {\n    this.comp = view;\n    this.eContainer = eContainer;\n    this.eSpannedContainer = eSpannedContainer;\n    this.eViewport = eViewport;\n    this.createManagedBean(new RowContainerEventsFeature(this.eViewport ?? this.eContainer));\n    this.addPreventScrollWhileDragging();\n    this.listenOnDomOrder();\n    const { pinnedCols, rangeSvc } = this.beans;\n    const pinnedWidthChanged = () => this.onPinnedWidthChanged();\n    this.forContainers(allLeft, () => {\n      this.pinnedWidthFeature = this.createOptionalManagedBean(\n        pinnedCols?.createPinnedWidthFeature(true, this.eContainer, this.eSpannedContainer)\n      );\n      this.addManagedEventListeners({ leftPinnedWidthChanged: pinnedWidthChanged });\n    });\n    this.forContainers(allRight, () => {\n      this.pinnedWidthFeature = this.createOptionalManagedBean(\n        pinnedCols?.createPinnedWidthFeature(false, this.eContainer, this.eSpannedContainer)\n      );\n      this.addManagedEventListeners({ rightPinnedWidthChanged: pinnedWidthChanged });\n    });\n    this.forContainers(\n      allMiddle,\n      () => this.createManagedBean(\n        new SetHeightFeature(this.eContainer, this.name === \"center\" ? eViewport : void 0)\n      )\n    );\n    if (rangeSvc) {\n      this.forContainers(\n        allNoFW,\n        () => this.createManagedBean(rangeSvc.createDragListenerFeature(this.eContainer))\n      );\n    }\n    this.forContainers(\n      allCenter,\n      () => this.createManagedBean(new CenterWidthFeature((width) => this.comp.setContainerWidth(`${width}px`)))\n    );\n    this.visible = this.isContainerVisible();\n    this.addListeners();\n    this.registerWithCtrlsService();\n  }\n  onScrollCallback(fn) {\n    this.addManagedElementListeners(this.eViewport, { scroll: fn });\n  }\n  addListeners() {\n    const { spannedRowRenderer, gos } = this.beans;\n    this.addManagedEventListeners({\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      displayedColumnsWidthChanged: this.onDisplayedColumnsChanged.bind(this),\n      displayedRowsChanged: (params) => this.onDisplayedRowsChanged(params.afterScroll)\n    });\n    this.onDisplayedColumnsChanged();\n    this.onDisplayedRowsChanged();\n    if (spannedRowRenderer && this.options.getSpannedRowCtrls && gos.get(\"enableCellSpan\")) {\n      this.addManagedListeners(spannedRowRenderer, {\n        spannedRowsUpdated: () => {\n          const spannedCtrls = this.options.getSpannedRowCtrls(spannedRowRenderer);\n          if (!spannedCtrls) {\n            return;\n          }\n          this.comp.setSpannedRowCtrls(spannedCtrls, false);\n        }\n      });\n    }\n  }\n  listenOnDomOrder() {\n    const isStickContainer = allStickyContainers.indexOf(this.name) >= 0;\n    if (isStickContainer) {\n      this.comp.setDomOrder(true);\n      return;\n    }\n    const listener = () => {\n      const isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n      const isPrintLayout = _isDomLayout(this.gos, \"print\");\n      this.comp.setDomOrder(isEnsureDomOrder || isPrintLayout);\n    };\n    this.addManagedPropertyListener(\"domLayout\", listener);\n    listener();\n  }\n  onDisplayedColumnsChanged() {\n    this.forContainers([\"center\"], () => this.onHorizontalViewportChanged());\n  }\n  // this methods prevents the grid views from being scrolled while the dragService is being used\n  // eg. the view should not scroll up and down while dragging rows using the rowDragComp.\n  addPreventScrollWhileDragging() {\n    const { dragSvc } = this.beans;\n    if (!dragSvc) {\n      return;\n    }\n    const preventScroll = (e) => {\n      if (dragSvc.dragging) {\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n      }\n    };\n    this.eContainer.addEventListener(\"touchmove\", preventScroll, { passive: false });\n    this.addDestroyFunc(() => this.eContainer.removeEventListener(\"touchmove\", preventScroll));\n  }\n  // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n  // out the virtual columns again. gets called from following locations:\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged\n  onHorizontalViewportChanged(afterScroll = false) {\n    const scrollWidth = this.getCenterWidth();\n    const scrollPosition = this.getCenterViewportScrollLeft();\n    this.beans.colViewport.setScrollPosition(scrollWidth, scrollPosition, afterScroll);\n  }\n  hasHorizontalScrollGap() {\n    return this.eContainer.clientWidth - this.eViewport.clientWidth < 0;\n  }\n  hasVerticalScrollGap() {\n    return this.eContainer.clientHeight - this.eViewport.clientHeight < 0;\n  }\n  getCenterWidth() {\n    return _getInnerWidth(this.eViewport);\n  }\n  getCenterViewportScrollLeft() {\n    return _getScrollLeft(this.eViewport, this.enableRtl);\n  }\n  registerViewportResizeListener(listener) {\n    const unsubscribeFromResize = _observeResize(this.beans, this.eViewport, listener);\n    this.addDestroyFunc(() => unsubscribeFromResize());\n  }\n  isViewportInTheDOMTree() {\n    return _isInDOM(this.eViewport);\n  }\n  getViewportScrollLeft() {\n    return _getScrollLeft(this.eViewport, this.enableRtl);\n  }\n  isHorizontalScrollShowing() {\n    const isAlwaysShowHorizontalScroll = this.gos.get(\"alwaysShowHorizontalScroll\");\n    return isAlwaysShowHorizontalScroll || _isHorizontalScrollShowing(this.eViewport);\n  }\n  setHorizontalScroll(offset) {\n    this.comp.setHorizontalScroll(offset);\n  }\n  getHScrollPosition() {\n    const res = {\n      left: this.eViewport.scrollLeft,\n      right: this.eViewport.scrollLeft + this.eViewport.offsetWidth\n    };\n    return res;\n  }\n  setCenterViewportScrollLeft(value) {\n    _setScrollLeft(this.eViewport, value, this.enableRtl);\n  }\n  isContainerVisible() {\n    const pinned = this.options.pinnedType != null;\n    return !pinned || !!this.pinnedWidthFeature && this.pinnedWidthFeature.getWidth() > 0;\n  }\n  onPinnedWidthChanged() {\n    const visible = this.isContainerVisible();\n    if (this.visible != visible) {\n      this.visible = visible;\n      this.onDisplayedRowsChanged();\n    }\n  }\n  onDisplayedRowsChanged(afterScroll = false) {\n    const rows = this.options.getRowCtrls(this.beans.rowRenderer);\n    if (!this.visible || rows.length === 0) {\n      this.comp.setRowCtrls({ rowCtrls: this.EMPTY_CTRLS });\n      return;\n    }\n    const printLayout = _isDomLayout(this.gos, \"print\");\n    const embedFullWidthRows = this.gos.get(\"embedFullWidthRows\");\n    const embedFW = embedFullWidthRows || printLayout;\n    const rowsThisContainer = rows.filter((rowCtrl) => {\n      const fullWidthRow = rowCtrl.isFullWidth();\n      const match = this.options.fullWidth ? !embedFW && fullWidthRow : embedFW || !fullWidthRow;\n      return match;\n    });\n    this.comp.setRowCtrls({ rowCtrls: rowsThisContainer, useFlushSync: afterScroll });\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/gridBodyCtrl.ts\nvar CSS_CLASS_FORCE_VERTICAL_SCROLL = \"ag-force-vertical-scroll\";\nvar CSS_CLASS_CELL_SELECTABLE = \"ag-selectable\";\nvar CSS_CLASS_COLUMN_MOVING = \"ag-column-moving\";\nvar GridBodyCtrl = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.stickyTopHeight = 0;\n    this.stickyBottomHeight = 0;\n  }\n  wireBeans(beans) {\n    this.ctrlsSvc = beans.ctrlsSvc;\n    this.colModel = beans.colModel;\n    this.scrollVisibleSvc = beans.scrollVisibleSvc;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.filterManager = beans.filterManager;\n    this.rowGroupColsSvc = beans.rowGroupColsSvc;\n  }\n  setComp(comp, eGridBody, eBodyViewport, eTop, eBottom, eStickyTop, eStickyBottom) {\n    this.comp = comp;\n    this.eGridBody = eGridBody;\n    this.eBodyViewport = eBodyViewport;\n    this.eTop = eTop;\n    this.eBottom = eBottom;\n    this.eStickyTop = eStickyTop;\n    this.eStickyBottom = eStickyBottom;\n    this.eCenterColsViewport = eBodyViewport.querySelector(`.${_getRowViewportClass(\"center\")}`);\n    this.eFullWidthContainer = eBodyViewport.querySelector(`.${_getRowContainerClass(\"fullWidth\")}`);\n    this.eStickyTopFullWidthContainer = eStickyTop.querySelector(\n      `.${_getRowContainerClass(\"stickyTopFullWidth\")}`\n    );\n    this.eStickyBottomFullWidthContainer = eStickyBottom.querySelector(\n      `.${_getRowContainerClass(\"stickyBottomFullWidth\")}`\n    );\n    this.setCellTextSelection(this.gos.get(\"enableCellTextSelection\"));\n    this.addManagedPropertyListener(\n      \"enableCellTextSelection\",\n      (props) => this.setCellTextSelection(props.currentValue)\n    );\n    this.createManagedBean(new LayoutFeature(this.comp));\n    this.scrollFeature = this.createManagedBean(new GridBodyScrollFeature(this.eBodyViewport));\n    this.beans.rowDragSvc?.setupRowDrag(this.eBodyViewport, this);\n    this.setupRowAnimationCssClass();\n    this.addEventListeners();\n    this.addFocusListeners([eTop, eBodyViewport, eBottom, eStickyTop, eStickyBottom]);\n    this.setGridRootRole();\n    this.onGridColumnsChanged();\n    this.addBodyViewportListener();\n    this.setFloatingHeights();\n    this.disableBrowserDragging();\n    this.addStopEditingWhenGridLosesFocus();\n    this.updateScrollingClasses();\n    this.filterManager?.setupAdvFilterHeaderComp(eTop);\n    this.ctrlsSvc.register(\"gridBodyCtrl\", this);\n  }\n  addEventListeners() {\n    const setFloatingHeights = this.setFloatingHeights.bind(this);\n    const setGridRootRole = this.setGridRootRole.bind(this);\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.onGridColumnsChanged.bind(this),\n      scrollVisibilityChanged: this.onScrollVisibilityChanged.bind(this),\n      scrollGapChanged: this.updateScrollingClasses.bind(this),\n      pinnedRowDataChanged: setFloatingHeights,\n      pinnedHeightChanged: setFloatingHeights,\n      headerHeightChanged: this.setStickyTopOffsetTop.bind(this),\n      columnRowGroupChanged: setGridRootRole,\n      columnPivotChanged: setGridRootRole\n    });\n    this.addManagedPropertyListener(\"treeData\", setGridRootRole);\n  }\n  onGridColumnsChanged() {\n    const columns = this.beans.colModel.getCols();\n    this.comp.setColumnCount(columns.length);\n  }\n  onScrollVisibilityChanged() {\n    const { scrollVisibleSvc } = this;\n    const visible = scrollVisibleSvc.verticalScrollShowing;\n    this.setVerticalScrollPaddingVisible(visible);\n    this.setStickyWidth(visible);\n    this.setStickyBottomOffsetBottom();\n    const scrollbarWidth = visible ? scrollVisibleSvc.getScrollbarWidth() || 0 : 0;\n    const pad = _isInvisibleScrollbar() ? 16 : 0;\n    const width = `calc(100% + ${scrollbarWidth + pad}px)`;\n    _requestAnimationFrame(this.beans, () => this.comp.setBodyViewportWidth(width));\n    this.updateScrollingClasses();\n  }\n  setGridRootRole() {\n    const { rowGroupColsSvc, colModel } = this;\n    let isTreeGrid = this.gos.get(\"treeData\");\n    if (!isTreeGrid) {\n      const isPivotActive = colModel.isPivotMode();\n      const rowGroupColumnLen = !rowGroupColsSvc ? 0 : rowGroupColsSvc.columns.length;\n      const columnsNeededForGrouping = isPivotActive ? 2 : 1;\n      isTreeGrid = rowGroupColumnLen >= columnsNeededForGrouping;\n    }\n    this.comp.setGridRootRole(isTreeGrid ? \"treegrid\" : \"grid\");\n  }\n  addFocusListeners(elements) {\n    elements.forEach((element) => {\n      this.addManagedElementListeners(element, {\n        focusin: (e) => {\n          const { target } = e;\n          const isFocusedElementNested = _isElementChildOfClass(target, \"ag-root\", element);\n          element.classList.toggle(\"ag-has-focus\", !isFocusedElementNested);\n        },\n        focusout: (e) => {\n          const { target, relatedTarget } = e;\n          const gridContainRelatedTarget = element.contains(relatedTarget);\n          const isNestedRelatedTarget = _isElementChildOfClass(\n            relatedTarget,\n            \"ag-root\",\n            element\n          );\n          const isNestedTarget = _isElementChildOfClass(target, \"ag-root\", element);\n          if (isNestedTarget) {\n            return;\n          }\n          if (!gridContainRelatedTarget || isNestedRelatedTarget) {\n            element.classList.remove(\"ag-has-focus\");\n          }\n        }\n      });\n    });\n  }\n  // used by ColumnAnimationService\n  setColumnMovingCss(moving) {\n    this.comp.setColumnMovingCss(CSS_CLASS_COLUMN_MOVING, moving);\n  }\n  setCellTextSelection(selectable = false) {\n    this.comp.setCellSelectableCss(CSS_CLASS_CELL_SELECTABLE, selectable);\n  }\n  updateScrollingClasses() {\n    const {\n      eGridBody: { classList },\n      scrollVisibleSvc\n    } = this;\n    classList.toggle(\"ag-body-vertical-content-no-gap\", !scrollVisibleSvc.verticalScrollGap);\n    classList.toggle(\"ag-body-horizontal-content-no-gap\", !scrollVisibleSvc.horizontalScrollGap);\n  }\n  // if we do not do this, then the user can select a pic in the grid (eg an image in a custom cell renderer)\n  // and then that will start the browser native drag n' drop, which messes up with our own drag and drop.\n  disableBrowserDragging() {\n    this.addManagedElementListeners(this.eGridBody, {\n      dragstart: (event) => {\n        if (event.target instanceof HTMLImageElement) {\n          event.preventDefault();\n          return false;\n        }\n      }\n    });\n  }\n  addStopEditingWhenGridLosesFocus() {\n    this.beans.editSvc?.addStopEditingWhenGridLosesFocus([\n      this.eBodyViewport,\n      this.eBottom,\n      this.eTop,\n      this.eStickyTop,\n      this.eStickyBottom\n    ]);\n  }\n  updateRowCount() {\n    const headerCount = (this.ctrlsSvc.getHeaderRowContainerCtrl()?.getRowCount() ?? 0) + (this.filterManager?.getHeaderRowCount() ?? 0);\n    const { rowModel } = this.beans;\n    const rowCount = rowModel.isLastRowIndexKnown() ? rowModel.getRowCount() : -1;\n    const total = rowCount === -1 ? -1 : headerCount + rowCount;\n    this.comp.setRowCount(total);\n  }\n  registerBodyViewportResizeListener(listener) {\n    this.comp.registerBodyViewportResizeListener(listener);\n  }\n  setVerticalScrollPaddingVisible(visible) {\n    const overflowY = visible ? \"scroll\" : \"hidden\";\n    this.comp.setPinnedTopBottomOverflowY(overflowY);\n  }\n  isVerticalScrollShowing() {\n    const show = this.gos.get(\"alwaysShowVerticalScroll\");\n    const cssClass = show ? CSS_CLASS_FORCE_VERTICAL_SCROLL : null;\n    const allowVerticalScroll = _isDomLayout(this.gos, \"normal\");\n    this.comp.setAlwaysVerticalScrollClass(cssClass, show);\n    return show || allowVerticalScroll && _isVerticalScrollShowing(this.eBodyViewport);\n  }\n  setupRowAnimationCssClass() {\n    const { rowContainerHeight, environment } = this.beans;\n    let initialSizeMeasurementComplete = environment.sizesMeasured;\n    const updateAnimationClass = () => {\n      const animateRows = initialSizeMeasurementComplete && _isAnimateRows(this.gos) && !rowContainerHeight.stretching;\n      const animateRowsCssClass = animateRows ? \"ag-row-animation\" : \"ag-row-no-animation\";\n      this.comp.setRowAnimationCssOnBodyViewport(animateRowsCssClass, animateRows);\n    };\n    updateAnimationClass();\n    this.addManagedEventListeners({ heightScaleChanged: updateAnimationClass });\n    this.addManagedPropertyListener(\"animateRows\", updateAnimationClass);\n    this.addManagedEventListeners({\n      gridStylesChanged: () => {\n        if (!initialSizeMeasurementComplete && environment.sizesMeasured) {\n          initialSizeMeasurementComplete = true;\n          updateAnimationClass();\n        }\n      }\n    });\n  }\n  addBodyViewportListener() {\n    const { popupSvc, touchSvc } = this.beans;\n    const listener = this.onBodyViewportContextMenu.bind(this);\n    this.addManagedElementListeners(this.eBodyViewport, { contextmenu: listener });\n    touchSvc?.mockBodyContextMenu(this, listener);\n    this.addManagedElementListeners(this.eBodyViewport, {\n      wheel: this.onBodyViewportWheel.bind(this, popupSvc)\n    });\n    this.addManagedElementListeners(this.eStickyTop, { wheel: this.onStickyWheel.bind(this) });\n    this.addManagedElementListeners(this.eStickyBottom, { wheel: this.onStickyWheel.bind(this) });\n    this.addFullWidthContainerWheelListener();\n  }\n  addFullWidthContainerWheelListener() {\n    this.addManagedElementListeners(this.eFullWidthContainer, {\n      wheel: (e) => this.onFullWidthContainerWheel(e)\n    });\n  }\n  onFullWidthContainerWheel(e) {\n    const { deltaX, deltaY, shiftKey } = e;\n    const isHorizontalScroll = shiftKey || Math.abs(deltaX) > Math.abs(deltaY);\n    if (isHorizontalScroll && _isEventFromThisGrid(this.gos, e)) {\n      this.scrollGridBodyToMatchEvent(e);\n    }\n  }\n  onStickyWheel(e) {\n    const { deltaX, deltaY, shiftKey } = e;\n    const isHorizontalScroll = shiftKey || Math.abs(deltaX) > Math.abs(deltaY);\n    const target = e.target;\n    if (!isHorizontalScroll) {\n      e.preventDefault();\n      this.scrollVertically(deltaY);\n    } else if (this.eStickyTopFullWidthContainer.contains(target) || this.eStickyBottomFullWidthContainer.contains(target)) {\n      this.scrollGridBodyToMatchEvent(e);\n    }\n  }\n  scrollGridBodyToMatchEvent(e) {\n    const { deltaX, deltaY } = e;\n    e.preventDefault();\n    this.eCenterColsViewport.scrollBy({ left: deltaX || deltaY });\n  }\n  onBodyViewportContextMenu(mouseEvent, touch, touchEvent) {\n    if (!mouseEvent && !touchEvent) {\n      return;\n    }\n    if (this.gos.get(\"preventDefaultOnContextMenu\")) {\n      const event = mouseEvent || touchEvent;\n      event.preventDefault();\n    }\n    const { target } = mouseEvent || touch;\n    if (target === this.eBodyViewport || target === this.ctrlsSvc.get(\"center\").eViewport) {\n      this.beans.contextMenuSvc?.showContextMenu({\n        mouseEvent,\n        touchEvent,\n        value: null,\n        anchorToElement: this.eGridBody,\n        source: \"ui\"\n      });\n    }\n  }\n  onBodyViewportWheel(popupSvc, e) {\n    if (!this.gos.get(\"suppressScrollWhenPopupsAreOpen\")) {\n      return;\n    }\n    if (popupSvc?.hasAnchoredPopup()) {\n      e.preventDefault();\n    }\n  }\n  // called by rowDragFeature\n  scrollVertically(pixels) {\n    const oldScrollPosition = this.eBodyViewport.scrollTop;\n    this.scrollFeature.setVerticalScrollPosition(oldScrollPosition + pixels);\n    return this.eBodyViewport.scrollTop - oldScrollPosition;\n  }\n  setFloatingHeights() {\n    const { pinnedRowModel } = this;\n    const floatingTopHeight = pinnedRowModel?.getPinnedTopTotalHeight() ?? 0;\n    const floatingBottomHeight = pinnedRowModel?.getPinnedBottomTotalHeight() ?? 0;\n    this.comp.setTopHeight(floatingTopHeight);\n    this.comp.setBottomHeight(floatingBottomHeight);\n    this.comp.setTopDisplay(floatingTopHeight ? \"inherit\" : \"none\");\n    this.comp.setBottomDisplay(floatingBottomHeight ? \"inherit\" : \"none\");\n    this.setStickyTopOffsetTop();\n    this.setStickyBottomOffsetBottom();\n  }\n  setStickyTopHeight(height = 0) {\n    this.comp.setStickyTopHeight(`${height}px`);\n    this.stickyTopHeight = height;\n  }\n  setStickyBottomHeight(height = 0) {\n    this.comp.setStickyBottomHeight(`${height}px`);\n    this.stickyBottomHeight = height;\n  }\n  setStickyWidth(vScrollVisible) {\n    if (!vScrollVisible) {\n      this.comp.setStickyTopWidth(\"100%\");\n      this.comp.setStickyBottomWidth(\"100%\");\n    } else {\n      const scrollbarWidth = this.scrollVisibleSvc.getScrollbarWidth();\n      this.comp.setStickyTopWidth(`calc(100% - ${scrollbarWidth}px)`);\n      this.comp.setStickyBottomWidth(`calc(100% - ${scrollbarWidth}px)`);\n    }\n  }\n  setStickyTopOffsetTop() {\n    const headerCtrl = this.ctrlsSvc.get(\"gridHeaderCtrl\");\n    const headerHeight = headerCtrl.headerHeight + (this.filterManager?.getHeaderHeight() ?? 0);\n    const pinnedTopHeight = this.pinnedRowModel?.getPinnedTopTotalHeight() ?? 0;\n    let height = 0;\n    if (headerHeight > 0) {\n      height += headerHeight;\n    }\n    if (pinnedTopHeight > 0) {\n      height += pinnedTopHeight;\n    }\n    if (height > 0) {\n      height += 1;\n    }\n    this.comp.setStickyTopTop(`${height}px`);\n  }\n  setStickyBottomOffsetBottom() {\n    const { pinnedRowModel, scrollVisibleSvc, comp } = this;\n    const pinnedBottomHeight = pinnedRowModel?.getPinnedBottomTotalHeight() ?? 0;\n    const hScrollShowing = scrollVisibleSvc.horizontalScrollShowing;\n    const scrollbarWidth = hScrollShowing ? scrollVisibleSvc.getScrollbarWidth() || 0 : 0;\n    const height = pinnedBottomHeight + scrollbarWidth;\n    comp.setStickyBottomBottom(`${height}px`);\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/abstractFakeScrollComp.ts\nvar AbstractFakeScrollComp = class extends Component {\n  constructor(template, direction) {\n    super();\n    this.direction = direction;\n    this.eViewport = RefPlaceholder;\n    this.eContainer = RefPlaceholder;\n    this.hideTimeout = 0;\n    this.setTemplate(template);\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      scrollVisibilityChanged: this.onScrollVisibilityChanged.bind(this)\n    });\n    this.onScrollVisibilityChanged();\n    this.addOrRemoveCssClass(\"ag-apple-scrollbar\", _isMacOsUserAgent() || _isIOSUserAgent());\n  }\n  destroy() {\n    super.destroy();\n    window.clearTimeout(this.hideTimeout);\n  }\n  initialiseInvisibleScrollbar() {\n    if (this.invisibleScrollbar !== void 0) {\n      return;\n    }\n    this.invisibleScrollbar = _isInvisibleScrollbar();\n    if (this.invisibleScrollbar) {\n      this.hideAndShowInvisibleScrollAsNeeded();\n      this.addActiveListenerToggles();\n    }\n  }\n  addActiveListenerToggles() {\n    const eGui = this.getGui();\n    const onActivate = () => this.addOrRemoveCssClass(\"ag-scrollbar-active\", true);\n    const onDeactivate = () => this.addOrRemoveCssClass(\"ag-scrollbar-active\", false);\n    this.addManagedListeners(eGui, {\n      mouseenter: onActivate,\n      mousedown: onActivate,\n      touchstart: onActivate,\n      mouseleave: onDeactivate,\n      touchend: onDeactivate\n    });\n  }\n  onScrollVisibilityChanged() {\n    if (this.invisibleScrollbar === void 0) {\n      this.initialiseInvisibleScrollbar();\n    }\n    _requestAnimationFrame(this.beans, () => this.setScrollVisible());\n  }\n  hideAndShowInvisibleScrollAsNeeded() {\n    this.addManagedEventListeners({\n      bodyScroll: (params) => {\n        if (params.direction === this.direction) {\n          if (this.hideTimeout) {\n            window.clearTimeout(this.hideTimeout);\n            this.hideTimeout = 0;\n          }\n          this.addOrRemoveCssClass(\"ag-scrollbar-scrolling\", true);\n        }\n      },\n      bodyScrollEnd: () => {\n        this.hideTimeout = window.setTimeout(() => {\n          this.addOrRemoveCssClass(\"ag-scrollbar-scrolling\", false);\n          this.hideTimeout = 0;\n        }, 400);\n      }\n    });\n  }\n  attemptSettingScrollPosition(value) {\n    const viewport = this.eViewport;\n    _waitUntil(\n      () => _isVisible(viewport),\n      () => this.setScrollPosition(value),\n      100\n    );\n  }\n  onScrollCallback(fn) {\n    this.addManagedElementListeners(this.eViewport, { scroll: fn });\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/fakeHScrollComp.ts\nvar FakeHScrollComp = class extends AbstractFakeScrollComp {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-body-horizontal-scroll\" aria-hidden=\"true\">\n            <div class=\"ag-horizontal-left-spacer\" data-ref=\"eLeftSpacer\"></div>\n            <div class=\"ag-body-horizontal-scroll-viewport\" data-ref=\"eViewport\">\n                <div class=\"ag-body-horizontal-scroll-container\" data-ref=\"eContainer\"></div>\n            </div>\n            <div class=\"ag-horizontal-right-spacer\" data-ref=\"eRightSpacer\"></div>\n        </div>`,\n      \"horizontal\"\n    );\n    this.eLeftSpacer = RefPlaceholder;\n    this.eRightSpacer = RefPlaceholder;\n    this.setScrollVisibleDebounce = 0;\n  }\n  wireBeans(beans) {\n    this.visibleCols = beans.visibleCols;\n    this.scrollVisibleSvc = beans.scrollVisibleSvc;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const spacerWidthsListener = this.setFakeHScrollSpacerWidths.bind(this);\n    this.addManagedEventListeners({\n      displayedColumnsChanged: spacerWidthsListener,\n      displayedColumnsWidthChanged: spacerWidthsListener,\n      pinnedRowDataChanged: this.refreshCompBottom.bind(this)\n    });\n    this.addManagedPropertyListener(\"domLayout\", spacerWidthsListener);\n    this.beans.ctrlsSvc.register(\"fakeHScrollComp\", this);\n    this.createManagedBean(new CenterWidthFeature((width) => this.eContainer.style.width = `${width}px`));\n    this.addManagedPropertyListeners([\"suppressHorizontalScroll\"], this.onScrollVisibilityChanged.bind(this));\n  }\n  destroy() {\n    window.clearTimeout(this.setScrollVisibleDebounce);\n    super.destroy();\n  }\n  initialiseInvisibleScrollbar() {\n    if (this.invisibleScrollbar !== void 0) {\n      return;\n    }\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    super.initialiseInvisibleScrollbar();\n    if (this.invisibleScrollbar) {\n      this.refreshCompBottom();\n    }\n  }\n  refreshCompBottom() {\n    if (!this.invisibleScrollbar) {\n      return;\n    }\n    const bottomPinnedHeight = this.beans.pinnedRowModel?.getPinnedBottomTotalHeight() ?? 0;\n    this.getGui().style.bottom = `${bottomPinnedHeight}px`;\n  }\n  onScrollVisibilityChanged() {\n    super.onScrollVisibilityChanged();\n    this.setFakeHScrollSpacerWidths();\n  }\n  setFakeHScrollSpacerWidths() {\n    const vScrollShowing = this.scrollVisibleSvc.verticalScrollShowing;\n    let rightSpacing = this.visibleCols.getDisplayedColumnsRightWidth();\n    const scrollOnRight = !this.enableRtl && vScrollShowing;\n    const scrollbarWidth = this.scrollVisibleSvc.getScrollbarWidth();\n    if (scrollOnRight) {\n      rightSpacing += scrollbarWidth;\n    }\n    _setFixedWidth(this.eRightSpacer, rightSpacing);\n    this.eRightSpacer.classList.toggle(\"ag-scroller-corner\", rightSpacing <= scrollbarWidth);\n    let leftSpacing = this.visibleCols.getColsLeftWidth();\n    const scrollOnLeft = this.enableRtl && vScrollShowing;\n    if (scrollOnLeft) {\n      leftSpacing += scrollbarWidth;\n    }\n    _setFixedWidth(this.eLeftSpacer, leftSpacing);\n    this.eLeftSpacer.classList.toggle(\"ag-scroller-corner\", leftSpacing <= scrollbarWidth);\n  }\n  setScrollVisible() {\n    const hScrollShowing = this.scrollVisibleSvc.horizontalScrollShowing;\n    const invisibleScrollbar2 = this.invisibleScrollbar;\n    const isSuppressHorizontalScroll = this.gos.get(\"suppressHorizontalScroll\");\n    const scrollbarWidth = hScrollShowing ? this.scrollVisibleSvc.getScrollbarWidth() || 0 : 0;\n    const adjustedScrollbarWidth = scrollbarWidth === 0 && invisibleScrollbar2 ? 16 : scrollbarWidth;\n    const scrollContainerSize = !isSuppressHorizontalScroll ? adjustedScrollbarWidth : 0;\n    const apply = () => {\n      this.setScrollVisibleDebounce = 0;\n      this.addOrRemoveCssClass(\"ag-scrollbar-invisible\", invisibleScrollbar2);\n      _setFixedHeight(this.getGui(), scrollContainerSize);\n      _setFixedHeight(this.eViewport, scrollContainerSize);\n      _setFixedHeight(this.eContainer, scrollContainerSize);\n      this.setDisplayed(hScrollShowing, { skipAriaHidden: true });\n    };\n    window.clearTimeout(this.setScrollVisibleDebounce);\n    if (!hScrollShowing) {\n      apply();\n    } else {\n      this.setScrollVisibleDebounce = window.setTimeout(apply, 100);\n    }\n  }\n  getScrollPosition() {\n    return _getScrollLeft(this.eViewport, this.enableRtl);\n  }\n  setScrollPosition(value) {\n    if (!_isVisible(this.eViewport)) {\n      this.attemptSettingScrollPosition(value);\n    }\n    _setScrollLeft(this.eViewport, value, this.enableRtl);\n  }\n};\nvar FakeHScrollSelector = {\n  selector: \"AG-FAKE-HORIZONTAL-SCROLL\",\n  component: FakeHScrollComp\n};\n\n// packages/ag-grid-community/src/gridBodyComp/fakeVScrollComp.ts\nvar FakeVScrollComp = class extends AbstractFakeScrollComp {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-body-vertical-scroll\" aria-hidden=\"true\">\n            <div class=\"ag-body-vertical-scroll-viewport\" data-ref=\"eViewport\">\n                <div class=\"ag-body-vertical-scroll-container\" data-ref=\"eContainer\"></div>\n            </div>\n        </div>`,\n      \"vertical\"\n    );\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.createManagedBean(new SetHeightFeature(this.eContainer));\n    const { ctrlsSvc } = this.beans;\n    ctrlsSvc.register(\"fakeVScrollComp\", this);\n    this.addManagedEventListeners({\n      rowContainerHeightChanged: this.onRowContainerHeightChanged.bind(this, ctrlsSvc)\n    });\n  }\n  setScrollVisible() {\n    const { scrollVisibleSvc } = this.beans;\n    const vScrollShowing = scrollVisibleSvc.verticalScrollShowing;\n    const invisibleScrollbar2 = this.invisibleScrollbar;\n    const scrollbarWidth = vScrollShowing ? scrollVisibleSvc.getScrollbarWidth() || 0 : 0;\n    const adjustedScrollbarWidth = scrollbarWidth === 0 && invisibleScrollbar2 ? 16 : scrollbarWidth;\n    this.addOrRemoveCssClass(\"ag-scrollbar-invisible\", invisibleScrollbar2);\n    _setFixedWidth(this.getGui(), adjustedScrollbarWidth);\n    _setFixedWidth(this.eViewport, adjustedScrollbarWidth);\n    _setFixedWidth(this.eContainer, adjustedScrollbarWidth);\n    this.setDisplayed(vScrollShowing, { skipAriaHidden: true });\n  }\n  onRowContainerHeightChanged(ctrlsSvc) {\n    const gridBodyCtrl = ctrlsSvc.getGridBodyCtrl();\n    const gridBodyViewportEl = gridBodyCtrl.eBodyViewport;\n    const eViewportScrollTop = this.getScrollPosition();\n    const gridBodyViewportScrollTop = gridBodyViewportEl.scrollTop;\n    if (eViewportScrollTop != gridBodyViewportScrollTop) {\n      this.setScrollPosition(gridBodyViewportScrollTop, true);\n    }\n  }\n  getScrollPosition() {\n    return this.eViewport.scrollTop;\n  }\n  setScrollPosition(value, force) {\n    if (!force && !_isVisible(this.eViewport)) {\n      this.attemptSettingScrollPosition(value);\n    }\n    this.eViewport.scrollTop = value;\n  }\n};\nvar FakeVScrollSelector = {\n  selector: \"AG-FAKE-VERTICAL-SCROLL\",\n  component: FakeVScrollComp\n};\n\n// packages/ag-grid-community/src/headerRendering/headerUtils.ts\nfunction getHeaderRowCount(colModel) {\n  return colModel.cols ? colModel.cols.treeDepth + 1 : -1;\n}\nfunction getFocusHeaderRowCount(beans) {\n  return beans.ctrlsSvc.getHeaderRowContainerCtrl()?.getRowCount() ?? 0;\n}\nfunction getGroupRowsHeight(beans) {\n  const heights = [];\n  const headerRowContainerCtrls = beans.ctrlsSvc.getHeaderRowContainerCtrls();\n  for (const headerRowContainerCtrl of headerRowContainerCtrls) {\n    if (!headerRowContainerCtrl) {\n      continue;\n    }\n    const groupRowCount = headerRowContainerCtrl.getGroupRowCount() || 0;\n    for (let i = 0; i < groupRowCount; i++) {\n      const headerRowCtrl = headerRowContainerCtrl.getGroupRowCtrlAtIndex(i);\n      const currentHeightAtPos = heights[i];\n      if (headerRowCtrl) {\n        const newHeight = getColumnGroupHeaderRowHeight(beans, headerRowCtrl);\n        if (currentHeightAtPos == null || newHeight > currentHeightAtPos) {\n          heights[i] = newHeight;\n        }\n      }\n    }\n  }\n  return heights;\n}\nfunction getColumnGroupHeaderRowHeight(beans, headerRowCtrl) {\n  const defaultHeight = beans.colModel.isPivotMode() ? getPivotGroupHeaderHeight(beans) : getGroupHeaderHeight(beans);\n  let displayedHeights = 0;\n  const headerRowCellCtrls = headerRowCtrl.getHeaderCtrls();\n  for (const headerCellCtrl of headerRowCellCtrls) {\n    const { column } = headerCellCtrl;\n    if (column.isAutoHeaderHeight()) {\n      const height = column.getAutoHeaderHeight();\n      if (height != null && height > displayedHeights) {\n        displayedHeights = height;\n      }\n    }\n  }\n  return Math.max(defaultHeight, displayedHeights);\n}\nfunction getColumnHeaderRowHeight(beans) {\n  const defaultHeight = beans.colModel.isPivotMode() ? getPivotHeaderHeight(beans) : getHeaderHeight(beans);\n  const allDisplayedCols = beans.visibleCols.allCols;\n  const displayedHeights = allDisplayedCols.filter((col) => col.isAutoHeaderHeight()).map((col) => col.getAutoHeaderHeight() || 0);\n  return Math.max(defaultHeight, ...displayedHeights);\n}\nfunction getHeaderHeight(beans) {\n  return beans.gos.get(\"headerHeight\") ?? beans.environment.getDefaultHeaderHeight();\n}\nfunction getFloatingFiltersHeight(beans) {\n  return beans.gos.get(\"floatingFiltersHeight\") ?? getHeaderHeight(beans);\n}\nfunction getGroupHeaderHeight(beans) {\n  return beans.gos.get(\"groupHeaderHeight\") ?? getHeaderHeight(beans);\n}\nfunction getPivotHeaderHeight(beans) {\n  return beans.gos.get(\"pivotHeaderHeight\") ?? getHeaderHeight(beans);\n}\nfunction getPivotGroupHeaderHeight(beans) {\n  return beans.gos.get(\"pivotGroupHeaderHeight\") ?? getGroupHeaderHeight(beans);\n}\n\n// packages/ag-grid-community/src/headerRendering/gridHeaderCtrl.ts\nvar GridHeaderCtrl = class extends BeanStub {\n  setComp(comp, eGui, eFocusableElement) {\n    this.comp = comp;\n    this.eGui = eGui;\n    const { beans } = this;\n    const { headerNavigation, touchSvc, ctrlsSvc } = beans;\n    if (headerNavigation) {\n      this.createManagedBean(\n        new ManagedFocusFeature(eFocusableElement, {\n          onTabKeyDown: this.onTabKeyDown.bind(this),\n          handleKeyDown: this.handleKeyDown.bind(this),\n          onFocusOut: this.onFocusOut.bind(this)\n        })\n      );\n    }\n    this.addManagedEventListeners({\n      columnPivotModeChanged: this.onPivotModeChanged.bind(this, beans),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this, beans)\n    });\n    this.onPivotModeChanged(beans);\n    this.setupHeaderHeight();\n    const listener = this.onHeaderContextMenu.bind(this);\n    this.addManagedElementListeners(this.eGui, { contextmenu: listener });\n    touchSvc?.mockHeaderContextMenu(this, listener);\n    ctrlsSvc.register(\"gridHeaderCtrl\", this);\n  }\n  setupHeaderHeight() {\n    const listener = this.setHeaderHeight.bind(this);\n    listener();\n    this.addManagedPropertyListeners(\n      [\n        \"headerHeight\",\n        \"pivotHeaderHeight\",\n        \"groupHeaderHeight\",\n        \"pivotGroupHeaderHeight\",\n        \"floatingFiltersHeight\"\n      ],\n      listener\n    );\n    this.addManagedEventListeners({\n      displayedColumnsChanged: listener,\n      columnHeaderHeightChanged: listener,\n      // add this to the animation frame to avoid a feedback loop\n      columnGroupHeaderHeightChanged: () => _requestAnimationFrame(this.beans, () => listener()),\n      gridStylesChanged: listener,\n      advancedFilterEnabledChanged: listener\n    });\n  }\n  setHeaderHeight() {\n    const { beans } = this;\n    let totalHeaderHeight = 0;\n    const groupHeight = getGroupRowsHeight(beans).reduce((prev, curr) => prev + curr, 0);\n    const headerHeight = getColumnHeaderRowHeight(beans);\n    if (beans.filterManager?.hasFloatingFilters()) {\n      totalHeaderHeight += getFloatingFiltersHeight(beans);\n    }\n    totalHeaderHeight += groupHeight;\n    totalHeaderHeight += headerHeight;\n    if (this.headerHeight === totalHeaderHeight) {\n      return;\n    }\n    this.headerHeight = totalHeaderHeight;\n    const px = `${totalHeaderHeight + 1}px`;\n    this.comp.setHeightAndMinHeight(px);\n    this.eventSvc.dispatchEvent({\n      type: \"headerHeightChanged\"\n    });\n  }\n  onPivotModeChanged(beans) {\n    const pivotMode = beans.colModel.isPivotMode();\n    this.comp.addOrRemoveCssClass(\"ag-pivot-on\", pivotMode);\n    this.comp.addOrRemoveCssClass(\"ag-pivot-off\", !pivotMode);\n  }\n  onDisplayedColumnsChanged(beans) {\n    const columns = beans.visibleCols.allCols;\n    const shouldAllowOverflow = columns.some((col) => col.isSpanHeaderHeight());\n    this.comp.addOrRemoveCssClass(\"ag-header-allow-overflow\", shouldAllowOverflow);\n  }\n  onTabKeyDown(e) {\n    const isRtl = this.gos.get(\"enableRtl\");\n    const backwards = e.shiftKey;\n    const direction = backwards !== isRtl ? \"LEFT\" : \"RIGHT\";\n    const { beans } = this;\n    const { headerNavigation, focusSvc } = beans;\n    if (headerNavigation.navigateHorizontally(direction, true, e) || !backwards && focusSvc.focusOverlay(false) || _focusNextGridCoreContainer(beans, backwards, true)) {\n      e.preventDefault();\n    }\n  }\n  handleKeyDown(e) {\n    let direction = null;\n    const { headerNavigation } = this.beans;\n    switch (e.key) {\n      case KeyCode.LEFT:\n        direction = \"LEFT\";\n      case KeyCode.RIGHT: {\n        if (!_exists(direction)) {\n          direction = \"RIGHT\";\n        }\n        if (headerNavigation.navigateHorizontally(direction, false, e)) {\n          e.preventDefault();\n        }\n        break;\n      }\n      case KeyCode.UP:\n        direction = \"UP\";\n      case KeyCode.DOWN: {\n        if (!_exists(direction)) {\n          direction = \"DOWN\";\n        }\n        if (headerNavigation.navigateVertically(direction, null, e)) {\n          e.preventDefault();\n        }\n        break;\n      }\n      default:\n        return;\n    }\n  }\n  onFocusOut(e) {\n    const { relatedTarget } = e;\n    const { eGui, beans } = this;\n    if (!relatedTarget && eGui.contains(_getActiveDomElement(beans))) {\n      return;\n    }\n    if (!eGui.contains(relatedTarget)) {\n      beans.focusSvc.focusedHeader = null;\n    }\n  }\n  onHeaderContextMenu(mouseEvent, touch, touchEvent) {\n    const { menuSvc, ctrlsSvc } = this.beans;\n    if (!mouseEvent && !touchEvent || !menuSvc?.isHeaderContextMenuEnabled()) {\n      return;\n    }\n    const { target } = mouseEvent ?? touch;\n    if (target === this.eGui || target === ctrlsSvc.getHeaderRowContainerCtrl()?.eViewport) {\n      menuSvc.showHeaderContextMenu(void 0, mouseEvent, touchEvent);\n    }\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/abstractCell/abstractHeaderCellComp.ts\nvar AbstractHeaderCellComp = class extends Component {\n  constructor(template, ctrl) {\n    super(template);\n    this.ctrl = ctrl;\n  }\n  getCtrl() {\n    return this.ctrl;\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/column/headerCellComp.ts\nvar HeaderCellComp = class extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super(\n      /* html */\n      `<div class=\"ag-header-cell\" role=\"columnheader\">\n            <div data-ref=\"eResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            <div data-ref=\"eHeaderCompWrapper\" class=\"ag-header-cell-comp-wrapper\" role=\"presentation\"></div>\n        </div>`,\n      ctrl\n    );\n    this.eResize = RefPlaceholder;\n    this.eHeaderCompWrapper = RefPlaceholder;\n    this.headerCompVersion = 0;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const setAttribute = (name, value) => {\n      if (value != null && value != \"\") {\n        eGui.setAttribute(name, value);\n      } else {\n        eGui.removeAttribute(name);\n      }\n    };\n    setAttribute(\"col-id\", this.ctrl.column.getColId());\n    const compProxy = {\n      setWidth: (width) => eGui.style.width = width,\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setUserStyles: (styles) => _addStylesToElement(eGui, styles),\n      setAriaSort: (sort) => sort ? _setAriaSort(eGui, sort) : _removeAriaSort(eGui),\n      setUserCompDetails: (compDetails) => this.setUserCompDetails(compDetails),\n      getUserCompInstance: () => this.headerComp\n    };\n    this.ctrl.setComp(compProxy, this.getGui(), this.eResize, this.eHeaderCompWrapper, void 0);\n    const selectAllGui = this.ctrl.getSelectAllGui();\n    if (selectAllGui) {\n      this.eResize.insertAdjacentElement(\"afterend\", selectAllGui);\n    }\n  }\n  destroy() {\n    this.destroyHeaderComp();\n    super.destroy();\n  }\n  destroyHeaderComp() {\n    if (this.headerComp) {\n      this.eHeaderCompWrapper.removeChild(this.headerCompGui);\n      this.headerComp = this.destroyBean(this.headerComp);\n      this.headerCompGui = void 0;\n    }\n  }\n  setUserCompDetails(compDetails) {\n    this.headerCompVersion++;\n    const versionCopy = this.headerCompVersion;\n    compDetails.newAgStackInstance().then((comp) => this.afterCompCreated(versionCopy, comp));\n  }\n  afterCompCreated(version, headerComp) {\n    if (version != this.headerCompVersion || !this.isAlive()) {\n      this.destroyBean(headerComp);\n      return;\n    }\n    this.destroyHeaderComp();\n    this.headerComp = headerComp;\n    this.headerCompGui = headerComp.getGui();\n    this.eHeaderCompWrapper.appendChild(this.headerCompGui);\n    this.ctrl.setDragSource(this.getGui());\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/columnGroup/headerGroupCellComp.ts\nvar HeaderGroupCellComp = class extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super(\n      /* html */\n      `<div class=\"ag-header-group-cell\" role=\"columnheader\">\n            <div data-ref=\"eHeaderCompWrapper\" class=\"ag-header-cell-comp-wrapper\" role=\"presentation\"></div>\n            <div data-ref=\"eResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n        </div>`,\n      ctrl\n    );\n    this.eResize = RefPlaceholder;\n    this.eHeaderCompWrapper = RefPlaceholder;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const setAttribute = (key, value) => value != void 0 ? eGui.setAttribute(key, value) : eGui.removeAttribute(key);\n    eGui.setAttribute(\"col-id\", this.ctrl.column.getUniqueId());\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setUserStyles: (styles) => _addStylesToElement(eGui, styles),\n      setHeaderWrapperHidden: (hidden) => {\n        if (hidden) {\n          this.eHeaderCompWrapper.style.setProperty(\"display\", \"none\");\n        } else {\n          this.eHeaderCompWrapper.style.removeProperty(\"display\");\n        }\n      },\n      setHeaderWrapperMaxHeight: (value) => {\n        if (value != null) {\n          this.eHeaderCompWrapper.style.setProperty(\"max-height\", `${value}px`);\n        } else {\n          this.eHeaderCompWrapper.style.removeProperty(\"max-height\");\n        }\n        this.eHeaderCompWrapper.classList.toggle(\"ag-header-cell-comp-wrapper-limited-height\", value != null);\n      },\n      setResizableDisplayed: (displayed) => _setDisplayed(this.eResize, displayed),\n      setWidth: (width) => eGui.style.width = width,\n      setAriaExpanded: (expanded) => setAttribute(\"aria-expanded\", expanded),\n      setUserCompDetails: (details) => this.setUserCompDetails(details),\n      getUserCompInstance: () => this.headerGroupComp\n    };\n    this.ctrl.setComp(compProxy, eGui, this.eResize, this.eHeaderCompWrapper, void 0);\n  }\n  setUserCompDetails(details) {\n    details.newAgStackInstance().then((comp) => this.afterHeaderCompCreated(comp));\n  }\n  afterHeaderCompCreated(headerGroupComp) {\n    const destroyFunc = () => this.destroyBean(headerGroupComp);\n    if (!this.isAlive()) {\n      destroyFunc();\n      return;\n    }\n    const eGui = this.getGui();\n    const eHeaderGroupGui = headerGroupComp.getGui();\n    this.eHeaderCompWrapper.appendChild(eHeaderGroupGui);\n    this.addDestroyFunc(destroyFunc);\n    this.headerGroupComp = headerGroupComp;\n    this.ctrl.setDragSource(eGui);\n  }\n  addOrRemoveHeaderWrapperStyle(style, value) {\n    const { eHeaderCompWrapper } = this;\n    if (value) {\n      eHeaderCompWrapper.style.setProperty(style, value);\n    } else {\n      eHeaderCompWrapper.style.removeProperty(style);\n    }\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/floatingFilter/headerFilterCellComp.ts\nvar HeaderFilterCellComp = class extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super(\n      /* html */\n      `<div class=\"ag-header-cell ag-floating-filter\" role=\"gridcell\">\n            <div data-ref=\"eFloatingFilterBody\" role=\"presentation\"></div>\n            <div class=\"ag-floating-filter-button ag-hidden\" data-ref=\"eButtonWrapper\" role=\"presentation\">\n                <button type=\"button\" class=\"ag-button ag-floating-filter-button-button\" data-ref=\"eButtonShowMainFilter\" tabindex=\"-1\"></button>\n            </div>\n        </div>`,\n      ctrl\n    );\n    this.eFloatingFilterBody = RefPlaceholder;\n    this.eButtonWrapper = RefPlaceholder;\n    this.eButtonShowMainFilter = RefPlaceholder;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setUserStyles: (styles) => _addStylesToElement(eGui, styles),\n      addOrRemoveBodyCssClass: (cssClassName, on) => this.eFloatingFilterBody.classList.toggle(cssClassName, on),\n      setButtonWrapperDisplayed: (displayed) => _setDisplayed(this.eButtonWrapper, displayed),\n      setCompDetails: (compDetails) => this.setCompDetails(compDetails),\n      getFloatingFilterComp: () => this.compPromise,\n      setWidth: (width) => eGui.style.width = width,\n      setMenuIcon: (eIcon) => this.eButtonShowMainFilter.appendChild(eIcon)\n    };\n    this.ctrl.setComp(compProxy, eGui, this.eButtonShowMainFilter, this.eFloatingFilterBody, void 0);\n  }\n  setCompDetails(compDetails) {\n    if (!compDetails) {\n      this.destroyFloatingFilterComp();\n      this.compPromise = null;\n      return;\n    }\n    this.compPromise = compDetails.newAgStackInstance();\n    this.compPromise.then((comp) => this.afterCompCreated(comp));\n  }\n  destroy() {\n    this.destroyFloatingFilterComp();\n    super.destroy();\n  }\n  destroyFloatingFilterComp() {\n    if (this.floatingFilterComp) {\n      this.eFloatingFilterBody.removeChild(this.floatingFilterComp.getGui());\n      this.floatingFilterComp = this.destroyBean(this.floatingFilterComp);\n    }\n  }\n  afterCompCreated(comp) {\n    if (!comp) {\n      return;\n    }\n    if (!this.isAlive()) {\n      this.destroyBean(comp);\n      return;\n    }\n    this.destroyFloatingFilterComp();\n    this.floatingFilterComp = comp;\n    this.eFloatingFilterBody.appendChild(comp.getGui());\n    if (comp.afterGuiAttached) {\n      comp.afterGuiAttached();\n    }\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/row/headerRowComp.ts\nvar HeaderRowComp = class extends Component {\n  constructor(ctrl) {\n    super();\n    this.ctrl = ctrl;\n    this.headerComps = {};\n    this.setTemplate(\n      /* html */\n      `<div class=\"${this.ctrl.headerRowClass}\" role=\"row\"></div>`\n    );\n  }\n  postConstruct() {\n    _setAriaRowIndex(this.getGui(), this.ctrl.getAriaRowIndex());\n    const compProxy = {\n      setHeight: (height) => this.getGui().style.height = height,\n      setTop: (top) => this.getGui().style.top = top,\n      setHeaderCtrls: (ctrls, forceOrder) => this.setHeaderCtrls(ctrls, forceOrder),\n      setWidth: (width) => this.getGui().style.width = width\n    };\n    this.ctrl.setComp(compProxy, void 0);\n  }\n  destroy() {\n    this.setHeaderCtrls([], false);\n    super.destroy();\n  }\n  setHeaderCtrls(ctrls, forceOrder) {\n    if (!this.isAlive()) {\n      return;\n    }\n    const oldComps = this.headerComps;\n    this.headerComps = {};\n    ctrls.forEach((ctrl) => {\n      const id = ctrl.instanceId;\n      let comp = oldComps[id];\n      delete oldComps[id];\n      if (comp == null) {\n        comp = this.createHeaderComp(ctrl);\n        this.getGui().appendChild(comp.getGui());\n      }\n      this.headerComps[id] = comp;\n    });\n    Object.values(oldComps).forEach((comp) => {\n      this.getGui().removeChild(comp.getGui());\n      this.destroyBean(comp);\n    });\n    if (forceOrder) {\n      const comps = Object.values(this.headerComps);\n      comps.sort(\n        (a, b) => {\n          const leftA = a.getCtrl().column.getLeft();\n          const leftB = b.getCtrl().column.getLeft();\n          return leftA - leftB;\n        }\n      );\n      const elementsInOrder = comps.map((c) => c.getGui());\n      _setDomChildOrder(this.getGui(), elementsInOrder);\n    }\n  }\n  createHeaderComp(headerCtrl) {\n    let result;\n    switch (this.ctrl.type) {\n      case \"group\":\n        result = new HeaderGroupCellComp(headerCtrl);\n        break;\n      case \"filter\":\n        result = new HeaderFilterCellComp(headerCtrl);\n        break;\n      default:\n        result = new HeaderCellComp(headerCtrl);\n        break;\n    }\n    this.createBean(result);\n    result.setParentComponent(this);\n    return result;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/features/setLeftFeature.ts\nvar SetLeftFeature = class extends BeanStub {\n  constructor(columnOrGroup, eCell, beans, colsSpanning) {\n    super();\n    this.columnOrGroup = columnOrGroup;\n    this.eCell = eCell;\n    this.colsSpanning = colsSpanning;\n    this.columnOrGroup = columnOrGroup;\n    this.ariaEl = eCell.querySelector(\"[role=columnheader]\") || eCell;\n    this.beans = beans;\n  }\n  setColsSpanning(colsSpanning) {\n    this.colsSpanning = colsSpanning;\n    this.onLeftChanged();\n  }\n  getColumnOrGroup() {\n    const { beans, colsSpanning } = this;\n    if (beans.gos.get(\"enableRtl\") && colsSpanning) {\n      return _last(colsSpanning);\n    }\n    return this.columnOrGroup;\n  }\n  postConstruct() {\n    const onLeftChanged = this.onLeftChanged.bind(this);\n    this.addManagedListeners(this.columnOrGroup, { leftChanged: onLeftChanged });\n    this.setLeftFirstTime();\n    this.addManagedEventListeners({ displayedColumnsWidthChanged: onLeftChanged });\n    this.addManagedPropertyListener(\"domLayout\", onLeftChanged);\n  }\n  setLeftFirstTime() {\n    const { gos, colAnimation } = this.beans;\n    const suppressMoveAnimation = gos.get(\"suppressColumnMoveAnimation\");\n    const oldLeftExists = _exists(this.columnOrGroup.getOldLeft());\n    const animateColumnMove = colAnimation?.isActive() && oldLeftExists && !suppressMoveAnimation;\n    if (animateColumnMove) {\n      this.animateInLeft();\n    } else {\n      this.onLeftChanged();\n    }\n  }\n  animateInLeft() {\n    const colOrGroup = this.getColumnOrGroup();\n    const oldActualLeft = this.modifyLeftForPrintLayout(colOrGroup, colOrGroup.getOldLeft());\n    const actualLeft = this.modifyLeftForPrintLayout(colOrGroup, colOrGroup.getLeft());\n    this.setLeft(oldActualLeft);\n    this.actualLeft = actualLeft;\n    this.beans.colAnimation.executeNextVMTurn(() => {\n      if (this.actualLeft === actualLeft) {\n        this.setLeft(actualLeft);\n      }\n    });\n  }\n  onLeftChanged() {\n    const colOrGroup = this.getColumnOrGroup();\n    const left = colOrGroup.getLeft();\n    this.actualLeft = this.modifyLeftForPrintLayout(colOrGroup, left);\n    this.setLeft(this.actualLeft);\n  }\n  modifyLeftForPrintLayout(colOrGroup, leftPosition) {\n    const { gos, visibleCols } = this.beans;\n    const printLayout = _isDomLayout(gos, \"print\");\n    if (!printLayout) {\n      return leftPosition;\n    }\n    if (colOrGroup.getPinned() === \"left\") {\n      return leftPosition;\n    }\n    const leftWidth = visibleCols.getColsLeftWidth();\n    if (colOrGroup.getPinned() === \"right\") {\n      const bodyWidth = visibleCols.bodyWidth;\n      return leftWidth + bodyWidth + leftPosition;\n    }\n    return leftWidth + leftPosition;\n  }\n  setLeft(value) {\n    if (_exists(value)) {\n      this.eCell.style.left = `${value}px`;\n    }\n    if (isColumnGroup2(this.columnOrGroup)) {\n      const children = this.columnOrGroup.getLeafColumns();\n      if (!children.length) {\n        return;\n      }\n      if (children.length > 1) {\n        _setAriaColSpan(this.ariaEl, children.length);\n      }\n    }\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/abstractCell/abstractHeaderCellCtrl.ts\nvar instanceIdSequence4 = 0;\nvar DOM_DATA_KEY_HEADER_CTRL = \"headerCtrl\";\nvar AbstractHeaderCellCtrl = class extends BeanStub {\n  constructor(column, rowCtrl) {\n    super();\n    this.column = column;\n    this.rowCtrl = rowCtrl;\n    this.resizeToggleTimeout = 0;\n    this.resizeMultiplier = 1;\n    this.resizeFeature = null;\n    this.lastFocusEvent = null;\n    this.dragSource = null;\n    this.instanceId = column.getUniqueId() + \"-\" + instanceIdSequence4++;\n  }\n  postConstruct() {\n    const refreshTabIndex = this.refreshTabIndex.bind(this);\n    this.addManagedPropertyListeners([\"suppressHeaderFocus\"], refreshTabIndex);\n    this.addManagedEventListeners({\n      overlayExclusiveChanged: refreshTabIndex\n    });\n  }\n  shouldStopEventPropagation(event) {\n    const { headerRowIndex, column } = this.beans.focusSvc.focusedHeader;\n    const colDef = column.getDefinition();\n    const colDefFunc = colDef && colDef.suppressHeaderKeyboardEvent;\n    if (!_exists(colDefFunc)) {\n      return false;\n    }\n    const params = _addGridCommonParams(this.gos, {\n      colDef,\n      column,\n      headerRowIndex,\n      event\n    });\n    return !!colDefFunc(params);\n  }\n  getWrapperHasFocus() {\n    const activeEl = _getActiveDomElement(this.beans);\n    return activeEl === this.eGui;\n  }\n  setGui(eGui, compBean) {\n    this.eGui = eGui;\n    this.addDomData(compBean);\n    compBean.addManagedListeners(this.beans.eventSvc, {\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this)\n    });\n    compBean.addManagedElementListeners(this.eGui, {\n      focus: this.onGuiFocus.bind(this)\n    });\n    this.onDisplayedColumnsChanged();\n    this.refreshTabIndex();\n  }\n  refreshHeaderStyles() {\n    const colDef = this.column.getDefinition();\n    if (!colDef) {\n      return;\n    }\n    const { headerStyle } = colDef;\n    let styles;\n    if (typeof headerStyle === \"function\") {\n      const cellStyleParams = this.getHeaderClassParams();\n      styles = headerStyle(cellStyleParams);\n    } else {\n      styles = headerStyle;\n    }\n    if (styles) {\n      this.comp.setUserStyles(styles);\n    }\n  }\n  onGuiFocus() {\n    this.eventSvc.dispatchEvent({\n      type: \"headerFocused\",\n      column: this.column\n    });\n  }\n  setupAutoHeight(params) {\n    const { wrapperElement, checkMeasuringCallback, compBean } = params;\n    const { beans } = this;\n    const measureHeight = (timesCalled) => {\n      if (!this.isAlive() || !compBean.isAlive()) {\n        return;\n      }\n      const { paddingTop, paddingBottom, borderBottomWidth, borderTopWidth } = _getElementSize(this.eGui);\n      const extraHeight = paddingTop + paddingBottom + borderBottomWidth + borderTopWidth;\n      const wrapperHeight = wrapperElement.offsetHeight;\n      const autoHeight = wrapperHeight + extraHeight;\n      if (timesCalled < 5) {\n        const doc = _getDocument(beans);\n        const notYetInDom = !doc || !doc.contains(wrapperElement);\n        const possiblyNoContentYet = autoHeight == 0;\n        if (notYetInDom || possiblyNoContentYet) {\n          _requestAnimationFrame(beans, () => measureHeight(timesCalled + 1));\n          return;\n        }\n      }\n      this.setColHeaderHeight(this.column, autoHeight);\n    };\n    let isMeasuring = false;\n    let stopResizeObserver;\n    const checkMeasuring = () => {\n      const newValue = this.column.isAutoHeaderHeight();\n      if (newValue && !isMeasuring) {\n        startMeasuring();\n      }\n      if (!newValue && isMeasuring) {\n        stopMeasuring();\n      }\n    };\n    const startMeasuring = () => {\n      isMeasuring = true;\n      measureHeight(0);\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-auto-height\", true);\n      stopResizeObserver = _observeResize(this.beans, wrapperElement, () => measureHeight(0));\n    };\n    const stopMeasuring = () => {\n      isMeasuring = false;\n      if (stopResizeObserver) {\n        stopResizeObserver();\n      }\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-auto-height\", false);\n      stopResizeObserver = void 0;\n    };\n    checkMeasuring();\n    compBean.addDestroyFunc(() => stopMeasuring());\n    compBean.addManagedListeners(this.column, { widthChanged: () => isMeasuring && measureHeight(0) });\n    compBean.addManagedEventListeners({\n      sortChanged: () => {\n        if (isMeasuring) {\n          window.setTimeout(() => measureHeight(0));\n        }\n      }\n    });\n    if (checkMeasuringCallback) {\n      checkMeasuringCallback(checkMeasuring);\n    }\n  }\n  onDisplayedColumnsChanged() {\n    const { comp, column, beans, eGui } = this;\n    if (!comp || !column || !eGui) {\n      return;\n    }\n    refreshFirstAndLastStyles(comp, column, beans.visibleCols);\n    _setAriaColIndex(eGui, beans.visibleCols.getAriaColIndex(column));\n  }\n  addResizeAndMoveKeyboardListeners(compBean) {\n    compBean.addManagedListeners(this.eGui, {\n      keydown: this.onGuiKeyDown.bind(this),\n      keyup: this.onGuiKeyUp.bind(this)\n    });\n  }\n  refreshTabIndex() {\n    const suppressHeaderFocus = _isHeaderFocusSuppressed(this.beans);\n    if (this.eGui) {\n      _addOrRemoveAttribute(this.eGui, \"tabindex\", suppressHeaderFocus ? null : \"-1\");\n    }\n  }\n  onGuiKeyDown(e) {\n    const activeEl = _getActiveDomElement(this.beans);\n    const isLeftOrRight = e.key === KeyCode.LEFT || e.key === KeyCode.RIGHT;\n    if (this.isResizing) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n    if (\n      // if elements within the header are focused, we don't process the event\n      activeEl !== this.eGui || // if shiftKey and altKey are not pressed, it's cell navigation so we don't process the event\n      !e.shiftKey && !e.altKey\n    ) {\n      return;\n    }\n    if (this.isResizing || isLeftOrRight) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n    if (!isLeftOrRight) {\n      return;\n    }\n    const isLeft = e.key === KeyCode.LEFT !== this.gos.get(\"enableRtl\");\n    const direction = isLeft ? \"left\" : \"right\";\n    if (e.altKey) {\n      this.isResizing = true;\n      this.resizeMultiplier += 1;\n      const diff = this.getViewportAdjustedResizeDiff(e);\n      this.resizeHeader(diff, e.shiftKey);\n      this.resizeFeature?.toggleColumnResizing(true);\n    } else {\n      this.moveHeader(direction);\n    }\n  }\n  moveHeader(hDirection) {\n    this.beans.colMoves?.moveHeader(hDirection, this.eGui, this.column, this.rowCtrl.pinned, this);\n  }\n  getViewportAdjustedResizeDiff(e) {\n    const diff = this.getResizeDiff(e);\n    const { pinnedCols } = this.beans;\n    return pinnedCols ? pinnedCols.getHeaderResizeDiff(diff, this.column) : diff;\n  }\n  getResizeDiff(e) {\n    const { gos, column } = this;\n    let isLeft = e.key === KeyCode.LEFT !== gos.get(\"enableRtl\");\n    const pinned = column.getPinned();\n    const isRtl = gos.get(\"enableRtl\");\n    if (pinned) {\n      if (isRtl !== (pinned === \"right\")) {\n        isLeft = !isLeft;\n      }\n    }\n    return (isLeft ? -1 : 1) * this.resizeMultiplier;\n  }\n  onGuiKeyUp() {\n    if (!this.isResizing) {\n      return;\n    }\n    if (this.resizeToggleTimeout) {\n      window.clearTimeout(this.resizeToggleTimeout);\n      this.resizeToggleTimeout = 0;\n    }\n    this.isResizing = false;\n    this.resizeMultiplier = 1;\n    this.resizeToggleTimeout = window.setTimeout(() => {\n      this.resizeFeature?.toggleColumnResizing(false);\n    }, 150);\n  }\n  handleKeyDown(e) {\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    switch (e.key) {\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        if (wrapperHasFocus) {\n          e.preventDefault();\n        }\n    }\n  }\n  addDomData(compBean) {\n    const key = DOM_DATA_KEY_HEADER_CTRL;\n    const { eGui, gos } = this;\n    _setDomData(gos, eGui, key, this);\n    compBean.addDestroyFunc(() => _setDomData(gos, eGui, key, null));\n  }\n  focus(event) {\n    const { eGui } = this;\n    if (!eGui) {\n      return false;\n    }\n    this.lastFocusEvent = event || null;\n    eGui.focus();\n    return true;\n  }\n  focusThis() {\n    this.beans.focusSvc.focusedHeader = { headerRowIndex: this.rowCtrl.rowIndex, column: this.column };\n  }\n  removeDragSource() {\n    if (this.dragSource) {\n      this.beans.dragAndDrop?.removeDragSource(this.dragSource);\n      this.dragSource = null;\n    }\n  }\n  handleContextMenuMouseEvent(mouseEvent, touchEvent, column) {\n    const event = mouseEvent ?? touchEvent;\n    const { menuSvc, gos } = this.beans;\n    if (gos.get(\"preventDefaultOnContextMenu\")) {\n      event.preventDefault();\n    }\n    if (menuSvc?.isHeaderContextMenuEnabled(column)) {\n      menuSvc.showHeaderContextMenu(column, mouseEvent, touchEvent);\n    }\n    this.dispatchColumnMouseEvent(\"columnHeaderContextMenu\", column);\n  }\n  dispatchColumnMouseEvent(eventType, column) {\n    this.eventSvc.dispatchEvent({\n      type: eventType,\n      column\n    });\n  }\n  setColHeaderHeight(col, height) {\n    if (!col.setAutoHeaderHeight(height)) {\n      return;\n    }\n    const { eventSvc } = this;\n    if (col.isColumn) {\n      eventSvc.dispatchEvent({\n        type: \"columnHeaderHeightChanged\",\n        column: col,\n        columns: [col],\n        source: \"autosizeColumnHeaderHeight\"\n      });\n    } else {\n      eventSvc.dispatchEvent({\n        type: \"columnGroupHeaderHeightChanged\",\n        columnGroup: col,\n        source: \"autosizeColumnGroupHeaderHeight\"\n      });\n    }\n  }\n  clearComponent() {\n    this.removeDragSource();\n    this.resizeFeature = null;\n    this.comp = null;\n    this.eGui = null;\n  }\n  destroy() {\n    super.destroy();\n    this.column = null;\n    this.lastFocusEvent = null;\n    this.rowCtrl = null;\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/column/headerCellCtrl.ts\nvar HeaderCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor() {\n    super(...arguments);\n    this.refreshFunctions = {};\n    this.userHeaderClasses = /* @__PURE__ */ new Set();\n    this.ariaDescriptionProperties = /* @__PURE__ */ new Map();\n  }\n  setComp(comp, eGui, eResize, eHeaderCompWrapper, compBeanInput) {\n    this.comp = comp;\n    const { rowCtrl, column, beans } = this;\n    const { colResize, context, colHover, rangeSvc } = beans;\n    const compBean = setupCompBean(this, context, compBeanInput);\n    this.setGui(eGui, compBean);\n    this.updateState();\n    this.setupWidth(compBean);\n    this.setupMovingCss(compBean);\n    this.setupMenuClass(compBean);\n    this.setupSortableClass(compBean);\n    this.setupWrapTextClass();\n    this.refreshSpanHeaderHeight();\n    this.setupAutoHeight({\n      wrapperElement: eHeaderCompWrapper,\n      checkMeasuringCallback: (checkMeasuring) => this.setRefreshFunction(\"measuring\", checkMeasuring),\n      compBean\n    });\n    this.addColumnHoverListener(compBean);\n    this.setupFilterClass(compBean);\n    this.setupStylesFromColDef();\n    this.setupClassesFromColDef();\n    this.setupTooltip();\n    this.addActiveHeaderMouseListeners(compBean);\n    this.setupSelectAll(compBean);\n    this.setupUserComp();\n    this.refreshAria();\n    if (colResize) {\n      this.resizeFeature = compBean.createManagedBean(\n        colResize.createResizeFeature(rowCtrl.pinned, column, eResize, comp, this)\n      );\n    } else {\n      _setDisplayed(eResize, false);\n    }\n    colHover?.createHoverFeature(compBean, [column], eGui);\n    rangeSvc?.createRangeHighlightFeature(compBean, column, comp);\n    compBean.createManagedBean(new SetLeftFeature(column, eGui, beans));\n    compBean.createManagedBean(\n      new ManagedFocusFeature(eGui, {\n        shouldStopEventPropagation: (e) => this.shouldStopEventPropagation(e),\n        onTabKeyDown: () => null,\n        handleKeyDown: this.handleKeyDown.bind(this),\n        onFocusIn: this.onFocusIn.bind(this),\n        onFocusOut: this.onFocusOut.bind(this)\n      })\n    );\n    this.addResizeAndMoveKeyboardListeners(compBean);\n    compBean.addManagedPropertyListeners(\n      [\"suppressMovableColumns\", \"suppressMenuHide\", \"suppressAggFuncInHeader\", \"enableAdvancedFilter\"],\n      () => this.refresh()\n    );\n    compBean.addManagedListeners(column, { colDefChanged: () => this.refresh() });\n    compBean.addManagedListeners(column, { headerHighlightChanged: this.onHeaderHighlightChanged.bind(this) });\n    const listener = () => this.checkDisplayName();\n    compBean.addManagedEventListeners({\n      columnValueChanged: listener,\n      columnRowGroupChanged: listener,\n      columnPivotChanged: listener,\n      headerHeightChanged: this.onHeaderHeightChanged.bind(this)\n    });\n    compBean.addDestroyFunc(() => {\n      this.refreshFunctions = {};\n      this.selectAllFeature = null;\n      this.dragSourceElement = void 0;\n      this.userCompDetails = null;\n      this.userHeaderClasses.clear();\n      this.ariaDescriptionProperties.clear();\n      this.clearComponent();\n    });\n  }\n  resizeHeader(delta, shiftKey) {\n    this.beans.colResize?.resizeHeader(this.column, delta, shiftKey);\n  }\n  getHeaderClassParams() {\n    const { column, beans } = this;\n    const colDef = column.colDef;\n    return _addGridCommonParams(beans.gos, {\n      colDef,\n      column,\n      floatingFilter: false\n    });\n  }\n  setupUserComp() {\n    const compDetails = this.lookupUserCompDetails();\n    if (compDetails) {\n      this.setCompDetails(compDetails);\n    }\n  }\n  setCompDetails(compDetails) {\n    this.userCompDetails = compDetails;\n    this.comp.setUserCompDetails(compDetails);\n  }\n  lookupUserCompDetails() {\n    const params = this.createParams();\n    const colDef = this.column.getColDef();\n    return _getHeaderCompDetails(this.beans.userCompFactory, colDef, params);\n  }\n  createParams() {\n    const { menuSvc, sortSvc, colFilter, gos } = this.beans;\n    const params = _addGridCommonParams(gos, {\n      column: this.column,\n      displayName: this.displayName,\n      enableSorting: this.column.isSortable(),\n      enableMenu: this.menuEnabled,\n      enableFilterButton: this.openFilterEnabled && !!menuSvc?.isHeaderFilterButtonEnabled(this.column),\n      enableFilterIcon: !!colFilter && (!this.openFilterEnabled || _isLegacyMenuEnabled(this.gos)),\n      showColumnMenu: (buttonElement, onClosedCallback) => {\n        menuSvc?.showColumnMenu({\n          column: this.column,\n          buttonElement,\n          positionBy: \"button\",\n          onClosedCallback\n        });\n      },\n      showColumnMenuAfterMouseClick: (mouseEvent, onClosedCallback) => {\n        menuSvc?.showColumnMenu({\n          column: this.column,\n          mouseEvent,\n          positionBy: \"mouse\",\n          onClosedCallback\n        });\n      },\n      showFilter: (buttonElement) => {\n        menuSvc?.showFilterMenu({\n          column: this.column,\n          buttonElement,\n          containerType: \"columnFilter\",\n          positionBy: \"button\"\n        });\n      },\n      progressSort: (multiSort) => {\n        sortSvc?.progressSort(this.column, !!multiSort, \"uiColumnSorted\");\n      },\n      setSort: (sort, multiSort) => {\n        sortSvc?.setSortForColumn(this.column, sort, !!multiSort, \"uiColumnSorted\");\n      },\n      eGridHeader: this.eGui,\n      setTooltip: (value, shouldDisplayTooltip) => {\n        gos.assertModuleRegistered(\"Tooltip\", 3);\n        this.setupTooltip(value, shouldDisplayTooltip);\n      }\n    });\n    return params;\n  }\n  setupSelectAll(compBean) {\n    const { selectionSvc } = this.beans;\n    if (!selectionSvc) {\n      return;\n    }\n    this.selectAllFeature = compBean.createManagedBean(selectionSvc.createSelectAllFeature(this.column));\n    this.selectAllFeature.setComp(this);\n  }\n  getSelectAllGui() {\n    return this.selectAllFeature?.getCheckboxGui();\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    if (e.key === KeyCode.SPACE) {\n      this.selectAllFeature?.onSpaceKeyDown(e);\n    }\n    if (e.key === KeyCode.ENTER) {\n      this.onEnterKeyDown(e);\n    }\n    if (e.key === KeyCode.DOWN && e.altKey) {\n      this.showMenuOnKeyPress(e, false);\n    }\n  }\n  onEnterKeyDown(e) {\n    if (e.ctrlKey || e.metaKey) {\n      this.showMenuOnKeyPress(e, true);\n    } else if (this.sortable) {\n      this.beans.sortSvc?.progressSort(this.column, e.shiftKey, \"uiColumnSorted\");\n    }\n  }\n  showMenuOnKeyPress(e, isFilterShortcut) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (!isHeaderComp(headerComp)) {\n      return;\n    }\n    if (headerComp.onMenuKeyboardShortcut(isFilterShortcut)) {\n      e.preventDefault();\n    }\n  }\n  onFocusIn(e) {\n    if (!this.eGui.contains(e.relatedTarget)) {\n      this.focusThis();\n      this.announceAriaDescription();\n    }\n    if (_isKeyboardMode()) {\n      this.setActiveHeader(true);\n    }\n  }\n  onFocusOut(e) {\n    if (this.eGui.contains(e.relatedTarget)) {\n      return;\n    }\n    this.setActiveHeader(false);\n  }\n  setupTooltip(value, shouldDisplayTooltip) {\n    this.tooltipFeature = this.beans.tooltipSvc?.setupHeaderTooltip(\n      this.tooltipFeature,\n      this,\n      value,\n      shouldDisplayTooltip\n    );\n  }\n  setupStylesFromColDef() {\n    this.setRefreshFunction(\"headerStyles\", this.refreshHeaderStyles.bind(this));\n    this.refreshHeaderStyles();\n  }\n  setupClassesFromColDef() {\n    const refreshHeaderClasses = () => {\n      const colDef = this.column.getColDef();\n      const classes = _getHeaderClassesFromColDef(colDef, this.gos, this.column, null);\n      const oldClasses = this.userHeaderClasses;\n      this.userHeaderClasses = new Set(classes);\n      classes.forEach((c) => {\n        if (oldClasses.has(c)) {\n          oldClasses.delete(c);\n        } else {\n          this.comp.addOrRemoveCssClass(c, true);\n        }\n      });\n      oldClasses.forEach((c) => this.comp.addOrRemoveCssClass(c, false));\n    };\n    this.setRefreshFunction(\"headerClasses\", refreshHeaderClasses);\n    refreshHeaderClasses();\n  }\n  setDragSource(eSource) {\n    this.dragSourceElement = eSource;\n    this.removeDragSource();\n    if (!eSource || !this.draggable) {\n      return;\n    }\n    this.dragSource = this.beans.colMoves?.setDragSourceForHeader(eSource, this.column, this.displayName) ?? null;\n  }\n  updateState() {\n    const { menuSvc } = this.beans;\n    this.menuEnabled = !!menuSvc?.isColumnMenuInHeaderEnabled(this.column);\n    this.openFilterEnabled = !!menuSvc?.isFilterMenuInHeaderEnabled(this.column);\n    this.sortable = this.column.isSortable();\n    this.displayName = this.calculateDisplayName();\n    this.draggable = this.workOutDraggable();\n  }\n  setRefreshFunction(name, func) {\n    this.refreshFunctions[name] = func;\n  }\n  refresh() {\n    this.updateState();\n    this.refreshHeaderComp();\n    this.refreshAria();\n    Object.values(this.refreshFunctions).forEach((f) => f());\n  }\n  refreshHeaderComp() {\n    const newCompDetails = this.lookupUserCompDetails();\n    if (!newCompDetails) {\n      return;\n    }\n    const compInstance = this.comp.getUserCompInstance();\n    const attemptRefresh = compInstance != null && this.userCompDetails.componentClass == newCompDetails.componentClass;\n    const headerCompRefreshed = attemptRefresh ? this.attemptHeaderCompRefresh(newCompDetails.params) : false;\n    if (headerCompRefreshed) {\n      this.setDragSource(this.dragSourceElement);\n    } else {\n      this.setCompDetails(newCompDetails);\n    }\n  }\n  attemptHeaderCompRefresh(params) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (!headerComp) {\n      return false;\n    }\n    if (!headerComp.refresh) {\n      return false;\n    }\n    const res = headerComp.refresh(params);\n    return res;\n  }\n  calculateDisplayName() {\n    return this.beans.colNames.getDisplayNameForColumn(this.column, \"header\", true);\n  }\n  checkDisplayName() {\n    if (this.displayName !== this.calculateDisplayName()) {\n      this.refresh();\n    }\n  }\n  workOutDraggable() {\n    const colDef = this.column.getColDef();\n    const isSuppressMovableColumns = this.gos.get(\"suppressMovableColumns\");\n    const colCanMove = !isSuppressMovableColumns && !colDef.suppressMovable && !colDef.lockPosition;\n    return !!colCanMove || !!colDef.enableRowGroup || !!colDef.enablePivot;\n  }\n  setupWidth(compBean) {\n    const listener = () => {\n      const columnWidth = this.column.getActualWidth();\n      this.comp.setWidth(`${columnWidth}px`);\n    };\n    compBean.addManagedListeners(this.column, { widthChanged: listener });\n    listener();\n  }\n  setupMovingCss(compBean) {\n    const listener = () => {\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-moving\", this.column.isMoving());\n    };\n    compBean.addManagedListeners(this.column, { movingChanged: listener });\n    listener();\n  }\n  setupMenuClass(compBean) {\n    const listener = () => {\n      this.comp?.addOrRemoveCssClass(\"ag-column-menu-visible\", this.column.isMenuVisible());\n    };\n    compBean.addManagedListeners(this.column, { menuVisibleChanged: listener });\n    listener();\n  }\n  setupSortableClass(compBean) {\n    const updateSortableCssClass = () => {\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-sortable\", !!this.sortable);\n    };\n    updateSortableCssClass();\n    this.setRefreshFunction(\"updateSortable\", updateSortableCssClass);\n    compBean.addManagedEventListeners({ sortChanged: this.refreshAriaSort.bind(this) });\n  }\n  setupFilterClass(compBean) {\n    const listener = () => {\n      const isFilterActive = this.column.isFilterActive();\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-filtered\", isFilterActive);\n      this.refreshAria();\n    };\n    compBean.addManagedListeners(this.column, { filterActiveChanged: listener });\n    listener();\n  }\n  setupWrapTextClass() {\n    const listener = () => {\n      const wrapText = !!this.column.getColDef().wrapHeaderText;\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-wrap-text\", wrapText);\n    };\n    listener();\n    this.setRefreshFunction(\"wrapText\", listener);\n  }\n  onHeaderHighlightChanged() {\n    const highlighted = this.column.getHighlighted();\n    const beforeOn = highlighted === 0 /* Before */;\n    const afterOn = highlighted === 1 /* After */;\n    this.comp.addOrRemoveCssClass(\"ag-header-highlight-before\", beforeOn);\n    this.comp.addOrRemoveCssClass(\"ag-header-highlight-after\", afterOn);\n  }\n  onDisplayedColumnsChanged() {\n    super.onDisplayedColumnsChanged();\n    if (!this.isAlive()) {\n      return;\n    }\n    this.onHeaderHeightChanged();\n  }\n  onHeaderHeightChanged() {\n    this.refreshSpanHeaderHeight();\n  }\n  refreshSpanHeaderHeight() {\n    const { eGui, column, comp, beans } = this;\n    const groupHeaderHeight = getGroupRowsHeight(this.beans);\n    const isZeroGroupHeight = groupHeaderHeight.reduce((total, next) => total += next, 0) === 0;\n    comp.addOrRemoveCssClass(\"ag-header-parent-hidden\", isZeroGroupHeight);\n    if (!column.isSpanHeaderHeight()) {\n      eGui.style.removeProperty(\"top\");\n      eGui.style.removeProperty(\"height\");\n      comp.addOrRemoveCssClass(\"ag-header-span-height\", false);\n      comp.addOrRemoveCssClass(\"ag-header-span-total\", false);\n      return;\n    }\n    const { numberOfParents, isSpanningTotal } = this.column.getColumnGroupPaddingInfo();\n    comp.addOrRemoveCssClass(\"ag-header-span-height\", numberOfParents > 0);\n    const headerHeight = getColumnHeaderRowHeight(beans);\n    if (numberOfParents === 0) {\n      comp.addOrRemoveCssClass(\"ag-header-span-total\", false);\n      eGui.style.setProperty(\"top\", `0px`);\n      eGui.style.setProperty(\"height\", `${headerHeight}px`);\n      return;\n    }\n    comp.addOrRemoveCssClass(\"ag-header-span-total\", isSpanningTotal);\n    let extraHeight = 0;\n    for (let i = 0; i < numberOfParents; i++) {\n      extraHeight += groupHeaderHeight[groupHeaderHeight.length - 1 - i];\n    }\n    eGui.style.setProperty(\"top\", `${-extraHeight}px`);\n    eGui.style.setProperty(\"height\", `${headerHeight + extraHeight}px`);\n  }\n  refreshAriaSort() {\n    if (this.sortable) {\n      const translate = this.getLocaleTextFunc();\n      const sort = this.beans.sortSvc?.getDisplaySortForColumn(this.column) || null;\n      this.comp.setAriaSort(_getAriaSortState(sort));\n      this.setAriaDescriptionProperty(\"sort\", translate(\"ariaSortableColumn\", \"Press ENTER to sort\"));\n    } else {\n      this.comp.setAriaSort();\n      this.setAriaDescriptionProperty(\"sort\", null);\n    }\n  }\n  refreshAriaMenu() {\n    if (this.menuEnabled) {\n      const translate = this.getLocaleTextFunc();\n      this.setAriaDescriptionProperty(\"menu\", translate(\"ariaMenuColumn\", \"Press ALT DOWN to open column menu\"));\n    } else {\n      this.setAriaDescriptionProperty(\"menu\", null);\n    }\n  }\n  refreshAriaFilterButton() {\n    if (this.openFilterEnabled && !_isLegacyMenuEnabled(this.gos)) {\n      const translate = this.getLocaleTextFunc();\n      this.setAriaDescriptionProperty(\n        \"filterButton\",\n        translate(\"ariaFilterColumn\", \"Press CTRL ENTER to open filter\")\n      );\n    } else {\n      this.setAriaDescriptionProperty(\"filterButton\", null);\n    }\n  }\n  refreshAriaFiltered() {\n    const translate = this.getLocaleTextFunc();\n    const isFilterActive = this.column.isFilterActive();\n    if (isFilterActive) {\n      this.setAriaDescriptionProperty(\"filter\", translate(\"ariaColumnFiltered\", \"Column Filtered\"));\n    } else {\n      this.setAriaDescriptionProperty(\"filter\", null);\n    }\n  }\n  setAriaDescriptionProperty(property, value) {\n    if (value != null) {\n      this.ariaDescriptionProperties.set(property, value);\n    } else {\n      this.ariaDescriptionProperties.delete(property);\n    }\n  }\n  announceAriaDescription() {\n    if (!this.eGui.contains(_getActiveDomElement(this.beans))) {\n      return;\n    }\n    const ariaDescription = Array.from(this.ariaDescriptionProperties.keys()).sort((a, b) => a === \"filter\" ? -1 : b.charCodeAt(0) - a.charCodeAt(0)).map((key) => this.ariaDescriptionProperties.get(key)).join(\". \");\n    this.beans.ariaAnnounce?.announceValue(ariaDescription, \"columnHeader\");\n  }\n  refreshAria() {\n    this.refreshAriaSort();\n    this.refreshAriaMenu();\n    this.refreshAriaFilterButton();\n    this.refreshAriaFiltered();\n  }\n  addColumnHoverListener(compBean) {\n    this.beans.colHover?.addHeaderColumnHoverListener(compBean, this.comp, this.column);\n  }\n  addActiveHeaderMouseListeners(compBean) {\n    const listener = (e) => this.handleMouseOverChange(e.type === \"mouseenter\");\n    const clickListener = () => {\n      this.setActiveHeader(true);\n      this.dispatchColumnMouseEvent(\"columnHeaderClicked\", this.column);\n    };\n    const contextMenuListener = (event) => this.handleContextMenuMouseEvent(event, void 0, this.column);\n    compBean.addManagedListeners(this.eGui, {\n      mouseenter: listener,\n      mouseleave: listener,\n      click: clickListener,\n      contextmenu: contextMenuListener\n    });\n  }\n  handleMouseOverChange(isMouseOver) {\n    this.setActiveHeader(isMouseOver);\n    this.eventSvc.dispatchEvent({\n      type: isMouseOver ? \"columnHeaderMouseOver\" : \"columnHeaderMouseLeave\",\n      column: this.column\n    });\n  }\n  setActiveHeader(active) {\n    this.comp.addOrRemoveCssClass(\"ag-header-active\", active);\n  }\n  getAnchorElementForMenu(isFilter) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (isHeaderComp(headerComp)) {\n      return headerComp.getAnchorElementForMenu(isFilter);\n    }\n    return this.eGui;\n  }\n  destroy() {\n    this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    super.destroy();\n  }\n};\nfunction isHeaderComp(headerComp) {\n  return typeof headerComp.getAnchorElementForMenu === \"function\" && typeof headerComp.onMenuKeyboardShortcut === \"function\";\n}\n\n// packages/ag-grid-community/src/headerRendering/row/headerRowCtrl.ts\nvar instanceIdSequence5 = 0;\nvar HeaderRowCtrl = class extends BeanStub {\n  constructor(rowIndex, pinned, type) {\n    super();\n    this.rowIndex = rowIndex;\n    this.pinned = pinned;\n    this.type = type;\n    this.instanceId = instanceIdSequence5++;\n    const typeClass = type == \"group\" ? `ag-header-row-column-group` : type == \"filter\" ? `ag-header-row-column-filter` : `ag-header-row-column`;\n    this.headerRowClass = `ag-header-row ${typeClass}`;\n  }\n  postConstruct() {\n    this.isPrintLayout = _isDomLayout(this.gos, \"print\");\n    this.isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n  }\n  /** Checks that every header cell that is currently visible has been rendered.\n   * Can only be false under some circumstances when using React\n   */\n  areCellsRendered() {\n    if (!this.comp) {\n      return false;\n    }\n    return this.getHeaderCellCtrls().every((ctrl) => ctrl.eGui != null);\n  }\n  /**\n   *\n   * @param comp Proxy to the actual component\n   * @param initCompState Should the component be initialised with the current state of the controller. Default: true\n   */\n  setComp(comp, compBean, initCompState = true) {\n    this.comp = comp;\n    compBean = setupCompBean(this, this.beans.context, compBean);\n    if (initCompState) {\n      this.onRowHeightChanged();\n      this.onVirtualColumnsChanged();\n    }\n    this.setWidth();\n    this.addEventListeners(compBean);\n  }\n  getAriaRowIndex() {\n    return this.rowIndex + 1;\n  }\n  addEventListeners(compBean) {\n    const onHeightChanged = this.onRowHeightChanged.bind(this);\n    const onDisplayedColumnsChanged = this.onDisplayedColumnsChanged.bind(this);\n    compBean.addManagedEventListeners({\n      columnResized: this.setWidth.bind(this),\n      displayedColumnsChanged: onDisplayedColumnsChanged,\n      virtualColumnsChanged: (params) => this.onVirtualColumnsChanged(params.afterScroll),\n      columnGroupHeaderHeightChanged: onHeightChanged,\n      columnHeaderHeightChanged: onHeightChanged,\n      gridStylesChanged: onHeightChanged,\n      advancedFilterEnabledChanged: onHeightChanged\n    });\n    compBean.addManagedPropertyListener(\"domLayout\", onDisplayedColumnsChanged);\n    compBean.addManagedPropertyListener(\"ensureDomOrder\", (e) => this.isEnsureDomOrder = e.currentValue);\n    compBean.addManagedPropertyListeners(\n      [\n        \"headerHeight\",\n        \"pivotHeaderHeight\",\n        \"groupHeaderHeight\",\n        \"pivotGroupHeaderHeight\",\n        \"floatingFiltersHeight\"\n      ],\n      onHeightChanged\n    );\n  }\n  getHeaderCellCtrl(column) {\n    if (!this.headerCellCtrls) {\n      return;\n    }\n    for (const cellCtrl of this.headerCellCtrls.values()) {\n      if (cellCtrl.column === column) {\n        return cellCtrl;\n      }\n    }\n    return void 0;\n  }\n  onDisplayedColumnsChanged() {\n    this.isPrintLayout = _isDomLayout(this.gos, \"print\");\n    this.onVirtualColumnsChanged();\n    this.setWidth();\n    this.onRowHeightChanged();\n  }\n  setWidth() {\n    const width = this.getWidthForRow();\n    this.comp.setWidth(`${width}px`);\n  }\n  getWidthForRow() {\n    const { visibleCols } = this.beans;\n    if (this.isPrintLayout) {\n      const pinned = this.pinned != null;\n      if (pinned) {\n        return 0;\n      }\n      return visibleCols.getContainerWidth(\"right\") + visibleCols.getContainerWidth(\"left\") + visibleCols.getContainerWidth(null);\n    }\n    return visibleCols.getContainerWidth(this.pinned);\n  }\n  onRowHeightChanged() {\n    const { topOffset, rowHeight } = this.getTopAndHeight();\n    this.comp.setTop(topOffset + \"px\");\n    this.comp.setHeight(rowHeight + \"px\");\n  }\n  getTopAndHeight() {\n    const { filterManager } = this.beans;\n    const sizes = [];\n    const groupHeadersHeight = getGroupRowsHeight(this.beans);\n    const headerHeight = getColumnHeaderRowHeight(this.beans);\n    sizes.push(...groupHeadersHeight);\n    sizes.push(headerHeight);\n    if (filterManager?.hasFloatingFilters()) {\n      sizes.push(getFloatingFiltersHeight(this.beans));\n    }\n    let topOffset = 0;\n    for (let i = 0; i < this.rowIndex; i++) {\n      topOffset += sizes[i];\n    }\n    const rowHeight = sizes[this.rowIndex];\n    return { topOffset, rowHeight };\n  }\n  onVirtualColumnsChanged(afterScroll = false) {\n    const ctrlsToDisplay = this.getHeaderCtrls();\n    const forceOrder = this.isEnsureDomOrder || this.isPrintLayout;\n    this.comp.setHeaderCtrls(ctrlsToDisplay, forceOrder, afterScroll);\n  }\n  getHeaderCtrls() {\n    const oldCtrls = this.headerCellCtrls;\n    this.headerCellCtrls = /* @__PURE__ */ new Map();\n    const columns = this.getColumnsInViewport();\n    for (const child of columns) {\n      this.recycleAndCreateHeaderCtrls(child, oldCtrls);\n    }\n    const isFocusedAndDisplayed = (ctrl) => {\n      const { focusSvc, visibleCols } = this.beans;\n      const isFocused = focusSvc.isHeaderWrapperFocused(ctrl);\n      if (!isFocused) {\n        return false;\n      }\n      const isDisplayed = visibleCols.isVisible(ctrl.column);\n      return isDisplayed;\n    };\n    if (oldCtrls) {\n      for (const [id, oldCtrl] of oldCtrls) {\n        const keepCtrl = isFocusedAndDisplayed(oldCtrl);\n        if (keepCtrl) {\n          this.headerCellCtrls.set(id, oldCtrl);\n        } else {\n          this.destroyBean(oldCtrl);\n        }\n      }\n    }\n    return this.getHeaderCellCtrls();\n  }\n  getHeaderCellCtrls() {\n    return Array.from(this.headerCellCtrls?.values() ?? []);\n  }\n  recycleAndCreateHeaderCtrls(headerColumn, oldCtrls) {\n    if (!this.headerCellCtrls) {\n      return;\n    }\n    if (headerColumn.isEmptyGroup()) {\n      return;\n    }\n    const idOfChild = headerColumn.getUniqueId();\n    let headerCtrl;\n    if (oldCtrls) {\n      headerCtrl = oldCtrls.get(idOfChild);\n      oldCtrls.delete(idOfChild);\n    }\n    const forOldColumn = headerCtrl && headerCtrl.column != headerColumn;\n    if (forOldColumn) {\n      this.destroyBean(headerCtrl);\n      headerCtrl = void 0;\n    }\n    if (headerCtrl == null) {\n      switch (this.type) {\n        case \"filter\": {\n          headerCtrl = this.createBean(\n            this.beans.registry.createDynamicBean(\n              \"headerFilterCellCtrl\",\n              true,\n              headerColumn,\n              this\n            )\n          );\n          break;\n        }\n        case \"group\":\n          headerCtrl = this.createBean(\n            this.beans.registry.createDynamicBean(\n              \"headerGroupCellCtrl\",\n              true,\n              headerColumn,\n              this\n            )\n          );\n          break;\n        default:\n          headerCtrl = this.createBean(new HeaderCellCtrl(headerColumn, this));\n          break;\n      }\n    }\n    this.headerCellCtrls.set(idOfChild, headerCtrl);\n  }\n  getColumnsInViewport() {\n    return this.isPrintLayout ? this.getColumnsInViewportPrintLayout() : this.getColumnsInViewportNormalLayout();\n  }\n  getColumnsInViewportPrintLayout() {\n    if (this.pinned != null) {\n      return [];\n    }\n    let viewportColumns = [];\n    const actualDepth = this.getActualDepth();\n    const { colViewport } = this.beans;\n    [\"left\", null, \"right\"].forEach((pinned) => {\n      const items = colViewport.getHeadersToRender(pinned, actualDepth);\n      viewportColumns = viewportColumns.concat(items);\n    });\n    return viewportColumns;\n  }\n  getActualDepth() {\n    return this.type == \"filter\" ? this.rowIndex - 1 : this.rowIndex;\n  }\n  getColumnsInViewportNormalLayout() {\n    return this.beans.colViewport.getHeadersToRender(this.pinned, this.getActualDepth());\n  }\n  findHeaderCellCtrl(column) {\n    if (!this.headerCellCtrls) {\n      return;\n    }\n    const allCtrls = this.getHeaderCellCtrls();\n    let ctrl;\n    if (typeof column === \"function\") {\n      ctrl = allCtrls.find(column);\n    } else {\n      ctrl = allCtrls.find((ctrl2) => ctrl2.column == column);\n    }\n    return ctrl;\n  }\n  focusHeader(column, event) {\n    const ctrl = this.findHeaderCellCtrl(column);\n    if (!ctrl) {\n      return false;\n    }\n    const focused = ctrl.focus(event);\n    return focused;\n  }\n  destroy() {\n    this.headerCellCtrls?.forEach((ctrl) => {\n      this.destroyBean(ctrl);\n    });\n    this.headerCellCtrls = void 0;\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/rowContainer/headerRowContainerCtrl.ts\nvar HeaderRowContainerCtrl = class extends BeanStub {\n  constructor(pinned) {\n    super();\n    this.pinned = pinned;\n    this.hidden = false;\n    this.includeFloatingFilter = false;\n    this.groupsRowCtrls = [];\n  }\n  setComp(comp, eGui) {\n    this.comp = comp;\n    this.eViewport = eGui;\n    const { pinnedCols, ctrlsSvc, colModel, colMoves, filterManager } = this.beans;\n    this.setupCenterWidth();\n    pinnedCols?.setupHeaderPinnedWidth(this);\n    this.setupDragAndDrop(colMoves, this.eViewport);\n    const onDisplayedColsChanged = this.onDisplayedColumnsChanged.bind(this, filterManager);\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.onGridColumnsChanged.bind(this),\n      displayedColumnsChanged: onDisplayedColsChanged,\n      advancedFilterEnabledChanged: onDisplayedColsChanged\n    });\n    const headerType = `${typeof this.pinned === \"string\" ? this.pinned : \"center\"}Header`;\n    ctrlsSvc.register(headerType, this);\n    if (colModel.ready) {\n      this.refresh();\n    }\n  }\n  getAllCtrls() {\n    const res = [...this.groupsRowCtrls];\n    if (this.columnsRowCtrl) {\n      res.push(this.columnsRowCtrl);\n    }\n    if (this.filtersRowCtrl) {\n      res.push(this.filtersRowCtrl);\n    }\n    return res;\n  }\n  refresh(keepColumns = false) {\n    const { focusSvc, colModel, filterManager } = this.beans;\n    let sequence = 0;\n    const focusedHeaderPosition = focusSvc.getFocusHeaderToUseAfterRefresh();\n    const refreshColumnGroups = () => {\n      const groupRowCount = getHeaderRowCount(colModel) - 1;\n      this.groupsRowCtrls = this.destroyBeans(this.groupsRowCtrls);\n      for (let i = 0; i < groupRowCount; i++) {\n        const ctrl = this.createBean(new HeaderRowCtrl(sequence++, this.pinned, \"group\"));\n        this.groupsRowCtrls.push(ctrl);\n      }\n    };\n    const refreshColumns = () => {\n      const rowIndex = sequence++;\n      const needNewInstance = !this.hidden && (this.columnsRowCtrl == null || !keepColumns || this.columnsRowCtrl.rowIndex !== rowIndex);\n      const shouldDestroyInstance = needNewInstance || this.hidden;\n      if (shouldDestroyInstance) {\n        this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\n      }\n      if (needNewInstance) {\n        this.columnsRowCtrl = this.createBean(new HeaderRowCtrl(rowIndex, this.pinned, \"column\"));\n      }\n    };\n    const refreshFilters = () => {\n      this.includeFloatingFilter = !!filterManager?.hasFloatingFilters() && !this.hidden;\n      const destroyPreviousComp = () => {\n        this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl);\n      };\n      if (!this.includeFloatingFilter) {\n        destroyPreviousComp();\n        return;\n      }\n      const rowIndex = sequence++;\n      if (this.filtersRowCtrl) {\n        const rowIndexMismatch = this.filtersRowCtrl.rowIndex !== rowIndex;\n        if (!keepColumns || rowIndexMismatch) {\n          destroyPreviousComp();\n        }\n      }\n      if (!this.filtersRowCtrl) {\n        this.filtersRowCtrl = this.createBean(new HeaderRowCtrl(rowIndex, this.pinned, \"filter\"));\n      }\n    };\n    refreshColumnGroups();\n    refreshColumns();\n    refreshFilters();\n    const allCtrls = this.getAllCtrls();\n    this.comp.setCtrls(allCtrls);\n    this.restoreFocusOnHeader(focusSvc, focusedHeaderPosition);\n  }\n  getHeaderCtrlForColumn(column) {\n    if (isColumn(column)) {\n      return this.columnsRowCtrl?.getHeaderCellCtrl(column);\n    }\n    if (this.groupsRowCtrls.length === 0) {\n      return;\n    }\n    for (let i = 0; i < this.groupsRowCtrls.length; i++) {\n      const ctrl = this.groupsRowCtrls[i].getHeaderCellCtrl(column);\n      if (ctrl) {\n        return ctrl;\n      }\n    }\n  }\n  getHtmlElementForColumnHeader(column) {\n    return this.getHeaderCtrlForColumn(column)?.eGui ?? null;\n  }\n  getRowType(rowIndex) {\n    return this.getAllCtrls()[rowIndex]?.type;\n  }\n  focusHeader(rowIndex, column, event) {\n    const allCtrls = this.getAllCtrls();\n    const ctrl = allCtrls[rowIndex];\n    if (!ctrl) {\n      return false;\n    }\n    return ctrl.focusHeader(column, event);\n  }\n  getGroupRowCount() {\n    return this.groupsRowCtrls.length;\n  }\n  getGroupRowCtrlAtIndex(index) {\n    return this.groupsRowCtrls[index];\n  }\n  getRowCount() {\n    return this.groupsRowCtrls.length + (this.columnsRowCtrl ? 1 : 0) + (this.filtersRowCtrl ? 1 : 0);\n  }\n  setHorizontalScroll(offset) {\n    this.comp.setViewportScrollLeft(offset);\n  }\n  onScrollCallback(fn) {\n    this.addManagedElementListeners(this.eViewport, { scroll: fn });\n  }\n  destroy() {\n    this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl);\n    this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\n    this.groupsRowCtrls = this.destroyBeans(this.groupsRowCtrls);\n    super.destroy();\n  }\n  setupDragAndDrop(colMoves, dropContainer) {\n    const bodyDropTarget = colMoves?.createBodyDropTarget(this.pinned, dropContainer);\n    if (bodyDropTarget) {\n      this.createManagedBean(bodyDropTarget);\n    }\n  }\n  restoreFocusOnHeader(focusSvc, position) {\n    if (!position) {\n      return;\n    }\n    const { column } = position;\n    if (column.getPinned() != this.pinned) {\n      return;\n    }\n    focusSvc.focusHeaderPosition({ headerPosition: position });\n  }\n  // grid cols have changed - this also means the number of rows in the header can have\n  // changed. so we remove all the old rows and insert new ones for a complete refresh\n  onGridColumnsChanged() {\n    this.refresh(true);\n  }\n  onDisplayedColumnsChanged(filterManager) {\n    const includeFloatingFilter = !!filterManager?.hasFloatingFilters() && !this.hidden;\n    if (this.includeFloatingFilter !== includeFloatingFilter) {\n      this.refresh(true);\n    }\n  }\n  setupCenterWidth() {\n    if (this.pinned != null) {\n      return;\n    }\n    this.createManagedBean(new CenterWidthFeature((width) => this.comp.setCenterWidth(`${width}px`), true));\n  }\n};\n\n// packages/ag-grid-community/src/misc/menu/menuService.ts\nvar MenuService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"menuSvc\";\n  }\n  postConstruct() {\n    const { enterpriseMenuFactory, filterMenuFactory } = this.beans;\n    this.activeMenuFactory = enterpriseMenuFactory ?? filterMenuFactory;\n  }\n  showColumnMenu(params) {\n    this.showColumnMenuCommon(this.activeMenuFactory, params, \"columnMenu\");\n  }\n  showFilterMenu(params) {\n    const { enterpriseMenuFactory, filterMenuFactory } = this.beans;\n    const menuFactory = enterpriseMenuFactory && _isLegacyMenuEnabled(this.gos) ? enterpriseMenuFactory : filterMenuFactory;\n    this.showColumnMenuCommon(menuFactory, params, params.containerType, true);\n  }\n  showHeaderContextMenu(column, mouseEvent, touchEvent) {\n    this.activeMenuFactory?.showMenuAfterContextMenuEvent(column, mouseEvent, touchEvent);\n  }\n  hidePopupMenu() {\n    this.beans.contextMenuSvc?.hideActiveMenu();\n    this.activeMenuFactory?.hideActiveMenu();\n  }\n  isColumnMenuInHeaderEnabled(column) {\n    const { suppressHeaderMenuButton } = column.getColDef();\n    return !suppressHeaderMenuButton && !!this.activeMenuFactory?.isMenuEnabled(column) && (_isLegacyMenuEnabled(this.gos) || !!this.beans.enterpriseMenuFactory);\n  }\n  isFilterMenuInHeaderEnabled(column) {\n    return !column.getColDef().suppressHeaderFilterButton && !!this.beans.filterManager?.isFilterAllowed(column);\n  }\n  isHeaderContextMenuEnabled(column) {\n    const colDef = column && isColumn(column) ? column.getColDef() : column?.getColGroupDef();\n    return !colDef?.suppressHeaderContextMenu && this.gos.get(\"columnMenu\") === \"new\";\n  }\n  isHeaderMenuButtonAlwaysShowEnabled() {\n    return this.isSuppressMenuHide();\n  }\n  isHeaderMenuButtonEnabled() {\n    const menuHides = !this.isSuppressMenuHide();\n    const onIpadAndMenuHides = _isIOSUserAgent() && menuHides;\n    return !onIpadAndMenuHides;\n  }\n  isHeaderFilterButtonEnabled(column) {\n    return this.isFilterMenuInHeaderEnabled(column) && !_isLegacyMenuEnabled(this.gos) && !this.isFloatingFilterButtonDisplayed(column);\n  }\n  isFilterMenuItemEnabled(column) {\n    return !!this.beans.filterManager?.isFilterAllowed(column) && !_isLegacyMenuEnabled(this.gos) && !this.isFilterMenuInHeaderEnabled(column) && !this.isFloatingFilterButtonDisplayed(column);\n  }\n  isFloatingFilterButtonEnabled(column) {\n    return !column.getColDef().suppressFloatingFilterButton;\n  }\n  isFloatingFilterButtonDisplayed(column) {\n    return !!column.getColDef().floatingFilter && this.isFloatingFilterButtonEnabled(column);\n  }\n  isSuppressMenuHide() {\n    const gos = this.gos;\n    const suppressMenuHide = gos.get(\"suppressMenuHide\");\n    if (_isLegacyMenuEnabled(gos)) {\n      return gos.exists(\"suppressMenuHide\") ? suppressMenuHide : false;\n    }\n    return suppressMenuHide;\n  }\n  showColumnMenuCommon(menuFactory, params, containerType, filtersOnly) {\n    const { positionBy, onClosedCallback } = params;\n    const column = params.column;\n    if (positionBy === \"button\") {\n      const { buttonElement } = params;\n      menuFactory?.showMenuAfterButtonClick(column, buttonElement, containerType, onClosedCallback, filtersOnly);\n    } else if (positionBy === \"mouse\") {\n      const { mouseEvent } = params;\n      menuFactory?.showMenuAfterMouseEvent(column, mouseEvent, containerType, onClosedCallback, filtersOnly);\n    } else if (column) {\n      const beans = this.beans;\n      const ctrlsSvc = beans.ctrlsSvc;\n      ctrlsSvc.getScrollFeature().ensureColumnVisible(column, \"auto\");\n      _requestAnimationFrame(beans, () => {\n        const headerCellCtrl = ctrlsSvc.getHeaderRowContainerCtrl(column.getPinned())?.getHeaderCtrlForColumn(column);\n        if (headerCellCtrl) {\n          menuFactory?.showMenuAfterButtonClick(\n            column,\n            headerCellCtrl.getAnchorElementForMenu(filtersOnly),\n            containerType,\n            onClosedCallback,\n            true\n          );\n        }\n      });\n    }\n  }\n};\nfunction _setColMenuVisible(column, visible, source) {\n  if (column.menuVisible !== visible) {\n    column.menuVisible = visible;\n    column.dispatchColEvent(\"menuVisibleChanged\", source);\n  }\n}\n\n// packages/ag-grid-community/src/rendering/overlays/overlayComponent.ts\nvar OverlayComponent = class extends Component {\n  constructor() {\n    super();\n  }\n};\n\n// packages/ag-grid-community/src/rendering/overlays/loadingOverlayComponent.ts\nvar LoadingOverlayComponent2 = class extends OverlayComponent {\n  init() {\n    const customTemplate = _makeNull(this.gos.get(\"overlayLoadingTemplate\")?.trim());\n    this.setTemplate(\n      customTemplate ?? /* html */\n      `<span aria-live=\"polite\" aria-atomic=\"true\" class=\"ag-overlay-loading-center\"></span>`\n    );\n    if (!customTemplate) {\n      const localeTextFunc = this.getLocaleTextFunc();\n      setTimeout(() => {\n        this.getGui().textContent = localeTextFunc(\"loadingOoo\", \"Loading...\");\n      });\n    }\n  }\n};\n\n// packages/ag-grid-community/src/rendering/overlays/noRowsOverlayComponent.ts\nvar NoRowsOverlayComponent2 = class extends OverlayComponent {\n  init() {\n    const customTemplate = _makeNull(this.gos.get(\"overlayNoRowsTemplate\")?.trim());\n    this.setTemplate(customTemplate ?? /* html */\n    `<span class=\"ag-overlay-no-rows-center\"></span>`);\n    if (!customTemplate) {\n      const localeTextFunc = this.getLocaleTextFunc();\n      setTimeout(() => {\n        this.getGui().textContent = localeTextFunc(\"noRowsToShow\", \"No Rows To Show\");\n      });\n    }\n  }\n};\n\n// packages/ag-grid-community/src/utils/icon.ts\nfunction _createIcon(iconName, beans, column) {\n  const iconContents = _createIconNoSpan(iconName, beans, column);\n  if (iconContents) {\n    const { className } = iconContents;\n    if (typeof className === \"string\" && className.indexOf(\"ag-icon\") > -1 || typeof className === \"object\" && className[\"ag-icon\"]) {\n      return iconContents;\n    }\n  }\n  const eResult = document.createElement(\"span\");\n  eResult.appendChild(iconContents);\n  return eResult;\n}\nfunction _createIconNoSpan(iconName, beans, column) {\n  let userProvidedIcon = null;\n  if (iconName === \"smallDown\") {\n    _warn(262);\n  } else if (iconName === \"smallLeft\") {\n    _warn(263);\n  } else if (iconName === \"smallRight\") {\n    _warn(264);\n  }\n  const icons = column && column.getColDef().icons;\n  if (icons) {\n    userProvidedIcon = icons[iconName];\n  }\n  if (beans.gos && !userProvidedIcon) {\n    const optionsIcons = beans.gos.get(\"icons\");\n    if (optionsIcons) {\n      userProvidedIcon = optionsIcons[iconName];\n    }\n  }\n  if (userProvidedIcon) {\n    let rendererResult;\n    if (typeof userProvidedIcon === \"function\") {\n      rendererResult = userProvidedIcon();\n    } else if (typeof userProvidedIcon === \"string\") {\n      rendererResult = userProvidedIcon;\n    } else {\n      _warn(38, { iconName });\n      return void 0;\n    }\n    if (typeof rendererResult === \"string\") {\n      return _loadTemplate(rendererResult);\n    }\n    if (_isNodeOrElement(rendererResult)) {\n      return rendererResult;\n    }\n    _warn(133, { iconName });\n    return void 0;\n  } else {\n    const span = document.createElement(\"span\");\n    const iconValue = beans.registry.getIcon(iconName);\n    if (!iconValue) {\n      beans.validation?.validateIcon(iconName);\n    }\n    const cssClass = iconValue ?? iconName;\n    span.setAttribute(\"class\", `ag-icon ag-icon-${cssClass}`);\n    span.setAttribute(\"unselectable\", \"on\");\n    _setAriaRole(span, \"presentation\");\n    return span;\n  }\n}\n\n// packages/ag-grid-community/src/dragAndDrop/dragAndDropImageComponent.css-GENERATED.ts\nvar dragAndDropImageComponentCSS = (\n  /*css*/\n  `.ag-dnd-ghost{align-items:center;background-color:var(--ag-drag-and-drop-image-background-color);border:var(--ag-drag-and-drop-image-border);border-radius:var(--ag-border-radius);box-shadow:var(--ag-drag-and-drop-image-shadow);color:var(--ag-text-color);cursor:move;display:flex;font-weight:500;gap:var(--ag-cell-widget-spacing);height:var(--ag-header-height);overflow:hidden;padding-left:var(--ag-cell-horizontal-padding);padding-right:var(--ag-cell-horizontal-padding);text-overflow:ellipsis;transform:translateY(calc(var(--ag-spacing)*2));white-space:nowrap}`\n);\n\n// packages/ag-grid-community/src/dragAndDrop/dragAndDropImageComponent.ts\nvar DragAndDropImageComponent2 = class extends Component {\n  constructor() {\n    super();\n    this.dragSource = null;\n    this.eIcon = RefPlaceholder;\n    this.eLabel = RefPlaceholder;\n    this.registerCSS(dragAndDropImageComponentCSS);\n  }\n  postConstruct() {\n    const create = (iconName) => _createIcon(iconName, this.beans, null);\n    this.dropIconMap = {\n      pinned: create(\"columnMovePin\"),\n      hide: create(\"columnMoveHide\"),\n      move: create(\"columnMoveMove\"),\n      left: create(\"columnMoveLeft\"),\n      right: create(\"columnMoveRight\"),\n      group: create(\"columnMoveGroup\"),\n      aggregate: create(\"columnMoveValue\"),\n      pivot: create(\"columnMovePivot\"),\n      notAllowed: create(\"dropNotAllowed\")\n    };\n  }\n  init(params) {\n    this.dragSource = params.dragSource;\n    this.setTemplate(\n      /* html */\n      `<div class=\"ag-dnd-ghost ag-unselectable\">\n                <span data-ref=\"eIcon\" class=\"ag-dnd-ghost-icon ag-shake-left-to-right\"></span>\n                <div data-ref=\"eLabel\" class=\"ag-dnd-ghost-label\"></div>\n            </div>`\n    );\n  }\n  destroy() {\n    this.dragSource = null;\n    super.destroy();\n  }\n  setIcon(iconName, shake) {\n    const { eIcon, dragSource, dropIconMap, gos } = this;\n    _clearElement(eIcon);\n    let eIconChild = null;\n    if (!iconName) {\n      iconName = dragSource?.getDefaultIconName ? dragSource.getDefaultIconName() : \"notAllowed\";\n    }\n    eIconChild = dropIconMap[iconName];\n    eIcon.classList.toggle(\"ag-shake-left-to-right\", shake);\n    if (eIconChild === dropIconMap[\"hide\"] && gos.get(\"suppressDragLeaveHidesColumns\")) {\n      return;\n    }\n    if (eIconChild) {\n      eIcon.appendChild(eIconChild);\n    }\n  }\n  setLabel(label) {\n    this.eLabel.textContent = label;\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agAbstractLabel.css-GENERATED.ts\nvar agAbstractLabelCSS = (\n  /*css*/\n  `.ag-label{white-space:nowrap}:where(.ag-ltr) .ag-label{margin-right:var(--ag-spacing)}:where(.ag-rtl) .ag-label{margin-left:var(--ag-spacing)}:where(.ag-label-align-right) .ag-label{order:1}:where(.ag-ltr) :where(.ag-label-align-right) .ag-label{margin-left:var(--ag-spacing)}:where(.ag-rtl) :where(.ag-label-align-right) .ag-label{margin-right:var(--ag-spacing)}.ag-label-align-right>*{flex:none}.ag-label-align-top{align-items:flex-start;flex-direction:column;>*{align-self:stretch}}.ag-label-ellipsis{flex:1;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:where(.ag-label-align-top) .ag-label{margin-bottom:calc(var(--ag-spacing)*.5)}`\n);\n\n// packages/ag-grid-community/src/widgets/agAbstractLabel.ts\nvar AgAbstractLabel = class extends Component {\n  constructor(config, template, components) {\n    super(template, components);\n    this.labelSeparator = \"\";\n    this.labelAlignment = \"left\";\n    this.disabled = false;\n    this.label = \"\";\n    this.config = config || {};\n    this.registerCSS(agAbstractLabelCSS);\n  }\n  postConstruct() {\n    this.addCssClass(\"ag-labeled\");\n    this.eLabel.classList.add(\"ag-label\");\n    const { labelSeparator, label, labelWidth, labelAlignment, disabled } = this.config;\n    if (disabled != null) {\n      this.setDisabled(disabled);\n    }\n    if (labelSeparator != null) {\n      this.setLabelSeparator(labelSeparator);\n    }\n    if (label != null) {\n      this.setLabel(label);\n    }\n    if (labelWidth != null) {\n      this.setLabelWidth(labelWidth);\n    }\n    this.setLabelAlignment(labelAlignment || this.labelAlignment);\n    this.refreshLabel();\n  }\n  refreshLabel() {\n    const { label, eLabel } = this;\n    _clearElement(eLabel);\n    if (typeof label === \"string\") {\n      eLabel.innerText = label + this.labelSeparator;\n    } else if (label) {\n      eLabel.appendChild(label);\n    }\n    if (label === \"\") {\n      _setDisplayed(eLabel, false);\n      _setAriaRole(eLabel, \"presentation\");\n    } else {\n      _setDisplayed(eLabel, true);\n      _setAriaRole(eLabel, null);\n    }\n  }\n  setLabelSeparator(labelSeparator) {\n    if (this.labelSeparator === labelSeparator) {\n      return this;\n    }\n    this.labelSeparator = labelSeparator;\n    if (this.label != null) {\n      this.refreshLabel();\n    }\n    return this;\n  }\n  getLabelId() {\n    const eLabel = this.eLabel;\n    eLabel.id = eLabel.id || `ag-${this.getCompId()}-label`;\n    return eLabel.id;\n  }\n  getLabel() {\n    return this.label;\n  }\n  setLabel(label) {\n    if (this.label === label) {\n      return this;\n    }\n    this.label = label;\n    this.refreshLabel();\n    return this;\n  }\n  setLabelAlignment(alignment) {\n    const eGui = this.getGui();\n    const eGuiClassList = eGui.classList;\n    eGuiClassList.toggle(\"ag-label-align-left\", alignment === \"left\");\n    eGuiClassList.toggle(\"ag-label-align-right\", alignment === \"right\");\n    eGuiClassList.toggle(\"ag-label-align-top\", alignment === \"top\");\n    return this;\n  }\n  setLabelEllipsis(hasEllipsis) {\n    this.eLabel.classList.toggle(\"ag-label-ellipsis\", hasEllipsis);\n    return this;\n  }\n  setLabelWidth(width) {\n    if (this.label == null) {\n      return this;\n    }\n    _setElementWidth(this.eLabel, width);\n    return this;\n  }\n  setDisabled(disabled) {\n    disabled = !!disabled;\n    const element = this.getGui();\n    _setDisabled(element, disabled);\n    element.classList.toggle(\"ag-disabled\", disabled);\n    this.disabled = disabled;\n    return this;\n  }\n  isDisabled() {\n    return !!this.disabled;\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agAbstractField.ts\nvar AgAbstractField = class extends AgAbstractLabel {\n  constructor(config, template, components, className) {\n    super(config, template, components);\n    this.className = className;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const { width, value, onValueChange } = this.config;\n    if (width != null) {\n      this.setWidth(width);\n    }\n    if (value != null) {\n      this.setValue(value);\n    }\n    if (onValueChange != null) {\n      this.onValueChange(onValueChange);\n    }\n    if (this.className) {\n      this.addCssClass(this.className);\n    }\n    this.refreshAriaLabelledBy();\n  }\n  setLabel(label) {\n    super.setLabel(label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  refreshAriaLabelledBy() {\n    const ariaEl = this.getAriaElement();\n    const labelId = this.getLabelId();\n    const label = this.getLabel();\n    if (label == null || label == \"\" || _getAriaLabel(ariaEl) !== null) {\n      _setAriaLabelledBy(ariaEl, \"\");\n    } else {\n      _setAriaLabelledBy(ariaEl, labelId ?? \"\");\n    }\n  }\n  setAriaLabel(label) {\n    _setAriaLabel(this.getAriaElement(), label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  onValueChange(callbackFn) {\n    this.addManagedListeners(this, { fieldValueChanged: () => callbackFn(this.getValue()) });\n    return this;\n  }\n  getWidth() {\n    return this.getGui().clientWidth;\n  }\n  setWidth(width) {\n    _setFixedWidth(this.getGui(), width);\n    return this;\n  }\n  getPreviousValue() {\n    return this.previousValue;\n  }\n  getValue() {\n    return this.value;\n  }\n  setValue(value, silent) {\n    if (this.value === value) {\n      return this;\n    }\n    this.previousValue = this.value;\n    this.value = value;\n    if (!silent) {\n      this.dispatchLocalEvent({ type: \"fieldValueChanged\" });\n    }\n    return this;\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agAbstractInputField.ts\nvar AgAbstractInputField = class extends AgAbstractField {\n  constructor(config, className, inputType = \"text\", displayFieldTag = \"input\") {\n    super(\n      config,\n      config?.template ?? /* html */\n      `\n            <div role=\"presentation\">\n                <div data-ref=\"eLabel\" class=\"ag-input-field-label\"></div>\n                <div data-ref=\"eWrapper\" class=\"ag-wrapper ag-input-wrapper\" role=\"presentation\">\n                    <${displayFieldTag} data-ref=\"eInput\" class=\"ag-input-field-input\"></${displayFieldTag}>\n                </div>\n            </div>`,\n      [],\n      className\n    );\n    this.inputType = inputType;\n    this.displayFieldTag = displayFieldTag;\n    this.eLabel = RefPlaceholder;\n    this.eWrapper = RefPlaceholder;\n    this.eInput = RefPlaceholder;\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.setInputType();\n    const { eLabel, eWrapper, eInput, className } = this;\n    eLabel.classList.add(`${className}-label`);\n    eWrapper.classList.add(`${className}-input-wrapper`);\n    eInput.classList.add(`${className}-input`);\n    this.addCssClass(\"ag-input-field\");\n    eInput.id = eInput.id || `ag-${this.getCompId()}-input`;\n    const { inputName, inputWidth } = this.config;\n    if (inputName != null) {\n      this.setInputName(inputName);\n    }\n    if (inputWidth != null) {\n      this.setInputWidth(inputWidth);\n    }\n    this.addInputListeners();\n    this.activateTabIndex([eInput]);\n  }\n  addInputListeners() {\n    this.addManagedElementListeners(this.eInput, { input: (e) => this.setValue(e.target.value) });\n  }\n  setInputType() {\n    if (this.displayFieldTag === \"input\") {\n      this.eInput.setAttribute(\"type\", this.inputType);\n    }\n  }\n  getInputElement() {\n    return this.eInput;\n  }\n  setInputWidth(width) {\n    _setElementWidth(this.eWrapper, width);\n    return this;\n  }\n  setInputName(name) {\n    this.getInputElement().setAttribute(\"name\", name);\n    return this;\n  }\n  getFocusableElement() {\n    return this.eInput;\n  }\n  setMaxLength(length) {\n    const eInput = this.eInput;\n    eInput.maxLength = length;\n    return this;\n  }\n  setInputPlaceholder(placeholder) {\n    _addOrRemoveAttribute(this.eInput, \"placeholder\", placeholder);\n    return this;\n  }\n  setInputAriaLabel(label) {\n    _setAriaLabel(this.eInput, label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  setDisabled(disabled) {\n    _setDisabled(this.eInput, disabled);\n    return super.setDisabled(disabled);\n  }\n  setAutoComplete(value) {\n    if (value === true) {\n      _addOrRemoveAttribute(this.eInput, \"autocomplete\", null);\n    } else {\n      const autoCompleteValue = typeof value === \"string\" ? value : \"off\";\n      _addOrRemoveAttribute(this.eInput, \"autocomplete\", autoCompleteValue);\n    }\n    return this;\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agCheckbox.ts\nvar AgCheckbox = class extends AgAbstractInputField {\n  constructor(config, className = \"ag-checkbox\", inputType = \"checkbox\") {\n    super(config, className, inputType);\n    this.labelAlignment = \"right\";\n    this.selected = false;\n    this.readOnly = false;\n    this.passive = false;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const { readOnly, passive } = this.config;\n    if (typeof readOnly === \"boolean\")\n      this.setReadOnly(readOnly);\n    if (typeof passive === \"boolean\")\n      this.setPassive(passive);\n  }\n  addInputListeners() {\n    this.addManagedElementListeners(this.eInput, { click: this.onCheckboxClick.bind(this) });\n    this.addManagedElementListeners(this.eLabel, { click: this.toggle.bind(this) });\n  }\n  getNextValue() {\n    return this.selected === void 0 ? true : !this.selected;\n  }\n  setPassive(passive) {\n    this.passive = passive;\n  }\n  isReadOnly() {\n    return this.readOnly;\n  }\n  setReadOnly(readOnly) {\n    this.eWrapper.classList.toggle(\"ag-disabled\", readOnly);\n    this.eInput.disabled = readOnly;\n    this.readOnly = readOnly;\n  }\n  setDisabled(disabled) {\n    this.eWrapper.classList.toggle(\"ag-disabled\", disabled);\n    return super.setDisabled(disabled);\n  }\n  toggle() {\n    if (this.eInput.disabled) {\n      return;\n    }\n    const previousValue = this.isSelected();\n    const nextValue = this.getNextValue();\n    if (this.passive) {\n      this.dispatchChange(nextValue, previousValue);\n    } else {\n      this.setValue(nextValue);\n    }\n  }\n  getValue() {\n    return this.isSelected();\n  }\n  setValue(value, silent) {\n    this.refreshSelectedClass(value);\n    this.setSelected(value, silent);\n    return this;\n  }\n  setName(name) {\n    const input = this.getInputElement();\n    input.name = name;\n    return this;\n  }\n  isSelected() {\n    return this.selected;\n  }\n  setSelected(selected, silent) {\n    if (this.isSelected() === selected) {\n      return;\n    }\n    this.previousValue = this.isSelected();\n    selected = this.selected = typeof selected === \"boolean\" ? selected : void 0;\n    const eInput = this.eInput;\n    eInput.checked = selected;\n    eInput.indeterminate = selected === void 0;\n    if (!silent) {\n      this.dispatchChange(this.selected, this.previousValue);\n    }\n  }\n  dispatchChange(selected, previousValue, event) {\n    this.dispatchLocalEvent({ type: \"fieldValueChanged\", selected, previousValue, event });\n    const input = this.getInputElement();\n    this.eventSvc.dispatchEvent({\n      type: \"checkboxChanged\",\n      id: input.id,\n      name: input.name,\n      selected,\n      previousValue\n    });\n  }\n  onCheckboxClick(e) {\n    if (this.passive || this.eInput.disabled) {\n      return;\n    }\n    const previousValue = this.isSelected();\n    const selected = this.selected = e.target.checked;\n    this.refreshSelectedClass(selected);\n    this.dispatchChange(selected, previousValue, e);\n  }\n  refreshSelectedClass(value) {\n    const classList = this.eWrapper.classList;\n    classList.toggle(\"ag-checked\", value === true);\n    classList.toggle(\"ag-indeterminate\", value == null);\n  }\n};\nvar AgCheckboxSelector = {\n  selector: \"AG-CHECKBOX\",\n  component: AgCheckbox\n};\n\n// packages/ag-grid-community/src/rendering/cellRenderers/checkboxCellRenderer.css-GENERATED.ts\nvar checkboxCellRendererCSS = (\n  /*css*/\n  `.ag-checkbox-cell{height:100%}`\n);\n\n// packages/ag-grid-community/src/rendering/cellRenderers/checkboxCellRenderer.ts\nvar CheckboxCellRenderer = class extends Component {\n  constructor() {\n    super(\n      /* html*/\n      `\n            <div class=\"ag-cell-wrapper ag-checkbox-cell\" role=\"presentation\">\n                <ag-checkbox role=\"presentation\" data-ref=\"eCheckbox\"></ag-checkbox>\n            </div>`,\n      [AgCheckboxSelector]\n    );\n    this.eCheckbox = RefPlaceholder;\n    this.registerCSS(checkboxCellRendererCSS);\n  }\n  init(params) {\n    this.refresh(params);\n    const { eCheckbox, beans } = this;\n    const inputEl = eCheckbox.getInputElement();\n    inputEl.setAttribute(\"tabindex\", \"-1\");\n    _setAriaLive(inputEl, \"polite\");\n    this.addManagedListeners(inputEl, {\n      click: (event) => {\n        _stopPropagationForAgGrid(event);\n        if (eCheckbox.isDisabled()) {\n          return;\n        }\n        const isSelected = eCheckbox.getValue();\n        this.onCheckboxChanged(isSelected);\n      },\n      dblclick: (event) => {\n        _stopPropagationForAgGrid(event);\n      }\n    });\n    this.addManagedElementListeners(params.eGridCell, {\n      keydown: (event) => {\n        if (event.key === KeyCode.SPACE && !eCheckbox.isDisabled()) {\n          if (params.eGridCell === _getActiveDomElement(beans)) {\n            eCheckbox.toggle();\n          }\n          const isSelected = eCheckbox.getValue();\n          this.onCheckboxChanged(isSelected);\n          event.preventDefault();\n        }\n      }\n    });\n  }\n  refresh(params) {\n    this.params = params;\n    this.updateCheckbox(params);\n    return true;\n  }\n  updateCheckbox(params) {\n    let isSelected;\n    let displayed = true;\n    const { value, column, node } = params;\n    if (node.group && column) {\n      if (typeof value === \"boolean\") {\n        isSelected = value;\n      } else {\n        const colId = column.getColId();\n        if (colId.startsWith(GROUP_AUTO_COLUMN_ID)) {\n          isSelected = value == null || value === \"\" ? void 0 : value === \"true\";\n        } else if (node.aggData && node.aggData[colId] !== void 0) {\n          isSelected = value ?? void 0;\n        } else {\n          displayed = false;\n        }\n      }\n    } else {\n      isSelected = value ?? void 0;\n    }\n    const { eCheckbox } = this;\n    if (!displayed) {\n      eCheckbox.setDisplayed(false);\n      return;\n    }\n    eCheckbox.setValue(isSelected);\n    const disabled = params.disabled ?? !column?.isCellEditable(node);\n    eCheckbox.setDisabled(disabled);\n    const translate = this.getLocaleTextFunc();\n    const stateName = _getAriaCheckboxStateName(translate, isSelected);\n    const ariaLabel = disabled ? stateName : `${translate(\"ariaToggleCellValue\", \"Press SPACE to toggle cell value\")} (${stateName})`;\n    eCheckbox.setInputAriaLabel(ariaLabel);\n  }\n  onCheckboxChanged(isSelected) {\n    const { eventSvc, params } = this;\n    const { column, node, value } = params;\n    const sharedEventParams = {\n      column,\n      colDef: column.getColDef(),\n      data: node.data,\n      node,\n      rowIndex: node.rowIndex,\n      rowPinned: node.rowPinned,\n      value\n    };\n    eventSvc.dispatchEvent({\n      type: \"cellEditingStarted\",\n      ...sharedEventParams\n    });\n    const valueChanged = node.setDataValue(column, isSelected, \"edit\");\n    eventSvc.dispatchEvent({\n      type: \"cellEditingStopped\",\n      ...sharedEventParams,\n      oldValue: value,\n      newValue: isSelected,\n      valueChanged\n    });\n    if (!valueChanged) {\n      this.updateCheckbox(params);\n    }\n  }\n};\n\n// packages/ag-grid-community/src/clientSideRowModel/abstractClientSideNodeManager.ts\nvar ROOT_NODE_ID = \"ROOT_NODE_ID\";\nvar AbstractClientSideNodeManager = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.nextId = 0;\n    this.allNodesMap = {};\n    this.rootNode = null;\n  }\n  get treeData() {\n    return false;\n  }\n  getRowNode(id) {\n    return this.allNodesMap[id];\n  }\n  extractRowData() {\n    return this.rootNode?.allLeafChildren?.map((node) => node.data);\n  }\n  activate(rootNode) {\n    this.rootNode = rootNode;\n    rootNode.group = true;\n    rootNode.level = -1;\n    rootNode.id = ROOT_NODE_ID;\n    rootNode.allLeafChildren = [];\n    rootNode.childrenAfterGroup = [];\n    rootNode.childrenAfterSort = [];\n    rootNode.childrenAfterAggFilter = [];\n    rootNode.childrenAfterFilter = [];\n    this.updateRootSiblingArrays(rootNode);\n  }\n  deactivate() {\n    if (this.rootNode) {\n      this.allNodesMap = {};\n      this.rootNode = null;\n    }\n  }\n  destroy() {\n    super.destroy();\n    this.allNodesMap = {};\n    this.rootNode = null;\n  }\n  setNewRowData(rowData) {\n    const rootNode = this.rootNode;\n    if (!rootNode) {\n      return;\n    }\n    this.dispatchRowDataUpdateStartedEvent(rowData);\n    rootNode.childrenAfterFilter = null;\n    rootNode.childrenAfterGroup = null;\n    rootNode.childrenAfterAggFilter = null;\n    rootNode.childrenAfterSort = null;\n    rootNode.childrenMapped = null;\n    rootNode.updateHasChildren();\n    this.allNodesMap = {};\n    this.nextId = 0;\n    this.loadNewRowData(rowData);\n    this.updateRootSiblingArrays(rootNode);\n  }\n  updateRootSiblingArrays(rootNode) {\n    const sibling = rootNode.sibling;\n    if (sibling) {\n      sibling.childrenAfterFilter = rootNode.childrenAfterFilter;\n      sibling.childrenAfterGroup = rootNode.childrenAfterGroup;\n      sibling.childrenAfterAggFilter = rootNode.childrenAfterAggFilter;\n      sibling.childrenAfterSort = rootNode.childrenAfterSort;\n      sibling.childrenMapped = rootNode.childrenMapped;\n      sibling.allLeafChildren = rootNode.allLeafChildren;\n    }\n  }\n  loadNewRowData(rowData) {\n    this.rootNode.allLeafChildren = rowData?.map((dataItem, index) => this.createRowNode(dataItem, index)) ?? [];\n  }\n  setImmutableRowData(params, rowData) {\n    const getRowIdFunc = _getRowIdCallback(this.gos);\n    const reorder = !this.gos.get(\"suppressMaintainUnsortedOrder\");\n    const changedRowNodes = params.changedRowNodes;\n    const processedNodes = /* @__PURE__ */ new Set();\n    const rootNode = this.rootNode;\n    const oldAllLeafChildren = rootNode.allLeafChildren;\n    const oldAllLeafChildrenLen = oldAllLeafChildren.length;\n    let nodesAdded = false;\n    let nodesRemoved = false;\n    let nodesUpdated = false;\n    let orderChanged = false;\n    for (let i = 0, prevSourceRowIndex = -1, len = rowData.length; i < len; i++) {\n      const data = rowData[i];\n      let node = this.getRowNode(\n        getRowIdFunc({ data, level: 0 })\n      );\n      if (!node) {\n        nodesAdded = true;\n        node = this.createRowNode(data, -1);\n        changedRowNodes.add(node);\n      } else {\n        if (reorder) {\n          const sourceRowIndex = node.sourceRowIndex;\n          orderChanged || (orderChanged = sourceRowIndex <= prevSourceRowIndex || // A node was moved up, so order changed\n          nodesAdded);\n          prevSourceRowIndex = sourceRowIndex;\n        }\n        if (node.data !== data) {\n          nodesUpdated = true;\n          node.updateData(data);\n          changedRowNodes.update(node);\n        }\n      }\n      processedNodes.add(node);\n    }\n    const nodesToUnselect = [];\n    for (let i = 0; i < oldAllLeafChildrenLen; i++) {\n      const node = oldAllLeafChildren[i];\n      if (!processedNodes.has(node)) {\n        nodesRemoved = true;\n        if (node.isSelected()) {\n          nodesToUnselect.push(node);\n        }\n        this.rowNodeDeleted(node);\n        changedRowNodes.remove(node);\n      }\n    }\n    if (nodesAdded || nodesRemoved || orderChanged) {\n      const newAllLeafChildren = new Array(processedNodes.size);\n      let writeIdx = 0;\n      if (!reorder) {\n        for (let i = 0; i < oldAllLeafChildrenLen; ++i) {\n          const node = oldAllLeafChildren[i];\n          if (processedNodes.delete(node)) {\n            node.sourceRowIndex = writeIdx;\n            newAllLeafChildren[writeIdx++] = node;\n          }\n        }\n      }\n      for (const node of processedNodes) {\n        node.sourceRowIndex = writeIdx;\n        newAllLeafChildren[writeIdx++] = node;\n      }\n      rootNode.allLeafChildren = newAllLeafChildren;\n      const sibling = rootNode.sibling;\n      if (sibling) {\n        sibling.allLeafChildren = newAllLeafChildren;\n      }\n      params.rowNodesOrderChanged || (params.rowNodesOrderChanged = orderChanged);\n    }\n    if (nodesAdded || nodesRemoved || orderChanged || nodesUpdated) {\n      this.deselectNodes(nodesToUnselect);\n      params.rowDataUpdated = true;\n    }\n  }\n  /** Called when a node needs to be deleted */\n  rowNodeDeleted(node) {\n    node.clearRowTopAndRowIndex();\n    const id = node.id;\n    const allNodesMap = this.allNodesMap;\n    if (allNodesMap[id] === node) {\n      delete allNodesMap[id];\n    }\n  }\n  updateRowData(rowDataTran, changedRowNodes) {\n    this.dispatchRowDataUpdateStartedEvent(rowDataTran.add);\n    const updateRowDataResult = {\n      changedRowNodes,\n      rowNodeTransaction: { remove: [], update: [], add: [] },\n      rowsInserted: false\n    };\n    const nodesToUnselect = [];\n    const getRowIdFunc = _getRowIdCallback(this.gos);\n    this.executeRemove(getRowIdFunc, rowDataTran, updateRowDataResult, nodesToUnselect);\n    this.executeUpdate(getRowIdFunc, rowDataTran, updateRowDataResult, nodesToUnselect);\n    this.executeAdd(rowDataTran, updateRowDataResult);\n    this.deselectNodes(nodesToUnselect);\n    return updateRowDataResult;\n  }\n  executeAdd(rowDataTran, result) {\n    const add = rowDataTran.add;\n    if (!add?.length) {\n      return;\n    }\n    let allLeafChildren = this.rootNode.allLeafChildren;\n    let addIndex = allLeafChildren.length;\n    if (typeof rowDataTran.addIndex === \"number\") {\n      addIndex = this.sanitizeAddIndex(rowDataTran.addIndex);\n      if (addIndex > 0) {\n        const getDataPath = this.gos.get(\"treeData\") && this.gos.get(\"getDataPath\");\n        if (getDataPath) {\n          for (let i = 0; i < allLeafChildren.length; i++) {\n            const node = allLeafChildren[i];\n            if (node?.rowIndex == addIndex - 1) {\n              addIndex = i + 1;\n              break;\n            }\n          }\n        }\n      }\n    }\n    const addLength = add.length;\n    const changedRowNodes = result.changedRowNodes;\n    const newNodes = new Array(addLength);\n    for (let i = 0; i < addLength; i++) {\n      const newNode = this.createRowNode(add[i], addIndex + i);\n      changedRowNodes.add(newNode);\n      newNodes[i] = newNode;\n    }\n    const rootNode = this.rootNode;\n    if (addIndex < allLeafChildren.length) {\n      const nodesBeforeIndex = allLeafChildren.slice(0, addIndex);\n      const nodesAfterIndex = allLeafChildren.slice(addIndex, allLeafChildren.length);\n      const nodesAfterIndexFirstIndex = nodesBeforeIndex.length + newNodes.length;\n      for (let index = 0, length = nodesAfterIndex.length; index < length; ++index) {\n        nodesAfterIndex[index].sourceRowIndex = nodesAfterIndexFirstIndex + index;\n      }\n      allLeafChildren = [...nodesBeforeIndex, ...newNodes, ...nodesAfterIndex];\n      result.rowsInserted = true;\n    } else {\n      allLeafChildren = allLeafChildren.concat(newNodes);\n    }\n    rootNode.allLeafChildren = allLeafChildren;\n    const sibling = rootNode.sibling;\n    if (sibling) {\n      sibling.allLeafChildren = allLeafChildren;\n    }\n    result.rowNodeTransaction.add = newNodes;\n  }\n  executeRemove(getRowIdFunc, rowDataTran, { changedRowNodes, rowNodeTransaction }, nodesToUnselect) {\n    const { remove } = rowDataTran;\n    if (!remove?.length) {\n      return;\n    }\n    const rowIdsRemoved = {};\n    remove.forEach((item) => {\n      const rowNode = this.lookupRowNode(getRowIdFunc, item);\n      if (!rowNode) {\n        return;\n      }\n      if (rowNode.isSelected()) {\n        nodesToUnselect.push(rowNode);\n      }\n      rowNode.clearRowTopAndRowIndex();\n      rowIdsRemoved[rowNode.id] = true;\n      delete this.allNodesMap[rowNode.id];\n      rowNodeTransaction.remove.push(rowNode);\n      changedRowNodes.remove(rowNode);\n    });\n    const rootNode = this.rootNode;\n    rootNode.allLeafChildren = rootNode.allLeafChildren?.filter((rowNode) => !rowIdsRemoved[rowNode.id]) ?? null;\n    rootNode.allLeafChildren?.forEach((node, idx) => {\n      node.sourceRowIndex = idx;\n    });\n    const sibling = rootNode.sibling;\n    if (sibling) {\n      sibling.allLeafChildren = rootNode.allLeafChildren;\n    }\n  }\n  executeUpdate(getRowIdFunc, rowDataTran, { changedRowNodes, rowNodeTransaction }, nodesToUnselect) {\n    const { update } = rowDataTran;\n    if (!update?.length) {\n      return;\n    }\n    update.forEach((item) => {\n      const rowNode = this.lookupRowNode(getRowIdFunc, item);\n      if (!rowNode) {\n        return;\n      }\n      rowNode.updateData(item);\n      if (!rowNode.selectable && rowNode.isSelected()) {\n        nodesToUnselect.push(rowNode);\n      }\n      rowNodeTransaction.update.push(rowNode);\n      changedRowNodes.update(rowNode);\n    });\n  }\n  dispatchRowDataUpdateStartedEvent(rowData) {\n    this.eventSvc.dispatchEvent({\n      type: \"rowDataUpdateStarted\",\n      firstRowData: rowData?.length ? rowData[0] : null\n    });\n  }\n  deselectNodes(nodesToUnselect) {\n    const source = \"rowDataChanged\";\n    const selectionSvc = this.beans.selectionSvc;\n    const selectionChanged = nodesToUnselect.length > 0;\n    if (selectionChanged) {\n      selectionSvc?.setNodesSelected({\n        newValue: false,\n        nodes: nodesToUnselect,\n        suppressFinishActions: true,\n        source\n      });\n    }\n    selectionSvc?.updateGroupsFromChildrenSelections?.(source);\n    if (selectionChanged) {\n      this.eventSvc.dispatchEvent({\n        type: \"selectionChanged\",\n        source\n      });\n    }\n  }\n  sanitizeAddIndex(addIndex) {\n    const allChildrenCount = this.rootNode.allLeafChildren?.length ?? 0;\n    if (addIndex < 0 || addIndex >= allChildrenCount || Number.isNaN(addIndex)) {\n      return allChildrenCount;\n    }\n    return Math.ceil(addIndex);\n  }\n  createRowNode(data, sourceRowIndex) {\n    const node = new RowNode(this.beans);\n    node.parent = this.rootNode;\n    node.level = 0;\n    node.group = false;\n    node.expanded = false;\n    node.sourceRowIndex = sourceRowIndex;\n    node.setDataAndId(data, String(this.nextId));\n    if (this.allNodesMap[node.id]) {\n      _warn(2, { nodeId: node.id });\n    }\n    this.allNodesMap[node.id] = node;\n    this.nextId++;\n    return node;\n  }\n  lookupRowNode(getRowIdFunc, data) {\n    let rowNode;\n    if (getRowIdFunc) {\n      const id = getRowIdFunc({ data, level: 0 });\n      rowNode = this.allNodesMap[id];\n      if (!rowNode) {\n        _error(4, { id });\n        return null;\n      }\n    } else {\n      rowNode = this.rootNode?.allLeafChildren?.find((node) => node.data === data);\n      if (!rowNode) {\n        _error(5, { data });\n        return null;\n      }\n    }\n    return rowNode || null;\n  }\n};\n\n// packages/ag-grid-community/src/interfaces/serverSideTransaction.ts\nvar ServerSideTransactionResultStatus = /* @__PURE__ */ ((ServerSideTransactionResultStatus2) => {\n  ServerSideTransactionResultStatus2[\"Applied\"] = \"Applied\";\n  ServerSideTransactionResultStatus2[\"StoreNotFound\"] = \"StoreNotFound\";\n  ServerSideTransactionResultStatus2[\"StoreLoading\"] = \"StoreLoading\";\n  ServerSideTransactionResultStatus2[\"StoreWaitingToLoad\"] = \"StoreWaitingToLoad\";\n  ServerSideTransactionResultStatus2[\"StoreLoadingFailed\"] = \"StoreLoadingFailed\";\n  ServerSideTransactionResultStatus2[\"StoreWrongType\"] = \"StoreWrongType\";\n  ServerSideTransactionResultStatus2[\"Cancelled\"] = \"Cancelled\";\n  ServerSideTransactionResultStatus2[\"StoreNotStarted\"] = \"StoreNotStarted\";\n  return ServerSideTransactionResultStatus2;\n})(ServerSideTransactionResultStatus || {});\n\n// packages/ag-grid-community/src/selection/checkboxSelectionComponent.ts\nvar CheckboxSelectionComponent = class extends Component {\n  constructor() {\n    super(\n      /* html*/\n      `\n            <div class=\"ag-selection-checkbox\" role=\"presentation\">\n                <ag-checkbox role=\"presentation\" data-ref=\"eCheckbox\"></ag-checkbox>\n            </div>`,\n      [AgCheckboxSelector]\n    );\n    this.eCheckbox = RefPlaceholder;\n  }\n  postConstruct() {\n    this.eCheckbox.setPassive(true);\n  }\n  getCheckboxId() {\n    return this.eCheckbox.getInputElement().id;\n  }\n  onDataChanged() {\n    this.onSelectionChanged();\n  }\n  onSelectableChanged() {\n    this.showOrHideSelect();\n  }\n  onSelectionChanged() {\n    const translate = this.getLocaleTextFunc();\n    const { rowNode, eCheckbox } = this;\n    const state = rowNode.isSelected();\n    const stateName = _getAriaCheckboxStateName(translate, state);\n    const [ariaKey, ariaLabel] = rowNode.selectable ? [\"ariaRowToggleSelection\", \"Press Space to toggle row selection\"] : [\"ariaRowSelectionDisabled\", \"Row Selection is disabled for this row\"];\n    const translatedLabel = translate(ariaKey, ariaLabel);\n    eCheckbox.setValue(state, true);\n    eCheckbox.setInputAriaLabel(`${translatedLabel} (${stateName})`);\n  }\n  init(params) {\n    this.rowNode = params.rowNode;\n    this.column = params.column;\n    this.overrides = params.overrides;\n    this.onSelectionChanged();\n    this.addManagedListeners(this.eCheckbox.getInputElement(), {\n      // we don't want double click on this icon to open a group\n      dblclick: _stopPropagationForAgGrid,\n      click: (event) => {\n        _stopPropagationForAgGrid(event);\n        this.beans.selectionSvc?.handleSelectionEvent(event, this.rowNode, \"checkboxSelected\");\n      }\n    });\n    this.addManagedListeners(this.rowNode, {\n      rowSelected: this.onSelectionChanged.bind(this),\n      dataChanged: this.onDataChanged.bind(this),\n      selectableChanged: this.onSelectableChanged.bind(this)\n    });\n    this.addManagedPropertyListener(\"rowSelection\", ({ currentValue, previousValue }) => {\n      const curr = typeof currentValue === \"object\" ? _getHideDisabledCheckboxes(currentValue) : void 0;\n      const prev = typeof previousValue === \"object\" ? _getHideDisabledCheckboxes(previousValue) : void 0;\n      if (curr !== prev) {\n        this.onSelectableChanged();\n      }\n    });\n    const isRowSelectableFunc = _getIsRowSelectable(this.gos);\n    const checkboxVisibleIsDynamic = isRowSelectableFunc || typeof this.getIsVisible() === \"function\";\n    if (checkboxVisibleIsDynamic) {\n      const showOrHideSelectListener = this.showOrHideSelect.bind(this);\n      this.addManagedEventListeners({ displayedColumnsChanged: showOrHideSelectListener });\n      this.addManagedListeners(this.rowNode, {\n        dataChanged: showOrHideSelectListener,\n        cellChanged: showOrHideSelectListener\n      });\n      this.showOrHideSelect();\n    }\n    this.eCheckbox.getInputElement().setAttribute(\"tabindex\", \"-1\");\n  }\n  showOrHideSelect() {\n    const { column, rowNode, overrides, gos } = this;\n    let selectable = rowNode.selectable;\n    const isVisible = this.getIsVisible();\n    if (selectable) {\n      if (typeof isVisible === \"function\") {\n        const extraParams = overrides?.callbackParams;\n        if (!column) {\n          selectable = isVisible({ ...extraParams, node: rowNode, data: rowNode.data });\n        } else {\n          const params = column.createColumnFunctionCallbackParams(rowNode);\n          selectable = isVisible({ ...extraParams, ...params });\n        }\n      } else {\n        selectable = isVisible ?? false;\n      }\n    }\n    const so = gos.get(\"rowSelection\");\n    const disableInsteadOfHide = so && typeof so !== \"string\" ? !_getHideDisabledCheckboxes(so) : column?.getColDef().showDisabledCheckboxes;\n    if (disableInsteadOfHide) {\n      this.eCheckbox.setDisabled(!selectable);\n      this.setVisible(true);\n      this.setDisplayed(true);\n      return;\n    }\n    if (overrides?.removeHidden) {\n      this.setDisplayed(selectable);\n      return;\n    }\n    this.setVisible(selectable);\n  }\n  getIsVisible() {\n    const overrides = this.overrides;\n    if (overrides) {\n      return overrides.isVisible;\n    }\n    const so = this.gos.get(\"rowSelection\");\n    if (so && typeof so !== \"string\") {\n      return _getCheckboxes(so);\n    }\n    return this.column?.getColDef()?.checkboxSelection;\n  }\n};\n\n// packages/ag-grid-community/src/selection/rowRangeSelectionContext.ts\nvar RowRangeSelectionContext = class {\n  constructor(rowModel) {\n    this.rowModel = rowModel;\n    /** Whether the user is currently selecting all nodes either via the header checkbox or API */\n    this.selectAll = false;\n    this.rootId = null;\n    /**\n     * Note that the \"end\" `RowNode` may come before or after the \"root\" `RowNode` in the\n     * actual grid.\n     */\n    this.endId = null;\n    this.cachedRange = [];\n  }\n  reset() {\n    this.rootId = null;\n    this.endId = null;\n    this.cachedRange.length = 0;\n  }\n  setRoot(node) {\n    this.rootId = node.id;\n    this.endId = null;\n    this.cachedRange.length = 0;\n  }\n  setEndRange(end) {\n    this.endId = end.id;\n    this.cachedRange.length = 0;\n  }\n  getRange() {\n    if (this.cachedRange.length === 0) {\n      const root = this.getRoot();\n      const end = this.getEnd();\n      if (root == null || end == null) {\n        return this.cachedRange;\n      }\n      this.cachedRange = this.rowModel.getNodesInRangeForSelection(root, end) ?? [];\n    }\n    return this.cachedRange;\n  }\n  isInRange(node) {\n    if (this.rootId === null) {\n      return false;\n    }\n    return this.getRange().some((nodeInRange) => nodeInRange.id === node.id);\n  }\n  getRoot(fallback) {\n    if (this.rootId) {\n      return this.rowModel.getRowNode(this.rootId) ?? null;\n    }\n    if (fallback) {\n      this.setRoot(fallback);\n      return fallback;\n    }\n    return null;\n  }\n  getEnd() {\n    if (this.endId) {\n      return this.rowModel.getRowNode(this.endId) ?? null;\n    }\n    return null;\n  }\n  /**\n   * Truncates the range to the given node (assumed to be within the current range).\n   * Returns nodes that remain in the current range and those that should be removed\n   *\n   * @param node - Node at which to truncate the range\n   * @returns Object of nodes to either keep or discard (i.e. deselect) from the range\n   */\n  truncate(node) {\n    const range = this.getRange();\n    if (range.length === 0) {\n      return { keep: [], discard: [] };\n    }\n    const discardAfter = range[0].id === this.rootId;\n    const idx = range.findIndex((rowNode) => rowNode.id === node.id);\n    if (idx > -1) {\n      const above = range.slice(0, idx);\n      const below = range.slice(idx + 1);\n      this.setEndRange(node);\n      return discardAfter ? { keep: above, discard: below } : { keep: below, discard: above };\n    } else {\n      return { keep: range, discard: [] };\n    }\n  }\n  /**\n   * Extends the range to the given node. Returns nodes that remain in the current range\n   * and those that should be removed.\n   *\n   * @param node - Node marking the new end of the range\n   * @returns Object of nodes to either keep or discard (i.e. deselect) from the range\n   */\n  extend(node, groupSelectsChildren = false) {\n    const root = this.getRoot();\n    if (root == null) {\n      const keep = this.getRange().slice();\n      if (groupSelectsChildren) {\n        node.depthFirstSearch((node2) => !node2.group && keep.push(node2));\n      }\n      keep.push(node);\n      this.setRoot(node);\n      return { keep, discard: [] };\n    }\n    const newRange = this.rowModel.getNodesInRangeForSelection(root, node);\n    if (!newRange) {\n      this.setRoot(node);\n      return { keep: [node], discard: [] };\n    }\n    if (newRange.find((newRangeNode) => newRangeNode.id === this.endId)) {\n      this.setEndRange(node);\n      return { keep: this.getRange(), discard: [] };\n    } else {\n      const discard = this.getRange().slice();\n      this.setEndRange(node);\n      return { keep: this.getRange(), discard };\n    }\n  }\n};\n\n// packages/ag-grid-community/src/selection/selectAllFeature.ts\nvar SelectAllFeature = class extends BeanStub {\n  constructor(column) {\n    super();\n    this.column = column;\n    this.cbSelectAllVisible = false;\n    this.processingEventFromCheckbox = false;\n  }\n  onSpaceKeyDown(e) {\n    const checkbox = this.cbSelectAll;\n    if (checkbox.isDisplayed() && !checkbox.getGui().contains(_getActiveDomElement(this.beans))) {\n      e.preventDefault();\n      checkbox.setValue(!checkbox.getValue());\n    }\n  }\n  getCheckboxGui() {\n    return this.cbSelectAll.getGui();\n  }\n  setComp(ctrl) {\n    this.headerCellCtrl = ctrl;\n    const cbSelectAll = this.createManagedBean(new AgCheckbox());\n    this.cbSelectAll = cbSelectAll;\n    cbSelectAll.addCssClass(\"ag-header-select-all\");\n    _setAriaRole(cbSelectAll.getGui(), \"presentation\");\n    this.showOrHideSelectAll();\n    this.addManagedEventListeners({\n      newColumnsLoaded: () => this.showOrHideSelectAll(),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      selectionChanged: this.onSelectionChanged.bind(this),\n      paginationChanged: this.onSelectionChanged.bind(this),\n      modelUpdated: this.onModelChanged.bind(this)\n    });\n    this.addManagedPropertyListener(\"rowSelection\", ({ currentValue, previousValue }) => {\n      const getSelectAll = (rowSelection) => typeof rowSelection === \"string\" || !rowSelection || rowSelection.mode === \"singleRow\" ? void 0 : rowSelection.selectAll;\n      if (getSelectAll(currentValue) !== getSelectAll(previousValue)) {\n        this.showOrHideSelectAll();\n      }\n    });\n    this.addManagedListeners(cbSelectAll, { fieldValueChanged: this.onCbSelectAll.bind(this) });\n    cbSelectAll.getInputElement().setAttribute(\"tabindex\", \"-1\");\n    this.refreshSelectAllLabel();\n  }\n  onDisplayedColumnsChanged(e) {\n    if (!this.isAlive()) {\n      return;\n    }\n    this.showOrHideSelectAll(e.source === \"uiColumnMoved\");\n  }\n  showOrHideSelectAll(fromColumnMoved = false) {\n    const cbSelectAllVisible = this.isCheckboxSelection();\n    this.cbSelectAllVisible = cbSelectAllVisible;\n    this.cbSelectAll.setDisplayed(cbSelectAllVisible);\n    if (cbSelectAllVisible) {\n      this.checkRightRowModelType(\"selectAllCheckbox\");\n      this.checkSelectionType(\"selectAllCheckbox\");\n      this.updateStateOfCheckbox();\n    }\n    this.refreshSelectAllLabel(fromColumnMoved);\n  }\n  onModelChanged() {\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n    this.updateStateOfCheckbox();\n  }\n  onSelectionChanged() {\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n    this.updateStateOfCheckbox();\n  }\n  updateStateOfCheckbox() {\n    if (this.processingEventFromCheckbox) {\n      return;\n    }\n    this.processingEventFromCheckbox = true;\n    const selectAllMode = this.getSelectAllMode();\n    const selectionSvc = this.beans.selectionSvc;\n    const cbSelectAll = this.cbSelectAll;\n    const allSelected = selectionSvc.getSelectAllState(selectAllMode);\n    cbSelectAll.setValue(allSelected);\n    const hasNodesToSelect = selectionSvc.hasNodesToSelect(selectAllMode);\n    cbSelectAll.setDisabled(!hasNodesToSelect);\n    this.refreshSelectAllLabel();\n    this.processingEventFromCheckbox = false;\n  }\n  refreshSelectAllLabel(fromColumnMoved = false) {\n    const translate = this.getLocaleTextFunc();\n    const { headerCellCtrl, cbSelectAll, cbSelectAllVisible } = this;\n    const checked = cbSelectAll.getValue();\n    const ariaStatus = checked ? translate(\"ariaChecked\", \"checked\") : translate(\"ariaUnchecked\", \"unchecked\");\n    const ariaLabel = translate(\"ariaRowSelectAll\", \"Press Space to toggle all rows selection\");\n    headerCellCtrl.setAriaDescriptionProperty(\n      \"selectAll\",\n      cbSelectAllVisible ? `${ariaLabel} (${ariaStatus})` : null\n    );\n    cbSelectAll.setInputAriaLabel(translate(\"ariaHeaderSelection\", \"Column with Header Selection\"));\n    if (!fromColumnMoved) {\n      headerCellCtrl.announceAriaDescription();\n    }\n  }\n  checkSelectionType(feature) {\n    const isMultiSelect = _isMultiRowSelection(this.gos);\n    if (!isMultiSelect) {\n      _warn(128, { feature });\n      return false;\n    }\n    return true;\n  }\n  checkRightRowModelType(feature) {\n    const { gos, rowModel } = this.beans;\n    const rowModelMatches = _isClientSideRowModel(gos) || _isServerSideRowModel(gos);\n    if (!rowModelMatches) {\n      _warn(129, { feature, rowModel: rowModel.getType() });\n      return false;\n    }\n    return true;\n  }\n  onCbSelectAll() {\n    if (this.processingEventFromCheckbox) {\n      return;\n    }\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n    const value = this.cbSelectAll.getValue();\n    const selectAll2 = this.getSelectAllMode();\n    let source = \"uiSelectAll\";\n    if (selectAll2 === \"currentPage\") {\n      source = \"uiSelectAllCurrentPage\";\n    } else if (selectAll2 === \"filtered\") {\n      source = \"uiSelectAllFiltered\";\n    }\n    const params = { source, selectAll: selectAll2 };\n    const selectionSvc = this.beans.selectionSvc;\n    if (value) {\n      selectionSvc.selectAllRowNodes(params);\n    } else {\n      selectionSvc.deselectAllRowNodes(params);\n    }\n  }\n  /**\n   * Checkbox is enabled when either the `headerCheckbox` option is enabled in the new selection API\n   * or `headerCheckboxSelection` is enabled in the legacy API.\n   */\n  isCheckboxSelection() {\n    const { column, gos, beans } = this;\n    const rowSelection = gos.get(\"rowSelection\");\n    const colDef = column.getColDef();\n    const { headerCheckboxSelection } = colDef;\n    let result = false;\n    const newHeaderCheckbox = typeof rowSelection === \"object\";\n    if (newHeaderCheckbox) {\n      const isSelectionCol = isColumnSelectionCol(column);\n      const isAutoCol = isColumnGroupAutoCol(column);\n      const location = _getCheckboxLocation(rowSelection);\n      if (location === \"autoGroupColumn\" && isAutoCol || isSelectionCol && beans.selectionColSvc?.isSelectionColumnEnabled()) {\n        result = _getHeaderCheckbox(rowSelection);\n      }\n    } else {\n      if (typeof headerCheckboxSelection === \"function\") {\n        result = headerCheckboxSelection(_addGridCommonParams(gos, { column, colDef }));\n      } else {\n        result = !!headerCheckboxSelection;\n      }\n    }\n    const featureName = newHeaderCheckbox ? \"headerCheckbox\" : \"headerCheckboxSelection\";\n    return result && this.checkRightRowModelType(featureName) && this.checkSelectionType(featureName);\n  }\n  getSelectAllMode() {\n    const selectAll2 = _getSelectAll(this.gos, false);\n    if (selectAll2) {\n      return selectAll2;\n    }\n    const { headerCheckboxSelectionCurrentPageOnly, headerCheckboxSelectionFilteredOnly } = this.column.getColDef();\n    if (headerCheckboxSelectionCurrentPageOnly) {\n      return \"currentPage\";\n    }\n    if (headerCheckboxSelectionFilteredOnly) {\n      return \"filtered\";\n    }\n    return \"all\";\n  }\n};\n\n// packages/ag-grid-community/src/selection/baseSelectionService.ts\nvar BaseSelectionService = class extends BeanStub {\n  postConstruct() {\n    const { gos, beans } = this;\n    this.selectionCtx = new RowRangeSelectionContext(beans.rowModel);\n    this.addManagedPropertyListeners([\"isRowSelectable\", \"rowSelection\"], () => {\n      const callback = _getIsRowSelectable(gos);\n      if (callback !== this.isRowSelectable) {\n        this.isRowSelectable = callback;\n        this.updateSelectable();\n      }\n    });\n    this.isRowSelectable = _getIsRowSelectable(gos);\n  }\n  destroy() {\n    super.destroy();\n    this.selectionCtx.reset();\n  }\n  createCheckboxSelectionComponent() {\n    return new CheckboxSelectionComponent();\n  }\n  createSelectAllFeature(column) {\n    return new SelectAllFeature(column);\n  }\n  isMultiSelect() {\n    return _isMultiRowSelection(this.gos);\n  }\n  onRowCtrlSelected(rowCtrl, hasFocusFunc, gui) {\n    const selected = !!rowCtrl.rowNode.isSelected();\n    rowCtrl.forEachGui(gui, (gui2) => {\n      gui2.rowComp.addOrRemoveCssClass(\"ag-row-selected\", selected);\n      const element = gui2.element;\n      _setAriaSelected(element, selected);\n      const hasFocus = element.contains(_getActiveDomElement(this.beans));\n      if (hasFocus) {\n        hasFocusFunc(gui2);\n      }\n    });\n  }\n  announceAriaRowSelection(rowNode) {\n    if (this.isRowSelectionBlocked(rowNode)) {\n      return;\n    }\n    const selected = rowNode.isSelected();\n    if (!rowNode.selectable) {\n      return;\n    }\n    const translate = this.getLocaleTextFunc();\n    const label = translate(\n      selected ? \"ariaRowDeselect\" : \"ariaRowSelect\",\n      `Press SPACE to ${selected ? \"deselect\" : \"select\"} this row`\n    );\n    this.beans.ariaAnnounce?.announceValue(label, \"rowSelection\");\n  }\n  dispatchSelectionChanged(source) {\n    this.eventSvc.dispatchEvent({\n      type: \"selectionChanged\",\n      source\n    });\n  }\n  isRowSelectionBlocked(rowNode) {\n    return !rowNode.selectable || !!rowNode.rowPinned || !_isRowSelection(this.gos);\n  }\n  updateRowSelectable(rowNode, suppressSelectionUpdate) {\n    const selectable = this.isRowSelectable?.(rowNode) ?? true;\n    this.setRowSelectable(rowNode, selectable, suppressSelectionUpdate);\n    return selectable;\n  }\n  setRowSelectable(rowNode, newVal, suppressSelectionUpdate) {\n    if (rowNode.selectable !== newVal) {\n      rowNode.selectable = newVal;\n      rowNode.dispatchRowEvent(\"selectableChanged\");\n      if (suppressSelectionUpdate) {\n        return;\n      }\n      const isGroupSelectsChildren = _getGroupSelectsDescendants(this.gos);\n      if (isGroupSelectsChildren) {\n        const selected = this.calculateSelectedFromChildren(rowNode);\n        this.setNodesSelected({ nodes: [rowNode], newValue: selected ?? false, source: \"selectableChanged\" });\n        return;\n      }\n      if (rowNode.isSelected() && !rowNode.selectable) {\n        this.setNodesSelected({ nodes: [rowNode], newValue: false, source: \"selectableChanged\" });\n      }\n    }\n  }\n  calculateSelectedFromChildren(rowNode) {\n    let atLeastOneSelected = false;\n    let atLeastOneDeSelected = false;\n    if (!rowNode.childrenAfterGroup?.length) {\n      return rowNode.selectable ? rowNode.__selected : null;\n    }\n    for (let i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n      const child = rowNode.childrenAfterGroup[i];\n      let childState = child.isSelected();\n      if (!child.selectable) {\n        const selectable = this.calculateSelectedFromChildren(child);\n        if (selectable === null) {\n          continue;\n        }\n        childState = selectable;\n      }\n      switch (childState) {\n        case true:\n          atLeastOneSelected = true;\n          break;\n        case false:\n          atLeastOneDeSelected = true;\n          break;\n        default:\n          return void 0;\n      }\n    }\n    if (atLeastOneSelected && atLeastOneDeSelected) {\n      return void 0;\n    }\n    if (atLeastOneSelected) {\n      return true;\n    }\n    if (atLeastOneDeSelected) {\n      return false;\n    }\n    if (!rowNode.selectable) {\n      return null;\n    }\n    return rowNode.__selected;\n  }\n  selectRowNode(rowNode, newValue, e, source = \"api\") {\n    const selectionNotAllowed = !rowNode.selectable && newValue;\n    const selectionNotChanged = rowNode.__selected === newValue;\n    if (selectionNotAllowed || selectionNotChanged) {\n      return false;\n    }\n    rowNode.__selected = newValue;\n    rowNode.dispatchRowEvent(\"rowSelected\");\n    const sibling = rowNode.sibling;\n    if (sibling && sibling.footer && sibling.__localEventService) {\n      sibling.dispatchRowEvent(\"rowSelected\");\n    }\n    this.eventSvc.dispatchEvent({\n      ..._createGlobalRowEvent(rowNode, this.gos, \"rowSelected\"),\n      event: e || null,\n      source\n    });\n    return true;\n  }\n  isCellCheckboxSelection(column, rowNode) {\n    const so = this.gos.get(\"rowSelection\");\n    if (so && typeof so !== \"string\") {\n      const checkbox = isColumnSelectionCol(column) && _getCheckboxes(so);\n      return column.isColumnFunc(rowNode, checkbox);\n    } else {\n      return column.isColumnFunc(rowNode, column.colDef.checkboxSelection);\n    }\n  }\n  inferNodeSelections(node, shiftKey, metaKey, source) {\n    const { gos, selectionCtx } = this;\n    const currentSelection = node.isSelected();\n    const groupSelectsDescendants = _getGroupSelectsDescendants(gos);\n    const enableClickSelection = _getEnableSelection(gos);\n    const enableDeselection = _getEnableDeselection(gos);\n    const isMultiSelect = this.isMultiSelect();\n    const isRowClicked = source === \"rowClicked\";\n    if (isRowClicked && groupSelectsDescendants && node.group)\n      return null;\n    if (isRowClicked && !(enableClickSelection || enableDeselection))\n      return null;\n    if (shiftKey && metaKey && isMultiSelect) {\n      const root = selectionCtx.getRoot();\n      if (!root) {\n        return null;\n      } else if (!root.isSelected()) {\n        const partition = selectionCtx.extend(node, groupSelectsDescendants);\n        return {\n          select: [],\n          deselect: partition.keep,\n          reset: false\n        };\n      } else {\n        const partition = selectionCtx.isInRange(node) ? selectionCtx.truncate(node) : selectionCtx.extend(node, groupSelectsDescendants);\n        return {\n          deselect: partition.discard,\n          select: partition.keep,\n          reset: false\n        };\n      }\n    } else if (shiftKey && isMultiSelect) {\n      const fallback = selectionCtx.selectAll ? this.beans.rowModel.getRow(0) : void 0;\n      const root = selectionCtx.getRoot(fallback);\n      const partition = selectionCtx.isInRange(node) ? selectionCtx.truncate(node) : selectionCtx.extend(node, groupSelectsDescendants);\n      return {\n        select: partition.keep,\n        deselect: partition.discard,\n        reset: selectionCtx.selectAll || !!(root && !root.isSelected())\n      };\n    } else if (metaKey) {\n      selectionCtx.setRoot(node);\n      if (isRowClicked && currentSelection && !enableDeselection) {\n        return null;\n      }\n      return {\n        node,\n        newValue: !currentSelection,\n        clearSelection: !isMultiSelect\n      };\n    } else {\n      selectionCtx.setRoot(node);\n      const enableSelectionWithoutKeys = _getEnableSelectionWithoutKeys(gos);\n      const groupSelectsFiltered = _getGroupSelection(gos) === \"filteredDescendants\";\n      const shouldClear = isRowClicked && (!enableSelectionWithoutKeys || !enableClickSelection);\n      if (groupSelectsFiltered && currentSelection === void 0 && _isClientSideRowModel(gos)) {\n        return {\n          node,\n          newValue: false,\n          clearSelection: !isMultiSelect || shouldClear\n        };\n      }\n      if (isRowClicked) {\n        const newValue = currentSelection ? !enableSelectionWithoutKeys : enableClickSelection;\n        const selectingWhenDisabled = newValue && !enableClickSelection;\n        const deselectingWhenDisabled = !newValue && !enableDeselection;\n        const wouldStateBeUnchanged = newValue === currentSelection && !shouldClear;\n        if (wouldStateBeUnchanged || selectingWhenDisabled || deselectingWhenDisabled)\n          return null;\n        return {\n          node,\n          newValue,\n          clearSelection: !isMultiSelect || shouldClear\n        };\n      }\n      return {\n        node,\n        newValue: !currentSelection,\n        clearSelection: !isMultiSelect || shouldClear\n      };\n    }\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agRadioButton.ts\nvar AgRadioButton = class extends AgCheckbox {\n  constructor(config) {\n    super(config, \"ag-radio-button\", \"radio\");\n  }\n  isSelected() {\n    return this.eInput.checked;\n  }\n  toggle() {\n    if (this.eInput.disabled) {\n      return;\n    }\n    if (!this.isSelected()) {\n      this.setValue(true);\n    }\n  }\n  addInputListeners() {\n    super.addInputListeners();\n    this.addManagedEventListeners({ checkboxChanged: this.onChange.bind(this) });\n  }\n  /**\n   * This ensures that if another radio button in the same named group is selected, we deselect this radio button.\n   * By default the browser does this for you, but we are managing classes ourselves in order to ensure input\n   * elements are styled correctly in IE11, and the DOM 'changed' event is only fired when a button is selected,\n   * not deselected, so we need to use our own event.\n   */\n  onChange(event) {\n    const eInput = this.eInput;\n    if (event.selected && event.name && eInput.name && eInput.name === event.name && event.id && eInput.id !== event.id) {\n      this.setValue(false, true);\n    }\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agToggleButton.css-GENERATED.ts\nvar agToggleButtonCSS = (\n  /*css*/\n  `.ag-toggle-button{flex:none;min-width:unset;width:unset}.ag-toggle-button-input-wrapper{background-color:var(--ag-toggle-button-off-background-color);border-radius:calc(var(--ag-toggle-button-height)*.5);flex:none;height:var(--ag-toggle-button-height);max-width:var(--ag-toggle-button-width);min-width:var(--ag-toggle-button-width);position:relative;transition:background-color .1s;:where(.ag-toggle-button-input){-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;display:block;height:var(--ag-toggle-button-height);margin:0;max-width:var(--ag-toggle-button-width);min-width:var(--ag-toggle-button-width);opacity:0}&:before{background-color:var(--ag-toggle-button-switch-background-color);border-radius:100%;content:\"\";display:block;height:calc(var(--ag-toggle-button-height) - var(--ag-toggle-button-switch-inset)*2);left:var(--ag-toggle-button-switch-inset);pointer-events:none;position:absolute;top:var(--ag-toggle-button-switch-inset);transition:left .1s;width:calc(var(--ag-toggle-button-height) - var(--ag-toggle-button-switch-inset)*2)}&.ag-checked{background-color:var(--ag-toggle-button-on-background-color);&:before{left:calc(100% - var(--ag-toggle-button-height) + var(--ag-toggle-button-switch-inset))}}&:focus-within{box-shadow:var(--ag-focus-shadow)}&.ag-disabled{opacity:.5}}`\n);\n\n// packages/ag-grid-community/src/widgets/agToggleButton.ts\nvar AgToggleButton = class extends AgCheckbox {\n  constructor(config) {\n    super(config, \"ag-toggle-button\");\n    this.registerCSS(agToggleButtonCSS);\n  }\n  setValue(value, silent) {\n    super.setValue(value, silent);\n    this.addOrRemoveCssClass(\"ag-selected\", this.getValue());\n    return this;\n  }\n};\nvar AgToggleButtonSelector = {\n  selector: \"AG-TOGGLE-BUTTON\",\n  component: AgToggleButton\n};\n\n// packages/ag-grid-community/src/widgets/agInputTextField.ts\nvar AgInputTextField = class extends AgAbstractInputField {\n  constructor(config, className = \"ag-text-field\", inputType = \"text\") {\n    super(config, className, inputType);\n  }\n  postConstruct() {\n    super.postConstruct();\n    if (this.config.allowedCharPattern) {\n      this.preventDisallowedCharacters();\n    }\n  }\n  setValue(value, silent) {\n    const eInput = this.eInput;\n    if (eInput.value !== value) {\n      eInput.value = _exists(value) ? value : \"\";\n    }\n    return super.setValue(value, silent);\n  }\n  /** Used to set an initial value into the input without necessarily setting `this.value` or triggering events (e.g. to set an invalid value) */\n  setStartValue(value) {\n    this.setValue(value, true);\n  }\n  preventDisallowedCharacters() {\n    const pattern = new RegExp(`[${this.config.allowedCharPattern}]`);\n    const preventCharacters = (event) => {\n      if (!_isEventFromPrintableCharacter(event)) {\n        return;\n      }\n      if (event.key && !pattern.test(event.key)) {\n        event.preventDefault();\n      }\n    };\n    this.addManagedListeners(this.eInput, {\n      keydown: preventCharacters,\n      paste: (e) => {\n        const text = e.clipboardData?.getData(\"text\");\n        if (text && text.split(\"\").some((c) => !pattern.test(c))) {\n          e.preventDefault();\n        }\n      }\n    });\n  }\n};\nvar AgInputTextFieldSelector = {\n  selector: \"AG-INPUT-TEXT-FIELD\",\n  component: AgInputTextField\n};\n\n// packages/ag-grid-community/src/widgets/agInputTextArea.ts\nvar AgInputTextArea = class extends AgAbstractInputField {\n  constructor(config) {\n    super(config, \"ag-text-area\", null, \"textarea\");\n  }\n  setValue(value, silent) {\n    const ret = super.setValue(value, silent);\n    this.eInput.value = value;\n    return ret;\n  }\n  setCols(cols) {\n    this.eInput.cols = cols;\n    return this;\n  }\n  setRows(rows) {\n    this.eInput.rows = rows;\n    return this;\n  }\n};\nvar AgInputTextAreaSelector = {\n  selector: \"AG-INPUT-TEXT-AREA\",\n  component: AgInputTextArea\n};\n\n// packages/ag-grid-community/src/widgets/agInputNumberField.ts\nvar AgInputNumberField = class extends AgInputTextField {\n  constructor(config) {\n    super(config, \"ag-number-field\", \"number\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    const eInput = this.eInput;\n    this.addManagedListeners(eInput, {\n      blur: () => {\n        const floatedValue = parseFloat(eInput.value);\n        const value = isNaN(floatedValue) ? \"\" : this.normalizeValue(floatedValue.toString());\n        if (this.value !== value) {\n          this.setValue(value);\n        }\n      },\n      wheel: this.onWheel.bind(this)\n    });\n    eInput.step = \"any\";\n    const { precision, min, max, step } = this.config;\n    if (typeof precision === \"number\")\n      this.setPrecision(precision);\n    if (typeof min === \"number\")\n      this.setMin(min);\n    if (typeof max === \"number\")\n      this.setMax(max);\n    if (typeof step === \"number\")\n      this.setStep(step);\n  }\n  onWheel(e) {\n    if (_getActiveDomElement(this.beans) === this.eInput) {\n      e.preventDefault();\n    }\n  }\n  normalizeValue(value) {\n    if (value === \"\") {\n      return \"\";\n    }\n    if (this.precision != null) {\n      value = this.adjustPrecision(value);\n    }\n    const val = parseFloat(value);\n    const { min, max } = this;\n    if (min != null && val < min) {\n      value = min.toString();\n    } else if (max != null && val > max) {\n      value = max.toString();\n    }\n    return value;\n  }\n  adjustPrecision(value, isScientificNotation) {\n    const precision = this.precision;\n    if (precision == null) {\n      return value;\n    }\n    if (isScientificNotation) {\n      const floatString = parseFloat(value).toFixed(precision);\n      return parseFloat(floatString).toString();\n    }\n    const parts = String(value).split(\".\");\n    if (parts.length > 1) {\n      if (parts[1].length <= precision) {\n        return value;\n      } else if (precision > 0) {\n        return `${parts[0]}.${parts[1].slice(0, precision)}`;\n      }\n    }\n    return parts[0];\n  }\n  setMin(min) {\n    if (this.min === min) {\n      return this;\n    }\n    this.min = min;\n    _addOrRemoveAttribute(this.eInput, \"min\", min);\n    return this;\n  }\n  setMax(max) {\n    if (this.max === max) {\n      return this;\n    }\n    this.max = max;\n    _addOrRemoveAttribute(this.eInput, \"max\", max);\n    return this;\n  }\n  setPrecision(precision) {\n    this.precision = precision;\n    return this;\n  }\n  setStep(step) {\n    if (this.step === step) {\n      return this;\n    }\n    this.step = step;\n    _addOrRemoveAttribute(this.eInput, \"step\", step);\n    return this;\n  }\n  setValue(value, silent) {\n    return this.setValueOrInputValue(\n      (v) => super.setValue(v, silent),\n      () => this,\n      value\n    );\n  }\n  setStartValue(value) {\n    return this.setValueOrInputValue(\n      (v) => super.setValue(v, true),\n      (v) => {\n        this.eInput.value = v;\n      },\n      value\n    );\n  }\n  setValueOrInputValue(setValueFunc, setInputValueOnlyFunc, value) {\n    if (_exists(value)) {\n      let setInputValueOnly = this.isScientificNotation(value);\n      if (setInputValueOnly && this.eInput.validity.valid) {\n        return setValueFunc(value);\n      }\n      if (!setInputValueOnly) {\n        value = this.adjustPrecision(value);\n        const normalizedValue = this.normalizeValue(value);\n        setInputValueOnly = value != normalizedValue;\n      }\n      if (setInputValueOnly) {\n        return setInputValueOnlyFunc(value);\n      }\n    }\n    return setValueFunc(value);\n  }\n  getValue() {\n    const eInput = this.eInput;\n    if (!eInput.validity.valid) {\n      return void 0;\n    }\n    const inputValue = eInput.value;\n    if (this.isScientificNotation(inputValue)) {\n      return this.adjustPrecision(inputValue, true);\n    }\n    return super.getValue();\n  }\n  isScientificNotation(value) {\n    return typeof value === \"string\" && value.includes(\"e\");\n  }\n};\nvar AgInputNumberFieldSelector = {\n  selector: \"AG-INPUT-NUMBER-FIELD\",\n  component: AgInputNumberField\n};\n\n// packages/ag-grid-community/src/utils/date.ts\nfunction _padStartWidthZeros(value, totalStringSize) {\n  return value.toString().padStart(totalStringSize, \"0\");\n}\nfunction _serialiseDate(date, includeTime = true, separator = \"-\") {\n  if (!date) {\n    return null;\n  }\n  let serialised = [date.getFullYear(), date.getMonth() + 1, date.getDate()].map((part) => _padStartWidthZeros(part, 2)).join(separator);\n  if (includeTime) {\n    serialised += \" \" + [date.getHours(), date.getMinutes(), date.getSeconds()].map((part) => _padStartWidthZeros(part, 2)).join(\":\");\n  }\n  return serialised;\n}\nvar calculateOrdinal = (value) => {\n  if (value > 3 && value < 21) {\n    return \"th\";\n  }\n  const remainder = value % 10;\n  switch (remainder) {\n    case 1:\n      return \"st\";\n    case 2:\n      return \"nd\";\n    case 3:\n      return \"rd\";\n  }\n  return \"th\";\n};\nfunction _dateToFormattedString(date, format = \"YYYY-MM-DD\") {\n  const fullYear = _padStartWidthZeros(date.getFullYear(), 4);\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const replace = {\n    YYYY: () => fullYear.slice(fullYear.length - 4, fullYear.length),\n    YY: () => fullYear.slice(fullYear.length - 2, fullYear.length),\n    Y: () => `${date.getFullYear()}`,\n    MMMM: () => months[date.getMonth()],\n    MMM: () => months[date.getMonth()].slice(0, 3),\n    MM: () => _padStartWidthZeros(date.getMonth() + 1, 2),\n    Mo: () => `${date.getMonth() + 1}${calculateOrdinal(date.getMonth() + 1)}`,\n    M: () => `${date.getMonth() + 1}`,\n    Do: () => `${date.getDate()}${calculateOrdinal(date.getDate())}`,\n    DD: () => _padStartWidthZeros(date.getDate(), 2),\n    D: () => `${date.getDate()}`,\n    dddd: () => days[date.getDay()],\n    ddd: () => days[date.getDay()].slice(0, 3),\n    dd: () => days[date.getDay()].slice(0, 2),\n    do: () => `${date.getDay()}${calculateOrdinal(date.getDay())}`,\n    d: () => `${date.getDay()}`\n  };\n  const regexp = new RegExp(Object.keys(replace).join(\"|\"), \"g\");\n  return format.replace(regexp, (match) => {\n    if (match in replace) {\n      return replace[match]();\n    }\n    return match;\n  });\n}\nfunction _parseDateTimeFromString(value) {\n  if (!value) {\n    return null;\n  }\n  const [dateStr, timeStr] = value.split(\" \");\n  if (!dateStr) {\n    return null;\n  }\n  const fields = dateStr.split(\"-\").map((f) => parseInt(f, 10));\n  if (fields.filter((f) => !isNaN(f)).length !== 3) {\n    return null;\n  }\n  const [year, month, day] = fields;\n  const date = new Date(year, month - 1, day);\n  if (date.getFullYear() !== year || date.getMonth() !== month - 1 || date.getDate() !== day) {\n    return null;\n  }\n  if (!timeStr || timeStr === \"00:00:00\") {\n    return date;\n  }\n  const [hours, minutes, seconds] = timeStr.split(\":\").map((part) => parseInt(part, 10));\n  if (hours >= 0 && hours < 24) {\n    date.setHours(hours);\n  }\n  if (minutes >= 0 && minutes < 60) {\n    date.setMinutes(minutes);\n  }\n  if (seconds >= 0 && seconds < 60) {\n    date.setSeconds(seconds);\n  }\n  return date;\n}\n\n// packages/ag-grid-community/src/widgets/agInputDateField.ts\nvar AgInputDateField = class extends AgInputTextField {\n  constructor(config) {\n    super(config, \"ag-date-field\", \"date\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    const usingSafari = _isBrowserSafari();\n    this.addManagedListeners(this.eInput, {\n      wheel: this.onWheel.bind(this),\n      mousedown: () => {\n        if (this.isDisabled() || usingSafari) {\n          return;\n        }\n        this.eInput.focus();\n      }\n    });\n    this.eInput.step = \"any\";\n  }\n  onWheel(e) {\n    if (_getActiveDomElement(this.beans) === this.eInput) {\n      e.preventDefault();\n    }\n  }\n  setMin(minDate) {\n    const min = minDate instanceof Date ? _serialiseDate(minDate ?? null, false) ?? void 0 : minDate;\n    if (this.min === min) {\n      return this;\n    }\n    this.min = min;\n    _addOrRemoveAttribute(this.eInput, \"min\", min);\n    return this;\n  }\n  setMax(maxDate) {\n    const max = maxDate instanceof Date ? _serialiseDate(maxDate ?? null, false) ?? void 0 : maxDate;\n    if (this.max === max) {\n      return this;\n    }\n    this.max = max;\n    _addOrRemoveAttribute(this.eInput, \"max\", max);\n    return this;\n  }\n  setStep(step) {\n    if (this.step === step) {\n      return this;\n    }\n    this.step = step;\n    _addOrRemoveAttribute(this.eInput, \"step\", step);\n    return this;\n  }\n  getDate() {\n    if (!this.eInput.validity.valid) {\n      return void 0;\n    }\n    return _parseDateTimeFromString(this.getValue()) ?? void 0;\n  }\n  setDate(date, silent) {\n    this.setValue(_serialiseDate(date ?? null, false), silent);\n  }\n};\nvar AgInputDateFieldSelector = {\n  selector: \"AG-INPUT-DATE-FIELD\",\n  component: AgInputDateField\n};\n\n// packages/ag-grid-community/src/tooltip/tooltipStateManager.ts\nvar SHOW_QUICK_TOOLTIP_DIFF = 1e3;\nvar FADE_OUT_TOOLTIP_TIMEOUT = 1e3;\nvar INTERACTIVE_HIDE_DELAY = 100;\nvar lastTooltipHideTime;\nvar isLocked = false;\nvar TooltipStateManager = class extends BeanStub {\n  constructor(tooltipCtrl, getTooltipValue) {\n    super();\n    this.tooltipCtrl = tooltipCtrl;\n    this.getTooltipValue = getTooltipValue;\n    this.interactionEnabled = false;\n    this.isInteractingWithTooltip = false;\n    this.state = 0 /* NOTHING */;\n    // when showing the tooltip, we need to make sure it's the most recent instance we request, as due to\n    // async we could request two tooltips before the first instance returns, in which case we should\n    // disregard the second instance.\n    this.tooltipInstanceCount = 0;\n    this.tooltipMouseTrack = false;\n  }\n  wireBeans(beans) {\n    this.popupSvc = beans.popupSvc;\n    this.userCompFactory = beans.userCompFactory;\n  }\n  postConstruct() {\n    if (this.gos.get(\"tooltipInteraction\")) {\n      this.interactionEnabled = true;\n    }\n    this.tooltipTrigger = this.getTooltipTrigger();\n    this.tooltipMouseTrack = this.gos.get(\"tooltipMouseTrack\");\n    const el = this.tooltipCtrl.getGui();\n    if (this.tooltipTrigger === 0 /* HOVER */) {\n      this.addManagedListeners(el, {\n        mouseenter: this.onMouseEnter.bind(this),\n        mouseleave: this.onMouseLeave.bind(this)\n      });\n    }\n    if (this.tooltipTrigger === 1 /* FOCUS */) {\n      this.addManagedListeners(el, {\n        focusin: this.onFocusIn.bind(this),\n        focusout: this.onFocusOut.bind(this)\n      });\n    }\n    this.addManagedListeners(el, { mousemove: this.onMouseMove.bind(this) });\n    if (!this.interactionEnabled) {\n      this.addManagedListeners(el, {\n        mousedown: this.onMouseDown.bind(this),\n        keydown: this.onKeyDown.bind(this)\n      });\n    }\n  }\n  getGridOptionsTooltipDelay(delayOption) {\n    const delay = this.gos.get(delayOption);\n    return Math.max(200, delay);\n  }\n  getTooltipDelay(type) {\n    if (type === \"show\") {\n      return this.tooltipCtrl.getTooltipShowDelayOverride?.() ?? this.getGridOptionsTooltipDelay(\"tooltipShowDelay\");\n    }\n    return this.tooltipCtrl.getTooltipHideDelayOverride?.() ?? this.getGridOptionsTooltipDelay(\"tooltipHideDelay\");\n  }\n  destroy() {\n    this.setToDoNothing();\n    super.destroy();\n  }\n  getTooltipTrigger() {\n    const trigger = this.gos.get(\"tooltipTrigger\");\n    if (!trigger || trigger === \"hover\") {\n      return 0 /* HOVER */;\n    }\n    return 1 /* FOCUS */;\n  }\n  onMouseEnter(e) {\n    if (this.interactionEnabled && this.interactiveTooltipTimeoutId) {\n      this.unlockService();\n      this.startHideTimeout();\n    }\n    if (_isIOSUserAgent()) {\n      return;\n    }\n    if (isLocked) {\n      this.showTooltipTimeoutId = window.setTimeout(() => {\n        this.prepareToShowTooltip(e);\n      }, INTERACTIVE_HIDE_DELAY);\n    } else {\n      this.prepareToShowTooltip(e);\n    }\n  }\n  onMouseMove(e) {\n    if (this.lastMouseEvent) {\n      this.lastMouseEvent = e;\n    }\n    if (this.tooltipMouseTrack && this.state === 2 /* SHOWING */ && this.tooltipComp) {\n      this.positionTooltip();\n    }\n  }\n  onMouseDown() {\n    this.setToDoNothing();\n  }\n  onMouseLeave() {\n    if (this.interactionEnabled) {\n      this.lockService();\n    } else {\n      this.setToDoNothing();\n    }\n  }\n  onFocusIn() {\n    this.prepareToShowTooltip();\n  }\n  onFocusOut(e) {\n    const relatedTarget = e.relatedTarget;\n    const parentCompGui = this.tooltipCtrl.getGui();\n    const tooltipGui = this.tooltipComp?.getGui();\n    if (this.isInteractingWithTooltip || parentCompGui.contains(relatedTarget) || this.interactionEnabled && tooltipGui?.contains(relatedTarget)) {\n      return;\n    }\n    this.setToDoNothing();\n  }\n  onKeyDown() {\n    if (this.isInteractingWithTooltip) {\n      this.isInteractingWithTooltip = false;\n    }\n    this.setToDoNothing();\n  }\n  prepareToShowTooltip(mouseEvent) {\n    if (this.state != 0 /* NOTHING */ || isLocked) {\n      return;\n    }\n    let delay = 0;\n    if (mouseEvent) {\n      delay = this.isLastTooltipHiddenRecently() ? 200 : this.getTooltipDelay(\"show\");\n    }\n    this.lastMouseEvent = mouseEvent || null;\n    this.showTooltipTimeoutId = window.setTimeout(this.showTooltip.bind(this), delay);\n    this.state = 1 /* WAITING_TO_SHOW */;\n  }\n  isLastTooltipHiddenRecently() {\n    const now = (/* @__PURE__ */ new Date()).getTime();\n    const then = lastTooltipHideTime;\n    return now - then < SHOW_QUICK_TOOLTIP_DIFF;\n  }\n  setToDoNothing(fromHideTooltip) {\n    if (!fromHideTooltip && this.state === 2 /* SHOWING */) {\n      this.hideTooltip();\n    }\n    if (this.onBodyScrollEventCallback) {\n      this.onBodyScrollEventCallback();\n      this.onBodyScrollEventCallback = void 0;\n    }\n    if (this.onColumnMovedEventCallback) {\n      this.onColumnMovedEventCallback();\n      this.onColumnMovedEventCallback = void 0;\n    }\n    if (this.onDocumentKeyDownCallback) {\n      this.onDocumentKeyDownCallback();\n      this.onDocumentKeyDownCallback = void 0;\n    }\n    this.clearTimeouts();\n    this.state = 0 /* NOTHING */;\n    this.lastMouseEvent = null;\n  }\n  showTooltip() {\n    const value = this.getTooltipValue();\n    const ctrl = this.tooltipCtrl;\n    if (!_exists(value) || ctrl.shouldDisplayTooltip && !ctrl.shouldDisplayTooltip()) {\n      this.setToDoNothing();\n      return;\n    }\n    const rowNode = ctrl.getRowNode?.();\n    const params = _addGridCommonParams(this.gos, {\n      location: ctrl.getLocation?.() ?? \"UNKNOWN\",\n      //'cell',\n      colDef: ctrl.getColDef?.(),\n      column: ctrl.getColumn?.(),\n      rowIndex: ctrl.getRowIndex?.(),\n      node: rowNode,\n      data: rowNode?.data,\n      value,\n      valueFormatted: ctrl.getValueFormatted?.(),\n      hideTooltipCallback: () => this.hideTooltip(true),\n      ...ctrl.getAdditionalParams?.() ?? {}\n    });\n    this.state = 2 /* SHOWING */;\n    this.tooltipInstanceCount++;\n    const callback = this.newTooltipComponentCallback.bind(this, this.tooltipInstanceCount);\n    const userDetails = _getTooltipCompDetails(this.userCompFactory, params);\n    userDetails?.newAgStackInstance().then(callback);\n  }\n  hideTooltip(forceHide) {\n    if (!forceHide && this.isInteractingWithTooltip) {\n      return;\n    }\n    if (this.tooltipComp) {\n      this.destroyTooltipComp();\n      lastTooltipHideTime = (/* @__PURE__ */ new Date()).getTime();\n    }\n    this.eventSvc.dispatchEvent({\n      type: \"tooltipHide\",\n      parentGui: this.tooltipCtrl.getGui()\n    });\n    if (forceHide) {\n      this.isInteractingWithTooltip = false;\n    }\n    this.setToDoNothing(true);\n  }\n  newTooltipComponentCallback(tooltipInstanceCopy, tooltipComp) {\n    const compNoLongerNeeded = this.state !== 2 /* SHOWING */ || this.tooltipInstanceCount !== tooltipInstanceCopy;\n    if (compNoLongerNeeded) {\n      this.destroyBean(tooltipComp);\n      return;\n    }\n    const eGui = tooltipComp.getGui();\n    this.tooltipComp = tooltipComp;\n    if (!eGui.classList.contains(\"ag-tooltip\")) {\n      eGui.classList.add(\"ag-tooltip-custom\");\n    }\n    if (this.tooltipTrigger === 0 /* HOVER */) {\n      eGui.classList.add(\"ag-tooltip-animate\");\n    }\n    if (this.interactionEnabled) {\n      eGui.classList.add(\"ag-tooltip-interactive\");\n    }\n    const translate = this.getLocaleTextFunc();\n    const addPopupRes = this.popupSvc?.addPopup({\n      eChild: eGui,\n      ariaLabel: translate(\"ariaLabelTooltip\", \"Tooltip\")\n    });\n    if (addPopupRes) {\n      this.tooltipPopupDestroyFunc = addPopupRes.hideFunc;\n    }\n    this.positionTooltip();\n    if (this.tooltipTrigger === 1 /* FOCUS */) {\n      const listener = () => this.setToDoNothing();\n      [this.onBodyScrollEventCallback, this.onColumnMovedEventCallback] = this.addManagedEventListeners({\n        bodyScroll: listener,\n        columnMoved: listener\n      });\n    }\n    if (this.interactionEnabled) {\n      [this.tooltipMouseEnterListener, this.tooltipMouseLeaveListener] = this.addManagedElementListeners(eGui, {\n        mouseenter: this.onTooltipMouseEnter.bind(this),\n        mouseleave: this.onTooltipMouseLeave.bind(this)\n      });\n      [this.onDocumentKeyDownCallback] = this.addManagedElementListeners(_getDocument(this.beans), {\n        keydown: (e) => {\n          if (!eGui.contains(e?.target)) {\n            this.onKeyDown();\n          }\n        }\n      });\n      if (this.tooltipTrigger === 1 /* FOCUS */) {\n        [this.tooltipFocusInListener, this.tooltipFocusOutListener] = this.addManagedElementListeners(eGui, {\n          focusin: this.onTooltipFocusIn.bind(this),\n          focusout: this.onTooltipFocusOut.bind(this)\n        });\n      }\n    }\n    this.eventSvc.dispatchEvent({\n      type: \"tooltipShow\",\n      tooltipGui: eGui,\n      parentGui: this.tooltipCtrl.getGui()\n    });\n    this.startHideTimeout();\n  }\n  onTooltipMouseEnter() {\n    this.isInteractingWithTooltip = true;\n    this.unlockService();\n  }\n  onTooltipMouseLeave() {\n    if (this.isTooltipFocused()) {\n      return;\n    }\n    this.isInteractingWithTooltip = false;\n    this.lockService();\n  }\n  onTooltipFocusIn() {\n    this.isInteractingWithTooltip = true;\n  }\n  isTooltipFocused() {\n    const tooltipGui = this.tooltipComp?.getGui();\n    const activeEl = _getActiveDomElement(this.beans);\n    return !!tooltipGui && tooltipGui.contains(activeEl);\n  }\n  onTooltipFocusOut(e) {\n    const parentGui = this.tooltipCtrl.getGui();\n    if (this.isTooltipFocused()) {\n      return;\n    }\n    this.isInteractingWithTooltip = false;\n    if (parentGui.contains(e.relatedTarget)) {\n      this.startHideTimeout();\n    } else {\n      this.hideTooltip();\n    }\n  }\n  positionTooltip() {\n    const params = {\n      type: \"tooltip\",\n      ePopup: this.tooltipComp.getGui(),\n      nudgeY: 18,\n      skipObserver: this.tooltipMouseTrack\n    };\n    if (this.lastMouseEvent) {\n      this.popupSvc?.positionPopupUnderMouseEvent({\n        ...params,\n        mouseEvent: this.lastMouseEvent\n      });\n    } else {\n      this.popupSvc?.positionPopupByComponent({\n        ...params,\n        eventSource: this.tooltipCtrl.getGui(),\n        position: \"under\",\n        keepWithinBounds: true,\n        nudgeY: 5\n      });\n    }\n  }\n  destroyTooltipComp() {\n    this.tooltipComp.getGui().classList.add(\"ag-tooltip-hiding\");\n    const tooltipPopupDestroyFunc = this.tooltipPopupDestroyFunc;\n    const tooltipComp = this.tooltipComp;\n    const delay = this.tooltipTrigger === 0 /* HOVER */ ? FADE_OUT_TOOLTIP_TIMEOUT : 0;\n    window.setTimeout(() => {\n      tooltipPopupDestroyFunc();\n      this.destroyBean(tooltipComp);\n    }, delay);\n    this.clearTooltipListeners();\n    this.tooltipPopupDestroyFunc = void 0;\n    this.tooltipComp = void 0;\n  }\n  clearTooltipListeners() {\n    [\n      this.tooltipMouseEnterListener,\n      this.tooltipMouseLeaveListener,\n      this.tooltipFocusInListener,\n      this.tooltipFocusOutListener\n    ].forEach((listener) => {\n      if (listener) {\n        listener();\n      }\n    });\n    this.tooltipMouseEnterListener = this.tooltipMouseLeaveListener = this.tooltipFocusInListener = this.tooltipFocusOutListener = null;\n  }\n  lockService() {\n    isLocked = true;\n    this.interactiveTooltipTimeoutId = window.setTimeout(() => {\n      this.unlockService();\n      this.setToDoNothing();\n    }, INTERACTIVE_HIDE_DELAY);\n  }\n  unlockService() {\n    isLocked = false;\n    this.clearInteractiveTimeout();\n  }\n  startHideTimeout() {\n    this.clearHideTimeout();\n    this.hideTooltipTimeoutId = window.setTimeout(this.hideTooltip.bind(this), this.getTooltipDelay(\"hide\"));\n  }\n  clearShowTimeout() {\n    if (!this.showTooltipTimeoutId) {\n      return;\n    }\n    window.clearTimeout(this.showTooltipTimeoutId);\n    this.showTooltipTimeoutId = void 0;\n  }\n  clearHideTimeout() {\n    if (!this.hideTooltipTimeoutId) {\n      return;\n    }\n    window.clearTimeout(this.hideTooltipTimeoutId);\n    this.hideTooltipTimeoutId = void 0;\n  }\n  clearInteractiveTimeout() {\n    if (!this.interactiveTooltipTimeoutId) {\n      return;\n    }\n    window.clearTimeout(this.interactiveTooltipTimeoutId);\n    this.interactiveTooltipTimeoutId = void 0;\n  }\n  clearTimeouts() {\n    this.clearShowTimeout();\n    this.clearHideTimeout();\n    this.clearInteractiveTimeout();\n  }\n};\n\n// packages/ag-grid-community/src/tooltip/tooltipFeature.ts\nfunction _isShowTooltipWhenTruncated(gos) {\n  return gos.get(\"tooltipShowMode\") === \"whenTruncated\";\n}\nfunction _getShouldDisplayTooltip(gos, getElement) {\n  return _isShowTooltipWhenTruncated(gos) ? _shouldDisplayTooltip(getElement) : void 0;\n}\nfunction _shouldDisplayTooltip(getElement) {\n  return () => {\n    const element = getElement();\n    if (!element) {\n      return true;\n    }\n    return element.scrollWidth > element.clientWidth;\n  };\n}\nvar TooltipFeature = class extends BeanStub {\n  constructor(ctrl, beans) {\n    super();\n    this.ctrl = ctrl;\n    if (beans) {\n      this.beans = beans;\n    }\n  }\n  postConstruct() {\n    this.refreshTooltip();\n  }\n  setBrowserTooltip(tooltip) {\n    const name = \"title\";\n    const eGui = this.ctrl.getGui();\n    if (!eGui) {\n      return;\n    }\n    if (tooltip != null && tooltip != \"\") {\n      eGui.setAttribute(name, tooltip);\n    } else {\n      eGui.removeAttribute(name);\n    }\n  }\n  updateTooltipText() {\n    const { getTooltipValue } = this.ctrl;\n    if (getTooltipValue) {\n      this.tooltip = getTooltipValue();\n    }\n  }\n  createTooltipFeatureIfNeeded() {\n    if (this.tooltipManager == null) {\n      this.tooltipManager = this.createBean(\n        new TooltipStateManager(this.ctrl, () => this.tooltip),\n        this.beans.context\n      );\n    }\n  }\n  setTooltipAndRefresh(tooltip) {\n    this.tooltip = tooltip;\n    this.refreshTooltip();\n  }\n  refreshTooltip() {\n    this.browserTooltips = this.beans.gos.get(\"enableBrowserTooltips\");\n    this.updateTooltipText();\n    if (this.browserTooltips) {\n      this.setBrowserTooltip(this.tooltip);\n      this.tooltipManager = this.destroyBean(this.tooltipManager, this.beans.context);\n    } else {\n      this.setBrowserTooltip(null);\n      this.createTooltipFeatureIfNeeded();\n    }\n  }\n  destroy() {\n    this.tooltipManager = this.destroyBean(this.tooltipManager, this.beans.context);\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agList.ts\nvar AgList = class extends Component {\n  constructor(cssIdentifier = \"default\", unFocusable = false) {\n    super(\n      /* html */\n      `<div class=\"ag-list ag-${cssIdentifier}-list\" role=\"listbox\"></div>`\n    );\n    this.cssIdentifier = cssIdentifier;\n    this.unFocusable = unFocusable;\n    this.activeClass = \"ag-active-item\";\n    this.options = [];\n    this.itemEls = [];\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    this.addManagedElementListeners(eGui, { mouseleave: () => this.clearHighlighted() });\n    if (this.unFocusable) {\n      return;\n    }\n    this.addManagedElementListeners(eGui, { keydown: this.handleKeyDown.bind(this) });\n  }\n  handleKeyDown(e) {\n    const key = e.key;\n    switch (key) {\n      case KeyCode.ENTER:\n        if (!this.highlightedEl) {\n          this.setValue(this.getValue());\n        } else {\n          const pos = this.itemEls.indexOf(this.highlightedEl);\n          this.setValueByIndex(pos);\n        }\n        break;\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n        e.preventDefault();\n        this.navigate(key);\n        break;\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        e.preventDefault();\n        this.navigateToPage(key);\n        break;\n    }\n  }\n  navigate(key) {\n    const isDown = key === KeyCode.DOWN;\n    let itemToHighlight;\n    const { itemEls, highlightedEl } = this;\n    if (!highlightedEl) {\n      itemToHighlight = itemEls[isDown ? 0 : itemEls.length - 1];\n    } else {\n      const currentIdx = itemEls.indexOf(highlightedEl);\n      let nextPos = currentIdx + (isDown ? 1 : -1);\n      nextPos = Math.min(Math.max(nextPos, 0), itemEls.length - 1);\n      itemToHighlight = itemEls[nextPos];\n    }\n    this.highlightItem(itemToHighlight);\n  }\n  navigateToPage(key) {\n    const { itemEls, highlightedEl } = this;\n    if (!highlightedEl || itemEls.length === 0) {\n      return;\n    }\n    const currentIdx = itemEls.indexOf(highlightedEl);\n    const rowCount = this.options.length - 1;\n    const itemHeight = itemEls[0].clientHeight;\n    const pageSize = Math.floor(this.getGui().clientHeight / itemHeight);\n    let newIndex = -1;\n    if (key === KeyCode.PAGE_HOME) {\n      newIndex = 0;\n    } else if (key === KeyCode.PAGE_END) {\n      newIndex = rowCount;\n    } else if (key === KeyCode.PAGE_DOWN) {\n      newIndex = Math.min(currentIdx + pageSize, rowCount);\n    } else if (key === KeyCode.PAGE_UP) {\n      newIndex = Math.max(currentIdx - pageSize, 0);\n    }\n    if (newIndex === -1) {\n      return;\n    }\n    this.highlightItem(itemEls[newIndex]);\n  }\n  addOptions(listOptions) {\n    listOptions.forEach((listOption) => this.addOption(listOption));\n    return this;\n  }\n  addOption(listOption) {\n    const { value, text } = listOption;\n    const valueToRender = text || value;\n    this.options.push({ value, text: valueToRender });\n    this.renderOption(value, valueToRender);\n    this.updateIndices();\n    return this;\n  }\n  clearOptions() {\n    this.options = [];\n    this.reset(true);\n    this.itemEls.forEach((itemEl) => {\n      _removeFromParent(itemEl);\n    });\n    this.itemEls = [];\n  }\n  updateIndices() {\n    const options = this.getGui().querySelectorAll(\".ag-list-item\");\n    options.forEach((option, idx) => {\n      _setAriaPosInSet(option, idx + 1);\n      _setAriaSetSize(option, options.length);\n    });\n  }\n  renderOption(value, text) {\n    const eDocument = _getDocument(this.beans);\n    const itemEl = eDocument.createElement(\"div\");\n    _setAriaRole(itemEl, \"option\");\n    itemEl.classList.add(\"ag-list-item\", `ag-${this.cssIdentifier}-list-item`);\n    const span = eDocument.createElement(\"span\");\n    itemEl.appendChild(span);\n    span.textContent = text;\n    if (!this.unFocusable) {\n      itemEl.tabIndex = -1;\n    }\n    this.itemEls.push(itemEl);\n    this.addManagedListeners(itemEl, {\n      mouseover: () => this.highlightItem(itemEl),\n      mousedown: (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setValue(value);\n      }\n    });\n    this.createOptionalManagedBean(\n      this.beans.registry.createDynamicBean(\"tooltipFeature\", false, {\n        getTooltipValue: () => text,\n        getGui: () => itemEl,\n        getLocation: () => \"UNKNOWN\",\n        // only show tooltips for items where the text cannot be fully displayed\n        shouldDisplayTooltip: () => span.scrollWidth > span.clientWidth\n      })\n    );\n    this.getGui().appendChild(itemEl);\n  }\n  setValue(value, silent) {\n    if (this.value === value) {\n      this.fireItemSelected();\n      return this;\n    }\n    if (value == null) {\n      this.reset(silent);\n      return this;\n    }\n    const idx = this.options.findIndex((option) => option.value === value);\n    if (idx !== -1) {\n      const option = this.options[idx];\n      this.value = option.value;\n      this.displayValue = option.text;\n      this.highlightItem(this.itemEls[idx]);\n      if (!silent) {\n        this.fireChangeEvent();\n      }\n    }\n    return this;\n  }\n  setValueByIndex(idx) {\n    return this.setValue(this.options[idx].value);\n  }\n  getValue() {\n    return this.value;\n  }\n  getDisplayValue() {\n    return this.displayValue;\n  }\n  refreshHighlighted() {\n    this.clearHighlighted();\n    const idx = this.options.findIndex((option) => option.value === this.value);\n    if (idx !== -1) {\n      this.highlightItem(this.itemEls[idx]);\n    }\n  }\n  reset(silent) {\n    this.value = null;\n    this.displayValue = null;\n    this.clearHighlighted();\n    if (!silent) {\n      this.fireChangeEvent();\n    }\n  }\n  highlightItem(el) {\n    if (!_isVisible(el)) {\n      return;\n    }\n    this.clearHighlighted();\n    this.highlightedEl = el;\n    el.classList.add(this.activeClass);\n    _setAriaSelected(el, true);\n    const eGui = this.getGui();\n    const { scrollTop, clientHeight } = eGui;\n    const { offsetTop, offsetHeight } = el;\n    if (offsetTop + offsetHeight > scrollTop + clientHeight || offsetTop < scrollTop) {\n      el.scrollIntoView({ block: \"nearest\" });\n    }\n    if (!this.unFocusable) {\n      el.focus();\n    }\n  }\n  clearHighlighted() {\n    const highlightedEl = this.highlightedEl;\n    if (!highlightedEl || !_isVisible(highlightedEl)) {\n      return;\n    }\n    highlightedEl.classList.remove(this.activeClass);\n    _setAriaSelected(highlightedEl, false);\n    this.highlightedEl = null;\n  }\n  fireChangeEvent() {\n    this.dispatchLocalEvent({ type: \"fieldValueChanged\" });\n    this.fireItemSelected();\n  }\n  fireItemSelected() {\n    this.dispatchLocalEvent({ type: \"selectedItem\" });\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agPickerField.css-GENERATED.ts\nvar agPickerFieldCSS = (\n  /*css*/\n  `.ag-picker-field-display{flex:1 1 auto}.ag-picker-field{align-items:center;display:flex}.ag-picker-field-icon{border:0;cursor:pointer;display:flex;margin:0;padding:0}.ag-picker-field-wrapper{background-color:var(--ag-picker-button-background-color);border:var(--ag-picker-button-border);border-radius:5px;min-height:max(var(--ag-list-item-height),calc(var(--ag-spacing)*4));overflow:hidden;&:disabled{opacity:.5}&.ag-picker-has-focus,&:focus-within{background-color:var(--ag-picker-button-focus-background-color);border:var(--ag-picker-button-focus-border);box-shadow:var(--ag-focus-shadow)}}`\n);\n\n// packages/ag-grid-community/src/widgets/agPickerField.ts\nvar AgPickerField = class extends AgAbstractField {\n  constructor(config) {\n    super(\n      config,\n      config?.template || /* html */\n      `\n            <div class=\"ag-picker-field\" role=\"presentation\">\n                <div data-ref=\"eLabel\"></div>\n                <div data-ref=\"eWrapper\" class=\"ag-wrapper ag-picker-field-wrapper ag-picker-collapsed\">\n                    <div data-ref=\"eDisplayField\" class=\"ag-picker-field-display\"></div>\n                    <div data-ref=\"eIcon\" class=\"ag-picker-field-icon\" aria-hidden=\"true\"></div>\n                </div>\n            </div>`,\n      config?.agComponents || [],\n      config?.className\n    );\n    this.isPickerDisplayed = false;\n    this.skipClick = false;\n    this.pickerGap = 4;\n    this.hideCurrentPicker = null;\n    this.eLabel = RefPlaceholder;\n    this.eWrapper = RefPlaceholder;\n    this.eDisplayField = RefPlaceholder;\n    this.eIcon = RefPlaceholder;\n    this.registerCSS(agPickerFieldCSS);\n    this.ariaRole = config?.ariaRole;\n    this.onPickerFocusIn = this.onPickerFocusIn.bind(this);\n    this.onPickerFocusOut = this.onPickerFocusOut.bind(this);\n    if (!config) {\n      return;\n    }\n    const { pickerGap, maxPickerHeight, variableWidth, minPickerWidth, maxPickerWidth } = config;\n    if (pickerGap != null) {\n      this.pickerGap = pickerGap;\n    }\n    this.variableWidth = !!variableWidth;\n    if (maxPickerHeight != null) {\n      this.setPickerMaxHeight(maxPickerHeight);\n    }\n    if (minPickerWidth != null) {\n      this.setPickerMinWidth(minPickerWidth);\n    }\n    if (maxPickerWidth != null) {\n      this.setPickerMaxWidth(maxPickerWidth);\n    }\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.setupAria();\n    const displayId = `ag-${this.getCompId()}-display`;\n    this.eDisplayField.setAttribute(\"id\", displayId);\n    const ariaEl = this.getAriaElement();\n    this.addManagedElementListeners(ariaEl, { keydown: this.onKeyDown.bind(this) });\n    this.addManagedElementListeners(this.eLabel, { mousedown: this.onLabelOrWrapperMouseDown.bind(this) });\n    this.addManagedElementListeners(this.eWrapper, { mousedown: this.onLabelOrWrapperMouseDown.bind(this) });\n    const { pickerIcon, inputWidth } = this.config;\n    if (pickerIcon) {\n      const icon = _createIconNoSpan(pickerIcon, this.beans);\n      if (icon) {\n        this.eIcon.appendChild(icon);\n      }\n    }\n    if (inputWidth != null) {\n      this.setInputWidth(inputWidth);\n    }\n  }\n  setupAria() {\n    const ariaEl = this.getAriaElement();\n    ariaEl.setAttribute(\"tabindex\", this.gos.get(\"tabIndex\").toString());\n    _setAriaExpanded(ariaEl, false);\n    if (this.ariaRole) {\n      _setAriaRole(ariaEl, this.ariaRole);\n    }\n  }\n  onLabelOrWrapperMouseDown(e) {\n    if (e) {\n      const focusableEl = this.getFocusableElement();\n      if (focusableEl !== this.eWrapper && e?.target === focusableEl) {\n        return;\n      }\n      e.preventDefault();\n      this.getFocusableElement().focus();\n    }\n    if (this.skipClick) {\n      this.skipClick = false;\n      return;\n    }\n    if (this.isDisabled()) {\n      return;\n    }\n    if (this.isPickerDisplayed) {\n      this.hidePicker();\n    } else {\n      this.showPicker();\n    }\n  }\n  onKeyDown(e) {\n    switch (e.key) {\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n      case KeyCode.ENTER:\n      case KeyCode.SPACE:\n        e.preventDefault();\n        this.onLabelOrWrapperMouseDown();\n        break;\n      case KeyCode.ESCAPE:\n        if (this.isPickerDisplayed) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (this.hideCurrentPicker) {\n            this.hideCurrentPicker();\n          }\n        }\n        break;\n    }\n  }\n  showPicker() {\n    this.isPickerDisplayed = true;\n    if (!this.pickerComponent) {\n      this.pickerComponent = this.createPickerComponent();\n    }\n    const pickerGui = this.pickerComponent.getGui();\n    pickerGui.addEventListener(\"focusin\", this.onPickerFocusIn);\n    pickerGui.addEventListener(\"focusout\", this.onPickerFocusOut);\n    this.hideCurrentPicker = this.renderAndPositionPicker();\n    this.toggleExpandedStyles(true);\n  }\n  renderAndPositionPicker() {\n    const ePicker = this.pickerComponent.getGui();\n    if (!this.gos.get(\"suppressScrollWhenPopupsAreOpen\")) {\n      [this.destroyMouseWheelFunc] = this.addManagedEventListeners({\n        bodyScroll: () => {\n          this.hidePicker();\n        }\n      });\n    }\n    const translate = this.getLocaleTextFunc();\n    const {\n      config: { pickerAriaLabelKey, pickerAriaLabelValue, modalPicker = true },\n      maxPickerHeight,\n      minPickerWidth,\n      maxPickerWidth,\n      variableWidth,\n      beans,\n      eWrapper\n    } = this;\n    const popupParams = {\n      modal: modalPicker,\n      eChild: ePicker,\n      closeOnEsc: true,\n      closedCallback: () => {\n        const shouldRestoreFocus = _isNothingFocused(beans);\n        this.beforeHidePicker();\n        if (shouldRestoreFocus && this.isAlive()) {\n          this.getFocusableElement().focus();\n        }\n      },\n      ariaLabel: translate(pickerAriaLabelKey, pickerAriaLabelValue),\n      anchorToElement: eWrapper\n    };\n    ePicker.style.position = \"absolute\";\n    const popupSvc = beans.popupSvc;\n    const addPopupRes = popupSvc.addPopup(popupParams);\n    if (variableWidth) {\n      if (minPickerWidth) {\n        ePicker.style.minWidth = minPickerWidth;\n      }\n      ePicker.style.width = _formatSize(_getAbsoluteWidth(eWrapper));\n      if (maxPickerWidth) {\n        ePicker.style.maxWidth = maxPickerWidth;\n      }\n    } else {\n      _setElementWidth(ePicker, maxPickerWidth ?? _getAbsoluteWidth(eWrapper));\n    }\n    const maxHeight = maxPickerHeight ?? `${_getInnerHeight(popupSvc.getPopupParent())}px`;\n    ePicker.style.setProperty(\"max-height\", maxHeight);\n    this.alignPickerToComponent();\n    return addPopupRes.hideFunc;\n  }\n  alignPickerToComponent() {\n    if (!this.pickerComponent) {\n      return;\n    }\n    const {\n      pickerGap,\n      config: { pickerType },\n      beans: { popupSvc, gos },\n      eWrapper,\n      pickerComponent\n    } = this;\n    const alignSide = gos.get(\"enableRtl\") ? \"right\" : \"left\";\n    popupSvc.positionPopupByComponent({\n      type: pickerType,\n      eventSource: eWrapper,\n      ePopup: pickerComponent.getGui(),\n      position: \"under\",\n      alignSide,\n      keepWithinBounds: true,\n      nudgeY: pickerGap\n    });\n  }\n  beforeHidePicker() {\n    if (this.destroyMouseWheelFunc) {\n      this.destroyMouseWheelFunc();\n      this.destroyMouseWheelFunc = void 0;\n    }\n    this.toggleExpandedStyles(false);\n    const pickerGui = this.pickerComponent.getGui();\n    pickerGui.removeEventListener(\"focusin\", this.onPickerFocusIn);\n    pickerGui.removeEventListener(\"focusout\", this.onPickerFocusOut);\n    this.isPickerDisplayed = false;\n    this.pickerComponent = void 0;\n    this.hideCurrentPicker = null;\n  }\n  toggleExpandedStyles(expanded) {\n    if (!this.isAlive()) {\n      return;\n    }\n    const ariaEl = this.getAriaElement();\n    _setAriaExpanded(ariaEl, expanded);\n    const classList = this.eWrapper.classList;\n    classList.toggle(\"ag-picker-expanded\", expanded);\n    classList.toggle(\"ag-picker-collapsed\", !expanded);\n  }\n  onPickerFocusIn() {\n    this.togglePickerHasFocus(true);\n  }\n  onPickerFocusOut(e) {\n    if (!this.pickerComponent?.getGui().contains(e.relatedTarget)) {\n      this.togglePickerHasFocus(false);\n    }\n  }\n  togglePickerHasFocus(focused) {\n    if (!this.pickerComponent) {\n      return;\n    }\n    this.eWrapper.classList.toggle(\"ag-picker-has-focus\", focused);\n  }\n  hidePicker() {\n    this.hideCurrentPicker?.();\n  }\n  setInputWidth(width) {\n    _setElementWidth(this.eWrapper, width);\n    return this;\n  }\n  getFocusableElement() {\n    return this.eWrapper;\n  }\n  setPickerGap(gap) {\n    this.pickerGap = gap;\n    return this;\n  }\n  setPickerMinWidth(width) {\n    if (typeof width === \"number\") {\n      width = `${width}px`;\n    }\n    this.minPickerWidth = width == null ? void 0 : width;\n    return this;\n  }\n  setPickerMaxWidth(width) {\n    if (typeof width === \"number\") {\n      width = `${width}px`;\n    }\n    this.maxPickerWidth = width == null ? void 0 : width;\n    return this;\n  }\n  setPickerMaxHeight(height) {\n    if (typeof height === \"number\") {\n      height = `${height}px`;\n    }\n    this.maxPickerHeight = height == null ? void 0 : height;\n    return this;\n  }\n  destroy() {\n    this.hidePicker();\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/widgets/agSelect.css-GENERATED.ts\nvar agSelectCSS = (\n  /*css*/\n  `.ag-select{align-items:center;display:flex;&.ag-disabled{opacity:.5}}:where(.ag-select){.ag-picker-field-wrapper{cursor:default}&.ag-disabled .ag-picker-field-wrapper:focus{box-shadow:none}&:not(.ag-cell-editor,.ag-label-align-top){min-height:var(--ag-list-item-height)}.ag-picker-field-display{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ag-picker-field-icon{align-items:center;display:flex}}:where(.ag-ltr) :where(.ag-select){.ag-picker-field-wrapper{padding-left:calc(var(--ag-cell-horizontal-padding)/2);padding-right:var(--ag-spacing)}}:where(.ag-rtl) :where(.ag-select){.ag-picker-field-wrapper{padding-left:var(--ag-spacing);padding-right:calc(var(--ag-cell-horizontal-padding)/2)}}`\n);\n\n// packages/ag-grid-community/src/widgets/agSelect.ts\nvar AgSelect = class extends AgPickerField {\n  constructor(config) {\n    super({\n      pickerAriaLabelKey: \"ariaLabelSelectField\",\n      pickerAriaLabelValue: \"Select Field\",\n      pickerType: \"ag-list\",\n      className: \"ag-select\",\n      pickerIcon: \"selectOpen\",\n      ariaRole: \"combobox\",\n      ...config\n    });\n    this.registerCSS(agSelectCSS);\n  }\n  postConstruct() {\n    this.tooltipFeature = this.createOptionalManagedBean(\n      this.beans.registry.createDynamicBean(\"tooltipFeature\", false, {\n        shouldDisplayTooltip: _shouldDisplayTooltip(() => this.eDisplayField),\n        getGui: () => this.getGui()\n      })\n    );\n    super.postConstruct();\n    this.createListComponent();\n    this.eWrapper.tabIndex = this.gos.get(\"tabIndex\");\n    const { options, value, placeholder } = this.config;\n    if (options != null) {\n      this.addOptions(options);\n    }\n    if (value != null) {\n      this.setValue(value, true);\n    }\n    if (placeholder && value == null) {\n      this.eDisplayField.textContent = placeholder;\n    }\n    this.addManagedElementListeners(this.eWrapper, { focusout: this.onWrapperFocusOut.bind(this) });\n  }\n  onWrapperFocusOut(e) {\n    if (!this.eWrapper.contains(e.relatedTarget)) {\n      this.hidePicker();\n    }\n  }\n  createListComponent() {\n    const listComponent = this.createBean(new AgList(\"select\", true));\n    this.listComponent = listComponent;\n    listComponent.setParentComponent(this);\n    const eListAriaEl = listComponent.getAriaElement();\n    const listId = `ag-select-list-${listComponent.getCompId()}`;\n    eListAriaEl.setAttribute(\"id\", listId);\n    _setAriaControls(this.getAriaElement(), eListAriaEl);\n    listComponent.addManagedElementListeners(listComponent.getGui(), {\n      mousedown: (e) => {\n        e?.preventDefault();\n      }\n    });\n    listComponent.addManagedListeners(listComponent, {\n      selectedItem: () => {\n        this.hidePicker();\n        this.dispatchLocalEvent({ type: \"selectedItem\" });\n      },\n      fieldValueChanged: () => {\n        if (!this.listComponent) {\n          return;\n        }\n        this.setValue(this.listComponent.getValue(), false, true);\n        this.hidePicker();\n      }\n    });\n  }\n  createPickerComponent() {\n    return this.listComponent;\n  }\n  onKeyDown(e) {\n    const { key } = e;\n    if (key === KeyCode.TAB) {\n      this.hidePicker();\n    }\n    switch (key) {\n      case KeyCode.ENTER:\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        e.preventDefault();\n        if (this.isPickerDisplayed) {\n          this.listComponent?.handleKeyDown(e);\n        } else {\n          super.onKeyDown(e);\n        }\n        break;\n      case KeyCode.ESCAPE:\n        super.onKeyDown(e);\n        break;\n      case KeyCode.SPACE:\n        if (this.isPickerDisplayed) {\n          e.preventDefault();\n        } else {\n          super.onKeyDown(e);\n        }\n        break;\n    }\n  }\n  showPicker() {\n    const listComponent = this.listComponent;\n    if (!listComponent) {\n      return;\n    }\n    super.showPicker();\n    listComponent.refreshHighlighted();\n  }\n  addOptions(options) {\n    options.forEach((option) => this.addOption(option));\n    return this;\n  }\n  addOption(option) {\n    this.listComponent.addOption(option);\n    return this;\n  }\n  clearOptions() {\n    this.listComponent?.clearOptions();\n    return this;\n  }\n  setValue(value, silent, fromPicker) {\n    const {\n      listComponent,\n      config: { placeholder },\n      eDisplayField,\n      tooltipFeature\n    } = this;\n    if (this.value === value || !listComponent) {\n      return this;\n    }\n    if (!fromPicker) {\n      listComponent.setValue(value, true);\n    }\n    const newValue = listComponent.getValue();\n    if (newValue === this.getValue()) {\n      return this;\n    }\n    let displayValue = listComponent.getDisplayValue();\n    if (displayValue == null && placeholder) {\n      displayValue = placeholder;\n    }\n    eDisplayField.textContent = displayValue;\n    tooltipFeature?.setTooltipAndRefresh(displayValue ?? null);\n    return super.setValue(value, silent);\n  }\n  destroy() {\n    this.listComponent = this.destroyBean(this.listComponent);\n    super.destroy();\n  }\n};\nvar AgSelectSelector = {\n  selector: \"AG-SELECT\",\n  component: AgSelect\n};\n\n// packages/ag-grid-community/src/widgets/tabGuardCtrl.ts\nvar TabGuardClassNames = {\n  TAB_GUARD: \"ag-tab-guard\",\n  TAB_GUARD_TOP: \"ag-tab-guard-top\",\n  TAB_GUARD_BOTTOM: \"ag-tab-guard-bottom\"\n};\nvar TabGuardCtrl = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.skipTabGuardFocus = false;\n    this.forcingFocusOut = false;\n    // Used when `isFocusableContainer` enabled\n    this.allowFocus = false;\n    const {\n      comp,\n      eTopGuard,\n      eBottomGuard,\n      focusTrapActive,\n      forceFocusOutWhenTabGuardsAreEmpty,\n      isFocusableContainer,\n      focusInnerElement,\n      onFocusIn,\n      onFocusOut,\n      shouldStopEventPropagation,\n      onTabKeyDown,\n      handleKeyDown,\n      isEmpty,\n      eFocusableElement\n    } = params;\n    this.comp = comp;\n    this.eTopGuard = eTopGuard;\n    this.eBottomGuard = eBottomGuard;\n    this.providedFocusInnerElement = focusInnerElement;\n    this.eFocusableElement = eFocusableElement;\n    this.focusTrapActive = !!focusTrapActive;\n    this.forceFocusOutWhenTabGuardsAreEmpty = !!forceFocusOutWhenTabGuardsAreEmpty;\n    this.isFocusableContainer = !!isFocusableContainer;\n    this.providedFocusIn = onFocusIn;\n    this.providedFocusOut = onFocusOut;\n    this.providedShouldStopEventPropagation = shouldStopEventPropagation;\n    this.providedOnTabKeyDown = onTabKeyDown;\n    this.providedHandleKeyDown = handleKeyDown;\n    this.providedIsEmpty = isEmpty;\n  }\n  postConstruct() {\n    this.createManagedBean(\n      new ManagedFocusFeature(this.eFocusableElement, {\n        shouldStopEventPropagation: () => this.shouldStopEventPropagation(),\n        onTabKeyDown: (e) => this.onTabKeyDown(e),\n        handleKeyDown: (e) => this.handleKeyDown(e),\n        onFocusIn: (e) => this.onFocusIn(e),\n        onFocusOut: (e) => this.onFocusOut(e)\n      })\n    );\n    this.activateTabGuards();\n    [this.eTopGuard, this.eBottomGuard].forEach(\n      (guard) => this.addManagedElementListeners(guard, { focus: this.onFocus.bind(this) })\n    );\n  }\n  handleKeyDown(e) {\n    if (this.providedHandleKeyDown) {\n      this.providedHandleKeyDown(e);\n    }\n  }\n  tabGuardsAreActive() {\n    return !!this.eTopGuard && this.eTopGuard.hasAttribute(\"tabIndex\");\n  }\n  shouldStopEventPropagation() {\n    if (this.providedShouldStopEventPropagation) {\n      return this.providedShouldStopEventPropagation();\n    }\n    return false;\n  }\n  activateTabGuards() {\n    if (this.forcingFocusOut) {\n      return;\n    }\n    const tabIndex = this.gos.get(\"tabIndex\");\n    this.comp.setTabIndex(tabIndex.toString());\n  }\n  deactivateTabGuards() {\n    this.comp.setTabIndex();\n  }\n  onFocus(e) {\n    if (this.isFocusableContainer && !this.eFocusableElement.contains(e.relatedTarget)) {\n      if (!this.allowFocus) {\n        this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\n        return;\n      }\n    }\n    if (this.skipTabGuardFocus) {\n      this.skipTabGuardFocus = false;\n      return;\n    }\n    if (this.forceFocusOutWhenTabGuardsAreEmpty) {\n      const isEmpty = this.providedIsEmpty ? this.providedIsEmpty() : _findFocusableElements(this.eFocusableElement, \".ag-tab-guard\").length === 0;\n      if (isEmpty) {\n        this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\n        return;\n      }\n    }\n    if (this.isFocusableContainer && this.eFocusableElement.contains(e.relatedTarget)) {\n      return;\n    }\n    const fromBottom = e.target === this.eBottomGuard;\n    const hasFocusedInnerElement = this.providedFocusInnerElement ? this.providedFocusInnerElement(fromBottom) : this.focusInnerElement(fromBottom);\n    if (!hasFocusedInnerElement && this.forceFocusOutWhenTabGuardsAreEmpty) {\n      this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\n    }\n  }\n  findNextElementOutsideAndFocus(up) {\n    const eDocument = _getDocument(this.beans);\n    const focusableEls = _findFocusableElements(eDocument.body, null, true);\n    const index = focusableEls.indexOf(up ? this.eTopGuard : this.eBottomGuard);\n    if (index === -1) {\n      return;\n    }\n    let start;\n    let end;\n    if (up) {\n      start = 0;\n      end = index;\n    } else {\n      start = index + 1;\n      end = focusableEls.length;\n    }\n    const focusableRange = focusableEls.slice(start, end);\n    const targetTabIndex = this.gos.get(\"tabIndex\");\n    focusableRange.sort((a, b) => {\n      const indexA = parseInt(a.getAttribute(\"tabindex\") || \"0\");\n      const indexB = parseInt(b.getAttribute(\"tabindex\") || \"0\");\n      if (indexB === targetTabIndex) {\n        return 1;\n      }\n      if (indexA === targetTabIndex) {\n        return -1;\n      }\n      if (indexA === 0) {\n        return 1;\n      }\n      if (indexB === 0) {\n        return -1;\n      }\n      return indexA - indexB;\n    });\n    focusableRange[up ? focusableRange.length - 1 : 0]?.focus();\n  }\n  onFocusIn(e) {\n    if (this.focusTrapActive || this.forcingFocusOut) {\n      return;\n    }\n    if (this.providedFocusIn) {\n      this.providedFocusIn(e);\n    }\n    if (!this.isFocusableContainer) {\n      this.deactivateTabGuards();\n    }\n  }\n  onFocusOut(e) {\n    if (this.focusTrapActive) {\n      return;\n    }\n    if (this.providedFocusOut) {\n      this.providedFocusOut(e);\n    }\n    if (!this.eFocusableElement.contains(e.relatedTarget)) {\n      this.activateTabGuards();\n    }\n  }\n  onTabKeyDown(e) {\n    if (this.providedOnTabKeyDown) {\n      this.providedOnTabKeyDown(e);\n      return;\n    }\n    if (this.focusTrapActive) {\n      return;\n    }\n    if (e.defaultPrevented) {\n      return;\n    }\n    const tabGuardsAreActive = this.tabGuardsAreActive();\n    if (tabGuardsAreActive) {\n      this.deactivateTabGuards();\n    }\n    const nextRoot = this.getNextFocusableElement(e.shiftKey);\n    if (tabGuardsAreActive) {\n      setTimeout(() => this.activateTabGuards(), 0);\n    }\n    if (!nextRoot) {\n      return;\n    }\n    nextRoot.focus();\n    e.preventDefault();\n  }\n  focusInnerElement(fromBottom = false) {\n    const focusable = _findFocusableElements(this.eFocusableElement);\n    if (this.tabGuardsAreActive()) {\n      focusable.splice(0, 1);\n      focusable.splice(focusable.length - 1, 1);\n    }\n    if (!focusable.length) {\n      return false;\n    }\n    focusable[fromBottom ? focusable.length - 1 : 0].focus({ preventScroll: true });\n    return true;\n  }\n  getNextFocusableElement(backwards) {\n    return _findNextFocusableElement(this.beans, this.eFocusableElement, false, backwards);\n  }\n  forceFocusOutOfContainer(up = false) {\n    if (this.forcingFocusOut) {\n      return;\n    }\n    const tabGuardToFocus = up ? this.eTopGuard : this.eBottomGuard;\n    this.activateTabGuards();\n    this.skipTabGuardFocus = true;\n    this.forcingFocusOut = true;\n    tabGuardToFocus.focus();\n    window.setTimeout(() => {\n      this.forcingFocusOut = false;\n      this.activateTabGuards();\n    });\n  }\n  isTabGuard(element, bottom) {\n    return element === this.eTopGuard && !bottom || element === this.eBottomGuard && (bottom ?? true);\n  }\n  setAllowFocus(allowFocus) {\n    this.allowFocus = allowFocus;\n  }\n};\n\n// packages/ag-grid-community/src/widgets/tabGuardFeature.ts\nvar TabGuardFeature = class extends BeanStub {\n  constructor(comp) {\n    super();\n    this.comp = comp;\n  }\n  initialiseTabGuard(params) {\n    this.eTopGuard = this.createTabGuard(\"top\");\n    this.eBottomGuard = this.createTabGuard(\"bottom\");\n    this.eFocusableElement = this.comp.getFocusableElement();\n    const { eTopGuard, eBottomGuard, eFocusableElement } = this;\n    const tabGuards = [eTopGuard, eBottomGuard];\n    const compProxy = {\n      setTabIndex: (tabIndex) => {\n        tabGuards.forEach(\n          (tabGuard) => tabIndex != null ? tabGuard.setAttribute(\"tabindex\", tabIndex) : tabGuard.removeAttribute(\"tabindex\")\n        );\n      }\n    };\n    this.addTabGuards(eTopGuard, eBottomGuard);\n    const {\n      focusTrapActive = false,\n      onFocusIn,\n      onFocusOut,\n      focusInnerElement,\n      handleKeyDown,\n      onTabKeyDown,\n      shouldStopEventPropagation,\n      isEmpty,\n      forceFocusOutWhenTabGuardsAreEmpty,\n      isFocusableContainer\n    } = params;\n    this.tabGuardCtrl = this.createManagedBean(\n      new TabGuardCtrl({\n        comp: compProxy,\n        focusTrapActive,\n        eTopGuard,\n        eBottomGuard,\n        eFocusableElement,\n        onFocusIn,\n        onFocusOut,\n        focusInnerElement,\n        handleKeyDown,\n        onTabKeyDown,\n        shouldStopEventPropagation,\n        isEmpty,\n        forceFocusOutWhenTabGuardsAreEmpty,\n        isFocusableContainer\n      })\n    );\n  }\n  getTabGuardCtrl() {\n    return this.tabGuardCtrl;\n  }\n  createTabGuard(side) {\n    const tabGuard = _getDocument(this.beans).createElement(\"div\");\n    const cls = side === \"top\" ? TabGuardClassNames.TAB_GUARD_TOP : TabGuardClassNames.TAB_GUARD_BOTTOM;\n    tabGuard.classList.add(TabGuardClassNames.TAB_GUARD, cls);\n    _setAriaRole(tabGuard, \"presentation\");\n    return tabGuard;\n  }\n  addTabGuards(topTabGuard, bottomTabGuard) {\n    const eFocusableElement = this.eFocusableElement;\n    eFocusableElement.insertAdjacentElement(\"afterbegin\", topTabGuard);\n    eFocusableElement.insertAdjacentElement(\"beforeend\", bottomTabGuard);\n  }\n  removeAllChildrenExceptTabGuards() {\n    const tabGuards = [this.eTopGuard, this.eBottomGuard];\n    _clearElement(this.comp.getFocusableElement());\n    this.addTabGuards(...tabGuards);\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.tabGuardCtrl.forceFocusOutOfContainer(up);\n  }\n  appendChild(appendChild, newChild, container) {\n    if (!_isNodeOrElement(newChild)) {\n      newChild = newChild.getGui();\n    }\n    const { eBottomGuard: bottomTabGuard } = this;\n    if (bottomTabGuard) {\n      bottomTabGuard.insertAdjacentElement(\"beforebegin\", newChild);\n    } else {\n      appendChild(newChild, container);\n    }\n  }\n  destroy() {\n    const { eFocusableElement, eTopGuard, eBottomGuard } = this;\n    eFocusableElement.removeChild(eTopGuard);\n    eFocusableElement.removeChild(eBottomGuard);\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/widgets/tabGuardComp.ts\nvar TabGuardComp = class extends Component {\n  initialiseTabGuard(params) {\n    this.tabGuardFeature = this.createManagedBean(new TabGuardFeature(this));\n    this.tabGuardFeature.initialiseTabGuard(params);\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.tabGuardFeature.forceFocusOutOfContainer(up);\n  }\n  appendChild(newChild, container) {\n    this.tabGuardFeature.appendChild(super.appendChild.bind(this), newChild, container);\n  }\n};\n\n// packages/ag-grid-community/src/widgets/popupComponent.ts\nvar PopupComponent = class extends Component {\n  isPopup() {\n    return true;\n  }\n  setParentComponent(container) {\n    container.addCssClass(\"ag-has-popup\");\n    super.setParentComponent(container);\n  }\n  destroy() {\n    const parentComp = this.parentComponent;\n    const hasParent = parentComp && parentComp.isAlive();\n    if (hasParent) {\n      parentComp.getGui().classList.remove(\"ag-has-popup\");\n    }\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/widgets/touchListener.ts\nvar TouchListener = class {\n  constructor(eElement, preventMouseClick = false) {\n    this.DOUBLE_TAP_MILLIS = 500;\n    this.destroyFuncs = [];\n    this.touching = false;\n    this.localEventService = new LocalEventService();\n    this.preventMouseClick = preventMouseClick;\n    const startListener = this.onTouchStart.bind(this);\n    const moveListener = this.onTouchMove.bind(this);\n    const endListener = this.onTouchEnd.bind(this);\n    eElement.addEventListener(\"touchstart\", startListener, { passive: true });\n    eElement.addEventListener(\"touchmove\", moveListener, { passive: true });\n    eElement.addEventListener(\"touchend\", endListener, { passive: false });\n    this.destroyFuncs.push(() => {\n      eElement.removeEventListener(\"touchstart\", startListener, { passive: true });\n      eElement.removeEventListener(\"touchmove\", moveListener, { passive: true });\n      eElement.removeEventListener(\"touchend\", endListener, { passive: false });\n    });\n  }\n  getActiveTouch(touchList) {\n    for (let i = 0; i < touchList.length; i++) {\n      const matches = touchList[i].identifier === this.touchStart.identifier;\n      if (matches) {\n        return touchList[i];\n      }\n    }\n    return null;\n  }\n  addEventListener(eventType, listener) {\n    this.localEventService.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, listener) {\n    this.localEventService.removeEventListener(eventType, listener);\n  }\n  onTouchStart(touchEvent) {\n    if (this.touching) {\n      return;\n    }\n    this.touchStart = touchEvent.touches[0];\n    this.touching = true;\n    this.moved = false;\n    const touchStartCopy = this.touchStart;\n    window.setTimeout(() => {\n      const touchesMatch = this.touchStart === touchStartCopy;\n      if (this.touching && touchesMatch && !this.moved) {\n        this.moved = true;\n        const event = {\n          type: \"longTap\",\n          touchStart: this.touchStart,\n          touchEvent\n        };\n        this.localEventService.dispatchEvent(event);\n      }\n    }, 500);\n  }\n  onTouchMove(touchEvent) {\n    if (!this.touching) {\n      return;\n    }\n    const touch = this.getActiveTouch(touchEvent.touches);\n    if (!touch) {\n      return;\n    }\n    const eventIsFarAway = !_areEventsNear(touch, this.touchStart, 4);\n    if (eventIsFarAway) {\n      this.moved = true;\n    }\n  }\n  onTouchEnd(touchEvent) {\n    if (!this.touching) {\n      return;\n    }\n    if (!this.moved) {\n      const event = {\n        type: \"tap\",\n        touchStart: this.touchStart\n      };\n      this.localEventService.dispatchEvent(event);\n      this.checkForDoubleTap();\n    }\n    if (this.preventMouseClick && touchEvent.cancelable) {\n      touchEvent.preventDefault();\n    }\n    this.touching = false;\n  }\n  checkForDoubleTap() {\n    const now = (/* @__PURE__ */ new Date()).getTime();\n    if (this.lastTapTime && this.lastTapTime > 0) {\n      const interval = now - this.lastTapTime;\n      if (interval > this.DOUBLE_TAP_MILLIS) {\n        const event = {\n          type: \"doubleTap\",\n          touchStart: this.touchStart\n        };\n        this.localEventService.dispatchEvent(event);\n        this.lastTapTime = null;\n      } else {\n        this.lastTapTime = now;\n      }\n    } else {\n      this.lastTapTime = now;\n    }\n  }\n  destroy() {\n    this.destroyFuncs.forEach((func) => func());\n  }\n};\n\n// packages/ag-grid-community/src/interfaces/IRangeService.ts\nvar CellRangeType = /* @__PURE__ */ ((CellRangeType2) => {\n  CellRangeType2[CellRangeType2[\"VALUE\"] = 0] = \"VALUE\";\n  CellRangeType2[CellRangeType2[\"DIMENSION\"] = 1] = \"DIMENSION\";\n  return CellRangeType2;\n})(CellRangeType || {});\n\n// packages/ag-grid-community/src/vanillaFrameworkOverrides.ts\nvar VanillaFrameworkOverrides = class {\n  constructor(frameworkName = \"javascript\") {\n    this.frameworkName = frameworkName;\n    this.renderingEngine = \"vanilla\";\n    this.wrapIncoming = (callback) => callback();\n    this.wrapOutgoing = (callback) => callback();\n    this.baseDocLink = `${BASE_URL}/${this.frameworkName}-data-grid`;\n    setValidationDocLink(this.baseDocLink);\n  }\n  setInterval(action, timeout) {\n    return new AgPromise((resolve) => {\n      resolve(window.setInterval(action, timeout));\n    });\n  }\n  // for Vanilla JS, we just add the event to the element\n  addEventListener(element, type, listener, options) {\n    let eventListenerOptions = {};\n    if (typeof options === \"object\") {\n      eventListenerOptions = options;\n    } else if (typeof options === \"boolean\") {\n      eventListenerOptions = { capture: options };\n    }\n    if (eventListenerOptions.passive == null) {\n      const passive = getPassiveStateForEvent(type);\n      if (passive != null) {\n        eventListenerOptions.passive = passive;\n      }\n    }\n    element.addEventListener(type, listener, eventListenerOptions);\n  }\n  frameworkComponent(_) {\n    return null;\n  }\n  isFrameworkComponent(_) {\n    return false;\n  }\n  getDocLink(path) {\n    return `${this.baseDocLink}${path ? `/${path}` : \"\"}`;\n  }\n};\n\n// packages/ag-grid-community/src/api/apiUtils.ts\nfunction createGridApi(context) {\n  return {\n    beanName: \"gridApi\",\n    bean: context.getBean(\"apiFunctionSvc\").api\n  };\n}\n\n// packages/ag-grid-community/src/context/gridBeanComparator.ts\nvar orderedCoreBeans = [\n  // Validate license first\n  \"licenseManager\",\n  // core beans only\n  \"environment\",\n  \"eventSvc\",\n  \"gos\",\n  \"paginationAutoPageSizeSvc\",\n  \"apiFunctionSvc\",\n  \"gridApi\",\n  \"registry\",\n  \"agCompUtils\",\n  \"userCompFactory\",\n  \"rowContainerHeight\",\n  \"horizontalResizeSvc\",\n  \"localeSvc\",\n  \"pinnedRowModel\",\n  \"dragSvc\",\n  \"colGroupSvc\",\n  \"visibleCols\",\n  \"popupSvc\",\n  \"selectionSvc\",\n  \"colFilter\",\n  \"quickFilter\",\n  \"filterManager\",\n  \"colModel\",\n  \"headerNavigation\",\n  \"pageBounds\",\n  \"pagination\",\n  \"rowSpanSvc\",\n  \"pageBoundsListener\",\n  \"stickyRowSvc\",\n  \"rowRenderer\",\n  \"expressionSvc\",\n  \"alignedGridsSvc\",\n  \"navigation\",\n  \"valueCache\",\n  \"valueSvc\",\n  \"autoWidthCalc\",\n  \"filterMenuFactory\",\n  \"dragAndDrop\",\n  \"focusSvc\",\n  \"cellNavigation\",\n  \"cellStyles\",\n  \"scrollVisibleSvc\",\n  \"sortSvc\",\n  \"colHover\",\n  \"colAnimation\",\n  \"autoColSvc\",\n  \"selectionColSvc\",\n  \"changeDetectionSvc\",\n  \"animationFrameSvc\",\n  \"undoRedo\",\n  \"colDefFactory\",\n  \"rowStyleSvc\",\n  \"rowNodeBlockLoader\",\n  \"rowNodeSorter\",\n  \"ctrlsSvc\",\n  \"pinnedCols\",\n  \"dataTypeSvc\",\n  \"syncSvc\",\n  \"overlays\",\n  \"stateSvc\",\n  \"expansionSvc\",\n  \"apiEventSvc\",\n  \"ariaAnnounce\",\n  \"menuSvc\",\n  \"colMoves\",\n  \"colAutosize\",\n  \"colFlex\",\n  \"colResize\",\n  \"pivotColsSvc\",\n  \"valueColsSvc\",\n  \"rowGroupColsSvc\",\n  \"funcColsSvc\",\n  \"colNames\",\n  \"colViewport\",\n  \"pivotResultCols\",\n  \"showRowGroupCols\",\n  \"validation\"\n  // Have validations run last\n];\nvar beanNamePosition = Object.fromEntries(\n  orderedCoreBeans.map((beanName, index) => [beanName, index])\n);\nfunction gridBeanInitComparator(bean1, bean2) {\n  const index1 = (bean1.beanName ? beanNamePosition[bean1.beanName] : void 0) ?? Number.MAX_SAFE_INTEGER;\n  const index2 = (bean2.beanName ? beanNamePosition[bean2.beanName] : void 0) ?? Number.MAX_SAFE_INTEGER;\n  return index1 - index2;\n}\nfunction gridBeanDestroyComparator(bean1, bean2) {\n  return bean1?.beanName === \"gridDestroySvc\" ? -1 : 0;\n}\n\n// packages/ag-grid-community/src/headerRendering/rowContainer/headerRowContainerComp.ts\nvar PINNED_LEFT_TEMPLATE = (\n  /* html */\n  `<div class=\"ag-pinned-left-header\" role=\"rowgroup\"></div>`\n);\nvar PINNED_RIGHT_TEMPLATE = (\n  /* html */\n  `<div class=\"ag-pinned-right-header\" role=\"rowgroup\"></div>`\n);\nvar CENTER_TEMPLATE = (\n  /* html */\n  `<div class=\"ag-header-viewport\" role=\"presentation\">\n        <div class=\"ag-header-container\" data-ref=\"eCenterContainer\" role=\"rowgroup\"></div>\n    </div>`\n);\nvar HeaderRowContainerComp = class extends Component {\n  constructor(pinned) {\n    super();\n    this.eCenterContainer = RefPlaceholder;\n    this.headerRowComps = {};\n    this.rowCompsList = [];\n    this.pinned = pinned;\n  }\n  postConstruct() {\n    this.selectAndSetTemplate();\n    const compProxy = {\n      setDisplayed: (displayed) => this.setDisplayed(displayed),\n      setCtrls: (ctrls) => this.setCtrls(ctrls),\n      // only gets called for center section\n      setCenterWidth: (width) => this.eCenterContainer.style.width = width,\n      setViewportScrollLeft: (left) => this.getGui().scrollLeft = left,\n      // only gets called for pinned sections\n      setPinnedContainerWidth: (width) => {\n        const eGui = this.getGui();\n        eGui.style.width = width;\n        eGui.style.maxWidth = width;\n        eGui.style.minWidth = width;\n      }\n    };\n    const ctrl = this.createManagedBean(new HeaderRowContainerCtrl(this.pinned));\n    ctrl.setComp(compProxy, this.getGui());\n  }\n  selectAndSetTemplate() {\n    const pinnedLeft = this.pinned == \"left\";\n    const pinnedRight = this.pinned == \"right\";\n    const template = pinnedLeft ? PINNED_LEFT_TEMPLATE : pinnedRight ? PINNED_RIGHT_TEMPLATE : CENTER_TEMPLATE;\n    this.setTemplate(template);\n    this.eRowContainer = this.eCenterContainer !== RefPlaceholder ? this.eCenterContainer : this.getGui();\n  }\n  destroy() {\n    this.setCtrls([]);\n    super.destroy();\n  }\n  destroyRowComp(rowComp) {\n    this.destroyBean(rowComp);\n    this.eRowContainer.removeChild(rowComp.getGui());\n  }\n  setCtrls(ctrls) {\n    const oldRowComps = this.headerRowComps;\n    this.headerRowComps = {};\n    this.rowCompsList = [];\n    let prevGui;\n    const appendEnsuringDomOrder = (rowComp) => {\n      const eGui = rowComp.getGui();\n      const notAlreadyIn = eGui.parentElement != this.eRowContainer;\n      if (notAlreadyIn) {\n        this.eRowContainer.appendChild(eGui);\n      }\n      if (prevGui) {\n        _ensureDomOrder(this.eRowContainer, eGui, prevGui);\n      }\n      prevGui = eGui;\n    };\n    ctrls.forEach((ctrl) => {\n      const ctrlId = ctrl.instanceId;\n      const existingComp = oldRowComps[ctrlId];\n      delete oldRowComps[ctrlId];\n      const rowComp = existingComp ? existingComp : this.createBean(new HeaderRowComp(ctrl));\n      this.headerRowComps[ctrlId] = rowComp;\n      this.rowCompsList.push(rowComp);\n      appendEnsuringDomOrder(rowComp);\n    });\n    Object.values(oldRowComps).forEach((c) => this.destroyRowComp(c));\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/gridHeaderComp.ts\nvar GridHeaderComp = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-header\" role=\"presentation\"/>`\n    );\n  }\n  postConstruct() {\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setHeightAndMinHeight: (height) => {\n        this.getGui().style.height = height;\n        this.getGui().style.minHeight = height;\n      }\n    };\n    const ctrl = this.createManagedBean(new GridHeaderCtrl());\n    ctrl.setComp(compProxy, this.getGui(), this.getFocusableElement());\n    const addContainer = (container) => {\n      this.createManagedBean(container);\n      this.appendChild(container);\n    };\n    addContainer(new HeaderRowContainerComp(\"left\"));\n    addContainer(new HeaderRowContainerComp(null));\n    addContainer(new HeaderRowContainerComp(\"right\"));\n  }\n};\nvar GridHeaderSelector = {\n  selector: \"AG-HEADER-ROOT\",\n  component: GridHeaderComp\n};\n\n// packages/ag-grid-community/src/rendering/cell/cellComp.ts\nvar CellComp = class extends Component {\n  constructor(beans, cellCtrl, printLayout, eRow, editingRow) {\n    super();\n    this.cellCtrl = cellCtrl;\n    // every time we go into edit mode, or back again, this gets incremented.\n    // it's the components way of dealing with the async nature of framework components,\n    // so if a framework component takes a while to be created, we know if the object\n    // is still relevant when creating is finished. eg we could click edit / un-edit 20\n    // times before the first React edit component comes back - we should discard\n    // the first 19.\n    this.rendererVersion = 0;\n    this.editorVersion = 0;\n    this.beans = beans;\n    this.column = cellCtrl.column;\n    this.rowNode = cellCtrl.rowNode;\n    this.eRow = eRow;\n    const cellDiv = document.createElement(\"div\");\n    cellDiv.setAttribute(\"comp-id\", `${this.getCompId()}`);\n    this.eCell = cellDiv;\n    let wrapperDiv;\n    if (cellCtrl.isCellSpanning()) {\n      wrapperDiv = document.createElement(\"div\");\n      wrapperDiv.className = \"ag-spanned-cell-wrapper\";\n      wrapperDiv.appendChild(cellDiv);\n      _setAriaRole(wrapperDiv, \"presentation\");\n      this.setTemplateFromElement(wrapperDiv);\n    } else {\n      this.setTemplateFromElement(cellDiv);\n    }\n    this.cellCssClassManager = new CssClassManager(() => cellDiv);\n    this.forceWrapper = cellCtrl.isForceWrapper();\n    this.refreshWrapper(false);\n    _setAriaRole(cellDiv, cellCtrl.getCellAriaRole());\n    cellDiv.setAttribute(\"col-id\", cellCtrl.colIdSanitised);\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.cellCssClassManager.addOrRemoveCssClass(cssClassName, on),\n      setUserStyles: (styles) => _addStylesToElement(cellDiv, styles),\n      getFocusableElement: () => cellDiv,\n      setIncludeSelection: (include) => this.includeSelection = include,\n      setIncludeRowDrag: (include) => this.includeRowDrag = include,\n      setIncludeDndSource: (include) => this.includeDndSource = include,\n      setRenderDetails: (compDetails, valueToDisplay, force) => this.setRenderDetails(compDetails, valueToDisplay, force),\n      setEditDetails: (compDetails, popup, position) => this.setEditDetails(compDetails, popup, position),\n      getCellEditor: () => this.cellEditor || null,\n      getCellRenderer: () => this.cellRenderer || null,\n      getParentOfValue: () => this.getParentOfValue()\n    };\n    cellCtrl.setComp(compProxy, cellDiv, wrapperDiv, this.eCellWrapper, printLayout, editingRow, void 0);\n  }\n  getParentOfValue() {\n    if (this.eCellValue) {\n      return this.eCellValue;\n    }\n    if (this.eCellWrapper) {\n      return this.eCellWrapper;\n    }\n    return this.eCell;\n  }\n  setRenderDetails(compDetails, valueToDisplay, forceNewCellRendererInstance) {\n    const isInlineEditing = this.cellEditor && !this.cellEditorPopupWrapper;\n    if (isInlineEditing) {\n      return;\n    }\n    this.firstRender = this.firstRender == null;\n    const controlWrapperChanged = this.refreshWrapper(false);\n    this.refreshEditStyles(false);\n    if (compDetails) {\n      const neverRefresh = forceNewCellRendererInstance || controlWrapperChanged;\n      const cellRendererRefreshSuccessful = neverRefresh ? false : this.refreshCellRenderer(compDetails);\n      if (!cellRendererRefreshSuccessful) {\n        this.destroyRenderer();\n        this.createCellRendererInstance(compDetails);\n      }\n    } else {\n      this.destroyRenderer();\n      this.insertValueWithoutCellRenderer(valueToDisplay);\n    }\n  }\n  setEditDetails(compDetails, popup, position) {\n    if (compDetails) {\n      this.createCellEditorInstance(compDetails, popup, position);\n    } else {\n      this.destroyEditor();\n    }\n  }\n  removeControls() {\n    this.checkboxSelectionComp = this.beans.context.destroyBean(this.checkboxSelectionComp);\n    this.dndSourceComp = this.beans.context.destroyBean(this.dndSourceComp);\n    this.rowDraggingComp = this.beans.context.destroyBean(this.rowDraggingComp);\n  }\n  // returns true if wrapper was changed\n  refreshWrapper(editing) {\n    const providingControls = this.includeRowDrag || this.includeDndSource || this.includeSelection;\n    const usingWrapper = providingControls || this.forceWrapper;\n    const putWrapperIn = usingWrapper && this.eCellWrapper == null;\n    if (putWrapperIn) {\n      const wrapperDiv = document.createElement(\"div\");\n      wrapperDiv.setAttribute(\"role\", \"presentation\");\n      wrapperDiv.setAttribute(\"class\", \"ag-cell-wrapper\");\n      this.eCellWrapper = wrapperDiv;\n      this.eCell.appendChild(this.eCellWrapper);\n    }\n    const takeWrapperOut = !usingWrapper && this.eCellWrapper != null;\n    if (takeWrapperOut) {\n      _removeFromParent(this.eCellWrapper);\n      this.eCellWrapper = void 0;\n    }\n    this.cellCssClassManager.addOrRemoveCssClass(\"ag-cell-value\", !usingWrapper);\n    const usingCellValue = !editing && usingWrapper;\n    const putCellValueIn = usingCellValue && this.eCellValue == null;\n    if (putCellValueIn) {\n      const cellSpan = document.createElement(\"span\");\n      cellSpan.setAttribute(\"role\", \"presentation\");\n      cellSpan.setAttribute(\"class\", \"ag-cell-value\");\n      this.eCellValue = cellSpan;\n      this.eCellWrapper.appendChild(this.eCellValue);\n    }\n    const takeCellValueOut = !usingCellValue && this.eCellValue != null;\n    if (takeCellValueOut) {\n      _removeFromParent(this.eCellValue);\n      this.eCellValue = void 0;\n    }\n    const templateChanged = putWrapperIn || takeWrapperOut || putCellValueIn || takeCellValueOut;\n    if (templateChanged) {\n      this.removeControls();\n    }\n    if (!editing) {\n      if (providingControls) {\n        this.addControls();\n      }\n    }\n    return templateChanged;\n  }\n  addControls() {\n    if (this.includeRowDrag) {\n      if (this.rowDraggingComp == null) {\n        this.rowDraggingComp = this.cellCtrl.createRowDragComp();\n        if (this.rowDraggingComp) {\n          this.eCellWrapper.insertBefore(this.rowDraggingComp.getGui(), this.eCellValue);\n        }\n      }\n    }\n    if (this.includeDndSource) {\n      if (this.dndSourceComp == null) {\n        this.dndSourceComp = this.cellCtrl.createDndSource();\n        if (this.dndSourceComp) {\n          this.eCellWrapper.insertBefore(this.dndSourceComp.getGui(), this.eCellValue);\n        }\n      }\n    }\n    if (this.includeSelection) {\n      if (this.checkboxSelectionComp == null) {\n        this.checkboxSelectionComp = this.cellCtrl.createSelectionCheckbox();\n        if (this.checkboxSelectionComp) {\n          this.eCellWrapper.insertBefore(this.checkboxSelectionComp.getGui(), this.eCellValue);\n        }\n      }\n    }\n  }\n  createCellEditorInstance(compDetails, popup, position) {\n    const versionCopy = this.editorVersion;\n    const cellEditorPromise = compDetails.newAgStackInstance();\n    const { params } = compDetails;\n    cellEditorPromise.then((c) => this.afterCellEditorCreated(versionCopy, c, params, popup, position));\n    const cellEditorAsync = _missing(this.cellEditor);\n    if (cellEditorAsync && params.cellStartedEdit) {\n      this.cellCtrl.focusCell(true);\n    }\n  }\n  insertValueWithoutCellRenderer(valueToDisplay) {\n    const eParent = this.getParentOfValue();\n    _clearElement(eParent);\n    const escapedValue = valueToDisplay != null ? _escapeString(valueToDisplay, true) : null;\n    if (escapedValue != null) {\n      eParent.textContent = escapedValue;\n    }\n  }\n  destroyEditorAndRenderer() {\n    this.destroyRenderer();\n    this.destroyEditor();\n  }\n  destroyRenderer() {\n    const { context } = this.beans;\n    this.cellRenderer = context.destroyBean(this.cellRenderer);\n    _removeFromParent(this.cellRendererGui);\n    this.cellRendererGui = null;\n    this.rendererVersion++;\n  }\n  destroyEditor() {\n    const { context } = this.beans;\n    if (this.hideEditorPopup) {\n      this.hideEditorPopup();\n    }\n    this.hideEditorPopup = void 0;\n    this.cellEditor = context.destroyBean(this.cellEditor);\n    this.cellEditorPopupWrapper = context.destroyBean(this.cellEditorPopupWrapper);\n    _removeFromParent(this.cellEditorGui);\n    this.cellEditorGui = null;\n    this.editorVersion++;\n  }\n  refreshCellRenderer(compClassAndParams) {\n    if (this.cellRenderer == null || this.cellRenderer.refresh == null) {\n      return false;\n    }\n    if (this.cellRendererClass !== compClassAndParams.componentClass) {\n      return false;\n    }\n    const result = this.cellRenderer.refresh(compClassAndParams.params);\n    return result === true || result === void 0;\n  }\n  createCellRendererInstance(compDetails) {\n    const suppressAnimationFrame = this.beans.gos.get(\"suppressAnimationFrame\");\n    const useTaskService = !suppressAnimationFrame && this.beans.animationFrameSvc;\n    const displayComponentVersionCopy = this.rendererVersion;\n    const { componentClass } = compDetails;\n    const createCellRendererFunc = () => {\n      const staleTask = this.rendererVersion !== displayComponentVersionCopy || !this.isAlive();\n      if (staleTask) {\n        return;\n      }\n      const componentPromise = compDetails.newAgStackInstance();\n      const callback = this.afterCellRendererCreated.bind(this, displayComponentVersionCopy, componentClass);\n      if (componentPromise) {\n        componentPromise.then(callback);\n      }\n    };\n    if (useTaskService && this.firstRender) {\n      this.beans.animationFrameSvc.createTask(createCellRendererFunc, this.rowNode.rowIndex, \"createTasksP2\");\n    } else {\n      createCellRendererFunc();\n    }\n  }\n  afterCellRendererCreated(cellRendererVersion, cellRendererClass, cellRenderer) {\n    const staleTask = !this.isAlive() || cellRendererVersion !== this.rendererVersion;\n    if (staleTask) {\n      this.beans.context.destroyBean(cellRenderer);\n      return;\n    }\n    this.cellRenderer = cellRenderer;\n    this.cellRendererClass = cellRendererClass;\n    this.cellRendererGui = this.cellRenderer.getGui();\n    if (this.cellRendererGui != null) {\n      const eParent = this.getParentOfValue();\n      _clearElement(eParent);\n      eParent.appendChild(this.cellRendererGui);\n    }\n  }\n  afterCellEditorCreated(requestVersion, cellEditor, params, popup, position) {\n    const staleComp = requestVersion !== this.editorVersion;\n    if (staleComp) {\n      this.beans.context.destroyBean(cellEditor);\n      return;\n    }\n    const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n    if (editingCancelledByUserComp) {\n      this.beans.context.destroyBean(cellEditor);\n      this.cellCtrl.stopEditing(true);\n      return;\n    }\n    if (!cellEditor.getGui) {\n      _warn(97, { colId: this.column.getId() });\n      this.beans.context.destroyBean(cellEditor);\n      return;\n    }\n    this.cellEditor = cellEditor;\n    this.cellEditorGui = cellEditor.getGui();\n    const cellEditorInPopup = popup || cellEditor.isPopup !== void 0 && cellEditor.isPopup();\n    if (cellEditorInPopup) {\n      this.addPopupCellEditor(params, position);\n    } else {\n      this.addInCellEditor();\n    }\n    this.refreshEditStyles(true, cellEditorInPopup);\n    if (cellEditor.afterGuiAttached) {\n      cellEditor.afterGuiAttached();\n    }\n    this.cellCtrl.cellEditorAttached();\n  }\n  refreshEditStyles(editing, isPopup) {\n    const { cellCssClassManager } = this;\n    cellCssClassManager.addOrRemoveCssClass(\"ag-cell-inline-editing\", editing && !isPopup);\n    cellCssClassManager.addOrRemoveCssClass(\"ag-cell-popup-editing\", editing && !!isPopup);\n    cellCssClassManager.addOrRemoveCssClass(\"ag-cell-not-inline-editing\", !editing || !!isPopup);\n    this.cellCtrl.setInlineEditingCss();\n  }\n  addInCellEditor() {\n    const { eCell } = this;\n    if (eCell.contains(_getActiveDomElement(this.beans))) {\n      eCell.focus();\n    }\n    this.destroyRenderer();\n    this.refreshWrapper(true);\n    this.clearParentOfValue();\n    if (this.cellEditorGui) {\n      const eParent = this.getParentOfValue();\n      eParent.appendChild(this.cellEditorGui);\n    }\n  }\n  addPopupCellEditor(params, position) {\n    if (this.beans.gos.get(\"editType\") === \"fullRow\") {\n      _warn(98);\n    }\n    const cellEditor = this.cellEditor;\n    this.cellEditorPopupWrapper = this.beans.context.createBean(\n      this.beans.editSvc.createPopupEditorWrapper(params)\n    );\n    const ePopupGui = this.cellEditorPopupWrapper.getGui();\n    if (this.cellEditorGui) {\n      ePopupGui.appendChild(this.cellEditorGui);\n    }\n    const popupSvc = this.beans.popupSvc;\n    const useModelPopup = this.beans.gos.get(\"stopEditingWhenCellsLoseFocus\");\n    const positionToUse = position != null ? position : cellEditor.getPopupPosition?.() ?? \"over\";\n    const isRtl = this.beans.gos.get(\"enableRtl\");\n    const positionParams = {\n      ePopup: ePopupGui,\n      column: this.column,\n      rowNode: this.rowNode,\n      type: \"popupCellEditor\",\n      eventSource: this.eCell,\n      position: positionToUse,\n      alignSide: isRtl ? \"right\" : \"left\",\n      keepWithinBounds: true\n    };\n    const positionCallback = popupSvc.positionPopupByComponent.bind(popupSvc, positionParams);\n    const translate = _getLocaleTextFunc(this.beans.localeSvc);\n    const addPopupRes = popupSvc.addPopup({\n      modal: useModelPopup,\n      eChild: ePopupGui,\n      closeOnEsc: true,\n      closedCallback: () => {\n        this.cellCtrl.onPopupEditorClosed();\n      },\n      anchorToElement: this.eCell,\n      positionCallback,\n      ariaLabel: translate(\"ariaLabelCellEditor\", \"Cell Editor\")\n    });\n    if (addPopupRes) {\n      this.hideEditorPopup = addPopupRes.hideFunc;\n    }\n  }\n  detach() {\n    this.eRow.removeChild(this.getGui());\n  }\n  // if the row is also getting destroyed, then we don't need to remove from dom,\n  // as the row will also get removed, so no need to take out the cells from the row\n  // if the row is going (removing is an expensive operation, so only need to remove\n  // the top part)\n  //\n  // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n  destroy() {\n    this.cellCtrl.stopEditing();\n    this.destroyEditorAndRenderer();\n    this.removeControls();\n    super.destroy();\n  }\n  clearParentOfValue() {\n    const { eCell } = this;\n    if (eCell.contains(_getActiveDomElement(this.beans))) {\n      eCell.focus({ preventScroll: true });\n    }\n    _clearElement(this.getParentOfValue());\n  }\n};\n\n// packages/ag-grid-community/src/rendering/row/rowComp.ts\nvar RowComp = class extends Component {\n  constructor(ctrl, beans, containerType) {\n    super();\n    this.cellComps = {};\n    this.beans = beans;\n    this.rowCtrl = ctrl;\n    const rowDiv = document.createElement(\"div\");\n    rowDiv.setAttribute(\"comp-id\", `${this.getCompId()}`);\n    rowDiv.setAttribute(\"style\", this.getInitialStyle(containerType));\n    this.setTemplateFromElement(rowDiv);\n    const eGui = this.getGui();\n    const style = eGui.style;\n    this.domOrder = this.rowCtrl.getDomOrder();\n    _setAriaRole(eGui, \"row\");\n    const compProxy = {\n      setDomOrder: (domOrder) => this.domOrder = domOrder,\n      setCellCtrls: (cellCtrls) => this.setCellCtrls(cellCtrls),\n      showFullWidth: (compDetails) => this.showFullWidth(compDetails),\n      getFullWidthCellRenderer: () => this.fullWidthCellRenderer,\n      addOrRemoveCssClass: (name, on) => this.addOrRemoveCssClass(name, on),\n      setUserStyles: (styles) => _addStylesToElement(eGui, styles),\n      setTop: (top) => style.top = top,\n      setTransform: (transform) => style.transform = transform,\n      setRowIndex: (rowIndex) => eGui.setAttribute(\"row-index\", rowIndex),\n      setRowId: (rowId) => eGui.setAttribute(\"row-id\", rowId),\n      setRowBusinessKey: (businessKey) => eGui.setAttribute(\"row-business-key\", businessKey),\n      refreshFullWidth: (getUpdatedParams) => this.fullWidthCellRenderer?.refresh?.(getUpdatedParams()) ?? false\n    };\n    ctrl.setComp(compProxy, this.getGui(), containerType, void 0);\n    this.addDestroyFunc(() => {\n      ctrl.unsetComp(containerType);\n    });\n  }\n  getInitialStyle(containerType) {\n    const transform = this.rowCtrl.getInitialTransform(containerType);\n    return transform ? `transform: ${transform}` : `top: ${this.rowCtrl.getInitialRowTop(containerType)}`;\n  }\n  showFullWidth(compDetails) {\n    const callback = (cellRenderer) => {\n      if (this.isAlive()) {\n        const eGui = cellRenderer.getGui();\n        this.getGui().appendChild(eGui);\n        this.rowCtrl.setupDetailRowAutoHeight(eGui);\n        this.setFullWidthRowComp(cellRenderer);\n      } else {\n        this.beans.context.destroyBean(cellRenderer);\n      }\n    };\n    const res = compDetails.newAgStackInstance();\n    res.then(callback);\n  }\n  setCellCtrls(cellCtrls) {\n    const cellsToRemove = Object.assign({}, this.cellComps);\n    cellCtrls.forEach((cellCtrl) => {\n      const key = cellCtrl.instanceId;\n      const existingCellComp = this.cellComps[key];\n      if (existingCellComp == null) {\n        this.newCellComp(cellCtrl);\n      } else {\n        cellsToRemove[key] = null;\n      }\n    });\n    this.destroyCells(Object.values(cellsToRemove));\n    this.ensureDomOrder(cellCtrls);\n  }\n  ensureDomOrder(cellCtrls) {\n    if (!this.domOrder) {\n      return;\n    }\n    const elementsInOrder = [];\n    cellCtrls.forEach((cellCtrl) => {\n      const cellComp = this.cellComps[cellCtrl.instanceId];\n      if (cellComp) {\n        elementsInOrder.push(cellComp.getGui());\n      }\n    });\n    _setDomChildOrder(this.getGui(), elementsInOrder);\n  }\n  newCellComp(cellCtrl) {\n    const cellComp = new CellComp(\n      this.beans,\n      cellCtrl,\n      this.rowCtrl.printLayout,\n      this.getGui(),\n      this.rowCtrl.editing\n    );\n    this.cellComps[cellCtrl.instanceId] = cellComp;\n    this.getGui().appendChild(cellComp.getGui());\n  }\n  destroy() {\n    super.destroy();\n    this.destroyCells(Object.values(this.cellComps));\n  }\n  setFullWidthRowComp(fullWidthRowComponent) {\n    this.fullWidthCellRenderer = fullWidthRowComponent;\n    this.addDestroyFunc(() => {\n      this.fullWidthCellRenderer = this.beans.context.destroyBean(this.fullWidthCellRenderer);\n    });\n  }\n  destroyCells(cellComps) {\n    cellComps.forEach((cellComp) => {\n      if (!cellComp) {\n        return;\n      }\n      const instanceId = cellComp.cellCtrl.instanceId;\n      if (this.cellComps[instanceId] !== cellComp) {\n        return;\n      }\n      cellComp.detach();\n      cellComp.destroy();\n      this.cellComps[instanceId] = null;\n    });\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/rowContainerComp.ts\nfunction templateFactory(name, options, beans) {\n  const isCellSpanning = !!beans.gos.get(\"enableCellSpan\") && !!options.getSpannedRowCtrls;\n  const containerClass = _getRowContainerClass(name);\n  const eContainerTemplate = `<div class=\"${containerClass}\" data-ref=\"eContainer\" role=\"rowgroup\"></div>`;\n  if (options.type === \"center\" || isCellSpanning) {\n    const spannedCellsContainerClass = _getRowSpanContainerClass(name);\n    const viewportClass = _getRowViewportClass(name);\n    const eSpannedContainerTemplate = `<div class=\"ag-spanning-container ${spannedCellsContainerClass}\" data-ref=\"eSpannedContainer\" role=\"rowgroup\"></div>`;\n    return `<div class=\"ag-viewport ${viewportClass}\" data-ref=\"eViewport\" role=\"presentation\">\n                ${eContainerTemplate}\n                ${isCellSpanning ? eSpannedContainerTemplate : \"\"}\n            </div>`;\n  }\n  return eContainerTemplate;\n}\nvar RowContainerComp = class extends Component {\n  constructor(params) {\n    super();\n    this.eViewport = RefPlaceholder;\n    this.eContainer = RefPlaceholder;\n    this.eSpannedContainer = RefPlaceholder;\n    this.rowCompsNoSpan = {};\n    this.rowCompsWithSpan = {};\n    this.name = params?.name;\n    this.options = _getRowContainerOptions(this.name);\n  }\n  postConstruct() {\n    this.setTemplate(templateFactory(this.name, this.options, this.beans));\n    const compProxy = {\n      setHorizontalScroll: (offset) => this.eViewport.scrollLeft = offset,\n      setViewportHeight: (height) => this.eViewport.style.height = height,\n      setRowCtrls: ({ rowCtrls }) => this.setRowCtrls(rowCtrls),\n      setSpannedRowCtrls: (rowCtrls) => this.setRowCtrls(rowCtrls, true),\n      setDomOrder: (domOrder) => {\n        this.domOrder = domOrder;\n      },\n      setContainerWidth: (width) => {\n        this.eContainer.style.width = width;\n        if (this.eSpannedContainer) {\n          this.eSpannedContainer.style.width = width;\n        }\n      },\n      setOffsetTop: (offset) => {\n        const top = `translateY(${offset})`;\n        this.eContainer.style.transform = top;\n        if (this.eSpannedContainer) {\n          this.eSpannedContainer.style.transform = top;\n        }\n      }\n    };\n    const ctrl = this.createManagedBean(new RowContainerCtrl(this.name));\n    ctrl.setComp(compProxy, this.eContainer, this.eSpannedContainer, this.eViewport);\n  }\n  destroy() {\n    this.setRowCtrls([]);\n    this.setRowCtrls([], true);\n    super.destroy();\n    this.lastPlacedElement = null;\n  }\n  setRowCtrls(rowCtrls, spanContainer) {\n    const { beans, options } = this;\n    const container = spanContainer ? this.eSpannedContainer : this.eContainer;\n    const oldRows = spanContainer ? { ...this.rowCompsWithSpan } : { ...this.rowCompsNoSpan };\n    const newComps = {};\n    if (spanContainer) {\n      this.rowCompsWithSpan = newComps;\n    } else {\n      this.rowCompsNoSpan = newComps;\n    }\n    this.lastPlacedElement = null;\n    const orderedRows = [];\n    for (const rowCtrl of rowCtrls) {\n      const instanceId = rowCtrl.instanceId;\n      const existingRowComp = oldRows[instanceId];\n      let rowComp;\n      if (existingRowComp) {\n        rowComp = existingRowComp;\n        delete oldRows[instanceId];\n      } else {\n        if (!rowCtrl.rowNode.displayed) {\n          continue;\n        }\n        rowComp = new RowComp(rowCtrl, beans, options.type);\n      }\n      newComps[instanceId] = rowComp;\n      orderedRows.push([rowComp, !existingRowComp]);\n    }\n    this.removeOldRows(Object.values(oldRows), container);\n    this.addRowNodes(orderedRows, container);\n  }\n  addRowNodes(rows, container) {\n    const { domOrder } = this;\n    for (const [rowComp, isNew] of rows) {\n      const eGui = rowComp.getGui();\n      if (!domOrder) {\n        if (isNew) {\n          container.appendChild(eGui);\n        }\n      } else {\n        this.ensureDomOrder(eGui, container);\n      }\n    }\n  }\n  removeOldRows(rowComps, container) {\n    for (const oldRowComp of rowComps) {\n      container.removeChild(oldRowComp.getGui());\n      oldRowComp.destroy();\n    }\n  }\n  ensureDomOrder(eRow, container) {\n    _ensureDomOrder(container, eRow, this.lastPlacedElement);\n    this.lastPlacedElement = eRow;\n  }\n};\nvar RowContainerSelector = {\n  selector: \"AG-ROW-CONTAINER\",\n  component: RowContainerComp\n};\n\n// packages/ag-grid-community/src/gridBodyComp/gridBodyComp.ts\nfunction makeRowContainers(paramsMap, names) {\n  return names.map((name) => {\n    const refName = `e${name[0].toUpperCase() + name.substring(1)}RowContainer`;\n    paramsMap[refName] = { name };\n    return (\n      /* html */\n      `<ag-row-container name=\"${name}\" data-ref=\"${refName}\"></ag-row-container>`\n    );\n  }).join(\"\");\n}\nfunction getGridBodyTemplate(includeOverlay) {\n  const paramsMap = {};\n  const template = (\n    /* html */\n    `<div class=\"ag-root ag-unselectable\" data-ref=\"eGridRoot\">\n        <ag-header-root></ag-header-root>\n        <div class=\"ag-floating-top\" data-ref=\"eTop\" role=\"presentation\">\n            ${makeRowContainers(paramsMap, [\"topLeft\", \"topCenter\", \"topRight\", \"topFullWidth\"])}\n        </div>\n        <div class=\"ag-body\" data-ref=\"eBody\" role=\"presentation\">\n            <div class=\"ag-body-viewport\" data-ref=\"eBodyViewport\" role=\"presentation\">\n            ${makeRowContainers(paramsMap, [\"left\", \"center\", \"right\", \"fullWidth\"])}\n            </div>\n            <ag-fake-vertical-scroll></ag-fake-vertical-scroll>\n        </div>\n        <div class=\"ag-sticky-top\" data-ref=\"eStickyTop\" role=\"presentation\">\n            ${makeRowContainers(paramsMap, [\"stickyTopLeft\", \"stickyTopCenter\", \"stickyTopRight\", \"stickyTopFullWidth\"])}\n        </div>\n        <div class=\"ag-sticky-bottom\" data-ref=\"eStickyBottom\" role=\"presentation\">\n            ${makeRowContainers(paramsMap, [\"stickyBottomLeft\", \"stickyBottomCenter\", \"stickyBottomRight\", \"stickyBottomFullWidth\"])}\n        </div>\n        <div class=\"ag-floating-bottom\" data-ref=\"eBottom\" role=\"presentation\">\n            ${makeRowContainers(paramsMap, [\"bottomLeft\", \"bottomCenter\", \"bottomRight\", \"bottomFullWidth\"])}\n        </div>\n        <ag-fake-horizontal-scroll></ag-fake-horizontal-scroll>\n        ${includeOverlay ? (\n      /* html */\n      `<ag-overlay-wrapper></ag-overlay-wrapper>`\n    ) : \"\"}\n    </div>`\n  );\n  return { paramsMap, template };\n}\nvar GridBodyComp = class extends Component {\n  constructor() {\n    super(...arguments);\n    this.eGridRoot = RefPlaceholder;\n    this.eBodyViewport = RefPlaceholder;\n    this.eStickyTop = RefPlaceholder;\n    this.eStickyBottom = RefPlaceholder;\n    this.eTop = RefPlaceholder;\n    this.eBottom = RefPlaceholder;\n    this.eBody = RefPlaceholder;\n  }\n  postConstruct() {\n    const { overlays, rangeSvc } = this.beans;\n    const overlaySelector = overlays?.getOverlayWrapperSelector();\n    const { paramsMap, template } = getGridBodyTemplate(!!overlaySelector);\n    this.setTemplate(\n      template,\n      [\n        ...overlaySelector ? [overlaySelector] : [],\n        FakeHScrollSelector,\n        FakeVScrollSelector,\n        GridHeaderSelector,\n        RowContainerSelector\n      ],\n      paramsMap\n    );\n    const setHeight = (height, element) => {\n      const heightString = `${height}px`;\n      element.style.minHeight = heightString;\n      element.style.height = heightString;\n    };\n    const compProxy = {\n      setRowAnimationCssOnBodyViewport: (cssClass, animate) => this.setRowAnimationCssOnBodyViewport(cssClass, animate),\n      setColumnCount: (count) => _setAriaColCount(this.getGui(), count),\n      setRowCount: (count) => _setAriaRowCount(this.getGui(), count),\n      setTopHeight: (height) => setHeight(height, this.eTop),\n      setBottomHeight: (height) => setHeight(height, this.eBottom),\n      setTopDisplay: (display) => this.eTop.style.display = display,\n      setBottomDisplay: (display) => this.eBottom.style.display = display,\n      setStickyTopHeight: (height) => this.eStickyTop.style.height = height,\n      setStickyTopTop: (top) => this.eStickyTop.style.top = top,\n      setStickyTopWidth: (width) => this.eStickyTop.style.width = width,\n      setStickyBottomHeight: (height) => {\n        this.eStickyBottom.style.height = height;\n        this.eStickyBottom.classList.toggle(\"ag-invisible\", height === \"0px\");\n      },\n      setStickyBottomBottom: (bottom) => this.eStickyBottom.style.bottom = bottom,\n      setStickyBottomWidth: (width) => this.eStickyBottom.style.width = width,\n      setColumnMovingCss: (cssClass, flag) => this.addOrRemoveCssClass(cssClass, flag),\n      updateLayoutClasses: (cssClass, params) => {\n        const classLists = [this.eBodyViewport.classList, this.eBody.classList];\n        classLists.forEach((classList) => {\n          classList.toggle(LayoutCssClasses.AUTO_HEIGHT, params.autoHeight);\n          classList.toggle(LayoutCssClasses.NORMAL, params.normal);\n          classList.toggle(LayoutCssClasses.PRINT, params.print);\n        });\n        this.addOrRemoveCssClass(LayoutCssClasses.AUTO_HEIGHT, params.autoHeight);\n        this.addOrRemoveCssClass(LayoutCssClasses.NORMAL, params.normal);\n        this.addOrRemoveCssClass(LayoutCssClasses.PRINT, params.print);\n      },\n      setAlwaysVerticalScrollClass: (cssClass, on) => this.eBodyViewport.classList.toggle(CSS_CLASS_FORCE_VERTICAL_SCROLL, on),\n      registerBodyViewportResizeListener: (listener) => {\n        const unsubscribeFromResize = _observeResize(this.beans, this.eBodyViewport, listener);\n        this.addDestroyFunc(() => unsubscribeFromResize());\n      },\n      setPinnedTopBottomOverflowY: (overflow) => this.eTop.style.overflowY = this.eBottom.style.overflowY = overflow,\n      setCellSelectableCss: (cssClass, selectable) => {\n        [this.eTop, this.eBodyViewport, this.eBottom].forEach(\n          (ct) => ct.classList.toggle(cssClass, selectable)\n        );\n      },\n      setBodyViewportWidth: (width) => this.eBodyViewport.style.width = width,\n      setGridRootRole: (role) => _setAriaRole(this.eGridRoot, role)\n    };\n    this.ctrl = this.createManagedBean(new GridBodyCtrl());\n    this.ctrl.setComp(\n      compProxy,\n      this.getGui(),\n      this.eBodyViewport,\n      this.eTop,\n      this.eBottom,\n      this.eStickyTop,\n      this.eStickyBottom\n    );\n    if (rangeSvc && _isCellSelectionEnabled(this.gos) || _isMultiRowSelection(this.gos)) {\n      _setAriaMultiSelectable(this.getGui(), true);\n    }\n  }\n  setRowAnimationCssOnBodyViewport(cssClass, animateRows) {\n    const bodyViewportClassList = this.eBodyViewport.classList;\n    bodyViewportClassList.toggle(\"ag-row-animation\", animateRows);\n    bodyViewportClassList.toggle(\"ag-row-no-animation\", !animateRows);\n  }\n};\nvar GridBodySelector = {\n  selector: \"AG-GRID-BODY\",\n  component: GridBodyComp\n};\n\n// packages/ag-grid-community/src/gridComp/gridCtrl.ts\nvar GridCtrl = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.additionalFocusableContainers = /* @__PURE__ */ new Set();\n  }\n  setComp(view, eGridDiv, eGui) {\n    this.view = view;\n    this.eGridHostDiv = eGridDiv;\n    this.eGui = eGui;\n    this.eGui.setAttribute(\"grid-id\", this.beans.context.getGridId());\n    const { dragAndDrop, ctrlsSvc } = this.beans;\n    dragAndDrop?.registerGridDropTarget(() => this.eGui, this);\n    _stampTopLevelGridCompWithGridInstance(this.gos, eGridDiv);\n    this.createManagedBean(new LayoutFeature(this.view));\n    this.view.setRtlClass(this.gos.get(\"enableRtl\") ? \"ag-rtl\" : \"ag-ltr\");\n    const unsubscribeFromResize = _observeResize(this.beans, this.eGridHostDiv, this.onGridSizeChanged.bind(this));\n    this.addDestroyFunc(() => unsubscribeFromResize());\n    ctrlsSvc.register(\"gridCtrl\", this);\n  }\n  isDetailGrid() {\n    const el = _findTabbableParent(this.getGui());\n    return el?.getAttribute(\"row-id\")?.startsWith(\"detail\") || false;\n  }\n  getOptionalSelectors() {\n    const beans = this.beans;\n    return {\n      paginationSelector: beans.pagination?.getPaginationSelector(),\n      gridHeaderDropZonesSelector: beans.registry.getSelector(\"AG-GRID-HEADER-DROP-ZONES\"),\n      sideBarSelector: beans.sideBar?.getSelector(),\n      statusBarSelector: beans.registry?.getSelector(\"AG-STATUS-BAR\"),\n      watermarkSelector: beans.licenseManager?.getWatermarkSelector()\n    };\n  }\n  onGridSizeChanged() {\n    this.eventSvc.dispatchEvent({\n      type: \"gridSizeChanged\",\n      clientWidth: this.eGridHostDiv.clientWidth,\n      clientHeight: this.eGridHostDiv.clientHeight\n    });\n  }\n  destroyGridUi() {\n    this.view.destroyGridUi();\n  }\n  getGui() {\n    return this.eGui;\n  }\n  setResizeCursor(on) {\n    this.view.setCursor(on ? \"ew-resize\" : null);\n  }\n  disableUserSelect(on) {\n    this.view.setUserSelect(on ? \"none\" : null);\n  }\n  focusNextInnerContainer(backwards) {\n    const focusableContainers = this.getFocusableContainers();\n    const { indexWithFocus, nextIndex } = this.getNextFocusableIndex(focusableContainers, backwards);\n    if (nextIndex < 0 || nextIndex >= focusableContainers.length) {\n      return false;\n    }\n    if (nextIndex === 0) {\n      if (indexWithFocus > 0) {\n        const { visibleCols, focusSvc } = this.beans;\n        const allColumns = visibleCols.allCols;\n        const lastColumn = _last(allColumns);\n        if (focusSvc.focusGridView({ column: lastColumn, backwards: true })) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return this.focusContainer(focusableContainers[nextIndex], backwards);\n  }\n  focusInnerElement(fromBottom) {\n    const userCallbackFunction = this.gos.getCallback(\"focusGridInnerElement\");\n    if (userCallbackFunction && userCallbackFunction({ fromBottom: !!fromBottom })) {\n      return true;\n    }\n    const focusableContainers = this.getFocusableContainers();\n    const { focusSvc, visibleCols } = this.beans;\n    const allColumns = visibleCols.allCols;\n    if (fromBottom) {\n      if (focusableContainers.length > 1) {\n        return this.focusContainer(_last(focusableContainers), fromBottom);\n      }\n      const lastColumn = _last(allColumns);\n      if (focusSvc.focusGridView({ column: lastColumn, backwards: fromBottom })) {\n        return true;\n      }\n    }\n    if (this.gos.get(\"headerHeight\") === 0 || _isHeaderFocusSuppressed(this.beans)) {\n      if (focusSvc.focusGridView({ column: allColumns[0], backwards: fromBottom })) {\n        return true;\n      }\n      for (let i = 1; i < focusableContainers.length; i++) {\n        if (_focusInto(focusableContainers[i].getGui(), fromBottom)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return focusSvc.focusFirstHeader();\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.view.forceFocusOutOfContainer(up);\n  }\n  addFocusableContainer(container) {\n    this.additionalFocusableContainers.add(container);\n  }\n  removeFocusableContainer(container) {\n    this.additionalFocusableContainers.delete(container);\n  }\n  allowFocusForNextCoreContainer(up) {\n    const coreContainers = this.view.getFocusableContainers();\n    const { nextIndex, indexWithFocus } = this.getNextFocusableIndex(coreContainers, up);\n    if (indexWithFocus === -1 || nextIndex < 0 || nextIndex >= coreContainers.length) {\n      return;\n    }\n    const comp = coreContainers[nextIndex];\n    comp.setAllowFocus?.(true);\n    setTimeout(() => {\n      comp.setAllowFocus?.(false);\n    });\n  }\n  isFocusable() {\n    const beans = this.beans;\n    return !_isCellFocusSuppressed(beans) || !_isHeaderFocusSuppressed(beans) || !!beans.sideBar?.comp?.isDisplayed();\n  }\n  getNextFocusableIndex(focusableContainers, backwards) {\n    const activeEl = _getActiveDomElement(this.beans);\n    const indexWithFocus = focusableContainers.findIndex((container) => container.getGui().contains(activeEl));\n    const nextIndex = indexWithFocus + (backwards ? -1 : 1);\n    return {\n      indexWithFocus,\n      nextIndex\n    };\n  }\n  focusContainer(comp, up) {\n    comp.setAllowFocus?.(true);\n    const result = _focusInto(comp.getGui(), up, false, true);\n    comp.setAllowFocus?.(false);\n    return result;\n  }\n  getFocusableContainers() {\n    return [...this.view.getFocusableContainers(), ...this.additionalFocusableContainers];\n  }\n  destroy() {\n    this.additionalFocusableContainers.clear();\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/gridComp/gridComp.ts\nvar GridComp = class extends TabGuardComp {\n  constructor(eGridDiv) {\n    super();\n    this.gridBody = RefPlaceholder;\n    this.sideBar = RefPlaceholder;\n    this.pagination = RefPlaceholder;\n    this.rootWrapperBody = RefPlaceholder;\n    this.eGridDiv = eGridDiv;\n  }\n  postConstruct() {\n    const compProxy = {\n      destroyGridUi: () => this.destroyBean(this),\n      setRtlClass: (cssClass) => this.addCssClass(cssClass),\n      forceFocusOutOfContainer: this.forceFocusOutOfContainer.bind(this),\n      updateLayoutClasses: this.updateLayoutClasses.bind(this),\n      getFocusableContainers: this.getFocusableContainers.bind(this),\n      setUserSelect: (value) => {\n        this.getGui().style.userSelect = value != null ? value : \"\";\n        this.getGui().style.webkitUserSelect = value != null ? value : \"\";\n      },\n      setCursor: (value) => {\n        this.getGui().style.cursor = value != null ? value : \"\";\n      }\n    };\n    const ctrl = this.createManagedBean(new GridCtrl());\n    const comps = ctrl.getOptionalSelectors();\n    const template = this.createTemplate(comps);\n    const requiredComps = [GridBodySelector, ...Object.values(comps).filter((c) => !!c)];\n    this.setTemplate(template, requiredComps);\n    ctrl.setComp(compProxy, this.eGridDiv, this.getGui());\n    this.insertGridIntoDom();\n    this.initialiseTabGuard({\n      // we want to override the default behaviour to do nothing for onTabKeyDown\n      onTabKeyDown: () => void 0,\n      focusInnerElement: (fromBottom) => ctrl.focusInnerElement(fromBottom),\n      forceFocusOutWhenTabGuardsAreEmpty: true,\n      isEmpty: () => !ctrl.isFocusable()\n    });\n  }\n  insertGridIntoDom() {\n    const eGui = this.getGui();\n    this.eGridDiv.appendChild(eGui);\n    this.addDestroyFunc(() => {\n      this.eGridDiv.removeChild(eGui);\n      _logIfDebug(this.gos, \"Grid removed from DOM\");\n    });\n  }\n  updateLayoutClasses(cssClass, params) {\n    const eRootWrapperBodyClassList = this.rootWrapperBody.classList;\n    const { AUTO_HEIGHT, NORMAL, PRINT } = LayoutCssClasses;\n    const { autoHeight, normal, print } = params;\n    eRootWrapperBodyClassList.toggle(AUTO_HEIGHT, autoHeight);\n    eRootWrapperBodyClassList.toggle(NORMAL, normal);\n    eRootWrapperBodyClassList.toggle(PRINT, print);\n    this.addOrRemoveCssClass(AUTO_HEIGHT, autoHeight);\n    this.addOrRemoveCssClass(NORMAL, normal);\n    this.addOrRemoveCssClass(PRINT, print);\n  }\n  createTemplate(params) {\n    const dropZones = params.gridHeaderDropZonesSelector ? \"<ag-grid-header-drop-zones></ag-grid-header-drop-zones>\" : \"\";\n    const sideBar = params.sideBarSelector ? '<ag-side-bar data-ref=\"sideBar\"></ag-side-bar>' : \"\";\n    const statusBar = params.statusBarSelector ? \"<ag-status-bar></ag-status-bar>\" : \"\";\n    const watermark = params.watermarkSelector ? \"<ag-watermark></ag-watermark>\" : \"\";\n    const pagination = params.paginationSelector ? '<ag-pagination data-ref=\"pagination\"></ag-pagination>' : \"\";\n    const template = (\n      /* html */\n      `<div class=\"ag-root-wrapper\" role=\"presentation\">\n                ${dropZones}\n                <div class=\"ag-root-wrapper-body\" data-ref=\"rootWrapperBody\" role=\"presentation\">\n                    <ag-grid-body data-ref=\"gridBody\"></ag-grid-body>\n                    ${sideBar}\n                </div>\n                ${statusBar}\n                ${pagination}\n                ${watermark}\n            </div>`\n    );\n    return template;\n  }\n  getFocusableElement() {\n    return this.rootWrapperBody;\n  }\n  forceFocusOutOfContainer(up = false) {\n    if (!up && this.pagination?.isDisplayed()) {\n      this.pagination.forceFocusOutOfContainer(up);\n      return;\n    }\n    super.forceFocusOutOfContainer(up);\n  }\n  getFocusableContainers() {\n    const focusableContainers = [this.gridBody];\n    [this.sideBar, this.pagination].forEach((comp) => {\n      if (comp) {\n        focusableContainers.push(comp);\n      }\n    });\n    return focusableContainers.filter((el) => _isVisible(el.getGui()));\n  }\n};\n\n// packages/ag-grid-community/src/api/gridApiFunctions.ts\nvar mod = (moduleName, input) => {\n  for (const key of Object.keys(input)) {\n    input[key] = moduleName;\n  }\n  return input;\n};\nvar gridApiFunctionsMap = {\n  dispatchEvent: \"CommunityCore\",\n  // this is always registered\n  ...mod(\"CommunityCore\", {\n    destroy: 0,\n    getGridId: 0,\n    getGridOption: 0,\n    isDestroyed: 0,\n    setGridOption: 0,\n    updateGridOptions: 0\n  }),\n  ...mod(\"GridState\", {\n    getState: 0\n  }),\n  ...mod(\"SharedRowSelection\", {\n    setNodesSelected: 0,\n    selectAll: 0,\n    deselectAll: 0,\n    selectAllFiltered: 0,\n    deselectAllFiltered: 0,\n    selectAllOnCurrentPage: 0,\n    deselectAllOnCurrentPage: 0,\n    getSelectedNodes: 0,\n    getSelectedRows: 0\n  }),\n  ...mod(\"RowApi\", {\n    redrawRows: 0,\n    setRowNodeExpanded: 0,\n    getRowNode: 0,\n    addRenderedRowListener: 0,\n    getRenderedNodes: 0,\n    forEachNode: 0,\n    getFirstDisplayedRowIndex: 0,\n    getLastDisplayedRowIndex: 0,\n    getDisplayedRowAtIndex: 0,\n    getDisplayedRowCount: 0\n  }),\n  ...mod(\"ScrollApi\", {\n    getVerticalPixelRange: 0,\n    getHorizontalPixelRange: 0,\n    ensureColumnVisible: 0,\n    ensureIndexVisible: 0,\n    ensureNodeVisible: 0\n  }),\n  ...mod(\"KeyboardNavigation\", {\n    getFocusedCell: 0,\n    clearFocusedCell: 0,\n    setFocusedCell: 0,\n    tabToNextCell: 0,\n    tabToPreviousCell: 0,\n    setFocusedHeader: 0\n  }),\n  ...mod(\"EventApi\", {\n    addEventListener: 0,\n    addGlobalListener: 0,\n    removeEventListener: 0,\n    removeGlobalListener: 0\n  }),\n  ...mod(\"ValueCache\", {\n    expireValueCache: 0\n  }),\n  ...mod(\"CellApi\", {\n    getCellValue: 0\n  }),\n  ...mod(\"SharedMenu\", {\n    showColumnMenu: 0,\n    hidePopupMenu: 0\n  }),\n  ...mod(\"Sort\", {\n    onSortChanged: 0\n  }),\n  ...mod(\"PinnedRow\", {\n    getPinnedTopRowCount: 0,\n    getPinnedBottomRowCount: 0,\n    getPinnedTopRow: 0,\n    getPinnedBottomRow: 0\n  }),\n  ...mod(\"Overlay\", {\n    showLoadingOverlay: 0,\n    showNoRowsOverlay: 0,\n    hideOverlay: 0\n  }),\n  ...mod(\"RenderApi\", {\n    setGridAriaProperty: 0,\n    refreshCells: 0,\n    refreshHeader: 0,\n    isAnimationFrameQueueEmpty: 0,\n    flushAllAnimationFrames: 0,\n    getSizesForCurrentTheme: 0,\n    getCellRendererInstances: 0\n  }),\n  ...mod(\"HighlightChanges\", {\n    flashCells: 0\n  }),\n  ...mod(\"RowDrag\", {\n    addRowDropZone: 0,\n    removeRowDropZone: 0,\n    getRowDropZoneParams: 0\n  }),\n  ...mod(\"ColumnApi\", {\n    getColumnDefs: 0,\n    getColumnDef: 0,\n    getDisplayNameForColumn: 0,\n    getColumn: 0,\n    getColumns: 0,\n    applyColumnState: 0,\n    getColumnState: 0,\n    resetColumnState: 0,\n    isPinning: 0,\n    isPinningLeft: 0,\n    isPinningRight: 0,\n    getDisplayedColAfter: 0,\n    getDisplayedColBefore: 0,\n    setColumnsVisible: 0,\n    setColumnsPinned: 0,\n    getAllGridColumns: 0,\n    getDisplayedLeftColumns: 0,\n    getDisplayedCenterColumns: 0,\n    getDisplayedRightColumns: 0,\n    getAllDisplayedColumns: 0,\n    getAllDisplayedVirtualColumns: 0\n  }),\n  ...mod(\"ColumnAutoSize\", {\n    sizeColumnsToFit: 0,\n    autoSizeColumns: 0,\n    autoSizeAllColumns: 0\n  }),\n  ...mod(\"ColumnGroup\", {\n    setColumnGroupOpened: 0,\n    getColumnGroup: 0,\n    getProvidedColumnGroup: 0,\n    getDisplayNameForColumnGroup: 0,\n    getColumnGroupState: 0,\n    setColumnGroupState: 0,\n    resetColumnGroupState: 0,\n    getLeftDisplayedColumnGroups: 0,\n    getCenterDisplayedColumnGroups: 0,\n    getRightDisplayedColumnGroups: 0,\n    getAllDisplayedColumnGroups: 0\n  }),\n  ...mod(\"ColumnMove\", {\n    moveColumnByIndex: 0,\n    moveColumns: 0\n  }),\n  ...mod(\"ColumnResize\", {\n    setColumnWidths: 0\n  }),\n  ...mod(\"ColumnHover\", {\n    isColumnHovered: 0\n  }),\n  ...mod(\"EditCore\", {\n    getCellEditorInstances: 0,\n    getEditingCells: 0,\n    stopEditing: 0,\n    startEditingCell: 0\n  }),\n  ...mod(\"UndoRedoEdit\", {\n    undoCellEditing: 0,\n    redoCellEditing: 0,\n    getCurrentUndoSize: 0,\n    getCurrentRedoSize: 0\n  }),\n  ...mod(\"FilterCore\", {\n    isAnyFilterPresent: 0,\n    onFilterChanged: 0\n  }),\n  ...mod(\"ColumnFilter\", {\n    isColumnFilterPresent: 0,\n    getColumnFilterInstance: 0,\n    destroyFilter: 0,\n    setFilterModel: 0,\n    getFilterModel: 0,\n    getColumnFilterModel: 0,\n    setColumnFilterModel: 0,\n    showColumnFilter: 0\n  }),\n  ...mod(\"QuickFilter\", {\n    isQuickFilterPresent: 0,\n    getQuickFilter: 0,\n    resetQuickFilter: 0\n  }),\n  ...mod(\"Pagination\", {\n    paginationIsLastPageFound: 0,\n    paginationGetPageSize: 0,\n    paginationGetCurrentPage: 0,\n    paginationGetTotalPages: 0,\n    paginationGetRowCount: 0,\n    paginationGoToNextPage: 0,\n    paginationGoToPreviousPage: 0,\n    paginationGoToFirstPage: 0,\n    paginationGoToLastPage: 0,\n    paginationGoToPage: 0\n  }),\n  ...mod(\"CsrmSsrmSharedApi\", {\n    expandAll: 0,\n    collapseAll: 0,\n    onRowHeightChanged: 0\n  }),\n  ...mod(\"SsrmInfiniteSharedApi\", {\n    setRowCount: 0,\n    getCacheBlockState: 0,\n    isLastRowIndexKnown: 0\n  }),\n  ...mod(\"ClientSideRowModelApi\", {\n    onGroupExpandedOrCollapsed: 0,\n    refreshClientSideRowModel: 0,\n    isRowDataEmpty: 0,\n    forEachLeafNode: 0,\n    forEachNodeAfterFilter: 0,\n    forEachNodeAfterFilterAndSort: 0,\n    resetRowHeights: 0,\n    applyTransaction: 0,\n    applyTransactionAsync: 0,\n    flushAsyncTransactions: 0,\n    getBestCostNodeSelection: 0\n  }),\n  ...mod(\"CsvExport\", {\n    getDataAsCsv: 0,\n    exportDataAsCsv: 0\n  }),\n  ...mod(\"InfiniteRowModel\", {\n    refreshInfiniteCache: 0,\n    purgeInfiniteCache: 0,\n    getInfiniteRowCount: 0\n  }),\n  ...mod(\"AdvancedFilter\", {\n    getAdvancedFilterModel: 0,\n    setAdvancedFilterModel: 0,\n    showAdvancedFilterBuilder: 0,\n    hideAdvancedFilterBuilder: 0\n  }),\n  ...mod(\"IntegratedCharts\", {\n    getChartModels: 0,\n    getChartRef: 0,\n    getChartImageDataURL: 0,\n    downloadChart: 0,\n    openChartToolPanel: 0,\n    closeChartToolPanel: 0,\n    createRangeChart: 0,\n    createPivotChart: 0,\n    createCrossFilterChart: 0,\n    updateChart: 0,\n    restoreChart: 0\n  }),\n  ...mod(\"Clipboard\", {\n    copyToClipboard: 0,\n    cutToClipboard: 0,\n    copySelectedRowsToClipboard: 0,\n    copySelectedRangeToClipboard: 0,\n    copySelectedRangeDown: 0,\n    pasteFromClipboard: 0\n  }),\n  ...mod(\"ExcelExport\", {\n    getDataAsExcel: 0,\n    exportDataAsExcel: 0,\n    getSheetDataForExcel: 0,\n    getMultipleSheetsAsExcel: 0,\n    exportMultipleSheetsAsExcel: 0\n  }),\n  ...mod(\"SharedMasterDetail\", {\n    addDetailGridInfo: 0,\n    removeDetailGridInfo: 0,\n    getDetailGridInfo: 0,\n    forEachDetailGridInfo: 0\n  }),\n  ...mod(\"ContextMenu\", {\n    showContextMenu: 0\n  }),\n  ...mod(\"ColumnMenu\", {\n    showColumnChooser: 0,\n    hideColumnChooser: 0\n  }),\n  ...mod(\"CellSelection\", {\n    getCellRanges: 0,\n    addCellRange: 0,\n    clearRangeSelection: 0,\n    clearCellSelection: 0\n  }),\n  ...mod(\"SharedRowGrouping\", {\n    setRowGroupColumns: 0,\n    removeRowGroupColumns: 0,\n    addRowGroupColumns: 0,\n    getRowGroupColumns: 0,\n    moveRowGroupColumn: 0\n  }),\n  ...mod(\"SharedAggregation\", {\n    addAggFuncs: 0,\n    clearAggFuncs: 0,\n    setColumnAggFunc: 0\n  }),\n  ...mod(\"SharedPivot\", {\n    isPivotMode: 0,\n    getPivotResultColumn: 0,\n    setValueColumns: 0,\n    getValueColumns: 0,\n    removeValueColumns: 0,\n    addValueColumns: 0,\n    setPivotColumns: 0,\n    removePivotColumns: 0,\n    addPivotColumns: 0,\n    getPivotColumns: 0,\n    setPivotResultColumns: 0,\n    getPivotResultColumns: 0\n  }),\n  ...mod(\"ServerSideRowModelApi\", {\n    getServerSideSelectionState: 0,\n    setServerSideSelectionState: 0,\n    applyServerSideTransaction: 0,\n    applyServerSideTransactionAsync: 0,\n    applyServerSideRowData: 0,\n    retryServerSideLoads: 0,\n    flushServerSideAsyncTransactions: 0,\n    refreshServerSide: 0,\n    getServerSideGroupLevelState: 0\n  }),\n  ...mod(\"SideBar\", {\n    isSideBarVisible: 0,\n    setSideBarVisible: 0,\n    setSideBarPosition: 0,\n    openToolPanel: 0,\n    closeToolPanel: 0,\n    getOpenedToolPanel: 0,\n    refreshToolPanel: 0,\n    isToolPanelShowing: 0,\n    getToolPanelInstance: 0,\n    getSideBar: 0\n  }),\n  ...mod(\"StatusBar\", {\n    getStatusPanel: 0\n  })\n};\n\n// packages/ag-grid-community/src/api/apiFunctionService.ts\nvar defaultFns = {\n  isDestroyed: () => true,\n  destroy() {\n  },\n  preConstruct() {\n  },\n  postConstruct() {\n  },\n  preWireBeans() {\n  },\n  wireBeans() {\n  }\n};\nvar dispatchEvent = (beans, event) => beans.eventSvc.dispatchEvent(event);\nvar GridApiClass = class {\n};\nReflect.defineProperty(GridApiClass, \"name\", { value: \"GridApi\" });\nvar ApiFunctionService = class extends BeanStub {\n  constructor() {\n    super();\n    this.beanName = \"apiFunctionSvc\";\n    this.api = new GridApiClass();\n    this.fns = {\n      ...defaultFns,\n      // dispatchEvent is used by frameworks, also used by aligned grids to identify a grid api instance\n      dispatchEvent\n    };\n    this.preDestroyLink = \"\";\n    const { api } = this;\n    for (const key of Object.keys(gridApiFunctionsMap)) {\n      api[key] = this.makeApi(key)[key];\n    }\n  }\n  postConstruct() {\n    this.preDestroyLink = this.beans.frameworkOverrides.getDocLink(\"grid-lifecycle/#grid-pre-destroyed\");\n  }\n  addFunction(functionName, func) {\n    const { fns, beans } = this;\n    if (fns !== defaultFns) {\n      fns[functionName] = beans?.validation?.validateApiFunction(functionName, func) ?? func;\n    }\n  }\n  makeApi(apiName) {\n    return {\n      [apiName]: (...args) => {\n        const {\n          beans,\n          fns: { [apiName]: fn }\n        } = this;\n        return fn ? fn(beans, ...args) : this.apiNotFound(apiName);\n      }\n    };\n  }\n  apiNotFound(fnName) {\n    const { beans, gos, preDestroyLink } = this;\n    if (!beans) {\n      _warn(26, { fnName, preDestroyLink });\n    } else {\n      const module = gridApiFunctionsMap[fnName];\n      if (gos.assertModuleRegistered(module, `api.${fnName}`)) {\n        _warn(27, { fnName, module });\n      }\n    }\n  }\n  destroy() {\n    super.destroy();\n    this.fns = defaultFns;\n    this.beans = null;\n  }\n};\n\n// packages/ag-grid-community/src/api/coreApi.ts\nfunction getGridId(beans) {\n  return beans.context.getGridId();\n}\nfunction destroy(beans) {\n  beans.gridDestroySvc.destroy();\n}\nfunction isDestroyed(beans) {\n  return beans.gridDestroySvc.destroyCalled;\n}\nfunction getGridOption(beans, key) {\n  return beans.gos.get(key);\n}\nfunction setGridOption(beans, key, value) {\n  updateGridOptions(beans, { [key]: value });\n}\nfunction updateGridOptions(beans, options) {\n  beans.gos.updateGridOptions({ options });\n}\n\n// packages/ag-grid-community/src/rendering/dndSourceComp.ts\nvar DndSourceComp = class extends Component {\n  constructor(rowNode, column, eCell) {\n    super(\n      /* html */\n      `<div class=\"ag-drag-handle ag-row-drag\" draggable=\"true\"></div>`\n    );\n    this.rowNode = rowNode;\n    this.column = column;\n    this.eCell = eCell;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    eGui.appendChild(_createIconNoSpan(\"rowDrag\", this.beans, null));\n    this.addGuiEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n    });\n    this.addDragSource();\n    this.checkVisibility();\n  }\n  addDragSource() {\n    this.addGuiEventListener(\"dragstart\", this.onDragStart.bind(this));\n  }\n  onDragStart(dragEvent) {\n    const { rowNode, column, eCell, gos } = this;\n    const providedOnRowDrag = column.getColDef().dndSourceOnRowDrag;\n    const dataTransfer = dragEvent.dataTransfer;\n    dataTransfer.setDragImage(eCell, 0, 0);\n    if (providedOnRowDrag) {\n      const params = _addGridCommonParams(gos, {\n        rowNode,\n        dragEvent\n      });\n      providedOnRowDrag(params);\n    } else {\n      try {\n        const jsonData = JSON.stringify(rowNode.data);\n        dataTransfer.setData(\"application/json\", jsonData);\n        dataTransfer.setData(\"text/plain\", jsonData);\n      } catch (e) {\n      }\n    }\n  }\n  checkVisibility() {\n    const visible = this.column.isDndSource(this.rowNode);\n    this.setDisplayed(visible);\n  }\n};\n\n// packages/ag-grid-community/src/dragAndDrop/dragApi.ts\nfunction addRowDropZone(beans, params) {\n  beans.rowDragSvc?.rowDragFeature?.addRowDropZone(params);\n}\nfunction removeRowDropZone(beans, params) {\n  const activeDropTarget = beans.dragAndDrop?.findExternalZone(params);\n  if (activeDropTarget) {\n    beans.dragAndDrop?.removeDropTarget(activeDropTarget);\n  }\n}\nfunction getRowDropZoneParams(beans, events) {\n  return beans.rowDragSvc?.rowDragFeature?.getRowDropZone(events);\n}\n\n// packages/ag-grid-community/src/dragAndDrop/horizontalResizeService.ts\nvar HorizontalResizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"horizontalResizeSvc\";\n  }\n  addResizeBar(params) {\n    const dragSource = {\n      dragStartPixels: params.dragStartPixels || 0,\n      eElement: params.eResizeBar,\n      onDragStart: this.onDragStart.bind(this, params),\n      onDragStop: this.onDragStop.bind(this, params),\n      onDragging: this.onDragging.bind(this, params),\n      onDragCancel: this.onDragStop.bind(this, params),\n      includeTouch: true,\n      stopPropagationForTouch: true\n    };\n    const { dragSvc } = this.beans;\n    dragSvc.addDragSource(dragSource);\n    const finishedWithResizeFunc = () => dragSvc.removeDragSource(dragSource);\n    return finishedWithResizeFunc;\n  }\n  onDragStart(params, mouseEvent) {\n    this.dragStartX = mouseEvent.clientX;\n    this.setResizeIcons();\n    const shiftKey = mouseEvent instanceof MouseEvent && mouseEvent.shiftKey === true;\n    params.onResizeStart(shiftKey);\n  }\n  setResizeIcons() {\n    const ctrl = this.beans.ctrlsSvc.get(\"gridCtrl\");\n    ctrl.setResizeCursor(true);\n    ctrl.disableUserSelect(true);\n  }\n  onDragStop(params) {\n    params.onResizeEnd(this.resizeAmount);\n    this.resetIcons();\n  }\n  resetIcons() {\n    const ctrl = this.beans.ctrlsSvc.get(\"gridCtrl\");\n    ctrl.setResizeCursor(false);\n    ctrl.disableUserSelect(false);\n  }\n  onDragging(params, mouseEvent) {\n    this.resizeAmount = mouseEvent.clientX - this.dragStartX;\n    params.onResizing(this.resizeAmount);\n  }\n};\n\n// packages/ag-grid-community/src/dragAndDrop/rowDragComp.ts\nvar RowDragComp = class extends Component {\n  constructor(cellValueFn, rowNode, column, customGui, dragStartPixels, suppressVisibilityChange) {\n    super();\n    this.cellValueFn = cellValueFn;\n    this.rowNode = rowNode;\n    this.column = column;\n    this.customGui = customGui;\n    this.dragStartPixels = dragStartPixels;\n    this.suppressVisibilityChange = suppressVisibilityChange;\n    this.dragSource = null;\n  }\n  isCustomGui() {\n    return this.customGui != null;\n  }\n  postConstruct() {\n    const { beans, rowNode, column, gos } = this;\n    if (!this.customGui) {\n      this.setTemplate(\n        /* html */\n        `<div class=\"ag-drag-handle ag-row-drag\" aria-hidden=\"true\"></div>`\n      );\n      this.getGui().appendChild(_createIconNoSpan(\"rowDrag\", beans, null));\n      this.addDragSource();\n    } else {\n      this.setDragElement(this.customGui, this.dragStartPixels);\n    }\n    if (!this.suppressVisibilityChange) {\n      const strategy = gos.get(\"rowDragManaged\") ? new ManagedVisibilityStrategy(this, rowNode, column) : new NonManagedVisibilityStrategy(this, rowNode, column);\n      this.createManagedBean(strategy, this.beans.context);\n    }\n  }\n  setDragElement(dragElement, dragStartPixels) {\n    this.setTemplateFromElement(dragElement, void 0, void 0, true);\n    this.addDragSource(dragStartPixels);\n  }\n  getSelectedNodes() {\n    const rowNode = this.rowNode;\n    const isRowDragMultiRow = this.gos.get(\"rowDragMultiRow\");\n    if (!isRowDragMultiRow) {\n      return [rowNode];\n    }\n    const selection = this.beans.selectionSvc?.getSelectedNodes() ?? [];\n    return selection.indexOf(rowNode) !== -1 ? selection : [rowNode];\n  }\n  getDragItem() {\n    const { column, rowNode } = this;\n    return {\n      rowNode,\n      rowNodes: this.getSelectedNodes(),\n      columns: column ? [column] : void 0,\n      defaultTextValue: this.cellValueFn()\n    };\n  }\n  getRowDragText(column) {\n    if (column) {\n      const colDef = column.getColDef();\n      if (colDef.rowDragText) {\n        return colDef.rowDragText;\n      }\n    }\n    return this.gos.get(\"rowDragText\");\n  }\n  addDragSource(dragStartPixels = 4) {\n    if (this.dragSource) {\n      this.removeDragSource();\n    }\n    const eGui = this.getGui();\n    if (this.gos.get(\"enableCellTextSelection\")) {\n      this.removeMouseDownListener();\n      this.mouseDownListener = this.addManagedElementListeners(eGui, {\n        mousedown: (e) => {\n          e?.preventDefault();\n        }\n      })[0];\n    }\n    const translate = this.getLocaleTextFunc();\n    this.dragSource = {\n      type: 2 /* RowDrag */,\n      eElement: eGui,\n      dragItemName: () => {\n        const dragItem = this.getDragItem();\n        const dragItemCount = dragItem.rowNodes?.length || 1;\n        const rowDragText = this.getRowDragText(this.column);\n        if (rowDragText) {\n          return rowDragText(dragItem, dragItemCount);\n        }\n        return dragItemCount === 1 ? this.cellValueFn() : `${dragItemCount} ${translate(\"rowDragRows\", \"rows\")}`;\n      },\n      getDragItem: () => this.getDragItem(),\n      dragStartPixels,\n      dragSourceDomDataKey: this.gos.getDomDataKey()\n    };\n    this.beans.dragAndDrop.addDragSource(this.dragSource, true);\n  }\n  destroy() {\n    this.removeDragSource();\n    this.removeMouseDownListener();\n    super.destroy();\n  }\n  removeDragSource() {\n    if (!this.dragSource) {\n      return;\n    }\n    this.beans.dragAndDrop.removeDragSource(this.dragSource);\n    this.dragSource = null;\n  }\n  removeMouseDownListener() {\n    if (!this.mouseDownListener) {\n      return;\n    }\n    this.mouseDownListener();\n    this.mouseDownListener = void 0;\n  }\n};\nvar VisibilityStrategy = class extends BeanStub {\n  constructor(parent, rowNode, column) {\n    super();\n    this.parent = parent;\n    this.rowNode = rowNode;\n    this.column = column;\n  }\n  setDisplayedOrVisible(neverDisplayed) {\n    const displayedOptions = { skipAriaHidden: true };\n    if (neverDisplayed) {\n      this.parent.setDisplayed(false, displayedOptions);\n    } else {\n      let shown = true;\n      let isShownSometimes = false;\n      const { column, rowNode, parent } = this;\n      if (column) {\n        shown = column.isRowDrag(rowNode) || parent.isCustomGui();\n        isShownSometimes = typeof column.getColDef().rowDrag === \"function\";\n      }\n      if (isShownSometimes) {\n        parent.setDisplayed(true, displayedOptions);\n        parent.setVisible(shown, displayedOptions);\n      } else {\n        parent.setDisplayed(shown, displayedOptions);\n        parent.setVisible(true, displayedOptions);\n      }\n    }\n  }\n};\nvar NonManagedVisibilityStrategy = class extends VisibilityStrategy {\n  postConstruct() {\n    this.addManagedPropertyListener(\"suppressRowDrag\", this.onSuppressRowDrag.bind(this));\n    const listener = this.workOutVisibility.bind(this);\n    this.addManagedListeners(this.rowNode, {\n      dataChanged: listener,\n      cellChanged: listener\n    });\n    this.addManagedListeners(this.beans.eventSvc, { newColumnsLoaded: listener });\n    this.workOutVisibility();\n  }\n  onSuppressRowDrag() {\n    this.workOutVisibility();\n  }\n  workOutVisibility() {\n    const neverDisplayed = this.gos.get(\"suppressRowDrag\");\n    this.setDisplayedOrVisible(neverDisplayed);\n  }\n};\nvar ManagedVisibilityStrategy = class extends VisibilityStrategy {\n  postConstruct() {\n    const listener = this.workOutVisibility.bind(this);\n    this.addManagedListeners(this.beans.eventSvc, {\n      sortChanged: listener,\n      filterChanged: listener,\n      columnRowGroupChanged: listener,\n      newColumnsLoaded: listener\n    });\n    this.addManagedListeners(this.rowNode, {\n      dataChanged: listener,\n      cellChanged: listener\n    });\n    this.addManagedPropertyListener(\"suppressRowDrag\", this.onSuppressRowDrag.bind(this));\n    this.workOutVisibility();\n  }\n  onSuppressRowDrag() {\n    this.workOutVisibility();\n  }\n  workOutVisibility() {\n    const { rowDragSvc, dragAndDrop, gos } = this.beans;\n    const rowDragFeature = rowDragSvc.rowDragFeature;\n    const shouldPreventRowMove = rowDragFeature && rowDragFeature.shouldPreventRowMove();\n    const suppressRowDrag = gos.get(\"suppressRowDrag\");\n    const hasExternalDropZones = dragAndDrop.hasExternalDropZones();\n    const neverDisplayed = shouldPreventRowMove && !hasExternalDropZones || suppressRowDrag;\n    this.setDisplayedOrVisible(neverDisplayed);\n  }\n};\n\n// packages/ag-grid-community/src/dragAndDrop/rowDragService.ts\nvar RowDragService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowDragSvc\";\n  }\n  setupRowDrag(element, ctrl) {\n    const rowDragFeature = ctrl.createManagedBean(new RowDragFeature(element));\n    const dragAndDrop = this.beans.dragAndDrop;\n    dragAndDrop.addDropTarget(rowDragFeature);\n    ctrl.addDestroyFunc(() => dragAndDrop.removeDropTarget(rowDragFeature));\n    this.rowDragFeature = rowDragFeature;\n  }\n  createRowDragComp(cellValueFn, rowNode, column, customGui, dragStartPixels, suppressVisibilityChange) {\n    return new RowDragComp(cellValueFn, rowNode, column, customGui, dragStartPixels, suppressVisibilityChange);\n  }\n  createRowDragCompForRow(rowNode, element) {\n    if (_isCellSelectionEnabled(this.gos)) {\n      return void 0;\n    }\n    const translate = this.getLocaleTextFunc();\n    return this.createRowDragComp(\n      () => `1 ${translate(\"rowDragRow\", \"row\")}`,\n      rowNode,\n      void 0,\n      element,\n      void 0,\n      true\n    );\n  }\n  createRowDragCompForCell(rowNode, column, cellValueFn, element, dragStartPixels, suppressVisibilityChange) {\n    const gos = this.gos;\n    if (gos.get(\"rowDragManaged\")) {\n      if (!_isClientSideRowModel(gos) || gos.get(\"pagination\")) {\n        return void 0;\n      }\n    }\n    const rowDragComp = this.createRowDragComp(\n      cellValueFn,\n      rowNode,\n      column,\n      element,\n      dragStartPixels,\n      suppressVisibilityChange\n    );\n    return rowDragComp;\n  }\n};\n\n// packages/ag-grid-community/src/dragAndDrop/dragModule.ts\nvar DragModule = {\n  moduleName: \"Drag\",\n  version: VERSION,\n  beans: [DragService]\n};\nvar DragAndDropModule = {\n  moduleName: \"DragAndDrop\",\n  version: VERSION,\n  dynamicBeans: {\n    dndSourceComp: DndSourceComp\n  },\n  icons: {\n    // drag handle used to pick up draggable rows\n    rowDrag: \"grip\"\n  }\n};\nvar SharedDragAndDropModule = {\n  moduleName: \"SharedDragAndDrop\",\n  version: VERSION,\n  beans: [DragAndDropService],\n  dependsOn: [DragModule],\n  userComponents: {\n    agDragAndDropImage: DragAndDropImageComponent2\n  },\n  icons: {\n    // shown on drag and drop image component icon while dragging column to the side of the grid to pin\n    columnMovePin: \"pin\",\n    // shown on drag and drop image component icon while dragging over part of the page that is not a drop zone\n    columnMoveHide: \"eye-slash\",\n    // shown on drag and drop image component icon while dragging columns to reorder\n    columnMoveMove: \"arrows\",\n    // animating icon shown when dragging a column to the right of the grid causes horizontal scrolling\n    columnMoveLeft: \"left\",\n    // animating icon shown when dragging a column to the left of the grid causes horizontal scrolling\n    columnMoveRight: \"right\",\n    // shown on drag and drop image component icon while dragging over Row Groups drop zone\n    columnMoveGroup: \"group\",\n    // shown on drag and drop image component icon while dragging over Values drop zone\n    columnMoveValue: \"aggregation\",\n    // shown on drag and drop image component icon while dragging over pivot drop zone\n    columnMovePivot: \"pivot\",\n    // shown on drag and drop image component icon while dragging over drop zone that doesn't support it, e.g.\n    // string column over aggregation drop zone\n    dropNotAllowed: \"not-allowed\",\n    // drag handle used to pick up draggable rows\n    rowDrag: \"grip\"\n  }\n};\nvar RowDragModule = {\n  moduleName: \"RowDrag\",\n  version: VERSION,\n  beans: [RowDragService],\n  apiFunctions: {\n    addRowDropZone,\n    removeRowDropZone,\n    getRowDropZoneParams\n  },\n  dependsOn: [SharedDragAndDropModule]\n};\nvar HorizontalResizeModule = {\n  moduleName: \"HorizontalResize\",\n  version: VERSION,\n  beans: [HorizontalResizeService],\n  dependsOn: [DragModule]\n};\n\n// packages/ag-grid-community/src/columnMove/column-moving.css-GENERATED.ts\nvar columnMovingCSS = (\n  /*css*/\n  `:where(.ag-ltr) :where(.ag-column-moving){.ag-cell,.ag-header-cell,.ag-spanned-cell-wrapper{transition:left .2s}.ag-header-group-cell{transition:left .2s,width .2s}}:where(.ag-rtl) :where(.ag-column-moving){.ag-cell,.ag-header-cell,.ag-spanned-cell-wrapper{transition:right .2s}.ag-header-group-cell{transition:right .2s,width .2s}}`\n);\n\n// packages/ag-grid-community/src/columnMove/columnAnimationService.ts\nvar ColumnAnimationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colAnimation\";\n    this.executeNextFuncs = [];\n    this.executeLaterFuncs = [];\n    this.active = false;\n    // activeNext starts with active but it is reset earlier after the nextFuncs are cleared\n    // to prevent calls made to executeNextVMTurn from queuing functions after executeNextFuncs has already been flushed,\n    this.activeNext = false;\n    this.suppressAnimation = false;\n    this.animationThreadCount = 0;\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, (p) => this.gridBodyCtrl = p.gridBodyCtrl);\n  }\n  isActive() {\n    return this.active && !this.suppressAnimation;\n  }\n  setSuppressAnimation(suppress) {\n    this.suppressAnimation = suppress;\n  }\n  start() {\n    if (this.active) {\n      return;\n    }\n    const { gos } = this;\n    if (gos.get(\"suppressColumnMoveAnimation\")) {\n      return;\n    }\n    if (gos.get(\"enableRtl\")) {\n      return;\n    }\n    this.ensureAnimationCssClassPresent();\n    this.active = true;\n    this.activeNext = true;\n  }\n  finish() {\n    if (!this.active) {\n      return;\n    }\n    this.flush(\n      () => this.activeNext = false,\n      () => this.active = false\n    );\n  }\n  executeNextVMTurn(func) {\n    if (this.activeNext) {\n      this.executeNextFuncs.push(func);\n    } else {\n      func();\n    }\n  }\n  executeLaterVMTurn(func) {\n    if (this.active) {\n      this.executeLaterFuncs.push(func);\n    } else {\n      func();\n    }\n  }\n  ensureAnimationCssClassPresent() {\n    this.animationThreadCount++;\n    const animationThreadCountCopy = this.animationThreadCount;\n    const { gridBodyCtrl } = this;\n    gridBodyCtrl.setColumnMovingCss(true);\n    this.executeLaterFuncs.push(() => {\n      if (this.animationThreadCount === animationThreadCountCopy) {\n        gridBodyCtrl.setColumnMovingCss(false);\n      }\n    });\n  }\n  flush(callbackNext, callbackLater) {\n    const { executeNextFuncs, executeLaterFuncs } = this;\n    if (executeNextFuncs.length === 0 && executeLaterFuncs.length === 0) {\n      callbackNext();\n      callbackLater();\n      return;\n    }\n    const runFuncs = (queue) => {\n      while (queue.length) {\n        const func = queue.pop();\n        if (func) {\n          func();\n        }\n      }\n    };\n    this.beans.frameworkOverrides.wrapIncoming(() => {\n      window.setTimeout(() => {\n        callbackNext();\n        runFuncs(executeNextFuncs);\n      }, 0);\n      window.setTimeout(() => {\n        callbackLater();\n        runFuncs(executeLaterFuncs);\n      }, 200);\n    });\n  }\n};\n\n// packages/ag-grid-community/src/columnMove/columnMoveApi.ts\nfunction moveColumnByIndex(beans, fromIndex, toIndex) {\n  beans.colMoves?.moveColumnByIndex(fromIndex, toIndex, \"api\");\n}\nfunction moveColumns(beans, columnsToMoveKeys, toIndex) {\n  beans.colMoves?.moveColumns(columnsToMoveKeys, toIndex, \"api\");\n}\n\n// packages/ag-grid-community/src/columnMove/columnDrag/bodyDropPivotTarget.ts\nvar BodyDropPivotTarget = class extends BeanStub {\n  constructor(pinned) {\n    super();\n    this.pinned = pinned;\n    this.columnsToAggregate = [];\n    this.columnsToGroup = [];\n    this.columnsToPivot = [];\n  }\n  /** Callback for when drag enters */\n  onDragEnter(draggingEvent) {\n    this.clearColumnsList();\n    if (this.gos.get(\"functionsReadOnly\")) {\n      return;\n    }\n    const dragColumns = draggingEvent.dragItem.columns;\n    if (!dragColumns) {\n      return;\n    }\n    dragColumns.forEach((column) => {\n      if (!column.isPrimary()) {\n        return;\n      }\n      if (column.isAnyFunctionActive()) {\n        return;\n      }\n      if (column.isAllowValue()) {\n        this.columnsToAggregate.push(column);\n      } else if (column.isAllowRowGroup()) {\n        this.columnsToGroup.push(column);\n      } else if (column.isAllowPivot()) {\n        this.columnsToPivot.push(column);\n      }\n    });\n  }\n  getIconName() {\n    const totalColumns = this.columnsToAggregate.length + this.columnsToGroup.length + this.columnsToPivot.length;\n    if (totalColumns > 0) {\n      return this.pinned ? \"pinned\" : \"move\";\n    }\n    return null;\n  }\n  /** Callback for when drag leaves */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onDragLeave(draggingEvent) {\n    this.clearColumnsList();\n  }\n  clearColumnsList() {\n    this.columnsToAggregate.length = 0;\n    this.columnsToGroup.length = 0;\n    this.columnsToPivot.length = 0;\n  }\n  /** Callback for when dragging */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onDragging(draggingEvent) {\n  }\n  /** Callback for when drag stops */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onDragStop(draggingEvent) {\n    const { valueColsSvc, rowGroupColsSvc, pivotColsSvc } = this.beans;\n    if (this.columnsToAggregate.length > 0) {\n      valueColsSvc?.addColumns(this.columnsToAggregate, \"toolPanelDragAndDrop\");\n    }\n    if (this.columnsToGroup.length > 0) {\n      rowGroupColsSvc?.addColumns(this.columnsToGroup, \"toolPanelDragAndDrop\");\n    }\n    if (this.columnsToPivot.length > 0) {\n      pivotColsSvc?.addColumns(this.columnsToPivot, \"toolPanelDragAndDrop\");\n    }\n  }\n  onDragCancel() {\n    this.clearColumnsList();\n  }\n};\n\n// packages/ag-grid-community/src/columnMove/internalColumnMoveUtils.ts\nfunction sortColsLikeCols(colsList, cols) {\n  if (!cols || cols.length <= 1) {\n    return;\n  }\n  const notAllColsPresent = cols.filter((c) => colsList.indexOf(c) < 0).length > 0;\n  if (notAllColsPresent) {\n    return;\n  }\n  cols.sort((a, b) => {\n    const indexA = colsList.indexOf(a);\n    const indexB = colsList.indexOf(b);\n    return indexA - indexB;\n  });\n}\nfunction getBestColumnMoveIndexFromXPosition(params) {\n  const { isFromHeader, fromLeft, xPosition, fromEnter, fakeEvent, pinned, gos, colModel, colMoves, visibleCols } = params;\n  let { allMovingColumns } = params;\n  if (isFromHeader) {\n    const newCols = [];\n    allMovingColumns.forEach((col) => {\n      let movingGroup = null;\n      let parent = col.getParent();\n      while (parent != null && parent.getDisplayedLeafColumns().length === 1) {\n        movingGroup = parent;\n        parent = parent.getParent();\n      }\n      if (movingGroup != null) {\n        const isMarryChildren = !!movingGroup.getColGroupDef()?.marryChildren;\n        const columnsToMove = isMarryChildren ? (\n          // when marry children is true, we also have to move hidden\n          // columns within the group, so grab them from the `providedColumnGroup`\n          movingGroup.getProvidedColumnGroup().getLeafColumns()\n        ) : movingGroup.getLeafColumns();\n        columnsToMove.forEach((newCol) => {\n          if (!newCols.includes(newCol)) {\n            newCols.push(newCol);\n          }\n        });\n      } else if (!newCols.includes(col)) {\n        newCols.push(col);\n      }\n    });\n    allMovingColumns = newCols;\n  }\n  const allMovingColumnsOrdered = allMovingColumns.slice();\n  sortColsLikeCols(colModel.getCols(), allMovingColumnsOrdered);\n  const validMoves = calculateValidMoves({\n    movingCols: allMovingColumnsOrdered,\n    draggingRight: fromLeft,\n    xPosition,\n    pinned,\n    gos,\n    colModel,\n    visibleCols\n  });\n  const oldIndex = calculateOldIndex(allMovingColumnsOrdered, colModel);\n  if (validMoves.length === 0) {\n    return;\n  }\n  const firstValidMove = validMoves[0];\n  let constrainDirection = oldIndex !== null && !fromEnter;\n  if (isFromHeader) {\n    constrainDirection = oldIndex !== null;\n  }\n  if (constrainDirection && !fakeEvent) {\n    if (!fromLeft && firstValidMove >= oldIndex) {\n      return;\n    }\n    if (fromLeft && firstValidMove <= oldIndex) {\n      return;\n    }\n  }\n  const displayedCols = visibleCols.allCols;\n  const potentialMoves = [];\n  let targetOrder = null;\n  for (let i = 0; i < validMoves.length; i++) {\n    const move = validMoves[i];\n    const order = colMoves.getProposedColumnOrder(allMovingColumnsOrdered, move);\n    if (!colMoves.doesOrderPassRules(order)) {\n      continue;\n    }\n    const displayedOrder = order.filter((col) => displayedCols.includes(col));\n    if (targetOrder === null) {\n      targetOrder = displayedOrder;\n    } else if (!_areEqual(displayedOrder, targetOrder)) {\n      break;\n    }\n    const fragCount = groupFragCount(order);\n    potentialMoves.push({ move, fragCount });\n  }\n  if (potentialMoves.length === 0) {\n    return;\n  }\n  potentialMoves.sort((a, b) => a.fragCount - b.fragCount);\n  const toIndex = potentialMoves[0].move;\n  if (toIndex > colModel.getCols().length - allMovingColumns.length) {\n    return;\n  }\n  return { columns: allMovingColumns, toIndex };\n}\nfunction attemptMoveColumns(params) {\n  const { columns, toIndex } = getBestColumnMoveIndexFromXPosition(params) || {};\n  const { finished, colMoves } = params;\n  if (!columns || toIndex == null) {\n    return null;\n  }\n  colMoves.moveColumns(columns, toIndex, \"uiColumnMoved\", finished);\n  return finished ? null : { columns, toIndex };\n}\nfunction calculateOldIndex(movingCols, colModel) {\n  const gridCols = colModel.getCols();\n  const indexes = _sortNumerically(movingCols.map((col) => gridCols.indexOf(col)));\n  const firstIndex = indexes[0];\n  const lastIndex = _last(indexes);\n  const spread = lastIndex - firstIndex;\n  const gapsExist = spread !== indexes.length - 1;\n  return gapsExist ? null : firstIndex;\n}\nfunction groupFragCount(columns) {\n  function parents(col) {\n    const result = [];\n    let parent = col.getOriginalParent();\n    while (parent != null) {\n      result.push(parent);\n      parent = parent.getOriginalParent();\n    }\n    return result;\n  }\n  let count = 0;\n  for (let i = 0; i < columns.length - 1; i++) {\n    let a = parents(columns[i]);\n    let b = parents(columns[i + 1]);\n    [a, b] = a.length > b.length ? [a, b] : [b, a];\n    a.forEach((parent) => {\n      if (b.indexOf(parent) === -1) {\n        count++;\n      }\n    });\n  }\n  return count;\n}\nfunction getDisplayedColumns(visibleCols, type) {\n  switch (type) {\n    case \"left\":\n      return visibleCols.leftCols;\n    case \"right\":\n      return visibleCols.rightCols;\n    default:\n      return visibleCols.centerCols;\n  }\n}\nfunction calculateValidMoves(params) {\n  const { movingCols, draggingRight, xPosition, pinned, gos, colModel, visibleCols } = params;\n  const isMoveBlocked = gos.get(\"suppressMovableColumns\") || movingCols.some((col) => col.getColDef().suppressMovable);\n  if (isMoveBlocked) {\n    return [];\n  }\n  const allDisplayedCols = getDisplayedColumns(visibleCols, pinned);\n  const allGridCols = colModel.getCols();\n  const movingDisplayedCols = allDisplayedCols.filter((col) => movingCols.includes(col));\n  const otherDisplayedCols = allDisplayedCols.filter((col) => !movingCols.includes(col));\n  const otherGridCols = allGridCols.filter((col) => !movingCols.includes(col));\n  let displayIndex = 0;\n  let availableWidth = xPosition;\n  if (draggingRight) {\n    let widthOfMovingDisplayedCols = 0;\n    movingDisplayedCols.forEach((col) => widthOfMovingDisplayedCols += col.getActualWidth());\n    availableWidth -= widthOfMovingDisplayedCols;\n  }\n  if (availableWidth > 0) {\n    for (let i = 0; i < otherDisplayedCols.length; i++) {\n      const col = otherDisplayedCols[i];\n      availableWidth -= col.getActualWidth();\n      if (availableWidth < 0) {\n        break;\n      }\n      displayIndex++;\n    }\n    if (draggingRight) {\n      displayIndex++;\n    }\n  }\n  let firstValidMove;\n  if (displayIndex > 0) {\n    const leftColumn = otherDisplayedCols[displayIndex - 1];\n    firstValidMove = otherGridCols.indexOf(leftColumn) + 1;\n  } else {\n    firstValidMove = otherGridCols.indexOf(otherDisplayedCols[0]);\n    if (firstValidMove === -1) {\n      firstValidMove = 0;\n    }\n  }\n  const validMoves = [firstValidMove];\n  const numberComparator = (a, b) => a - b;\n  if (draggingRight) {\n    let pointer = firstValidMove + 1;\n    const lastIndex = allGridCols.length - 1;\n    while (pointer <= lastIndex) {\n      validMoves.push(pointer);\n      pointer++;\n    }\n    validMoves.sort(numberComparator);\n  } else {\n    let pointer = firstValidMove;\n    const lastIndex = allGridCols.length - 1;\n    let displacedCol = allGridCols[pointer];\n    while (pointer <= lastIndex && allDisplayedCols.indexOf(displacedCol) < 0) {\n      pointer++;\n      validMoves.push(pointer);\n      displacedCol = allGridCols[pointer];\n    }\n    pointer = firstValidMove - 1;\n    const firstDisplayIndex = 0;\n    while (pointer >= firstDisplayIndex) {\n      validMoves.push(pointer);\n      pointer--;\n    }\n    validMoves.sort(numberComparator).reverse();\n  }\n  return validMoves;\n}\nfunction normaliseX(params) {\n  const { pinned, fromKeyboard, gos, ctrlsSvc, useHeaderRow, skipScrollPadding } = params;\n  let eViewport = ctrlsSvc.getHeaderRowContainerCtrl(pinned)?.eViewport;\n  let { x } = params;\n  if (!eViewport) {\n    return 0;\n  }\n  if (fromKeyboard) {\n    x -= eViewport.getBoundingClientRect().left;\n  }\n  if (gos.get(\"enableRtl\")) {\n    if (useHeaderRow) {\n      eViewport = eViewport.querySelector(\".ag-header-row\");\n    }\n    x = eViewport.clientWidth - x;\n  }\n  if (pinned == null && !skipScrollPadding) {\n    x += ctrlsSvc.get(\"center\").getCenterViewportScrollLeft();\n  }\n  return x;\n}\nfunction setColumnsMoving(columns, isMoving) {\n  for (const column of columns) {\n    column.moving = isMoving;\n    column.dispatchColEvent(\"movingChanged\", \"uiColumnMoved\");\n  }\n}\n\n// packages/ag-grid-community/src/columnMove/columnDrag/moveColumnFeature.ts\nvar MOVE_FAIL_THRESHOLD = 7;\nvar SCROLL_MOVE_WIDTH = 100;\nvar SCROLL_GAP_NEEDED_BEFORE_MOVE = SCROLL_MOVE_WIDTH / 2;\nvar SCROLL_ACCELERATION_RATE = 5;\nvar SCROLL_TIME_INTERVAL = 100;\nvar MoveColumnFeature = class extends BeanStub {\n  constructor(pinned) {\n    super();\n    this.pinned = pinned;\n    this.needToMoveLeft = false;\n    this.needToMoveRight = false;\n    this.lastMovedInfo = null;\n    this.isCenterContainer = !_exists(pinned);\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n  }\n  getIconName() {\n    const { pinned, lastDraggingEvent } = this;\n    const columns = lastDraggingEvent?.dragItem.columns ?? [];\n    for (const col of columns) {\n      const colPinned = col.getPinned();\n      if (col.getColDef().lockPinned) {\n        if (colPinned == pinned) {\n          return \"move\";\n        }\n        continue;\n      }\n      if (colPinned === pinned || !pinned) {\n        return \"move\";\n      }\n      if (!colPinned && pinned) {\n        return \"pinned\";\n      }\n    }\n    return \"notAllowed\";\n  }\n  onDragEnter(draggingEvent) {\n    const dragItem = draggingEvent.dragItem;\n    const columns = dragItem.columns;\n    const dragCameFromToolPanel = draggingEvent.dragSource.type === 0 /* ToolPanel */;\n    if (dragCameFromToolPanel) {\n      this.setColumnsVisible(columns, true, \"uiColumnDragged\");\n    } else {\n      const visibleState = dragItem.visibleState;\n      const visibleColumns = (columns || []).filter((column) => visibleState[column.getId()]);\n      this.setColumnsVisible(visibleColumns, true, \"uiColumnDragged\");\n    }\n    if (!this.gos.get(\"suppressMoveWhenColumnDragging\")) {\n      this.attemptToPinColumns(columns, this.pinned);\n    }\n    this.onDragging(draggingEvent, true, true);\n  }\n  onDragging(draggingEvent = this.lastDraggingEvent, fromEnter = false, fakeEvent = false, finished = false) {\n    const { gos, ctrlsSvc } = this.beans;\n    const isSuppressMoveWhenDragging = gos.get(\"suppressMoveWhenColumnDragging\");\n    if (finished && !isSuppressMoveWhenDragging) {\n      this.finishColumnMoving();\n      return;\n    }\n    this.lastDraggingEvent = draggingEvent;\n    if (!draggingEvent || !finished && _missing(draggingEvent.hDirection)) {\n      return;\n    }\n    const mouseX = normaliseX({\n      x: draggingEvent.x,\n      pinned: this.pinned,\n      gos,\n      ctrlsSvc\n    });\n    if (!fromEnter) {\n      this.checkCenterForScrolling(mouseX);\n    }\n    if (isSuppressMoveWhenDragging) {\n      this.handleColumnDragWhileSuppressingMovement(draggingEvent, fromEnter, fakeEvent, mouseX, finished);\n    } else {\n      this.handleColumnDragWhileAllowingMovement(draggingEvent, fromEnter, fakeEvent, mouseX, finished);\n    }\n  }\n  onDragLeave() {\n    this.ensureIntervalCleared();\n    this.clearHighlighted();\n    this.lastMovedInfo = null;\n  }\n  onDragStop() {\n    this.onDragging(this.lastDraggingEvent, false, true, true);\n    this.ensureIntervalCleared();\n    this.lastMovedInfo = null;\n  }\n  onDragCancel() {\n    this.clearHighlighted();\n    this.ensureIntervalCleared();\n    this.lastMovedInfo = null;\n  }\n  setColumnsVisible(columns, visible, source) {\n    if (!columns) {\n      return;\n    }\n    const allowedCols = columns.filter((c) => !c.getColDef().lockVisible);\n    this.beans.colModel.setColsVisible(allowedCols, visible, source);\n  }\n  finishColumnMoving() {\n    this.clearHighlighted();\n    const lastMovedInfo = this.lastMovedInfo;\n    if (!lastMovedInfo) {\n      return;\n    }\n    const { columns, toIndex } = lastMovedInfo;\n    this.beans.colMoves.moveColumns(columns, toIndex, \"uiColumnMoved\", true);\n  }\n  handleColumnDragWhileSuppressingMovement(draggingEvent, fromEnter, fakeEvent, mouseX, finished) {\n    const allMovingColumns = this.getAllMovingColumns(draggingEvent, true);\n    if (finished) {\n      const isAttemptingToPin = this.isAttemptingToPin(allMovingColumns);\n      if (isAttemptingToPin) {\n        this.attemptToPinColumns(allMovingColumns, void 0, true);\n      }\n      const { fromLeft, xPosition } = this.getNormalisedXPositionInfo(allMovingColumns, isAttemptingToPin) || {};\n      if (fromLeft == null || xPosition == null) {\n        this.finishColumnMoving();\n        return;\n      }\n      this.moveColumnsAfterHighlight({\n        allMovingColumns,\n        xPosition,\n        fromEnter,\n        fakeEvent,\n        fromLeft\n      });\n    } else {\n      if (!this.beans.dragAndDrop.isDropZoneWithinThisGrid(draggingEvent)) {\n        return;\n      }\n      this.highlightHoveredColumn(allMovingColumns, mouseX);\n    }\n  }\n  handleColumnDragWhileAllowingMovement(draggingEvent, fromEnter, fakeEvent, mouseX, finished) {\n    const allMovingColumns = this.getAllMovingColumns(draggingEvent);\n    const fromLeft = this.normaliseDirection(draggingEvent.hDirection) === \"right\";\n    const isFromHeader = draggingEvent.dragSource.type === 1 /* HeaderCell */;\n    const params = this.getMoveColumnParams({\n      allMovingColumns,\n      isFromHeader,\n      xPosition: mouseX,\n      fromLeft,\n      fromEnter,\n      fakeEvent\n    });\n    const lastMovedInfo = attemptMoveColumns({ ...params, finished });\n    if (lastMovedInfo) {\n      this.lastMovedInfo = lastMovedInfo;\n    }\n  }\n  getAllMovingColumns(draggingEvent, useSplit = false) {\n    const dragItem = draggingEvent.dragSource.getDragItem();\n    let columns = null;\n    if (useSplit) {\n      columns = dragItem.columnsInSplit;\n      if (!columns) {\n        columns = dragItem.columns;\n      }\n    } else {\n      columns = dragItem.columns;\n    }\n    const conditionCallback = (col) => col.getColDef().lockPinned ? col.getPinned() == this.pinned : true;\n    if (!columns) {\n      return [];\n    }\n    return columns.filter(conditionCallback);\n  }\n  getMoveColumnParams(params) {\n    const { allMovingColumns, isFromHeader, xPosition, fromLeft, fromEnter, fakeEvent } = params;\n    const { gos, colModel, colMoves, visibleCols } = this.beans;\n    return {\n      allMovingColumns,\n      isFromHeader,\n      fromLeft,\n      xPosition,\n      pinned: this.pinned,\n      fromEnter,\n      fakeEvent,\n      gos,\n      colModel,\n      colMoves,\n      visibleCols\n    };\n  }\n  highlightHoveredColumn(movingColumns, mouseX) {\n    const { gos, colModel } = this.beans;\n    const isRtl = gos.get(\"enableRtl\");\n    const consideredColumns = colModel.getCols().filter((col) => col.isVisible() && col.getPinned() === this.pinned);\n    let start = null;\n    let width = null;\n    let targetColumn = null;\n    for (const col of consideredColumns) {\n      width = col.getActualWidth();\n      start = this.getNormalisedColumnLeft(col, 0, isRtl);\n      if (start != null) {\n        const end = start + width;\n        if (start <= mouseX && end >= mouseX) {\n          targetColumn = col;\n          break;\n        }\n      }\n      start = null;\n      width = null;\n    }\n    if (!targetColumn) {\n      for (let i = consideredColumns.length - 1; i >= 0; i--) {\n        const currentColumn = consideredColumns[i];\n        const parent = consideredColumns[i].getParent();\n        if (!parent) {\n          targetColumn = currentColumn;\n          break;\n        }\n        const leafDisplayedCols = parent?.getDisplayedLeafColumns();\n        if (leafDisplayedCols.length) {\n          targetColumn = _last(leafDisplayedCols);\n          break;\n        }\n      }\n      if (!targetColumn) {\n        return;\n      }\n      start = this.getNormalisedColumnLeft(targetColumn, 0, isRtl);\n      width = targetColumn.getActualWidth();\n    } else if (movingColumns.indexOf(targetColumn) !== -1) {\n      targetColumn = null;\n    }\n    if (this.lastHighlightedColumn?.column !== targetColumn) {\n      this.clearHighlighted();\n    }\n    if (targetColumn == null || start == null || width == null) {\n      return;\n    }\n    let position;\n    if (mouseX - start < width / 2 !== isRtl) {\n      position = 0 /* Before */;\n    } else {\n      position = 1 /* After */;\n    }\n    setColumnHighlighted(targetColumn, position);\n    this.lastHighlightedColumn = { column: targetColumn, position };\n  }\n  getNormalisedXPositionInfo(allMovingColumns, isAttemptingToPin) {\n    const { gos, visibleCols } = this.beans;\n    const isRtl = gos.get(\"enableRtl\");\n    const { firstMovingCol, column, position } = this.getColumnMoveAndTargetInfo(\n      allMovingColumns,\n      isAttemptingToPin,\n      isRtl\n    );\n    if (!firstMovingCol || !column || position == null) {\n      return;\n    }\n    const visibleColumns = visibleCols.allCols;\n    const movingColIndex = visibleColumns.indexOf(firstMovingCol);\n    const targetIndex = visibleColumns.indexOf(column);\n    const isBefore = position === 0 /* Before */ !== isRtl;\n    const fromLeft = movingColIndex < targetIndex || movingColIndex === targetIndex && !isBefore;\n    let diff = 0;\n    if (isBefore) {\n      if (fromLeft) {\n        diff -= 1;\n      }\n    } else {\n      if (!fromLeft) {\n        diff += 1;\n      }\n    }\n    if (targetIndex + diff === movingColIndex) {\n      return;\n    }\n    const targetColumn = visibleColumns[targetIndex + diff];\n    if (!targetColumn) {\n      return;\n    }\n    const xPosition = this.getNormalisedColumnLeft(targetColumn, 20, isRtl);\n    return { fromLeft, xPosition };\n  }\n  getColumnMoveAndTargetInfo(allMovingColumns, isAttemptingToPin, isRtl) {\n    const lastHighlightedColumn = this.lastHighlightedColumn || {};\n    const { firstMovingCol, lastMovingCol } = findFirstAndLastMovingColumns(allMovingColumns);\n    if (!firstMovingCol || !lastMovingCol || lastHighlightedColumn.column || !isAttemptingToPin) {\n      return {\n        firstMovingCol,\n        ...lastHighlightedColumn\n      };\n    }\n    const pinned = this.getPinDirection();\n    const isLeft = pinned === \"left\";\n    return {\n      firstMovingCol,\n      position: isLeft ? 1 /* After */ : 0 /* Before */,\n      column: isLeft !== isRtl ? firstMovingCol : lastMovingCol\n    };\n  }\n  normaliseDirection(hDirection) {\n    if (this.gos.get(\"enableRtl\")) {\n      switch (hDirection) {\n        case \"left\":\n          return \"right\";\n        case \"right\":\n          return \"left\";\n      }\n    }\n    return hDirection;\n  }\n  getNormalisedColumnLeft(col, padding, isRtl) {\n    const { gos, ctrlsSvc } = this.beans;\n    const left = col.getLeft();\n    if (left == null) {\n      return null;\n    }\n    const width = col.getActualWidth();\n    return normaliseX({\n      x: isRtl ? left + width - padding : left + padding,\n      pinned: col.getPinned(),\n      useHeaderRow: isRtl,\n      skipScrollPadding: true,\n      gos,\n      ctrlsSvc\n    });\n  }\n  isAttemptingToPin(columns) {\n    const isMovingHorizontally = this.needToMoveLeft || this.needToMoveRight;\n    const isFailedMoreThanThreshold = this.failedMoveAttempts > MOVE_FAIL_THRESHOLD;\n    return isMovingHorizontally && isFailedMoreThanThreshold || columns.some((col) => col.getPinned() !== this.pinned);\n  }\n  moveColumnsAfterHighlight(params) {\n    const { allMovingColumns, xPosition, fromEnter, fakeEvent, fromLeft } = params;\n    const columnMoveParams = this.getMoveColumnParams({\n      allMovingColumns,\n      isFromHeader: true,\n      xPosition,\n      fromLeft,\n      fromEnter,\n      fakeEvent\n    });\n    const { columns, toIndex } = getBestColumnMoveIndexFromXPosition(columnMoveParams) || {};\n    if (columns && toIndex != null) {\n      this.lastMovedInfo = {\n        columns,\n        toIndex\n      };\n    }\n    this.finishColumnMoving();\n  }\n  clearHighlighted() {\n    const { lastHighlightedColumn } = this;\n    if (!lastHighlightedColumn) {\n      return;\n    }\n    setColumnHighlighted(lastHighlightedColumn.column, null);\n    this.lastHighlightedColumn = null;\n  }\n  checkCenterForScrolling(xAdjustedForScroll) {\n    if (!this.isCenterContainer) {\n      return;\n    }\n    const centerCtrl = this.beans.ctrlsSvc.get(\"center\");\n    const firstVisiblePixel = centerCtrl.getCenterViewportScrollLeft();\n    const lastVisiblePixel = firstVisiblePixel + centerCtrl.getCenterWidth();\n    let needToMoveRight;\n    let needToMoveLeft;\n    if (this.gos.get(\"enableRtl\")) {\n      needToMoveRight = xAdjustedForScroll < firstVisiblePixel + SCROLL_GAP_NEEDED_BEFORE_MOVE;\n      needToMoveLeft = xAdjustedForScroll > lastVisiblePixel - SCROLL_GAP_NEEDED_BEFORE_MOVE;\n    } else {\n      needToMoveLeft = xAdjustedForScroll < firstVisiblePixel + SCROLL_GAP_NEEDED_BEFORE_MOVE;\n      needToMoveRight = xAdjustedForScroll > lastVisiblePixel - SCROLL_GAP_NEEDED_BEFORE_MOVE;\n    }\n    this.needToMoveRight = needToMoveRight;\n    this.needToMoveLeft = needToMoveLeft;\n    if (needToMoveLeft || needToMoveRight) {\n      this.ensureIntervalStarted();\n    } else {\n      this.ensureIntervalCleared();\n    }\n  }\n  ensureIntervalStarted() {\n    if (this.movingIntervalId) {\n      return;\n    }\n    this.intervalCount = 0;\n    this.failedMoveAttempts = 0;\n    this.movingIntervalId = window.setInterval(this.moveInterval.bind(this), SCROLL_TIME_INTERVAL);\n    this.beans.dragAndDrop.getDragAndDropImageComponent()?.setIcon(this.needToMoveLeft ? \"left\" : \"right\", true);\n  }\n  ensureIntervalCleared() {\n    if (!this.movingIntervalId) {\n      return;\n    }\n    window.clearInterval(this.movingIntervalId);\n    this.movingIntervalId = null;\n    this.failedMoveAttempts = 0;\n    this.beans.dragAndDrop.getDragAndDropImageComponent()?.setIcon(this.getIconName(), false);\n  }\n  moveInterval() {\n    let pixelsToMove;\n    this.intervalCount++;\n    pixelsToMove = 10 + this.intervalCount * SCROLL_ACCELERATION_RATE;\n    if (pixelsToMove > SCROLL_MOVE_WIDTH) {\n      pixelsToMove = SCROLL_MOVE_WIDTH;\n    }\n    let pixelsMoved = null;\n    const scrollFeature = this.gridBodyCon.scrollFeature;\n    if (this.needToMoveLeft) {\n      pixelsMoved = scrollFeature.scrollHorizontally(-pixelsToMove);\n    } else if (this.needToMoveRight) {\n      pixelsMoved = scrollFeature.scrollHorizontally(pixelsToMove);\n    }\n    if (pixelsMoved !== 0) {\n      this.onDragging(this.lastDraggingEvent);\n      this.failedMoveAttempts = 0;\n    } else {\n      this.failedMoveAttempts++;\n      const { pinnedCols, dragAndDrop, gos } = this.beans;\n      if (this.failedMoveAttempts <= MOVE_FAIL_THRESHOLD + 1 || !pinnedCols) {\n        return;\n      }\n      dragAndDrop.getDragAndDropImageComponent()?.setIcon(\"pinned\", false);\n      if (!gos.get(\"suppressMoveWhenColumnDragging\")) {\n        const columns = this.lastDraggingEvent?.dragItem.columns;\n        this.attemptToPinColumns(columns, void 0, true);\n      }\n    }\n  }\n  getPinDirection() {\n    if (this.needToMoveLeft || this.pinned === \"left\") {\n      return \"left\";\n    }\n    if (this.needToMoveRight || this.pinned === \"right\") {\n      return \"right\";\n    }\n  }\n  attemptToPinColumns(columns, pinned, fromMoving = false) {\n    const allowedCols = (columns || []).filter((c) => !c.getColDef().lockPinned);\n    if (!allowedCols.length) {\n      return 0;\n    }\n    if (fromMoving) {\n      pinned = this.getPinDirection();\n    }\n    const { pinnedCols, dragAndDrop } = this.beans;\n    pinnedCols?.setColsPinned(allowedCols, pinned, \"uiColumnDragged\");\n    if (fromMoving) {\n      dragAndDrop.nudge();\n    }\n    return allowedCols.length;\n  }\n  destroy() {\n    super.destroy();\n    this.lastDraggingEvent = null;\n    this.clearHighlighted();\n    this.lastMovedInfo = null;\n  }\n};\nfunction setColumnHighlighted(column, highlighted) {\n  if (column.highlighted === highlighted) {\n    return;\n  }\n  column.highlighted = highlighted;\n  column.dispatchColEvent(\"headerHighlightChanged\", \"uiColumnMoved\");\n}\nfunction findFirstAndLastMovingColumns(allMovingColumns) {\n  const moveLen = allMovingColumns.length;\n  let firstMovingCol;\n  let lastMovingCol;\n  for (let i = 0; i < moveLen; i++) {\n    if (!firstMovingCol) {\n      const leftCol = allMovingColumns[i];\n      if (leftCol.getLeft() != null) {\n        firstMovingCol = leftCol;\n      }\n    }\n    if (!lastMovingCol) {\n      const rightCol = allMovingColumns[moveLen - 1 - i];\n      if (rightCol.getLeft() != null) {\n        lastMovingCol = rightCol;\n      }\n    }\n    if (firstMovingCol && lastMovingCol) {\n      break;\n    }\n  }\n  return { firstMovingCol, lastMovingCol };\n}\n\n// packages/ag-grid-community/src/columnMove/columnDrag/bodyDropTarget.ts\nvar BodyDropTarget = class extends BeanStub {\n  constructor(pinned, eContainer) {\n    super();\n    this.pinned = pinned;\n    this.eContainer = eContainer;\n  }\n  postConstruct() {\n    const { ctrlsSvc, dragAndDrop } = this.beans;\n    const pinned = this.pinned;\n    ctrlsSvc.whenReady(this, (p) => {\n      let eSecondaryContainers;\n      const eBodyViewport = p.gridBodyCtrl.eBodyViewport;\n      switch (pinned) {\n        case \"left\":\n          eSecondaryContainers = [\n            [eBodyViewport, p.left.eContainer],\n            [p.bottomLeft.eContainer],\n            [p.topLeft.eContainer]\n          ];\n          break;\n        case \"right\":\n          eSecondaryContainers = [\n            [eBodyViewport, p.right.eContainer],\n            [p.bottomRight.eContainer],\n            [p.topRight.eContainer]\n          ];\n          break;\n        default:\n          eSecondaryContainers = [\n            [eBodyViewport, p.center.eViewport],\n            [p.bottomCenter.eViewport],\n            [p.topCenter.eViewport]\n          ];\n          break;\n      }\n      this.eSecondaryContainers = eSecondaryContainers;\n    });\n    this.moveColumnFeature = this.createManagedBean(new MoveColumnFeature(pinned));\n    this.bodyDropPivotTarget = this.createManagedBean(new BodyDropPivotTarget(pinned));\n    dragAndDrop.addDropTarget(this);\n    this.addDestroyFunc(() => dragAndDrop.removeDropTarget(this));\n  }\n  isInterestedIn(type) {\n    return type === 1 /* HeaderCell */ || type === 0 /* ToolPanel */ && this.gos.get(\"allowDragFromColumnsToolPanel\");\n  }\n  getSecondaryContainers() {\n    return this.eSecondaryContainers;\n  }\n  getContainer() {\n    return this.eContainer;\n  }\n  getIconName() {\n    return this.currentDropListener.getIconName();\n  }\n  // we want to use the bodyPivotTarget if the user is dragging columns in from the toolPanel\n  // and we are in pivot mode, as it has to logic to set pivot/value/group on the columns when\n  // dropped into the grid's body.\n  isDropColumnInPivotMode(draggingEvent) {\n    return this.beans.colModel.isPivotMode() && draggingEvent.dragSource.type === 0 /* ToolPanel */;\n  }\n  onDragEnter(draggingEvent) {\n    this.currentDropListener = this.isDropColumnInPivotMode(draggingEvent) ? this.bodyDropPivotTarget : this.moveColumnFeature;\n    this.currentDropListener.onDragEnter(draggingEvent);\n  }\n  onDragLeave(params) {\n    this.currentDropListener.onDragLeave(params);\n  }\n  onDragging(params) {\n    this.currentDropListener.onDragging(params);\n  }\n  onDragStop(params) {\n    this.currentDropListener.onDragStop(params);\n  }\n  onDragCancel() {\n    this.currentDropListener.onDragCancel();\n  }\n};\n\n// packages/ag-grid-community/src/columnMove/columnMoveService.ts\nvar ColumnMoveService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colMoves\";\n  }\n  moveColumnByIndex(fromIndex, toIndex, source) {\n    const gridColumns = this.beans.colModel.getCols();\n    if (!gridColumns) {\n      return;\n    }\n    const column = gridColumns[fromIndex];\n    this.moveColumns([column], toIndex, source);\n  }\n  moveColumns(columnsToMoveKeys, toIndex, source, finished = true) {\n    const { colModel, colAnimation, visibleCols, eventSvc } = this.beans;\n    const gridColumns = colModel.getCols();\n    if (!gridColumns) {\n      return;\n    }\n    if (toIndex > gridColumns.length - columnsToMoveKeys.length) {\n      _warn(30, { toIndex });\n      return;\n    }\n    colAnimation?.start();\n    const movedColumns = colModel.getColsForKeys(columnsToMoveKeys);\n    if (this.doesMovePassRules(movedColumns, toIndex)) {\n      _moveInArray(colModel.getCols(), movedColumns, toIndex);\n      visibleCols.refresh(source);\n      eventSvc.dispatchEvent({\n        type: \"columnMoved\",\n        columns: movedColumns,\n        column: movedColumns.length === 1 ? movedColumns[0] : null,\n        toIndex,\n        finished,\n        source\n      });\n    }\n    colAnimation?.finish();\n  }\n  doesMovePassRules(columnsToMove, toIndex) {\n    const proposedColumnOrder = this.getProposedColumnOrder(columnsToMove, toIndex);\n    return this.doesOrderPassRules(proposedColumnOrder);\n  }\n  doesOrderPassRules(gridOrder) {\n    const { colModel, gos } = this.beans;\n    if (!doesMovePassMarryChildren(gridOrder, colModel.getColTree())) {\n      return false;\n    }\n    const doesMovePassLockedPositions = (proposedColumnOrder) => {\n      const lockPositionToPlacement = (position) => {\n        if (!position) {\n          return 0 /* NONE */;\n        }\n        return position === \"left\" || position === true ? -1 /* LEFT */ : 1 /* RIGHT */;\n      };\n      const isRtl = gos.get(\"enableRtl\");\n      let lastPlacement = isRtl ? 1 /* RIGHT */ : -1 /* LEFT */;\n      let rulePassed = true;\n      proposedColumnOrder.forEach((col) => {\n        const placement = lockPositionToPlacement(col.getColDef().lockPosition);\n        if (isRtl) {\n          if (placement > lastPlacement) {\n            rulePassed = false;\n          }\n        } else {\n          if (placement < lastPlacement) {\n            rulePassed = false;\n          }\n        }\n        lastPlacement = placement;\n      });\n      return rulePassed;\n    };\n    if (!doesMovePassLockedPositions(gridOrder)) {\n      return false;\n    }\n    return true;\n  }\n  getProposedColumnOrder(columnsToMove, toIndex) {\n    const gridColumns = this.beans.colModel.getCols();\n    const proposedColumnOrder = gridColumns.slice();\n    _moveInArray(proposedColumnOrder, columnsToMove, toIndex);\n    return proposedColumnOrder;\n  }\n  createBodyDropTarget(pinned, dropContainer) {\n    return new BodyDropTarget(pinned, dropContainer);\n  }\n  moveHeader(hDirection, eGui, column, pinned, bean) {\n    const { ctrlsSvc, gos, colModel, visibleCols, focusSvc } = this.beans;\n    const rect = eGui.getBoundingClientRect();\n    const left = rect.left;\n    const isGroup = isColumnGroup2(column);\n    const width = isGroup ? rect.width : column.getActualWidth();\n    const isLeft = hDirection === \"left\" !== gos.get(\"enableRtl\");\n    const xPosition = normaliseX({\n      x: isLeft ? left - 20 : left + width + 20,\n      pinned,\n      fromKeyboard: true,\n      gos,\n      ctrlsSvc\n    });\n    const headerPosition = focusSvc.focusedHeader;\n    attemptMoveColumns({\n      allMovingColumns: isGroup ? column.getLeafColumns() : [column],\n      isFromHeader: true,\n      fromLeft: hDirection === \"right\",\n      xPosition,\n      pinned,\n      fromEnter: false,\n      fakeEvent: false,\n      gos,\n      colModel,\n      colMoves: this,\n      visibleCols,\n      finished: true\n    });\n    let targetColumn;\n    if (isGroup) {\n      const displayedLeafColumns = column.getDisplayedLeafColumns();\n      targetColumn = isLeft ? displayedLeafColumns[0] : _last(displayedLeafColumns);\n    } else {\n      targetColumn = column;\n    }\n    ctrlsSvc.getScrollFeature().ensureColumnVisible(targetColumn, \"auto\");\n    if ((!bean.isAlive() || gos.get(\"ensureDomOrder\")) && headerPosition) {\n      let restoreFocusColumn;\n      if (isGroup) {\n        const groupId = column.getGroupId();\n        const leafCols = column.getLeafColumns();\n        if (!leafCols.length) {\n          return;\n        }\n        const parent = leafCols[0].getParent();\n        if (!parent) {\n          return;\n        }\n        restoreFocusColumn = findGroupWidthId(parent, groupId);\n      } else {\n        restoreFocusColumn = column;\n      }\n      if (restoreFocusColumn) {\n        focusSvc.focusHeaderPosition({\n          headerPosition: {\n            ...headerPosition,\n            column: restoreFocusColumn\n          }\n        });\n      }\n    }\n  }\n  setDragSourceForHeader(eSource, column, displayName) {\n    const { gos, colModel, dragAndDrop, visibleCols } = this.beans;\n    let hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\n    const isGroup = isColumnGroup2(column);\n    const columns = isGroup ? column.getProvidedColumnGroup().getLeafColumns() : [column];\n    const getDragItem = isGroup ? () => createDragItemForGroup(column, visibleCols.allCols) : () => createDragItem(column);\n    const dragSource = {\n      type: 1 /* HeaderCell */,\n      eElement: eSource,\n      getDefaultIconName: () => hideColumnOnExit ? \"hide\" : \"notAllowed\",\n      getDragItem,\n      dragItemName: displayName,\n      onDragStarted: () => {\n        hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\n        setColumnsMoving(columns, true);\n      },\n      onDragStopped: () => setColumnsMoving(columns, false),\n      onDragCancelled: () => setColumnsMoving(columns, false),\n      onGridEnter: (dragItem) => {\n        if (hideColumnOnExit) {\n          const { columns: columns2 = [], visibleState } = dragItem ?? {};\n          const hasVisibleState = isGroup ? (col) => !visibleState || visibleState[col.getColId()] : () => true;\n          const unlockedColumns = columns2.filter(\n            (col) => !col.getColDef().lockVisible && hasVisibleState(col)\n          );\n          colModel.setColsVisible(unlockedColumns, true, \"uiColumnMoved\");\n        }\n      },\n      onGridExit: (dragItem) => {\n        if (hideColumnOnExit) {\n          const unlockedColumns = dragItem?.columns?.filter((col) => !col.getColDef().lockVisible) || [];\n          colModel.setColsVisible(unlockedColumns, false, \"uiColumnMoved\");\n        }\n      }\n    };\n    dragAndDrop.addDragSource(dragSource, true);\n    return dragSource;\n  }\n};\nfunction findGroupWidthId(columnGroup, id) {\n  while (columnGroup) {\n    if (columnGroup.getGroupId() === id) {\n      return columnGroup;\n    }\n    columnGroup = columnGroup.getParent();\n  }\n  return void 0;\n}\nfunction createDragItem(column) {\n  const visibleState = {};\n  visibleState[column.getId()] = column.isVisible();\n  return {\n    columns: [column],\n    visibleState\n  };\n}\nfunction createDragItemForGroup(columnGroup, allCols) {\n  const allColumnsOriginalOrder = columnGroup.getProvidedColumnGroup().getLeafColumns();\n  const visibleState = {};\n  allColumnsOriginalOrder.forEach((column) => visibleState[column.getId()] = column.isVisible());\n  const allColumnsCurrentOrder = [];\n  allCols.forEach((column) => {\n    if (allColumnsOriginalOrder.indexOf(column) >= 0) {\n      allColumnsCurrentOrder.push(column);\n      _removeFromArray(allColumnsOriginalOrder, column);\n    }\n  });\n  allColumnsOriginalOrder.forEach((column) => allColumnsCurrentOrder.push(column));\n  const columnsInSplit = [];\n  const columnGroupColumns = columnGroup.getLeafColumns();\n  for (const col of allColumnsCurrentOrder) {\n    if (columnGroupColumns.indexOf(col) !== -1) {\n      columnsInSplit.push(col);\n    }\n  }\n  return {\n    columns: allColumnsCurrentOrder,\n    columnsInSplit,\n    visibleState\n  };\n}\n\n// packages/ag-grid-community/src/columnMove/columnMoveModule.ts\nvar ColumnMoveModule = {\n  moduleName: \"ColumnMove\",\n  version: VERSION,\n  beans: [ColumnMoveService, ColumnAnimationService],\n  apiFunctions: {\n    moveColumnByIndex,\n    moveColumns\n  },\n  dependsOn: [SharedDragAndDropModule],\n  css: [columnMovingCSS]\n};\n\n// packages/ag-grid-community/src/rendering/autoWidthCalculator.ts\nvar AutoWidthCalculator = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"autoWidthCalc\";\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\n      this.centerRowContainerCtrl = p.center;\n    });\n  }\n  // this is the trick: we create a dummy container and clone all the cells\n  // into the dummy, then check the dummy's width. then destroy the dummy\n  // as we don't need it any more.\n  // drawback: only the cells visible on the screen are considered\n  getPreferredWidthForColumn(column, skipHeader) {\n    const eHeaderCell = this.getHeaderCellForColumn(column);\n    if (!eHeaderCell) {\n      return -1;\n    }\n    const elements = this.beans.rowRenderer.getAllCellsNotSpanningForColumn(column);\n    if (!skipHeader) {\n      elements.push(eHeaderCell);\n    }\n    return this.getPreferredWidthForElements(elements);\n  }\n  getPreferredWidthForColumnGroup(columnGroup) {\n    const eHeaderCell = this.getHeaderCellForColumn(columnGroup);\n    if (!eHeaderCell) {\n      return -1;\n    }\n    return this.getPreferredWidthForElements([eHeaderCell]);\n  }\n  getPreferredWidthForElements(elements, extraPadding) {\n    const eDummyContainer = document.createElement(\"form\");\n    eDummyContainer.style.position = \"fixed\";\n    const eBodyContainer = this.centerRowContainerCtrl.eContainer;\n    elements.forEach((el) => this.cloneItemIntoDummy(el, eDummyContainer));\n    eBodyContainer.appendChild(eDummyContainer);\n    const dummyContainerWidth = eDummyContainer.offsetWidth;\n    eBodyContainer.removeChild(eDummyContainer);\n    extraPadding = extraPadding ?? this.gos.get(\"autoSizePadding\");\n    return dummyContainerWidth + extraPadding;\n  }\n  getHeaderCellForColumn(column) {\n    let element = null;\n    this.beans.ctrlsSvc.getHeaderRowContainerCtrls().forEach((container) => {\n      const res = container.getHtmlElementForColumnHeader(column);\n      if (res != null) {\n        element = res;\n      }\n    });\n    return element;\n  }\n  cloneItemIntoDummy(eCell, eDummyContainer) {\n    const eCellClone = eCell.cloneNode(true);\n    eCellClone.style.width = \"\";\n    eCellClone.style.position = \"static\";\n    eCellClone.style.left = \"\";\n    const eCloneParent = document.createElement(\"div\");\n    const eCloneParentClassList = eCloneParent.classList;\n    const isHeader = [\"ag-header-cell\", \"ag-header-group-cell\"].some((cls) => eCellClone.classList.contains(cls));\n    if (isHeader) {\n      eCloneParentClassList.add(\"ag-header\", \"ag-header-row\");\n      eCloneParent.style.position = \"static\";\n    } else {\n      eCloneParentClassList.add(\"ag-row\");\n    }\n    let pointer = eCell.parentElement;\n    while (pointer) {\n      const isRow = [\"ag-header-row\", \"ag-row\"].some((cls) => pointer.classList.contains(cls));\n      if (isRow) {\n        for (let i = 0; i < pointer.classList.length; i++) {\n          const item = pointer.classList[i];\n          if (item != \"ag-row-position-absolute\") {\n            eCloneParentClassList.add(item);\n          }\n        }\n        break;\n      }\n      pointer = pointer.parentElement;\n    }\n    eCloneParent.appendChild(eCellClone);\n    eDummyContainer.appendChild(eCloneParent);\n  }\n};\n\n// packages/ag-grid-community/src/rendering/autoWidthModule.ts\nvar AutoWidthModule = {\n  moduleName: \"AutoWidth\",\n  version: VERSION,\n  beans: [AutoWidthCalculator]\n};\n\n// packages/ag-grid-community/src/columnResize/columnResizeApi.ts\nfunction setColumnWidths(beans, columnWidths, finished = true, source = \"api\") {\n  beans.colResize?.setColumnWidths(columnWidths, false, finished, source);\n}\n\n// packages/ag-grid-community/src/columnResize/groupResizeFeature.ts\nvar GroupResizeFeature = class extends BeanStub {\n  constructor(comp, eResize, pinned, columnGroup) {\n    super();\n    this.comp = comp;\n    this.eResize = eResize;\n    this.pinned = pinned;\n    this.columnGroup = columnGroup;\n  }\n  postConstruct() {\n    if (!this.columnGroup.isResizable()) {\n      this.comp.setResizableDisplayed(false);\n      return;\n    }\n    const { horizontalResizeSvc, gos, colAutosize } = this.beans;\n    const finishedWithResizeFunc = horizontalResizeSvc.addResizeBar({\n      eResizeBar: this.eResize,\n      onResizeStart: this.onResizeStart.bind(this),\n      onResizing: this.onResizing.bind(this, false),\n      onResizeEnd: this.onResizing.bind(this, true)\n    });\n    this.addDestroyFunc(finishedWithResizeFunc);\n    if (!gos.get(\"suppressAutoSize\") && colAutosize) {\n      this.addDestroyFunc(\n        colAutosize.addColumnGroupResize(\n          this.eResize,\n          this.columnGroup,\n          () => this.resizeLeafColumnsToFit(\"uiColumnResized\")\n        )\n      );\n    }\n  }\n  onResizeStart(shiftKey) {\n    const {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios,\n      groupAfterColumns,\n      groupAfterStartWidth,\n      groupAfterRatios\n    } = this.getInitialValues(shiftKey);\n    this.resizeCols = columnsToResize;\n    this.resizeStartWidth = resizeStartWidth;\n    this.resizeRatios = resizeRatios;\n    this.resizeTakeFromCols = groupAfterColumns;\n    this.resizeTakeFromStartWidth = groupAfterStartWidth;\n    this.resizeTakeFromRatios = groupAfterRatios;\n    this.toggleColumnResizing(true);\n  }\n  onResizing(finished, resizeAmount, source = \"uiColumnResized\") {\n    const resizeAmountNormalised = this.normaliseDragChange(resizeAmount);\n    const width = this.resizeStartWidth + resizeAmountNormalised;\n    this.resizeColumnsFromLocalValues(width, source, finished);\n  }\n  getInitialValues(shiftKey) {\n    const getInitialSizeOfColumns = (columns) => columns.reduce((totalWidth, column) => totalWidth + column.getActualWidth(), 0);\n    const getSizeRatiosOfColumns = (columns, initialSizeOfColumns) => columns.map((column) => column.getActualWidth() / initialSizeOfColumns);\n    const columnsToResize = this.getColumnsToResize();\n    const resizeStartWidth = getInitialSizeOfColumns(columnsToResize);\n    const resizeRatios = getSizeRatiosOfColumns(columnsToResize, resizeStartWidth);\n    const columnSizeAndRatios = {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios\n    };\n    let groupAfter = null;\n    if (shiftKey) {\n      groupAfter = this.beans.colGroupSvc?.getGroupAtDirection(this.columnGroup, \"After\") ?? null;\n    }\n    if (groupAfter) {\n      const takeFromLeafCols = groupAfter.getDisplayedLeafColumns();\n      const groupAfterColumns = columnSizeAndRatios.groupAfterColumns = takeFromLeafCols.filter(\n        (col) => col.isResizable()\n      );\n      const groupAfterStartWidth = columnSizeAndRatios.groupAfterStartWidth = getInitialSizeOfColumns(groupAfterColumns);\n      columnSizeAndRatios.groupAfterRatios = getSizeRatiosOfColumns(groupAfterColumns, groupAfterStartWidth);\n    } else {\n      columnSizeAndRatios.groupAfterColumns = void 0;\n      columnSizeAndRatios.groupAfterStartWidth = void 0;\n      columnSizeAndRatios.groupAfterRatios = void 0;\n    }\n    return columnSizeAndRatios;\n  }\n  resizeLeafColumnsToFit(source) {\n    const preferredSize = this.beans.autoWidthCalc.getPreferredWidthForColumnGroup(this.columnGroup);\n    const initialValues = this.getInitialValues();\n    if (preferredSize > initialValues.resizeStartWidth) {\n      this.resizeColumns(initialValues, preferredSize, source, true);\n    }\n  }\n  resizeColumnsFromLocalValues(totalWidth, source, finished = true) {\n    if (!this.resizeCols || !this.resizeRatios) {\n      return;\n    }\n    const initialValues = {\n      columnsToResize: this.resizeCols,\n      resizeStartWidth: this.resizeStartWidth,\n      resizeRatios: this.resizeRatios,\n      groupAfterColumns: this.resizeTakeFromCols,\n      groupAfterStartWidth: this.resizeTakeFromStartWidth,\n      groupAfterRatios: this.resizeTakeFromRatios\n    };\n    this.resizeColumns(initialValues, totalWidth, source, finished);\n  }\n  resizeColumns(initialValues, totalWidth, source, finished = true) {\n    const {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios,\n      groupAfterColumns,\n      groupAfterStartWidth,\n      groupAfterRatios\n    } = initialValues;\n    const resizeSets = [];\n    resizeSets.push({\n      columns: columnsToResize,\n      ratios: resizeRatios,\n      width: totalWidth\n    });\n    if (groupAfterColumns) {\n      const diff = totalWidth - resizeStartWidth;\n      resizeSets.push({\n        columns: groupAfterColumns,\n        ratios: groupAfterRatios,\n        width: groupAfterStartWidth - diff\n      });\n    }\n    this.beans.colResize?.resizeColumnSets({\n      resizeSets,\n      finished,\n      source\n    });\n    if (finished) {\n      this.toggleColumnResizing(false);\n    }\n  }\n  toggleColumnResizing(resizing) {\n    this.comp.addOrRemoveCssClass(\"ag-column-resizing\", resizing);\n  }\n  getColumnsToResize() {\n    const leafCols = this.columnGroup.getDisplayedLeafColumns();\n    return leafCols.filter((col) => col.isResizable());\n  }\n  // optionally inverts the drag, depending on pinned and RTL\n  // note - this method is duplicated in RenderedHeaderCell - should refactor out?\n  normaliseDragChange(dragChange) {\n    let result = dragChange;\n    if (this.gos.get(\"enableRtl\")) {\n      if (this.pinned !== \"left\") {\n        result *= -1;\n      }\n    } else if (this.pinned === \"right\") {\n      result *= -1;\n    }\n    return result;\n  }\n  destroy() {\n    super.destroy();\n    this.resizeCols = void 0;\n    this.resizeRatios = void 0;\n    this.resizeTakeFromCols = void 0;\n    this.resizeTakeFromRatios = void 0;\n  }\n};\n\n// packages/ag-grid-community/src/columnResize/resizeFeature.ts\nvar ResizeFeature = class extends BeanStub {\n  constructor(pinned, column, eResize, comp, ctrl) {\n    super();\n    this.pinned = pinned;\n    this.column = column;\n    this.eResize = eResize;\n    this.comp = comp;\n    this.ctrl = ctrl;\n  }\n  postConstruct() {\n    const destroyResizeFuncs = [];\n    let canResize;\n    let canAutosize;\n    const addResize = () => {\n      _setDisplayed(this.eResize, canResize);\n      if (!canResize) {\n        return;\n      }\n      const { horizontalResizeSvc, colAutosize } = this.beans;\n      const finishedWithResizeFunc = horizontalResizeSvc.addResizeBar({\n        eResizeBar: this.eResize,\n        onResizeStart: this.onResizeStart.bind(this),\n        onResizing: this.onResizing.bind(this, false),\n        onResizeEnd: this.onResizing.bind(this, true)\n      });\n      destroyResizeFuncs.push(finishedWithResizeFunc);\n      if (canAutosize && colAutosize) {\n        destroyResizeFuncs.push(colAutosize.addColumnAutosize(this.eResize, this.column));\n      }\n    };\n    const removeResize = () => {\n      destroyResizeFuncs.forEach((f) => f());\n      destroyResizeFuncs.length = 0;\n    };\n    const refresh = () => {\n      const resize = this.column.isResizable();\n      const autoSize = !this.gos.get(\"suppressAutoSize\") && !this.column.getColDef().suppressAutoSize;\n      const propertyChange = resize !== canResize || autoSize !== canAutosize;\n      if (propertyChange) {\n        canResize = resize;\n        canAutosize = autoSize;\n        removeResize();\n        addResize();\n      }\n    };\n    refresh();\n    this.addDestroyFunc(removeResize);\n    this.ctrl.setRefreshFunction(\"resize\", refresh);\n  }\n  onResizing(finished, resizeAmount) {\n    const { column: key, lastResizeAmount, resizeStartWidth, beans } = this;\n    const resizeAmountNormalised = this.normaliseResizeAmount(resizeAmount);\n    const newWidth = resizeStartWidth + resizeAmountNormalised;\n    const columnWidths = [{ key, newWidth }];\n    const { pinnedCols, ctrlsSvc, colResize } = beans;\n    if (this.column.getPinned()) {\n      const leftWidth = pinnedCols?.leftWidth ?? 0;\n      const rightWidth = pinnedCols?.rightWidth ?? 0;\n      const bodyWidth = _getInnerWidth(ctrlsSvc.getGridBodyCtrl().eBodyViewport) - 50;\n      if (leftWidth + rightWidth + (resizeAmountNormalised - lastResizeAmount) > bodyWidth) {\n        return;\n      }\n    }\n    this.lastResizeAmount = resizeAmountNormalised;\n    colResize?.setColumnWidths(columnWidths, this.resizeWithShiftKey, finished, \"uiColumnResized\");\n    if (finished) {\n      this.toggleColumnResizing(false);\n    }\n  }\n  onResizeStart(shiftKey) {\n    this.resizeStartWidth = this.column.getActualWidth();\n    this.lastResizeAmount = 0;\n    this.resizeWithShiftKey = shiftKey;\n    this.toggleColumnResizing(true);\n  }\n  toggleColumnResizing(resizing) {\n    this.comp.addOrRemoveCssClass(\"ag-column-resizing\", resizing);\n  }\n  // optionally inverts the drag, depending on pinned and RTL\n  // note - this method is duplicated in RenderedHeaderGroupCell - should refactor out?\n  normaliseResizeAmount(dragChange) {\n    let result = dragChange;\n    const notPinningLeft = this.pinned !== \"left\";\n    const pinningRight = this.pinned === \"right\";\n    if (this.gos.get(\"enableRtl\")) {\n      if (notPinningLeft) {\n        result *= -1;\n      }\n    } else {\n      if (pinningRight) {\n        result *= -1;\n      }\n    }\n    return result;\n  }\n};\n\n// packages/ag-grid-community/src/columnResize/columnResizeService.ts\nvar ColumnResizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colResize\";\n  }\n  setColumnWidths(columnWidths, shiftKey, finished, source) {\n    const sets = [];\n    const { colModel, gos, visibleCols } = this.beans;\n    columnWidths.forEach((columnWidth) => {\n      const col = colModel.getColDefCol(columnWidth.key) || colModel.getCol(columnWidth.key);\n      if (!col) {\n        return;\n      }\n      sets.push({\n        width: columnWidth.newWidth,\n        ratios: [1],\n        columns: [col]\n      });\n      const defaultIsShift = gos.get(\"colResizeDefault\") === \"shift\";\n      if (defaultIsShift) {\n        shiftKey = !shiftKey;\n      }\n      if (shiftKey) {\n        const otherCol = visibleCols.getColAfter(col);\n        if (!otherCol) {\n          return;\n        }\n        const widthDiff = col.getActualWidth() - columnWidth.newWidth;\n        const otherColWidth = otherCol.getActualWidth() + widthDiff;\n        sets.push({\n          width: otherColWidth,\n          ratios: [1],\n          columns: [otherCol]\n        });\n      }\n    });\n    if (sets.length === 0) {\n      return;\n    }\n    this.resizeColumnSets({\n      resizeSets: sets,\n      finished,\n      source\n    });\n  }\n  // method takes sets of columns and resizes them. either all sets will be resized, or nothing\n  // be resized. this is used for example when user tries to resize a group and holds shift key,\n  // then both the current group (grows), and the adjacent group (shrinks), will get resized,\n  // so that's two sets for this method.\n  resizeColumnSets(params) {\n    const { resizeSets, finished, source } = params;\n    const passMinMaxCheck = !resizeSets || resizeSets.every((columnResizeSet) => checkMinAndMaxWidthsForSet(columnResizeSet));\n    if (!passMinMaxCheck) {\n      if (finished) {\n        const columns = resizeSets && resizeSets.length > 0 ? resizeSets[0].columns : null;\n        dispatchColumnResizedEvent(this.eventSvc, columns, finished, source);\n      }\n      return;\n    }\n    const changedCols = [];\n    const allResizedCols = [];\n    resizeSets.forEach((set) => {\n      const { width, columns, ratios } = set;\n      const newWidths = {};\n      const finishedCols = {};\n      columns.forEach((col) => allResizedCols.push(col));\n      let finishedColsGrew = true;\n      let loopCount = 0;\n      while (finishedColsGrew) {\n        loopCount++;\n        if (loopCount > 1e3) {\n          _error(31);\n          break;\n        }\n        finishedColsGrew = false;\n        const subsetCols = [];\n        let subsetRatioTotal = 0;\n        let pixelsToDistribute = width;\n        columns.forEach((col, index) => {\n          const thisColFinished = finishedCols[col.getId()];\n          if (thisColFinished) {\n            pixelsToDistribute -= newWidths[col.getId()];\n          } else {\n            subsetCols.push(col);\n            const ratioThisCol = ratios[index];\n            subsetRatioTotal += ratioThisCol;\n          }\n        });\n        const ratioScale = 1 / subsetRatioTotal;\n        subsetCols.forEach((col, index) => {\n          const lastCol = index === subsetCols.length - 1;\n          let colNewWidth;\n          if (lastCol) {\n            colNewWidth = pixelsToDistribute;\n          } else {\n            colNewWidth = Math.round(ratios[index] * width * ratioScale);\n            pixelsToDistribute -= colNewWidth;\n          }\n          const minWidth = col.getMinWidth();\n          const maxWidth = col.getMaxWidth();\n          if (colNewWidth < minWidth) {\n            colNewWidth = minWidth;\n            finishedCols[col.getId()] = true;\n            finishedColsGrew = true;\n          } else if (maxWidth > 0 && colNewWidth > maxWidth) {\n            colNewWidth = maxWidth;\n            finishedCols[col.getId()] = true;\n            finishedColsGrew = true;\n          }\n          newWidths[col.getId()] = colNewWidth;\n        });\n      }\n      columns.forEach((col) => {\n        const newWidth = newWidths[col.getId()];\n        const actualWidth = col.getActualWidth();\n        if (actualWidth !== newWidth) {\n          col.setActualWidth(newWidth, source);\n          changedCols.push(col);\n        }\n      });\n    });\n    const atLeastOneColChanged = changedCols.length > 0;\n    let flexedCols = [];\n    if (atLeastOneColChanged) {\n      const { colFlex, visibleCols, colViewport } = this.beans;\n      flexedCols = colFlex?.refreshFlexedColumns({\n        resizingCols: allResizedCols,\n        skipSetLeft: true\n      }) ?? [];\n      visibleCols.setLeftValues(source);\n      visibleCols.updateBodyWidths();\n      colViewport.checkViewportColumns();\n    }\n    const colsForEvent = allResizedCols.concat(flexedCols);\n    if (atLeastOneColChanged || finished) {\n      dispatchColumnResizedEvent(this.eventSvc, colsForEvent, finished, source, flexedCols);\n    }\n  }\n  resizeHeader(column, delta, shiftKey) {\n    if (!column.isResizable()) {\n      return;\n    }\n    const actualWidth = column.getActualWidth();\n    const minWidth = column.getMinWidth();\n    const maxWidth = column.getMaxWidth();\n    const newWidth = Math.min(Math.max(actualWidth + delta, minWidth), maxWidth);\n    this.setColumnWidths([{ key: column, newWidth }], shiftKey, true, \"uiColumnResized\");\n  }\n  createResizeFeature(pinned, column, eResize, comp, ctrl) {\n    return new ResizeFeature(pinned, column, eResize, comp, ctrl);\n  }\n  createGroupResizeFeature(comp, eResize, pinned, columnGroup) {\n    return new GroupResizeFeature(comp, eResize, pinned, columnGroup);\n  }\n};\nfunction checkMinAndMaxWidthsForSet(columnResizeSet) {\n  const { columns, width } = columnResizeSet;\n  let minWidthAccumulated = 0;\n  let maxWidthAccumulated = 0;\n  let maxWidthActive = true;\n  columns.forEach((col) => {\n    const minWidth = col.getMinWidth();\n    minWidthAccumulated += minWidth || 0;\n    const maxWidth = col.getMaxWidth();\n    if (maxWidth > 0) {\n      maxWidthAccumulated += maxWidth;\n    } else {\n      maxWidthActive = false;\n    }\n  });\n  const minWidthPasses = width >= minWidthAccumulated;\n  const maxWidthPasses = !maxWidthActive || width <= maxWidthAccumulated;\n  return minWidthPasses && maxWidthPasses;\n}\n\n// packages/ag-grid-community/src/columnResize/columnResizeModule.ts\nvar ColumnResizeModule = {\n  moduleName: \"ColumnResize\",\n  version: VERSION,\n  beans: [ColumnResizeService],\n  apiFunctions: {\n    setColumnWidths\n  },\n  dependsOn: [HorizontalResizeModule, AutoWidthModule]\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/columnGroup/groupWidthFeature.ts\nvar GroupWidthFeature = class extends BeanStub {\n  constructor(comp, columnGroup) {\n    super();\n    // the children can change, we keep destroy functions related to listening to the children here\n    this.removeChildListenersFuncs = [];\n    this.columnGroup = columnGroup;\n    this.comp = comp;\n  }\n  postConstruct() {\n    this.addListenersToChildrenColumns();\n    this.addManagedListeners(this.columnGroup, {\n      displayedChildrenChanged: this.onDisplayedChildrenChanged.bind(this)\n    });\n    this.onWidthChanged();\n    this.addDestroyFunc(this.removeListenersOnChildrenColumns.bind(this));\n  }\n  addListenersToChildrenColumns() {\n    this.removeListenersOnChildrenColumns();\n    const widthChangedListener = this.onWidthChanged.bind(this);\n    this.columnGroup.getLeafColumns().forEach((column) => {\n      column.__addEventListener(\"widthChanged\", widthChangedListener);\n      column.__addEventListener(\"visibleChanged\", widthChangedListener);\n      this.removeChildListenersFuncs.push(() => {\n        column.__removeEventListener(\"widthChanged\", widthChangedListener);\n        column.__removeEventListener(\"visibleChanged\", widthChangedListener);\n      });\n    });\n  }\n  removeListenersOnChildrenColumns() {\n    this.removeChildListenersFuncs.forEach((func) => func());\n    this.removeChildListenersFuncs = [];\n  }\n  onDisplayedChildrenChanged() {\n    this.addListenersToChildrenColumns();\n    this.onWidthChanged();\n  }\n  onWidthChanged() {\n    const columnWidth = this.columnGroup.getActualWidth();\n    this.comp.setWidth(`${columnWidth}px`);\n    this.comp.addOrRemoveCssClass(\"ag-hidden\", columnWidth === 0);\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/columnGroup/headerGroupCellCtrl.ts\nvar HeaderGroupCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor() {\n    super(...arguments);\n    this.onSuppressColMoveChange = () => {\n      if (!this.isAlive() || this.isSuppressMoving()) {\n        this.removeDragSource();\n      } else {\n        if (!this.dragSource) {\n          this.setDragSource(this.eGui);\n        }\n      }\n    };\n  }\n  setComp(comp, eGui, eResize, eHeaderCompWrapper, compBean) {\n    const { column, beans } = this;\n    const { context, colNames, colHover, rangeSvc, colResize } = beans;\n    this.comp = comp;\n    compBean = setupCompBean(this, context, compBean);\n    this.setGui(eGui, compBean);\n    this.displayName = colNames.getDisplayNameForColumnGroup(column, \"header\");\n    this.refreshHeaderStyles();\n    this.addClasses();\n    this.setupMovingCss(compBean);\n    this.setupExpandable(compBean);\n    this.setupTooltip();\n    this.setupAutoHeight({\n      wrapperElement: eHeaderCompWrapper,\n      compBean\n    });\n    this.setupUserComp();\n    this.addHeaderMouseListeners(compBean);\n    this.addManagedPropertyListener(\"groupHeaderHeight\", this.refreshMaxHeaderHeight.bind(this));\n    this.refreshMaxHeaderHeight();\n    const pinned = this.rowCtrl.pinned;\n    const leafCols = column.getProvidedColumnGroup().getLeafColumns();\n    colHover?.createHoverFeature(compBean, leafCols, eGui);\n    rangeSvc?.createRangeHighlightFeature(compBean, column, comp);\n    compBean.createManagedBean(new SetLeftFeature(column, eGui, beans));\n    compBean.createManagedBean(new GroupWidthFeature(comp, column));\n    if (colResize) {\n      this.resizeFeature = compBean.createManagedBean(\n        colResize.createGroupResizeFeature(comp, eResize, pinned, column)\n      );\n    } else {\n      comp.setResizableDisplayed(false);\n    }\n    compBean.createManagedBean(\n      new ManagedFocusFeature(eGui, {\n        shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\n        onTabKeyDown: () => void 0,\n        handleKeyDown: this.handleKeyDown.bind(this),\n        onFocusIn: this.onFocusIn.bind(this)\n      })\n    );\n    this.addHighlightListeners(compBean, leafCols);\n    compBean.addManagedPropertyListener(\"suppressMovableColumns\", this.onSuppressColMoveChange);\n    this.addResizeAndMoveKeyboardListeners(compBean);\n    compBean.addDestroyFunc(() => this.clearComponent());\n  }\n  getHeaderClassParams() {\n    const { column, beans } = this;\n    const colDef = column.getDefinition();\n    return _addGridCommonParams(beans.gos, {\n      colDef,\n      columnGroup: column,\n      floatingFilter: false\n    });\n  }\n  refreshMaxHeaderHeight() {\n    const { gos, comp } = this;\n    const groupHeaderHeight = gos.get(\"groupHeaderHeight\");\n    if (groupHeaderHeight != null) {\n      if (groupHeaderHeight === 0) {\n        comp.setHeaderWrapperHidden(true);\n      } else {\n        comp.setHeaderWrapperMaxHeight(groupHeaderHeight);\n      }\n    } else {\n      comp.setHeaderWrapperHidden(false);\n      comp.setHeaderWrapperMaxHeight(null);\n    }\n  }\n  addHighlightListeners(compBean, columns) {\n    if (!this.beans.gos.get(\"suppressMoveWhenColumnDragging\")) {\n      return;\n    }\n    for (const column of columns) {\n      compBean.addManagedListeners(column, {\n        headerHighlightChanged: this.onLeafColumnHighlightChanged.bind(this, column)\n      });\n    }\n  }\n  onLeafColumnHighlightChanged(column) {\n    const displayedColumns = this.column.getDisplayedLeafColumns();\n    const isFirst = displayedColumns[0] === column;\n    const isLast = _last(displayedColumns) === column;\n    if (!isFirst && !isLast) {\n      return;\n    }\n    const highlighted = column.getHighlighted();\n    const isColumnMoveAtThisLevel = !!this.rowCtrl.findHeaderCellCtrl((ctrl) => {\n      return ctrl.column.isMoving();\n    });\n    let beforeOn = false;\n    let afterOn = false;\n    if (isColumnMoveAtThisLevel) {\n      const isRtl = this.beans.gos.get(\"enableRtl\");\n      const isHighlightAfter = highlighted === 1 /* After */;\n      const isHighlightBefore = highlighted === 0 /* Before */;\n      if (isFirst) {\n        if (isRtl) {\n          afterOn = isHighlightAfter;\n        } else {\n          beforeOn = isHighlightBefore;\n        }\n      }\n      if (isLast) {\n        if (isRtl) {\n          beforeOn = isHighlightBefore;\n        } else {\n          afterOn = isHighlightAfter;\n        }\n      }\n    }\n    this.comp.addOrRemoveCssClass(\"ag-header-highlight-before\", beforeOn);\n    this.comp.addOrRemoveCssClass(\"ag-header-highlight-after\", afterOn);\n  }\n  resizeHeader(delta, shiftKey) {\n    const { resizeFeature } = this;\n    if (!resizeFeature) {\n      return;\n    }\n    const initialValues = resizeFeature.getInitialValues(shiftKey);\n    resizeFeature.resizeColumns(initialValues, initialValues.resizeStartWidth + delta, \"uiColumnResized\", true);\n  }\n  resizeLeafColumnsToFit(source) {\n    this.resizeFeature?.resizeLeafColumnsToFit(source);\n  }\n  setupUserComp() {\n    const { colGroupSvc, userCompFactory, gos } = this.beans;\n    const params = _addGridCommonParams(gos, {\n      displayName: this.displayName,\n      columnGroup: this.column,\n      setExpanded: (expanded) => {\n        colGroupSvc.setColumnGroupOpened(this.column.getProvidedColumnGroup(), expanded, \"gridInitializing\");\n      },\n      setTooltip: (value, shouldDisplayTooltip) => {\n        gos.assertModuleRegistered(\"Tooltip\", 3);\n        this.setupTooltip(value, shouldDisplayTooltip);\n      }\n    });\n    const compDetails = _getHeaderGroupCompDetails(userCompFactory, params);\n    if (compDetails) {\n      this.comp.setUserCompDetails(compDetails);\n    }\n  }\n  addHeaderMouseListeners(compBean) {\n    const listener = (e) => this.handleMouseOverChange(e.type === \"mouseenter\");\n    const clickListener = () => this.dispatchColumnMouseEvent(\"columnHeaderClicked\", this.column.getProvidedColumnGroup());\n    const contextMenuListener = (event) => this.handleContextMenuMouseEvent(event, void 0, this.column.getProvidedColumnGroup());\n    compBean.addManagedListeners(this.eGui, {\n      mouseenter: listener,\n      mouseleave: listener,\n      click: clickListener,\n      contextmenu: contextMenuListener\n    });\n  }\n  handleMouseOverChange(isMouseOver) {\n    this.eventSvc.dispatchEvent({\n      type: isMouseOver ? \"columnHeaderMouseOver\" : \"columnHeaderMouseLeave\",\n      column: this.column.getProvidedColumnGroup()\n    });\n  }\n  setupTooltip(value, shouldDisplayTooltip) {\n    this.tooltipFeature = this.beans.tooltipSvc?.setupHeaderGroupTooltip(\n      this.tooltipFeature,\n      this,\n      value,\n      shouldDisplayTooltip\n    );\n  }\n  setupExpandable(compBean) {\n    const providedColGroup = this.column.getProvidedColumnGroup();\n    this.refreshExpanded();\n    const listener = this.refreshExpanded.bind(this);\n    compBean.addManagedListeners(providedColGroup, {\n      expandedChanged: listener,\n      expandableChanged: listener\n    });\n  }\n  refreshExpanded() {\n    const { column } = this;\n    this.expandable = column.isExpandable();\n    const expanded = column.isExpanded();\n    if (this.expandable) {\n      this.comp.setAriaExpanded(expanded ? \"true\" : \"false\");\n    } else {\n      this.comp.setAriaExpanded(void 0);\n    }\n    this.refreshHeaderStyles();\n  }\n  addClasses() {\n    const { column } = this;\n    const colGroupDef = column.getColGroupDef();\n    const classes = _getHeaderClassesFromColDef(colGroupDef, this.gos, null, column);\n    if (column.isPadding()) {\n      classes.push(\"ag-header-group-cell-no-group\");\n      const leafCols = column.getLeafColumns();\n      if (leafCols.every((col) => col.isSpanHeaderHeight())) {\n        classes.push(\"ag-header-span-height\");\n      }\n    } else {\n      classes.push(\"ag-header-group-cell-with-group\");\n      if (colGroupDef?.wrapHeaderText) {\n        classes.push(\"ag-header-cell-wrap-text\");\n      }\n    }\n    classes.forEach((c) => this.comp.addOrRemoveCssClass(c, true));\n  }\n  setupMovingCss(compBean) {\n    const { column } = this;\n    const providedColumnGroup = column.getProvidedColumnGroup();\n    const leafColumns = providedColumnGroup.getLeafColumns();\n    const listener = () => this.comp.addOrRemoveCssClass(\"ag-header-cell-moving\", column.isMoving());\n    leafColumns.forEach((col) => {\n      compBean.addManagedListeners(col, { movingChanged: listener });\n    });\n    listener();\n  }\n  onFocusIn(e) {\n    if (!this.eGui.contains(e.relatedTarget)) {\n      this.focusThis();\n    }\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    if (!this.expandable || !wrapperHasFocus) {\n      return;\n    }\n    if (e.key === KeyCode.ENTER) {\n      const column = this.column;\n      const newExpandedValue = !column.isExpanded();\n      this.beans.colGroupSvc.setColumnGroupOpened(\n        column.getProvidedColumnGroup(),\n        newExpandedValue,\n        \"uiColumnExpanded\"\n      );\n    }\n  }\n  // unlike columns, this will only get called once, as we don't react on props on column groups\n  // (we will always destroy and recreate this comp if something changes)\n  setDragSource(eHeaderGroup) {\n    if (!this.isAlive() || this.isSuppressMoving()) {\n      return;\n    }\n    this.removeDragSource();\n    if (!eHeaderGroup) {\n      return;\n    }\n    this.dragSource = this.beans.colMoves?.setDragSourceForHeader(eHeaderGroup, this.column, this.displayName) ?? null;\n  }\n  isSuppressMoving() {\n    return this.gos.get(\"suppressMovableColumns\") || this.column.getLeafColumns().some((column) => column.getColDef().suppressMovable || column.getColDef().lockPosition);\n  }\n  destroy() {\n    this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnGroups/columnGroupApi.ts\nfunction setColumnGroupOpened(beans, group, newValue) {\n  beans.colGroupSvc?.setColumnGroupOpened(group, newValue, \"api\");\n}\nfunction getColumnGroup(beans, name, instanceId) {\n  return beans.colGroupSvc?.getColumnGroup(name, instanceId) ?? null;\n}\nfunction getProvidedColumnGroup(beans, name) {\n  return beans.colGroupSvc?.getProvidedColGroup(name) ?? null;\n}\nfunction getDisplayNameForColumnGroup(beans, columnGroup, location) {\n  return beans.colNames.getDisplayNameForColumnGroup(columnGroup, location) || \"\";\n}\nfunction getColumnGroupState(beans) {\n  return beans.colGroupSvc?.getColumnGroupState() ?? [];\n}\nfunction setColumnGroupState(beans, stateItems) {\n  beans.colGroupSvc?.setColumnGroupState(stateItems, \"api\");\n}\nfunction resetColumnGroupState(beans) {\n  beans.colGroupSvc?.resetColumnGroupState(\"api\");\n}\nfunction getLeftDisplayedColumnGroups(beans) {\n  return beans.visibleCols.treeLeft;\n}\nfunction getCenterDisplayedColumnGroups(beans) {\n  return beans.visibleCols.treeCenter;\n}\nfunction getRightDisplayedColumnGroups(beans) {\n  return beans.visibleCols.treeRight;\n}\nfunction getAllDisplayedColumnGroups(beans) {\n  return beans.visibleCols.getAllTrees();\n}\n\n// packages/ag-grid-community/src/columns/visibleColsService.ts\nfunction _removeAllFromUnorderedArray(array, toRemove) {\n  for (let i = 0; i < toRemove.length; i++) {\n    const index = array.indexOf(toRemove[i]);\n    if (index >= 0) {\n      array[index] = array[array.length - 1];\n      array.pop();\n    }\n  }\n}\nvar VisibleColsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"visibleCols\";\n    // for fast lookup, to see if a column or group is still visible\n    this.colsAndGroupsMap = {};\n    // leave level columns of the displayed trees\n    this.leftCols = [];\n    this.rightCols = [];\n    this.centerCols = [];\n    // all three lists above combined\n    this.allCols = [];\n    // used by:\n    // + angularGrid -> for setting body width\n    // + rowController -> setting main row widths (when inserting and resizing)\n    // need to cache this\n    this.bodyWidth = 0;\n    this.leftWidth = 0;\n    this.rightWidth = 0;\n    this.isBodyWidthDirty = true;\n  }\n  refresh(source, skipTreeBuild = false) {\n    const { colModel, colGroupSvc, colViewport } = this.beans;\n    if (!skipTreeBuild) {\n      this.buildTrees(colModel, colGroupSvc);\n    }\n    colGroupSvc?.updateOpenClosedVisibility();\n    const leftCols = pickDisplayedCols(this.treeLeft);\n    this.leftCols = leftCols;\n    this.centerCols = pickDisplayedCols(this.treeCenter);\n    const rightCols = pickDisplayedCols(this.treeRight);\n    this.rightCols = rightCols;\n    this.joinColsAriaOrder(colModel);\n    this.joinCols();\n    this.setLeftValues(source);\n    this.autoHeightCols = this.allCols.filter((col) => col.isAutoHeight());\n    this.beans.colFlex?.refreshFlexedColumns();\n    this.updateBodyWidths();\n    colViewport.checkViewportColumns(false);\n    this.setFirstRightAndLastLeftPinned(colModel, leftCols, rightCols, source);\n    this.eventSvc.dispatchEvent({\n      type: \"displayedColumnsChanged\",\n      source\n    });\n  }\n  // after setColumnWidth or updateGroupsAndPresentedCols\n  updateBodyWidths() {\n    const newBodyWidth = getWidthOfColsInList(this.centerCols);\n    const newLeftWidth = getWidthOfColsInList(this.leftCols);\n    const newRightWidth = getWidthOfColsInList(this.rightCols);\n    this.isBodyWidthDirty = this.bodyWidth !== newBodyWidth;\n    const atLeastOneChanged = this.bodyWidth !== newBodyWidth || this.leftWidth !== newLeftWidth || this.rightWidth !== newRightWidth;\n    if (atLeastOneChanged) {\n      this.bodyWidth = newBodyWidth;\n      this.leftWidth = newLeftWidth;\n      this.rightWidth = newRightWidth;\n      this.eventSvc.dispatchEvent({\n        type: \"columnContainerWidthChanged\"\n      });\n      this.eventSvc.dispatchEvent({\n        type: \"displayedColumnsWidthChanged\"\n      });\n    }\n  }\n  // sets the left pixel position of each column\n  setLeftValues(source) {\n    this.setLeftValuesOfCols(source);\n    this.setLeftValuesOfGroups();\n  }\n  setFirstRightAndLastLeftPinned(colModel, leftCols, rightCols, source) {\n    let lastLeft;\n    let firstRight;\n    if (this.gos.get(\"enableRtl\")) {\n      lastLeft = leftCols ? leftCols[0] : null;\n      firstRight = rightCols ? _last(rightCols) : null;\n    } else {\n      lastLeft = leftCols ? _last(leftCols) : null;\n      firstRight = rightCols ? rightCols[0] : null;\n    }\n    colModel.getCols().forEach((col) => {\n      col.setLastLeftPinned(col === lastLeft, source);\n      col.setFirstRightPinned(col === firstRight, source);\n    });\n  }\n  buildTrees(colModel, columnGroupSvc) {\n    const cols = colModel.getColsToShow();\n    const leftCols = cols.filter((col) => col.getPinned() == \"left\");\n    const rightCols = cols.filter((col) => col.getPinned() == \"right\");\n    const centerCols = cols.filter((col) => col.getPinned() != \"left\" && col.getPinned() != \"right\");\n    const idCreator = new GroupInstanceIdCreator();\n    const createGroups = (params) => {\n      return columnGroupSvc ? columnGroupSvc.createColumnGroups(params) : params.columns;\n    };\n    this.treeLeft = createGroups({\n      columns: leftCols,\n      idCreator,\n      pinned: \"left\",\n      oldDisplayedGroups: this.treeLeft\n    });\n    this.treeRight = createGroups({\n      columns: rightCols,\n      idCreator,\n      pinned: \"right\",\n      oldDisplayedGroups: this.treeRight\n    });\n    this.treeCenter = createGroups({\n      columns: centerCols,\n      idCreator,\n      pinned: null,\n      oldDisplayedGroups: this.treeCenter\n    });\n    this.updateColsAndGroupsMap();\n  }\n  clear() {\n    this.leftCols = [];\n    this.rightCols = [];\n    this.centerCols = [];\n    this.allCols = [];\n    this.ariaOrderColumns = [];\n  }\n  joinColsAriaOrder(colModel) {\n    const allColumns = colModel.getCols();\n    const pinnedLeft = [];\n    const center = [];\n    const pinnedRight = [];\n    for (const col of allColumns) {\n      const pinned = col.getPinned();\n      if (!pinned) {\n        center.push(col);\n      } else if (pinned === true || pinned === \"left\") {\n        pinnedLeft.push(col);\n      } else {\n        pinnedRight.push(col);\n      }\n    }\n    this.ariaOrderColumns = pinnedLeft.concat(center).concat(pinnedRight);\n  }\n  getAriaColIndex(colOrGroup) {\n    let col;\n    if (isColumnGroup2(colOrGroup)) {\n      col = colOrGroup.getLeafColumns()[0];\n    } else {\n      col = colOrGroup;\n    }\n    return this.ariaOrderColumns.indexOf(col) + 1;\n  }\n  setLeftValuesOfGroups() {\n    [this.treeLeft, this.treeRight, this.treeCenter].forEach((columns) => {\n      columns.forEach((column) => {\n        if (isColumnGroup2(column)) {\n          const columnGroup = column;\n          columnGroup.checkLeft();\n        }\n      });\n    });\n  }\n  setLeftValuesOfCols(source) {\n    const { colModel } = this.beans;\n    const primaryCols = colModel.getColDefCols();\n    if (!primaryCols) {\n      return;\n    }\n    const allColumns = colModel.getCols().slice(0);\n    const doingRtl = this.gos.get(\"enableRtl\");\n    [this.leftCols, this.rightCols, this.centerCols].forEach((columns) => {\n      if (doingRtl) {\n        let left = getWidthOfColsInList(columns);\n        columns.forEach((column) => {\n          left -= column.getActualWidth();\n          column.setLeft(left, source);\n        });\n      } else {\n        let left = 0;\n        columns.forEach((column) => {\n          column.setLeft(left, source);\n          left += column.getActualWidth();\n        });\n      }\n      _removeAllFromUnorderedArray(allColumns, columns);\n    });\n    allColumns.forEach((column) => {\n      column.setLeft(null, source);\n    });\n  }\n  joinCols() {\n    if (this.gos.get(\"enableRtl\")) {\n      this.allCols = this.rightCols.concat(this.centerCols).concat(this.leftCols);\n    } else {\n      this.allCols = this.leftCols.concat(this.centerCols).concat(this.rightCols);\n    }\n  }\n  getAllTrees() {\n    if (this.treeLeft && this.treeRight && this.treeCenter) {\n      return this.treeLeft.concat(this.treeCenter).concat(this.treeRight);\n    }\n    return null;\n  }\n  // gridPanel -> ensureColumnVisible\n  isColDisplayed(column) {\n    return this.allCols.indexOf(column) >= 0;\n  }\n  getLeftColsForRow(rowNode) {\n    const {\n      leftCols,\n      beans: { colModel }\n    } = this;\n    const colSpanActive = colModel.colSpanActive;\n    if (!colSpanActive) {\n      return leftCols;\n    }\n    return this.getColsForRow(rowNode, leftCols);\n  }\n  getRightColsForRow(rowNode) {\n    const {\n      rightCols,\n      beans: { colModel }\n    } = this;\n    const colSpanActive = colModel.colSpanActive;\n    if (!colSpanActive) {\n      return rightCols;\n    }\n    return this.getColsForRow(rowNode, rightCols);\n  }\n  getColsForRow(rowNode, displayedColumns, filterCallback, emptySpaceBeforeColumn) {\n    const result = [];\n    let lastConsideredCol = null;\n    for (let i = 0; i < displayedColumns.length; i++) {\n      const col = displayedColumns[i];\n      const maxAllowedColSpan = displayedColumns.length - i;\n      const colSpan = Math.min(col.getColSpan(rowNode), maxAllowedColSpan);\n      const columnsToCheckFilter = [col];\n      if (colSpan > 1) {\n        const colsToRemove = colSpan - 1;\n        for (let j = 1; j <= colsToRemove; j++) {\n          columnsToCheckFilter.push(displayedColumns[i + j]);\n        }\n        i += colsToRemove;\n      }\n      let filterPasses;\n      if (filterCallback) {\n        filterPasses = false;\n        columnsToCheckFilter.forEach((colForFilter) => {\n          if (filterCallback(colForFilter)) {\n            filterPasses = true;\n          }\n        });\n      } else {\n        filterPasses = true;\n      }\n      if (filterPasses) {\n        if (result.length === 0 && lastConsideredCol) {\n          const gapBeforeColumn = emptySpaceBeforeColumn ? emptySpaceBeforeColumn(col) : false;\n          if (gapBeforeColumn) {\n            result.push(lastConsideredCol);\n          }\n        }\n        result.push(col);\n      }\n      lastConsideredCol = col;\n    }\n    return result;\n  }\n  getContainerWidth(pinned) {\n    switch (pinned) {\n      case \"left\":\n        return this.leftWidth;\n      case \"right\":\n        return this.rightWidth;\n      default:\n        return this.bodyWidth;\n    }\n  }\n  getColBefore(col) {\n    const allDisplayedColumns = this.allCols;\n    const oldIndex = allDisplayedColumns.indexOf(col);\n    if (oldIndex > 0) {\n      return allDisplayedColumns[oldIndex - 1];\n    }\n    return null;\n  }\n  isPinningLeft() {\n    return this.leftCols.length > 0;\n  }\n  isPinningRight() {\n    return this.rightCols.length > 0;\n  }\n  updateColsAndGroupsMap() {\n    this.colsAndGroupsMap = {};\n    const func = (child) => {\n      this.colsAndGroupsMap[child.getUniqueId()] = child;\n    };\n    depthFirstAllColumnTreeSearch(this.treeCenter, false, func);\n    depthFirstAllColumnTreeSearch(this.treeLeft, false, func);\n    depthFirstAllColumnTreeSearch(this.treeRight, false, func);\n  }\n  isVisible(item) {\n    const fromMap = this.colsAndGroupsMap[item.getUniqueId()];\n    return fromMap === item;\n  }\n  getFirstColumn() {\n    const isRtl = this.gos.get(\"enableRtl\");\n    const queryOrder = [\"leftCols\", \"centerCols\", \"rightCols\"];\n    if (isRtl) {\n      queryOrder.reverse();\n    }\n    for (let i = 0; i < queryOrder.length; i++) {\n      const container = this[queryOrder[i]];\n      if (container.length) {\n        return isRtl ? _last(container) : container[0];\n      }\n    }\n    return null;\n  }\n  // used by:\n  // + rowRenderer -> for navigation\n  getColAfter(col) {\n    const allDisplayedColumns = this.allCols;\n    const oldIndex = allDisplayedColumns.indexOf(col);\n    if (oldIndex < allDisplayedColumns.length - 1) {\n      return allDisplayedColumns[oldIndex + 1];\n    }\n    return null;\n  }\n  // used by:\n  // + angularGrid -> setting pinned body width\n  // note: this should be cached\n  getColsLeftWidth() {\n    return getWidthOfColsInList(this.leftCols);\n  }\n  // note: this should be cached\n  getDisplayedColumnsRightWidth() {\n    return getWidthOfColsInList(this.rightCols);\n  }\n  isColAtEdge(col, edge) {\n    const allColumns = this.allCols;\n    if (!allColumns.length) {\n      return false;\n    }\n    const isFirst = edge === \"first\";\n    let columnToCompare;\n    if (isColumnGroup2(col)) {\n      const leafColumns = col.getDisplayedLeafColumns();\n      if (!leafColumns.length) {\n        return false;\n      }\n      columnToCompare = isFirst ? leafColumns[0] : _last(leafColumns);\n    } else {\n      columnToCompare = col;\n    }\n    return (isFirst ? allColumns[0] : _last(allColumns)) === columnToCompare;\n  }\n};\nfunction depthFirstAllColumnTreeSearch(tree, useDisplayedChildren, callback) {\n  if (!tree) {\n    return;\n  }\n  for (let i = 0; i < tree.length; i++) {\n    const child = tree[i];\n    if (isColumnGroup2(child)) {\n      const childTree = useDisplayedChildren ? child.getDisplayedChildren() : child.getChildren();\n      depthFirstAllColumnTreeSearch(childTree, useDisplayedChildren, callback);\n    }\n    callback(child);\n  }\n}\nfunction pickDisplayedCols(tree) {\n  const res = [];\n  depthFirstAllColumnTreeSearch(tree, true, (child) => {\n    if (isColumn(child)) {\n      res.push(child);\n    }\n  });\n  return res;\n}\n\n// packages/ag-grid-community/src/columns/columnGroups/columnGroupService.ts\nvar ColumnGroupService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colGroupSvc\";\n  }\n  getColumnGroupState() {\n    const columnGroupState = [];\n    const gridBalancedTree = this.beans.colModel.getColTree();\n    depthFirstOriginalTreeSearch(null, gridBalancedTree, (node) => {\n      if (isProvidedColumnGroup(node)) {\n        columnGroupState.push({\n          groupId: node.getGroupId(),\n          open: node.isExpanded()\n        });\n      }\n    });\n    return columnGroupState;\n  }\n  resetColumnGroupState(source) {\n    const primaryColumnTree = this.beans.colModel.getColDefColTree();\n    if (!primaryColumnTree) {\n      return;\n    }\n    const stateItems = [];\n    depthFirstOriginalTreeSearch(null, primaryColumnTree, (child) => {\n      if (isProvidedColumnGroup(child)) {\n        const colGroupDef = child.getColGroupDef();\n        const groupState = {\n          groupId: child.getGroupId(),\n          open: !colGroupDef ? void 0 : colGroupDef.openByDefault\n        };\n        stateItems.push(groupState);\n      }\n    });\n    this.setColumnGroupState(stateItems, source);\n  }\n  setColumnGroupState(stateItems, source) {\n    const { colModel, colAnimation, visibleCols, eventSvc } = this.beans;\n    const gridBalancedTree = colModel.getColTree();\n    if (!gridBalancedTree.length) {\n      return;\n    }\n    colAnimation?.start();\n    const impactedGroups = [];\n    stateItems.forEach((stateItem) => {\n      const groupKey = stateItem.groupId;\n      const newValue = stateItem.open;\n      const providedColumnGroup = this.getProvidedColGroup(groupKey);\n      if (!providedColumnGroup) {\n        return;\n      }\n      if (providedColumnGroup.isExpanded() === newValue) {\n        return;\n      }\n      providedColumnGroup.setExpanded(newValue);\n      impactedGroups.push(providedColumnGroup);\n    });\n    visibleCols.refresh(source, true);\n    if (impactedGroups.length) {\n      eventSvc.dispatchEvent({\n        type: \"columnGroupOpened\",\n        columnGroup: impactedGroups.length === 1 ? impactedGroups[0] : void 0,\n        columnGroups: impactedGroups\n      });\n    }\n    colAnimation?.finish();\n  }\n  // called by headerRenderer - when a header is opened or closed\n  setColumnGroupOpened(key, newValue, source) {\n    let keyAsString;\n    if (isProvidedColumnGroup(key)) {\n      keyAsString = key.getId();\n    } else {\n      keyAsString = key || \"\";\n    }\n    this.setColumnGroupState([{ groupId: keyAsString, open: newValue }], source);\n  }\n  getProvidedColGroup(key) {\n    let res = null;\n    depthFirstOriginalTreeSearch(null, this.beans.colModel.getColTree(), (node) => {\n      if (isProvidedColumnGroup(node)) {\n        if (node.getId() === key) {\n          res = node;\n        }\n      }\n    });\n    return res;\n  }\n  getGroupAtDirection(columnGroup, direction) {\n    const requiredLevel = columnGroup.getProvidedColumnGroup().getLevel() + columnGroup.getPaddingLevel();\n    const colGroupLeafColumns = columnGroup.getDisplayedLeafColumns();\n    const col = direction === \"After\" ? _last(colGroupLeafColumns) : colGroupLeafColumns[0];\n    const getDisplayColMethod = `getCol${direction}`;\n    while (true) {\n      const column = this.beans.visibleCols[getDisplayColMethod](col);\n      if (!column) {\n        return null;\n      }\n      const groupPointer = this.getColGroupAtLevel(column, requiredLevel);\n      if (groupPointer !== columnGroup) {\n        return groupPointer;\n      }\n    }\n  }\n  getColGroupAtLevel(column, level) {\n    let groupPointer = column.getParent();\n    let originalGroupLevel;\n    let groupPointerLevel;\n    while (true) {\n      const groupPointerProvidedColumnGroup = groupPointer.getProvidedColumnGroup();\n      originalGroupLevel = groupPointerProvidedColumnGroup.getLevel();\n      groupPointerLevel = groupPointer.getPaddingLevel();\n      if (originalGroupLevel + groupPointerLevel <= level) {\n        break;\n      }\n      groupPointer = groupPointer.getParent();\n    }\n    return groupPointer;\n  }\n  updateOpenClosedVisibility() {\n    const allColumnGroups = this.beans.visibleCols.getAllTrees();\n    depthFirstAllColumnTreeSearch(allColumnGroups, false, (child) => {\n      if (isColumnGroup2(child)) {\n        child.calculateDisplayedColumns();\n      }\n    });\n  }\n  // returns the group with matching colId and instanceId. If instanceId is missing,\n  // matches only on the colId.\n  getColumnGroup(colId, partId) {\n    if (!colId) {\n      return null;\n    }\n    if (isColumnGroup2(colId)) {\n      return colId;\n    }\n    const allColumnGroups = this.beans.visibleCols.getAllTrees();\n    const checkPartId = typeof partId === \"number\";\n    let result = null;\n    depthFirstAllColumnTreeSearch(allColumnGroups, false, (child) => {\n      if (isColumnGroup2(child)) {\n        const columnGroup = child;\n        let matched;\n        if (checkPartId) {\n          matched = colId === columnGroup.getGroupId() && partId === columnGroup.getPartId();\n        } else {\n          matched = colId === columnGroup.getGroupId();\n        }\n        if (matched) {\n          result = columnGroup;\n        }\n      }\n    });\n    return result;\n  }\n  createColumnGroups(params) {\n    const { columns, idCreator, pinned, oldDisplayedGroups, isStandaloneStructure } = params;\n    const oldColumnsMapped = this.mapOldGroupsById(oldDisplayedGroups);\n    const topLevelResultCols = [];\n    let groupsOrColsAtCurrentLevel = columns;\n    while (groupsOrColsAtCurrentLevel.length) {\n      const currentlyIterating = groupsOrColsAtCurrentLevel;\n      groupsOrColsAtCurrentLevel = [];\n      let lastGroupedColIdx = 0;\n      const createGroupToIndex = (to) => {\n        const from = lastGroupedColIdx;\n        lastGroupedColIdx = to;\n        const previousNode = currentlyIterating[from];\n        const previousNodeProvided = isColumnGroup2(previousNode) ? previousNode.getProvidedColumnGroup() : previousNode;\n        const previousNodeParent = previousNodeProvided.getOriginalParent();\n        if (previousNodeParent == null) {\n          for (let i = from; i < to; i++) {\n            topLevelResultCols.push(currentlyIterating[i]);\n          }\n          return;\n        }\n        const newGroup = this.createColumnGroup(\n          previousNodeParent,\n          idCreator,\n          oldColumnsMapped,\n          pinned,\n          isStandaloneStructure\n        );\n        for (let i = from; i < to; i++) {\n          newGroup.addChild(currentlyIterating[i]);\n        }\n        groupsOrColsAtCurrentLevel.push(newGroup);\n      };\n      for (let i = 1; i < currentlyIterating.length; i++) {\n        const thisNode = currentlyIterating[i];\n        const thisNodeProvided = isColumnGroup2(thisNode) ? thisNode.getProvidedColumnGroup() : thisNode;\n        const thisNodeParent = thisNodeProvided.getOriginalParent();\n        const previousNode = currentlyIterating[lastGroupedColIdx];\n        const previousNodeProvided = isColumnGroup2(previousNode) ? previousNode.getProvidedColumnGroup() : previousNode;\n        const previousNodeParent = previousNodeProvided.getOriginalParent();\n        if (thisNodeParent !== previousNodeParent) {\n          createGroupToIndex(i);\n        }\n      }\n      if (lastGroupedColIdx < currentlyIterating.length) {\n        createGroupToIndex(currentlyIterating.length);\n      }\n    }\n    if (!isStandaloneStructure) {\n      this.setupParentsIntoCols(topLevelResultCols, null);\n    }\n    return topLevelResultCols;\n  }\n  createProvidedColumnGroup(primaryColumns, colGroupDef, level, existingColumns, columnKeyCreator, existingGroups, source) {\n    const groupId = columnKeyCreator.getUniqueKey(colGroupDef.groupId || null, null);\n    const colGroupDefMerged = this.createMergedColGroupDef(colGroupDef, groupId);\n    const providedGroup = new AgProvidedColumnGroup(colGroupDefMerged, groupId, false, level);\n    this.createBean(providedGroup);\n    const existingGroupAndIndex = this.findExistingGroup(colGroupDef, existingGroups);\n    if (existingGroupAndIndex) {\n      existingGroups.splice(existingGroupAndIndex.idx, 1);\n    }\n    const existingGroup = existingGroupAndIndex?.group;\n    if (existingGroup) {\n      providedGroup.setExpanded(existingGroup.isExpanded());\n    }\n    const children = _recursivelyCreateColumns(\n      this.beans,\n      colGroupDefMerged.children,\n      level + 1,\n      primaryColumns,\n      existingColumns,\n      columnKeyCreator,\n      existingGroups,\n      source\n    );\n    providedGroup.setChildren(children);\n    return providedGroup;\n  }\n  balanceColumnTree(unbalancedTree, currentDept, columnDept, columnKeyCreator) {\n    const result = [];\n    for (let i = 0; i < unbalancedTree.length; i++) {\n      const child = unbalancedTree[i];\n      if (isProvidedColumnGroup(child)) {\n        const originalGroup = child;\n        const newChildren = this.balanceColumnTree(\n          originalGroup.getChildren(),\n          currentDept + 1,\n          columnDept,\n          columnKeyCreator\n        );\n        originalGroup.setChildren(newChildren);\n        result.push(originalGroup);\n      } else {\n        let firstPaddedGroup;\n        let currentPaddedGroup;\n        for (let j = columnDept - 1; j >= currentDept; j--) {\n          const newColId = columnKeyCreator.getUniqueKey(null, null);\n          const colGroupDefMerged = this.createMergedColGroupDef(null, newColId);\n          const paddedGroup = new AgProvidedColumnGroup(colGroupDefMerged, newColId, true, currentDept);\n          this.createBean(paddedGroup);\n          if (currentPaddedGroup) {\n            currentPaddedGroup.setChildren([paddedGroup]);\n          }\n          currentPaddedGroup = paddedGroup;\n          if (!firstPaddedGroup) {\n            firstPaddedGroup = currentPaddedGroup;\n          }\n        }\n        if (firstPaddedGroup && currentPaddedGroup) {\n          result.push(firstPaddedGroup);\n          const hasGroups = unbalancedTree.some((leaf) => isProvidedColumnGroup(leaf));\n          if (hasGroups) {\n            currentPaddedGroup.setChildren([child]);\n            continue;\n          } else {\n            currentPaddedGroup.setChildren(unbalancedTree);\n            break;\n          }\n        }\n        result.push(child);\n      }\n    }\n    return result;\n  }\n  findDepth(balancedColumnTree) {\n    let depth = 0;\n    let pointer = balancedColumnTree;\n    while (pointer && pointer[0] && isProvidedColumnGroup(pointer[0])) {\n      depth++;\n      pointer = pointer[0].getChildren();\n    }\n    return depth;\n  }\n  findMaxDepth(treeChildren, depth) {\n    let maxDeptThisLevel = depth;\n    for (let i = 0; i < treeChildren.length; i++) {\n      const abstractColumn = treeChildren[i];\n      if (isProvidedColumnGroup(abstractColumn)) {\n        const originalGroup = abstractColumn;\n        const newDept = this.findMaxDepth(originalGroup.getChildren(), depth + 1);\n        if (maxDeptThisLevel < newDept) {\n          maxDeptThisLevel = newDept;\n        }\n      }\n    }\n    return maxDeptThisLevel;\n  }\n  /**\n   * Inserts dummy group columns in the hierarchy above auto-generated columns\n   * in order to ensure auto-generated columns are leaf nodes (and therefore are\n   * displayed correctly)\n   */\n  balanceTreeForAutoCols(autoCols, depth) {\n    const tree = [];\n    autoCols.forEach((col) => {\n      let nextChild = col;\n      for (let i = depth - 1; i >= 0; i--) {\n        const autoGroup = new AgProvidedColumnGroup(null, `FAKE_PATH_${col.getId()}}_${i}`, true, i);\n        this.createBean(autoGroup);\n        autoGroup.setChildren([nextChild]);\n        nextChild.originalParent = autoGroup;\n        nextChild = autoGroup;\n      }\n      if (depth === 0) {\n        col.originalParent = null;\n      }\n      tree.push(nextChild);\n    });\n    return tree;\n  }\n  createMergedColGroupDef(colGroupDef, groupId) {\n    const colGroupDefMerged = {};\n    const { gos, validation: validation2 } = this.beans;\n    Object.assign(colGroupDefMerged, gos.get(\"defaultColGroupDef\"));\n    Object.assign(colGroupDefMerged, colGroupDef);\n    validation2?.validateColDef(colGroupDefMerged, groupId);\n    return colGroupDefMerged;\n  }\n  findExistingGroup(newGroupDef, existingGroups) {\n    const newHasId = newGroupDef.groupId != null;\n    if (!newHasId) {\n      return void 0;\n    }\n    for (let i = 0; i < existingGroups.length; i++) {\n      const existingGroup = existingGroups[i];\n      const existingDef = existingGroup.getColGroupDef();\n      if (!existingDef) {\n        continue;\n      }\n      if (existingGroup.getId() === newGroupDef.groupId) {\n        return { idx: i, group: existingGroup };\n      }\n    }\n    return void 0;\n  }\n  createColumnGroup(providedGroup, groupInstanceIdCreator, oldColumnsMapped, pinned, isStandaloneStructure) {\n    const groupId = providedGroup.getGroupId();\n    const instanceId = groupInstanceIdCreator.getInstanceIdForKey(groupId);\n    const uniqueId = createUniqueColumnGroupId(groupId, instanceId);\n    let columnGroup = oldColumnsMapped[uniqueId];\n    if (columnGroup && columnGroup.getProvidedColumnGroup() !== providedGroup) {\n      columnGroup = null;\n    }\n    if (_exists(columnGroup)) {\n      columnGroup.reset();\n    } else {\n      columnGroup = new AgColumnGroup(providedGroup, groupId, instanceId, pinned);\n      if (!isStandaloneStructure) {\n        this.createBean(columnGroup);\n      }\n    }\n    return columnGroup;\n  }\n  // returns back a 2d map of ColumnGroup as follows: groupId -> instanceId -> ColumnGroup\n  mapOldGroupsById(displayedGroups) {\n    const result = {};\n    const recursive = (columnsOrGroups) => {\n      columnsOrGroups.forEach((columnOrGroup) => {\n        if (isColumnGroup2(columnOrGroup)) {\n          const columnGroup = columnOrGroup;\n          result[columnOrGroup.getUniqueId()] = columnGroup;\n          recursive(columnGroup.getChildren());\n        }\n      });\n    };\n    if (displayedGroups) {\n      recursive(displayedGroups);\n    }\n    return result;\n  }\n  setupParentsIntoCols(columnsOrGroups, parent) {\n    columnsOrGroups.forEach((columnsOrGroup) => {\n      columnsOrGroup.parent = parent;\n      if (isColumnGroup2(columnsOrGroup)) {\n        const columnGroup = columnsOrGroup;\n        this.setupParentsIntoCols(columnGroup.getChildren(), columnGroup);\n      }\n    });\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnGroups/columnGroupModule.ts\nvar ColumnGroupModule = {\n  moduleName: \"ColumnGroup\",\n  version: VERSION,\n  dynamicBeans: { headerGroupCellCtrl: HeaderGroupCellCtrl },\n  beans: [ColumnGroupService],\n  apiFunctions: {\n    getAllDisplayedColumnGroups,\n    getCenterDisplayedColumnGroups,\n    getColumnGroup,\n    getColumnGroupState,\n    getDisplayNameForColumnGroup,\n    getLeftDisplayedColumnGroups,\n    getProvidedColumnGroup,\n    getRightDisplayedColumnGroups,\n    resetColumnGroupState,\n    setColumnGroupOpened,\n    setColumnGroupState\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cellRenderers/cellRendererModule.ts\nvar CheckboxCellRendererModule = {\n  moduleName: \"CheckboxCellRenderer\",\n  version: VERSION,\n  userComponents: {\n    agCheckboxCellRenderer: CheckboxCellRenderer\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnApi.ts\nfunction getColumnDef(beans, key) {\n  const column = beans.colModel.getColDefCol(key);\n  if (column) {\n    return column.getColDef();\n  }\n  return null;\n}\nfunction getColumnDefs(beans) {\n  return beans.colModel.getColumnDefs();\n}\nfunction getDisplayNameForColumn(beans, column, location) {\n  return beans.colNames.getDisplayNameForColumn(column, location) || \"\";\n}\nfunction getColumn(beans, key) {\n  return beans.colModel.getColDefCol(key);\n}\nfunction getColumns(beans) {\n  return beans.colModel.getColDefCols();\n}\nfunction applyColumnState(beans, params) {\n  return _applyColumnState(beans, params, \"api\");\n}\nfunction getColumnState(beans) {\n  return _getColumnState(beans);\n}\nfunction resetColumnState(beans) {\n  _resetColumnState(beans, \"api\");\n}\nfunction isPinning(beans) {\n  return beans.visibleCols.isPinningLeft() || beans.visibleCols.isPinningRight();\n}\nfunction isPinningLeft(beans) {\n  return beans.visibleCols.isPinningLeft();\n}\nfunction isPinningRight(beans) {\n  return beans.visibleCols.isPinningRight();\n}\nfunction getDisplayedColAfter(beans, col) {\n  return beans.visibleCols.getColAfter(col);\n}\nfunction getDisplayedColBefore(beans, col) {\n  return beans.visibleCols.getColBefore(col);\n}\nfunction setColumnsVisible(beans, keys, visible) {\n  beans.colModel.setColsVisible(keys, visible, \"api\");\n}\nfunction setColumnsPinned(beans, keys, pinned) {\n  beans.pinnedCols?.setColsPinned(keys, pinned, \"api\");\n}\nfunction getAllGridColumns(beans) {\n  return beans.colModel.getCols();\n}\nfunction getDisplayedLeftColumns(beans) {\n  return beans.visibleCols.leftCols;\n}\nfunction getDisplayedCenterColumns(beans) {\n  return beans.visibleCols.centerCols;\n}\nfunction getDisplayedRightColumns(beans) {\n  return beans.visibleCols.rightCols;\n}\nfunction getAllDisplayedColumns(beans) {\n  return beans.visibleCols.allCols;\n}\nfunction getAllDisplayedVirtualColumns(beans) {\n  return beans.colViewport.getViewportColumns();\n}\n\n// packages/ag-grid-community/src/columns/columnDefFactory.ts\nfunction _deepCloneDefinition(object, keysToSkip) {\n  if (!object) {\n    return;\n  }\n  const obj = object;\n  const res = {};\n  Object.keys(obj).forEach((key) => {\n    if (keysToSkip && keysToSkip.indexOf(key) >= 0 || SKIP_JS_BUILTINS.has(key)) {\n      return;\n    }\n    const value = obj[key];\n    const sourceIsSimpleObject = typeof value === \"object\" && value !== null && value.constructor === Object;\n    if (sourceIsSimpleObject) {\n      res[key] = _deepCloneDefinition(value);\n    } else {\n      res[key] = value;\n    }\n  });\n  return res;\n}\nvar ColumnDefFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colDefFactory\";\n  }\n  wireBeans(beans) {\n    this.rowGroupColsSvc = beans.rowGroupColsSvc;\n    this.pivotColsSvc = beans.pivotColsSvc;\n  }\n  getColumnDefs(colDefColsList, showingPivotResult, lastOrder, colsList) {\n    const cols = colDefColsList.slice();\n    if (showingPivotResult) {\n      cols.sort((a, b) => lastOrder.indexOf(a) - lastOrder.indexOf(b));\n    } else if (lastOrder) {\n      cols.sort((a, b) => colsList.indexOf(a) - colsList.indexOf(b));\n    }\n    const rowGroupColumns = this.rowGroupColsSvc?.columns;\n    const pivotColumns = this.pivotColsSvc?.columns;\n    return this.buildColumnDefs(cols, rowGroupColumns, pivotColumns);\n  }\n  buildColumnDefs(cols, rowGroupColumns = [], pivotColumns = []) {\n    const res = [];\n    const colGroupDefs = {};\n    cols.forEach((col) => {\n      const colDef = this.createDefFromColumn(col, rowGroupColumns, pivotColumns);\n      let addToResult = true;\n      let childDef = colDef;\n      let pointer = col.getOriginalParent();\n      let lastPointer = null;\n      while (pointer) {\n        let parentDef = null;\n        if (pointer.isPadding()) {\n          pointer = pointer.getOriginalParent();\n          continue;\n        }\n        const existingParentDef = colGroupDefs[pointer.getGroupId()];\n        if (existingParentDef) {\n          existingParentDef.children.push(childDef);\n          addToResult = false;\n          break;\n        }\n        parentDef = this.createDefFromGroup(pointer);\n        if (parentDef) {\n          parentDef.children = [childDef];\n          colGroupDefs[parentDef.groupId] = parentDef;\n          childDef = parentDef;\n          pointer = pointer.getOriginalParent();\n        }\n        if (pointer != null && lastPointer === pointer) {\n          addToResult = false;\n          break;\n        }\n        lastPointer = pointer;\n      }\n      if (addToResult) {\n        res.push(childDef);\n      }\n    });\n    return res;\n  }\n  createDefFromGroup(group) {\n    const defCloned = _deepCloneDefinition(group.getColGroupDef(), [\"children\"]);\n    if (defCloned) {\n      defCloned.groupId = group.getGroupId();\n    }\n    return defCloned;\n  }\n  createDefFromColumn(col, rowGroupColumns, pivotColumns) {\n    const colDefCloned = _deepCloneDefinition(col.getColDef());\n    colDefCloned.colId = col.getColId();\n    colDefCloned.width = col.getActualWidth();\n    colDefCloned.rowGroup = col.isRowGroupActive();\n    colDefCloned.rowGroupIndex = col.isRowGroupActive() ? rowGroupColumns.indexOf(col) : null;\n    colDefCloned.pivot = col.isPivotActive();\n    colDefCloned.pivotIndex = col.isPivotActive() ? pivotColumns.indexOf(col) : null;\n    colDefCloned.aggFunc = col.isValueActive() ? col.getAggFunc() : null;\n    colDefCloned.hide = col.isVisible() ? void 0 : true;\n    colDefCloned.pinned = col.isPinned() ? col.getPinned() : null;\n    colDefCloned.sort = col.getSort() ? col.getSort() : null;\n    colDefCloned.sortIndex = col.getSortIndex() != null ? col.getSortIndex() : null;\n    return colDefCloned;\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnFlexService.ts\nvar ColumnFlexService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colFlex\";\n  }\n  refreshFlexedColumns(params = {}) {\n    const source = params.source ?? \"flex\";\n    if (params.viewportWidth != null) {\n      this.flexViewportWidth = params.viewportWidth;\n    }\n    const totalSpace = this.flexViewportWidth;\n    if (!totalSpace) {\n      return [];\n    }\n    const { visibleCols } = this.beans;\n    const visibleCenterCols = visibleCols.centerCols;\n    let flexAfterDisplayIndex = -1;\n    if (params.resizingCols) {\n      const allResizingCols = new Set(params.resizingCols);\n      for (let i = visibleCenterCols.length - 1; i >= 0; i--) {\n        if (allResizingCols.has(visibleCenterCols[i])) {\n          flexAfterDisplayIndex = i;\n          break;\n        }\n      }\n    }\n    let hasFlexItems = false;\n    const items = visibleCenterCols.map((col, i) => {\n      const flex = col.getFlex();\n      const isFlex = flex != null && flex > 0 && i > flexAfterDisplayIndex;\n      hasFlexItems || (hasFlexItems = isFlex);\n      return {\n        col,\n        isFlex,\n        flex: Math.max(0, flex ?? 0),\n        initialSize: col.getActualWidth(),\n        min: col.getMinWidth(),\n        max: col.getMaxWidth(),\n        targetSize: 0\n      };\n    });\n    if (!hasFlexItems) {\n      return [];\n    }\n    let unfrozenItemCount = items.length;\n    let unfrozenFlex = items.reduce((acc, item) => acc + item.flex, 0);\n    let unfrozenSpace = totalSpace;\n    const freeze = (item, width) => {\n      item.frozenSize = width;\n      item.col.setActualWidth(width, source);\n      unfrozenSpace -= width;\n      unfrozenFlex -= item.flex;\n      unfrozenItemCount -= 1;\n    };\n    const isFrozen = (item) => item.frozenSize != null;\n    for (const item of items) {\n      if (!item.isFlex) {\n        freeze(item, item.initialSize);\n      }\n    }\n    while (unfrozenItemCount > 0) {\n      const spaceToFill = Math.round(unfrozenFlex < 1 ? unfrozenSpace * unfrozenFlex : unfrozenSpace);\n      let lastUnfrozenItem;\n      let actualLeft = 0;\n      let idealRight = 0;\n      for (const item of items) {\n        if (isFrozen(item)) {\n          continue;\n        }\n        lastUnfrozenItem = item;\n        idealRight += spaceToFill * (item.flex / unfrozenFlex);\n        const idealSize = idealRight - actualLeft;\n        const roundedSize = Math.round(idealSize);\n        item.targetSize = roundedSize;\n        actualLeft += roundedSize;\n      }\n      if (lastUnfrozenItem) {\n        lastUnfrozenItem.targetSize += spaceToFill - actualLeft;\n      }\n      let totalViolation = 0;\n      for (const item of items) {\n        if (isFrozen(item)) {\n          continue;\n        }\n        const unclampedSize = item.targetSize;\n        const clampedSize = Math.min(Math.max(unclampedSize, item.min), item.max);\n        totalViolation += clampedSize - unclampedSize;\n        item.violationType = clampedSize === unclampedSize ? void 0 : clampedSize < unclampedSize ? \"max\" : \"min\";\n        item.targetSize = clampedSize;\n      }\n      const freezeType = totalViolation === 0 ? \"all\" : totalViolation > 0 ? \"min\" : \"max\";\n      for (const item of items) {\n        if (isFrozen(item)) {\n          continue;\n        }\n        if (freezeType === \"all\" || item.violationType === freezeType) {\n          freeze(item, item.targetSize);\n        }\n      }\n    }\n    if (!params.skipSetLeft) {\n      visibleCols.setLeftValues(source);\n    }\n    if (params.updateBodyWidths) {\n      visibleCols.updateBodyWidths();\n    }\n    const unconstrainedFlexColumns = items.filter((item) => item.isFlex && !item.violationType).map((item) => item.col);\n    if (params.fireResizedEvent) {\n      const changedColumns = items.filter((item) => item.initialSize !== item.frozenSize).map((item) => item.col);\n      const flexingColumns = items.filter((item) => item.flex).map((item) => item.col);\n      dispatchColumnResizedEvent(this.eventSvc, changedColumns, true, source, flexingColumns);\n    }\n    return unconstrainedFlexColumns;\n  }\n  initCol(column) {\n    const { flex, initialFlex } = column.colDef;\n    if (flex !== void 0) {\n      column.flex = flex;\n    } else if (initialFlex !== void 0) {\n      column.flex = initialFlex;\n    }\n  }\n  // this method should only be used by the colModel to\n  // change flex when required by the applyColumnState method.\n  setColFlex(column, flex) {\n    column.flex = flex ?? null;\n    column.dispatchStateUpdatedEvent(\"flex\");\n  }\n};\n\n// packages/ag-grid-community/src/columns/dataTypeService.ts\nvar DataTypeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"dataTypeSvc\";\n    this.dataTypeDefinitions = {};\n    this.isPendingInference = false;\n    this.isColumnTypeOverrideInDataTypeDefinitions = false;\n    // keep track of any column state updates whilst waiting for data types to be inferred\n    this.columnStateUpdatesPendingInference = {};\n    this.columnStateUpdateListenerDestroyFuncs = [];\n  }\n  wireBeans(beans) {\n    this.colModel = beans.colModel;\n  }\n  postConstruct() {\n    this.processDataTypeDefinitions();\n    this.addManagedPropertyListener(\"dataTypeDefinitions\", (event) => {\n      this.processDataTypeDefinitions();\n      this.colModel.recreateColumnDefs(event);\n    });\n  }\n  processDataTypeDefinitions() {\n    const defaultDataTypes = this.getDefaultDataTypes();\n    const newDataTypeDefinitions = {};\n    this.dataTypeDefinitions = newDataTypeDefinitions;\n    const newFormatValueFuncs = {};\n    this.formatValueFuncs = newFormatValueFuncs;\n    const generateFormatValueFunc = (dataTypeDefinition) => {\n      return (params) => {\n        const { column, node, value } = params;\n        let valueFormatter = column.getColDef().valueFormatter;\n        if (valueFormatter === dataTypeDefinition.groupSafeValueFormatter) {\n          valueFormatter = dataTypeDefinition.valueFormatter;\n        }\n        return this.beans.valueSvc.formatValue(column, node, value, valueFormatter);\n      };\n    };\n    for (const cellDataType of Object.keys(defaultDataTypes)) {\n      const dataTypeDefinition = defaultDataTypes[cellDataType];\n      const mergedDataTypeDefinition = {\n        ...dataTypeDefinition,\n        groupSafeValueFormatter: createGroupSafeValueFormatter(dataTypeDefinition, this.gos)\n      };\n      newDataTypeDefinitions[cellDataType] = mergedDataTypeDefinition;\n      newFormatValueFuncs[cellDataType] = generateFormatValueFunc(mergedDataTypeDefinition);\n    }\n    const dataTypeDefinitions = this.gos.get(\"dataTypeDefinitions\") ?? {};\n    const newDataTypeMatchers = {};\n    this.dataTypeMatchers = newDataTypeMatchers;\n    for (const cellDataType of Object.keys(dataTypeDefinitions)) {\n      const dataTypeDefinition = dataTypeDefinitions[cellDataType];\n      const mergedDataTypeDefinition = this.processDataTypeDefinition(\n        dataTypeDefinition,\n        dataTypeDefinitions,\n        [cellDataType],\n        defaultDataTypes\n      );\n      if (mergedDataTypeDefinition) {\n        newDataTypeDefinitions[cellDataType] = mergedDataTypeDefinition;\n        if (dataTypeDefinition.dataTypeMatcher) {\n          newDataTypeMatchers[cellDataType] = dataTypeDefinition.dataTypeMatcher;\n        }\n        newFormatValueFuncs[cellDataType] = generateFormatValueFunc(mergedDataTypeDefinition);\n      }\n    }\n    this.checkObjectValueHandlers(defaultDataTypes);\n    [\"dateString\", \"text\", \"number\", \"boolean\", \"date\"].forEach((cellDataType) => {\n      const overriddenDataTypeMatcher = newDataTypeMatchers[cellDataType];\n      if (overriddenDataTypeMatcher) {\n        delete newDataTypeMatchers[cellDataType];\n      }\n      newDataTypeMatchers[cellDataType] = overriddenDataTypeMatcher ?? defaultDataTypes[cellDataType].dataTypeMatcher;\n    });\n  }\n  processDataTypeDefinition(dataTypeDefinition, dataTypeDefinitions, alreadyProcessedDataTypes, defaultDataTypes) {\n    let mergedDataTypeDefinition;\n    const extendsCellDataType = dataTypeDefinition.extendsDataType;\n    if (dataTypeDefinition.columnTypes) {\n      this.isColumnTypeOverrideInDataTypeDefinitions = true;\n    }\n    if (dataTypeDefinition.extendsDataType === dataTypeDefinition.baseDataType) {\n      let baseDataTypeDefinition = defaultDataTypes[extendsCellDataType];\n      const overriddenBaseDataTypeDefinition = dataTypeDefinitions[extendsCellDataType];\n      if (baseDataTypeDefinition && overriddenBaseDataTypeDefinition) {\n        baseDataTypeDefinition = overriddenBaseDataTypeDefinition;\n      }\n      if (!validateDataTypeDefinition(dataTypeDefinition, baseDataTypeDefinition, extendsCellDataType)) {\n        return void 0;\n      }\n      mergedDataTypeDefinition = mergeDataTypeDefinitions(baseDataTypeDefinition, dataTypeDefinition);\n    } else {\n      if (alreadyProcessedDataTypes.includes(extendsCellDataType)) {\n        _warn(44);\n        return void 0;\n      }\n      const extendedDataTypeDefinition = dataTypeDefinitions[extendsCellDataType];\n      if (!validateDataTypeDefinition(dataTypeDefinition, extendedDataTypeDefinition, extendsCellDataType)) {\n        return void 0;\n      }\n      const mergedExtendedDataTypeDefinition = this.processDataTypeDefinition(\n        extendedDataTypeDefinition,\n        dataTypeDefinitions,\n        [...alreadyProcessedDataTypes, extendsCellDataType],\n        defaultDataTypes\n      );\n      if (!mergedExtendedDataTypeDefinition) {\n        return void 0;\n      }\n      mergedDataTypeDefinition = mergeDataTypeDefinitions(mergedExtendedDataTypeDefinition, dataTypeDefinition);\n    }\n    return {\n      ...mergedDataTypeDefinition,\n      groupSafeValueFormatter: createGroupSafeValueFormatter(mergedDataTypeDefinition, this.gos)\n    };\n  }\n  updateColDefAndGetColumnType(colDef, userColDef, colId) {\n    let { cellDataType } = userColDef;\n    const { field } = userColDef;\n    if (cellDataType === void 0) {\n      cellDataType = colDef.cellDataType;\n    }\n    if (cellDataType == null || cellDataType === true) {\n      cellDataType = this.canInferCellDataType(colDef, userColDef) ? this.inferCellDataType(field, colId) : false;\n    }\n    if (!cellDataType) {\n      colDef.cellDataType = false;\n      return void 0;\n    }\n    const dataTypeDefinition = this.dataTypeDefinitions[cellDataType];\n    if (!dataTypeDefinition) {\n      _warn(47, { cellDataType });\n      return void 0;\n    }\n    colDef.cellDataType = cellDataType;\n    if (dataTypeDefinition.groupSafeValueFormatter) {\n      colDef.valueFormatter = dataTypeDefinition.groupSafeValueFormatter;\n    }\n    if (dataTypeDefinition.valueParser) {\n      colDef.valueParser = dataTypeDefinition.valueParser;\n    }\n    if (!dataTypeDefinition.suppressDefaultProperties) {\n      this.setColDefPropertiesForBaseDataType(colDef, cellDataType, dataTypeDefinition, colId);\n    }\n    return dataTypeDefinition.columnTypes;\n  }\n  addColumnListeners(column) {\n    if (!this.isPendingInference) {\n      return;\n    }\n    const columnStateUpdates = this.columnStateUpdatesPendingInference[column.getColId()];\n    if (!columnStateUpdates) {\n      return;\n    }\n    const columnListener = (event) => {\n      columnStateUpdates.add(event.key);\n    };\n    column.__addEventListener(\"columnStateUpdated\", columnListener);\n    this.columnStateUpdateListenerDestroyFuncs.push(\n      () => column.__removeEventListener(\"columnStateUpdated\", columnListener)\n    );\n  }\n  canInferCellDataType(colDef, userColDef) {\n    const { gos } = this;\n    if (!_isClientSideRowModel(gos)) {\n      return false;\n    }\n    const propsToCheckForInference = { cellRenderer: true, valueGetter: true, valueParser: true, refData: true };\n    if (doColDefPropsPreventInference(userColDef, propsToCheckForInference)) {\n      return false;\n    }\n    const columnTypes = userColDef.type === null ? colDef.type : userColDef.type;\n    if (columnTypes) {\n      const columnTypeDefs = gos.get(\"columnTypes\") ?? {};\n      const hasPropsPreventingInference = convertColumnTypes(columnTypes).some((columnType) => {\n        const columnTypeDef = columnTypeDefs[columnType.trim()];\n        return columnTypeDef && doColDefPropsPreventInference(columnTypeDef, propsToCheckForInference);\n      });\n      if (hasPropsPreventingInference) {\n        return false;\n      }\n    }\n    return !doColDefPropsPreventInference(colDef, propsToCheckForInference);\n  }\n  inferCellDataType(field, colId) {\n    if (!field) {\n      return void 0;\n    }\n    let value;\n    const initialData = this.getInitialData();\n    if (initialData) {\n      const fieldContainsDots = field.indexOf(\".\") >= 0 && !this.gos.get(\"suppressFieldDotNotation\");\n      value = _getValueUsingField(initialData, field, fieldContainsDots);\n    } else {\n      this.initWaitForRowData(colId);\n    }\n    if (value == null) {\n      return void 0;\n    }\n    return Object.keys(this.dataTypeMatchers).find((_cellDataType) => this.dataTypeMatchers[_cellDataType](value)) ?? \"object\";\n  }\n  getInitialData() {\n    const rowData = this.gos.get(\"rowData\");\n    if (rowData?.length) {\n      return rowData[0];\n    } else if (this.initialData) {\n      return this.initialData;\n    } else {\n      const rowNodes = this.beans.rowModel.rootNode?.allLeafChildren;\n      if (rowNodes?.length) {\n        return rowNodes[0].data;\n      }\n    }\n    return null;\n  }\n  initWaitForRowData(colId) {\n    this.columnStateUpdatesPendingInference[colId] = /* @__PURE__ */ new Set();\n    if (this.isPendingInference) {\n      return;\n    }\n    this.isPendingInference = true;\n    const columnTypeOverridesExist = this.isColumnTypeOverrideInDataTypeDefinitions;\n    const { colAutosize, eventSvc } = this.beans;\n    if (columnTypeOverridesExist && colAutosize) {\n      colAutosize.shouldQueueResizeOperations = true;\n    }\n    const [destroyFunc] = this.addManagedEventListeners({\n      rowDataUpdateStarted: (event) => {\n        const { firstRowData } = event;\n        if (!firstRowData) {\n          return;\n        }\n        destroyFunc?.();\n        this.isPendingInference = false;\n        this.processColumnsPendingInference(firstRowData, columnTypeOverridesExist);\n        this.columnStateUpdatesPendingInference = {};\n        if (columnTypeOverridesExist) {\n          colAutosize?.processResizeOperations();\n        }\n        eventSvc.dispatchEvent({\n          type: \"dataTypesInferred\"\n        });\n      }\n    });\n  }\n  processColumnsPendingInference(firstRowData, columnTypeOverridesExist) {\n    this.initialData = firstRowData;\n    const state = [];\n    this.destroyColumnStateUpdateListeners();\n    const newRowGroupColumnStateWithoutIndex = {};\n    const newPivotColumnStateWithoutIndex = {};\n    for (const colId of Object.keys(this.columnStateUpdatesPendingInference)) {\n      const columnStateUpdates = this.columnStateUpdatesPendingInference[colId];\n      const column = this.colModel.getCol(colId);\n      if (!column) {\n        return;\n      }\n      const oldColDef = column.getColDef();\n      if (!this.resetColDefIntoCol(column, \"cellDataTypeInferred\")) {\n        return;\n      }\n      const newColDef = column.getColDef();\n      if (columnTypeOverridesExist && newColDef.type && newColDef.type !== oldColDef.type) {\n        const updatedColumnState = getUpdatedColumnState(column, columnStateUpdates);\n        if (updatedColumnState.rowGroup && updatedColumnState.rowGroupIndex == null) {\n          newRowGroupColumnStateWithoutIndex[colId] = updatedColumnState;\n        }\n        if (updatedColumnState.pivot && updatedColumnState.pivotIndex == null) {\n          newPivotColumnStateWithoutIndex[colId] = updatedColumnState;\n        }\n        state.push(updatedColumnState);\n      }\n    }\n    if (columnTypeOverridesExist) {\n      state.push(\n        ...this.generateColumnStateForRowGroupAndPivotIndexes(\n          newRowGroupColumnStateWithoutIndex,\n          newPivotColumnStateWithoutIndex\n        )\n      );\n    }\n    if (state.length) {\n      _applyColumnState(this.beans, { state }, \"cellDataTypeInferred\");\n    }\n    this.initialData = null;\n  }\n  generateColumnStateForRowGroupAndPivotIndexes(updatedRowGroupColumnState, updatedPivotColumnState) {\n    const existingColumnStateUpdates = {};\n    const { rowGroupColsSvc, pivotColsSvc } = this.beans;\n    rowGroupColsSvc?.restoreColumnOrder(existingColumnStateUpdates, updatedRowGroupColumnState);\n    pivotColsSvc?.restoreColumnOrder(existingColumnStateUpdates, updatedPivotColumnState);\n    return Object.values(existingColumnStateUpdates);\n  }\n  resetColDefIntoCol(column, source) {\n    const userColDef = column.getUserProvidedColDef();\n    if (!userColDef) {\n      return false;\n    }\n    const newColDef = _addColumnDefaultAndTypes(this.beans, userColDef, column.getColId());\n    column.setColDef(newColDef, userColDef, source);\n    return true;\n  }\n  checkObjectValueHandlers(defaultDataTypes) {\n    const resolvedObjectDataTypeDefinition = this.dataTypeDefinitions.object;\n    const defaultObjectDataTypeDefinition = defaultDataTypes.object;\n    this.hasObjectValueParser = resolvedObjectDataTypeDefinition.valueParser !== defaultObjectDataTypeDefinition.valueParser;\n    this.hasObjectValueFormatter = resolvedObjectDataTypeDefinition.valueFormatter !== defaultObjectDataTypeDefinition.valueFormatter;\n  }\n  getDateStringTypeDefinition(column) {\n    const { dateString } = this.dataTypeDefinitions;\n    if (!column) {\n      return dateString;\n    }\n    return this.getDataTypeDefinition(column) ?? dateString;\n  }\n  getDateParserFunction(column) {\n    return this.getDateStringTypeDefinition(column).dateParser;\n  }\n  getDateFormatterFunction(column) {\n    return this.getDateStringTypeDefinition(column).dateFormatter;\n  }\n  getDataTypeDefinition(column) {\n    const colDef = column.getColDef();\n    if (!colDef.cellDataType) {\n      return void 0;\n    }\n    return this.dataTypeDefinitions[colDef.cellDataType];\n  }\n  getBaseDataType(column) {\n    return this.getDataTypeDefinition(column)?.baseDataType;\n  }\n  checkType(column, value) {\n    if (value == null) {\n      return true;\n    }\n    const dataTypeMatcher = this.getDataTypeDefinition(column)?.dataTypeMatcher;\n    if (!dataTypeMatcher) {\n      return true;\n    }\n    return dataTypeMatcher(value);\n  }\n  validateColDef(colDef) {\n    const warning = (property) => _warn(48, { property });\n    if (colDef.cellDataType === \"object\") {\n      const { object } = this.dataTypeDefinitions;\n      if (colDef.valueFormatter === object.groupSafeValueFormatter && !this.hasObjectValueFormatter) {\n        warning(\"Formatter\");\n      }\n      if (colDef.editable && colDef.valueParser === object.valueParser && !this.hasObjectValueParser) {\n        warning(\"Parser\");\n      }\n    }\n  }\n  getFormatValue(cellDataType) {\n    return this.formatValueFuncs[cellDataType];\n  }\n  isColPendingInference(colId) {\n    return this.isPendingInference && !!this.columnStateUpdatesPendingInference[colId];\n  }\n  setColDefPropertiesForBaseDataType(colDef, cellDataType, dataTypeDefinition, colId) {\n    const formatValue = this.formatValueFuncs[cellDataType];\n    switch (dataTypeDefinition.baseDataType) {\n      case \"number\": {\n        colDef.cellEditor = \"agNumberCellEditor\";\n        break;\n      }\n      case \"boolean\": {\n        colDef.cellEditor = \"agCheckboxCellEditor\";\n        colDef.cellRenderer = \"agCheckboxCellRenderer\";\n        colDef.suppressKeyboardEvent = (params) => !!params.colDef.editable && params.event.key === KeyCode.SPACE;\n        break;\n      }\n      case \"date\": {\n        colDef.cellEditor = \"agDateCellEditor\";\n        colDef.keyCreator = formatValue;\n        break;\n      }\n      case \"dateString\": {\n        colDef.cellEditor = \"agDateStringCellEditor\";\n        colDef.keyCreator = formatValue;\n        break;\n      }\n      case \"object\": {\n        colDef.cellEditorParams = {\n          useFormatter: true\n        };\n        colDef.comparator = (a, b) => {\n          const column = this.colModel.getColDefCol(colId);\n          const colDef2 = column?.getColDef();\n          if (!column || !colDef2) {\n            return 0;\n          }\n          const valA = a == null ? \"\" : formatValue({ column, node: null, value: a });\n          const valB = b == null ? \"\" : formatValue({ column, node: null, value: b });\n          if (valA === valB)\n            return 0;\n          return valA > valB ? 1 : -1;\n        };\n        colDef.keyCreator = formatValue;\n        break;\n      }\n    }\n    this.beans.filterManager?.setColDefPropertiesForDataType(colDef, dataTypeDefinition, formatValue);\n  }\n  getDefaultDataTypes() {\n    const defaultDateFormatMatcher = (value) => !!value.match(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\");\n    const translate = this.getLocaleTextFunc();\n    return {\n      number: {\n        baseDataType: \"number\",\n        // can be empty space with legacy copy\n        valueParser: (params) => params.newValue?.trim?.() === \"\" ? null : Number(params.newValue),\n        valueFormatter: (params) => {\n          if (params.value == null) {\n            return \"\";\n          }\n          if (typeof params.value !== \"number\" || isNaN(params.value)) {\n            return translate(\"invalidNumber\", \"Invalid Number\");\n          }\n          return String(params.value);\n        },\n        dataTypeMatcher: (value) => typeof value === \"number\"\n      },\n      text: {\n        baseDataType: \"text\",\n        valueParser: (params) => params.newValue === \"\" ? null : _toStringOrNull(params.newValue),\n        dataTypeMatcher: (value) => typeof value === \"string\"\n      },\n      boolean: {\n        baseDataType: \"boolean\",\n        valueParser: (params) => {\n          if (params.newValue == null) {\n            return params.newValue;\n          }\n          return params.newValue?.trim?.() === \"\" ? null : String(params.newValue).toLowerCase() === \"true\";\n        },\n        valueFormatter: (params) => params.value == null ? \"\" : String(params.value),\n        dataTypeMatcher: (value) => typeof value === \"boolean\"\n      },\n      date: {\n        baseDataType: \"date\",\n        valueParser: (params) => _parseDateTimeFromString(params.newValue == null ? null : String(params.newValue)),\n        valueFormatter: (params) => {\n          if (params.value == null) {\n            return \"\";\n          }\n          if (!(params.value instanceof Date) || isNaN(params.value.getTime())) {\n            return translate(\"invalidDate\", \"Invalid Date\");\n          }\n          return _serialiseDate(params.value, false) ?? \"\";\n        },\n        dataTypeMatcher: (value) => value instanceof Date\n      },\n      dateString: {\n        baseDataType: \"dateString\",\n        dateParser: (value) => _parseDateTimeFromString(value) ?? void 0,\n        dateFormatter: (value) => _serialiseDate(value ?? null, false) ?? void 0,\n        valueParser: (params) => defaultDateFormatMatcher(String(params.newValue)) ? params.newValue : null,\n        valueFormatter: (params) => defaultDateFormatMatcher(String(params.value)) ? params.value : \"\",\n        dataTypeMatcher: (value) => typeof value === \"string\" && defaultDateFormatMatcher(value)\n      },\n      object: {\n        baseDataType: \"object\",\n        valueParser: () => null,\n        valueFormatter: (params) => _toStringOrNull(params.value) ?? \"\"\n      }\n    };\n  }\n  destroyColumnStateUpdateListeners() {\n    this.columnStateUpdateListenerDestroyFuncs.forEach((destroyFunc) => destroyFunc());\n    this.columnStateUpdateListenerDestroyFuncs = [];\n  }\n  destroy() {\n    this.dataTypeDefinitions = {};\n    this.dataTypeMatchers = {};\n    this.formatValueFuncs = {};\n    this.columnStateUpdatesPendingInference = {};\n    this.destroyColumnStateUpdateListeners();\n    super.destroy();\n  }\n};\nfunction mergeDataTypeDefinitions(parentDataTypeDefinition, childDataTypeDefinition) {\n  const mergedDataTypeDefinition = {\n    ...parentDataTypeDefinition,\n    ...childDataTypeDefinition\n  };\n  if (parentDataTypeDefinition.columnTypes && childDataTypeDefinition.columnTypes && childDataTypeDefinition.appendColumnTypes) {\n    mergedDataTypeDefinition.columnTypes = [\n      ...convertColumnTypes(parentDataTypeDefinition.columnTypes),\n      ...convertColumnTypes(childDataTypeDefinition.columnTypes)\n    ];\n  }\n  return mergedDataTypeDefinition;\n}\nfunction validateDataTypeDefinition(dataTypeDefinition, parentDataTypeDefinition, parentCellDataType) {\n  if (!parentDataTypeDefinition) {\n    _warn(45, { parentCellDataType });\n    return false;\n  }\n  if (parentDataTypeDefinition.baseDataType !== dataTypeDefinition.baseDataType) {\n    _warn(46);\n    return false;\n  }\n  return true;\n}\nfunction createGroupSafeValueFormatter(dataTypeDefinition, gos) {\n  if (!dataTypeDefinition.valueFormatter) {\n    return void 0;\n  }\n  return (params) => {\n    if (params.node?.group) {\n      const aggFunc = (params.colDef.pivotValueColumn ?? params.column).getAggFunc();\n      if (aggFunc) {\n        if (aggFunc === \"first\" || aggFunc === \"last\") {\n          return dataTypeDefinition.valueFormatter(params);\n        }\n        if (dataTypeDefinition.baseDataType === \"number\" && aggFunc !== \"count\") {\n          if (typeof params.value === \"number\") {\n            return dataTypeDefinition.valueFormatter(params);\n          }\n          if (typeof params.value === \"object\") {\n            if (!params.value) {\n              return void 0;\n            }\n            if (\"toNumber\" in params.value) {\n              return dataTypeDefinition.valueFormatter({\n                ...params,\n                value: params.value.toNumber()\n              });\n            }\n            if (\"value\" in params.value) {\n              return dataTypeDefinition.valueFormatter({\n                ...params,\n                value: params.value.value\n              });\n            }\n          }\n        }\n        return void 0;\n      }\n      if (gos.get(\"groupDisplayType\") === \"groupRows\" && !gos.get(\"treeData\")) {\n        return void 0;\n      }\n    } else if (gos.get(\"groupHideOpenParents\") && params.column.isRowGroupActive()) {\n      if (typeof params.value === \"string\" && !dataTypeDefinition.dataTypeMatcher?.(params.value)) {\n        return void 0;\n      }\n    }\n    return dataTypeDefinition.valueFormatter(params);\n  };\n}\nfunction doesColDefPropPreventInference(colDef, checkProps, prop, comparisonValue) {\n  if (!checkProps[prop]) {\n    return false;\n  }\n  const value = colDef[prop];\n  if (value === null) {\n    checkProps[prop] = false;\n    return false;\n  } else {\n    return comparisonValue === void 0 ? !!value : value === comparisonValue;\n  }\n}\nfunction doColDefPropsPreventInference(colDef, propsToCheckForInference) {\n  return [\n    [\"cellRenderer\", \"agSparklineCellRenderer\"],\n    [\"valueGetter\", void 0],\n    [\"valueParser\", void 0],\n    [\"refData\", void 0]\n  ].some(\n    ([prop, comparisonValue]) => doesColDefPropPreventInference(colDef, propsToCheckForInference, prop, comparisonValue)\n  );\n}\nfunction getUpdatedColumnState(column, columnStateUpdates) {\n  const columnState = getColumnStateFromColDef(column);\n  columnStateUpdates.forEach((key) => {\n    delete columnState[key];\n    if (key === \"rowGroup\") {\n      delete columnState.rowGroupIndex;\n    } else if (key === \"pivot\") {\n      delete columnState.pivotIndex;\n    }\n  });\n  return columnState;\n}\n\n// packages/ag-grid-community/src/columns/columnModule.ts\nvar DataTypeModule = {\n  moduleName: \"DataType\",\n  version: VERSION,\n  beans: [DataTypeService],\n  dependsOn: [CheckboxCellRendererModule]\n};\nvar ColumnFlexModule = {\n  moduleName: \"ColumnFlex\",\n  version: VERSION,\n  beans: [ColumnFlexService]\n};\nvar ColumnApiModule = {\n  moduleName: \"ColumnApi\",\n  version: VERSION,\n  beans: [ColumnDefFactory],\n  apiFunctions: {\n    getColumnDef,\n    getDisplayNameForColumn,\n    getColumn,\n    getColumns,\n    applyColumnState,\n    getColumnState,\n    resetColumnState,\n    isPinning,\n    isPinningLeft,\n    isPinningRight,\n    getDisplayedColAfter,\n    getDisplayedColBefore,\n    setColumnsVisible,\n    setColumnsPinned,\n    getAllGridColumns,\n    getDisplayedLeftColumns,\n    getDisplayedCenterColumns,\n    getDisplayedRightColumns,\n    getAllDisplayedColumns,\n    getAllDisplayedVirtualColumns,\n    getColumnDefs\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnNameService.ts\nfunction _camelCaseToHumanText(camelCase) {\n  if (!camelCase || camelCase == null) {\n    return null;\n  }\n  const rex = /([a-z])([A-Z])/g;\n  const rexCaps = /([A-Z]+)([A-Z])([a-z])/g;\n  const words = camelCase.replace(rex, \"$1 $2\").replace(rexCaps, \"$1 $2$3\").replace(/\\./g, \" \").split(\" \");\n  return words.map((word) => word.substring(0, 1).toUpperCase() + (word.length > 1 ? word.substring(1, word.length) : \"\")).join(\" \");\n}\nvar ColumnNameService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colNames\";\n  }\n  getDisplayNameForColumn(column, location, includeAggFunc = false) {\n    if (!column) {\n      return null;\n    }\n    const headerName = this.getHeaderName(column.getColDef(), column, null, null, location);\n    const { aggColNameSvc } = this.beans;\n    if (includeAggFunc && aggColNameSvc) {\n      return aggColNameSvc.getHeaderName(column, headerName);\n    }\n    return headerName;\n  }\n  getDisplayNameForProvidedColumnGroup(columnGroup, providedColumnGroup, location) {\n    const colGroupDef = providedColumnGroup?.getColGroupDef();\n    if (colGroupDef) {\n      return this.getHeaderName(colGroupDef, null, columnGroup, providedColumnGroup, location);\n    }\n    return null;\n  }\n  getDisplayNameForColumnGroup(columnGroup, location) {\n    return this.getDisplayNameForProvidedColumnGroup(columnGroup, columnGroup.getProvidedColumnGroup(), location);\n  }\n  // location is where the column is going to appear, ie who is calling us\n  getHeaderName(colDef, column, columnGroup, providedColumnGroup, location) {\n    const headerValueGetter = colDef.headerValueGetter;\n    if (headerValueGetter) {\n      const params = _addGridCommonParams(this.gos, {\n        colDef,\n        column,\n        columnGroup,\n        providedColumnGroup,\n        location\n      });\n      if (typeof headerValueGetter === \"function\") {\n        return headerValueGetter(params);\n      } else if (typeof headerValueGetter === \"string\") {\n        return this.beans.expressionSvc?.evaluate(headerValueGetter, params) ?? null;\n      }\n      return \"\";\n    } else if (colDef.headerName != null) {\n      return colDef.headerName;\n    } else if (colDef.field) {\n      return _camelCaseToHumanText(colDef.field);\n    }\n    return \"\";\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnViewportService.ts\nvar ColumnViewportService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colViewport\";\n    // cols in center that are in the viewport\n    this.colsWithinViewport = [];\n    // same as colsWithinViewport, except we always include columns with headerAutoHeight\n    this.headerColsWithinViewport = [];\n    // A hash key to keep track of changes in viewport columns\n    this.colsWithinViewportHash = \"\";\n    // all columns & groups to be rendered, index by row.\n    // used by header rows to get all items to render for that row.\n    this.rowsOfHeadersToRenderLeft = {};\n    this.rowsOfHeadersToRenderRight = {};\n    this.rowsOfHeadersToRenderCenter = {};\n  }\n  wireBeans(beans) {\n    this.visibleCols = beans.visibleCols;\n    this.colModel = beans.colModel;\n  }\n  postConstruct() {\n    this.suppressColumnVirtualisation = this.gos.get(\"suppressColumnVirtualisation\");\n  }\n  setScrollPosition(scrollWidth, scrollPosition, afterScroll = false) {\n    const { visibleCols } = this;\n    const bodyWidthDirty = visibleCols.isBodyWidthDirty;\n    const noChange = scrollWidth === this.scrollWidth && scrollPosition === this.scrollPosition && !bodyWidthDirty;\n    if (noChange) {\n      return;\n    }\n    this.scrollWidth = scrollWidth;\n    this.scrollPosition = scrollPosition;\n    visibleCols.isBodyWidthDirty = true;\n    if (this.gos.get(\"enableRtl\")) {\n      const bodyWidth = visibleCols.bodyWidth;\n      this.viewportLeft = bodyWidth - scrollPosition - scrollWidth;\n      this.viewportRight = bodyWidth - scrollPosition;\n    } else {\n      this.viewportLeft = scrollPosition;\n      this.viewportRight = scrollWidth + scrollPosition;\n    }\n    if (this.colModel.ready) {\n      this.checkViewportColumns(afterScroll);\n    }\n  }\n  getHeadersToRender(type, dept) {\n    let result;\n    switch (type) {\n      case \"left\":\n        result = this.rowsOfHeadersToRenderLeft[dept];\n        break;\n      case \"right\":\n        result = this.rowsOfHeadersToRenderRight[dept];\n        break;\n      default:\n        result = this.rowsOfHeadersToRenderCenter[dept];\n        break;\n    }\n    return result || [];\n  }\n  extractViewportColumns() {\n    const displayedColumnsCenter = this.visibleCols.centerCols;\n    if (this.isColumnVirtualisationSuppressed()) {\n      this.colsWithinViewport = displayedColumnsCenter;\n      this.headerColsWithinViewport = displayedColumnsCenter;\n    } else {\n      this.colsWithinViewport = displayedColumnsCenter.filter(this.isColumnInRowViewport.bind(this));\n      this.headerColsWithinViewport = displayedColumnsCenter.filter(this.isColumnInHeaderViewport.bind(this));\n    }\n  }\n  isColumnVirtualisationSuppressed() {\n    return this.suppressColumnVirtualisation || this.viewportRight === 0;\n  }\n  clear(suppressHashClear) {\n    this.rowsOfHeadersToRenderLeft = {};\n    this.rowsOfHeadersToRenderRight = {};\n    this.rowsOfHeadersToRenderCenter = {};\n    if (!suppressHashClear) {\n      this.colsWithinViewportHash = \"\";\n    }\n  }\n  isColumnInHeaderViewport(col) {\n    if (col.isAutoHeaderHeight() || isAnyParentAutoHeaderHeight(col)) {\n      return true;\n    }\n    return this.isColumnInRowViewport(col);\n  }\n  isColumnInRowViewport(col) {\n    if (col.isAutoHeight()) {\n      return true;\n    }\n    const columnLeft = col.getLeft() || 0;\n    const columnRight = columnLeft + col.getActualWidth();\n    const leftBounds = this.viewportLeft - 200;\n    const rightBounds = this.viewportRight + 200;\n    const columnToMuchLeft = columnLeft < leftBounds && columnRight < leftBounds;\n    const columnToMuchRight = columnLeft > rightBounds && columnRight > rightBounds;\n    return !columnToMuchLeft && !columnToMuchRight;\n  }\n  // used by Grid API only\n  getViewportColumns() {\n    const { leftCols, rightCols } = this.visibleCols;\n    const res = this.colsWithinViewport.concat(leftCols).concat(rightCols);\n    return res;\n  }\n  // + rowRenderer\n  // if we are not column spanning, this just returns back the virtual centre columns,\n  // however if we are column spanning, then different rows can have different virtual\n  // columns, so we have to work out the list for each individual row.\n  getColsWithinViewport(rowNode) {\n    if (!this.colModel.colSpanActive) {\n      return this.colsWithinViewport;\n    }\n    const emptySpaceBeforeColumn = (col) => {\n      const left = col.getLeft();\n      return _exists(left) && left > this.viewportLeft;\n    };\n    const inViewportCallback = this.isColumnVirtualisationSuppressed() ? void 0 : this.isColumnInRowViewport.bind(this);\n    const { visibleCols } = this;\n    const displayedColumnsCenter = visibleCols.centerCols;\n    return visibleCols.getColsForRow(rowNode, displayedColumnsCenter, inViewportCallback, emptySpaceBeforeColumn);\n  }\n  // checks what columns are currently displayed due to column virtualisation. dispatches an event\n  // if the list of columns has changed.\n  // + setColumnWidth(), setViewportPosition(), setColumnDefs(), sizeColumnsToFit()\n  checkViewportColumns(afterScroll = false) {\n    const viewportColumnsChanged = this.extractViewport();\n    if (viewportColumnsChanged) {\n      this.eventSvc.dispatchEvent({\n        type: \"virtualColumnsChanged\",\n        afterScroll\n      });\n    }\n  }\n  calculateHeaderRows() {\n    this.clear(true);\n    const renderedColIds = {};\n    const { leftCols, rightCols, treeLeft, treeRight, treeCenter } = this.visibleCols;\n    const allRenderedCols = this.headerColsWithinViewport.concat(leftCols).concat(rightCols);\n    allRenderedCols.forEach((col) => renderedColIds[col.getId()] = true);\n    const testGroup = (children, result, dept) => {\n      let returnValue = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        let addThisItem = false;\n        if (isColumn(child)) {\n          addThisItem = renderedColIds[child.getId()] === true;\n        } else {\n          const columnGroup = child;\n          const displayedChildren = columnGroup.getDisplayedChildren();\n          if (displayedChildren) {\n            addThisItem = testGroup(displayedChildren, result, dept + 1);\n          }\n        }\n        if (addThisItem) {\n          returnValue = true;\n          if (!result[dept]) {\n            result[dept] = [];\n          }\n          result[dept].push(child);\n        }\n      }\n      return returnValue;\n    };\n    testGroup(treeLeft, this.rowsOfHeadersToRenderLeft, 0);\n    testGroup(treeRight, this.rowsOfHeadersToRenderRight, 0);\n    testGroup(treeCenter, this.rowsOfHeadersToRenderCenter, 0);\n  }\n  extractViewport() {\n    const hashColumn = (c) => `${c.getId()}-${c.getPinned() || \"normal\"}`;\n    this.extractViewportColumns();\n    const newHash = this.getViewportColumns().map(hashColumn).join(\"#\");\n    const changed = this.colsWithinViewportHash !== newHash;\n    if (changed) {\n      this.colsWithinViewportHash = newHash;\n      this.calculateHeaderRows();\n    }\n    return changed;\n  }\n};\nfunction isAnyParentAutoHeaderHeight(col) {\n  while (col) {\n    if (col.isAutoHeaderHeight()) {\n      return true;\n    }\n    col = col.getParent();\n  }\n  return false;\n}\n\n// packages/ag-grid-community/src/components/framework/agComponentUtils.ts\nvar AgComponentUtils = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"agCompUtils\";\n  }\n  adaptFunction(type, jsCompFunc) {\n    if (!type.cellRenderer) {\n      return null;\n    }\n    class Adapter {\n      refresh() {\n        return false;\n      }\n      getGui() {\n        return this.eGui;\n      }\n      init(params) {\n        const callbackResult = jsCompFunc(params);\n        const type2 = typeof callbackResult;\n        if (type2 === \"string\" || type2 === \"number\" || type2 === \"boolean\") {\n          this.eGui = _loadTemplate(\"<span>\" + callbackResult + \"</span>\");\n          return;\n        }\n        if (callbackResult == null) {\n          this.eGui = _loadTemplate(\"<span></span>\");\n          return;\n        }\n        this.eGui = callbackResult;\n      }\n    }\n    return Adapter;\n  }\n};\n\n// packages/ag-grid-community/src/components/framework/cellRendererFunctionModule.ts\nvar CellRendererFunctionModule = {\n  moduleName: \"CellRendererFunction\",\n  version: VERSION,\n  beans: [AgComponentUtils]\n};\n\n// packages/ag-grid-community/src/components/framework/registry.ts\nvar Registry = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"registry\";\n    this.agGridDefaults = {};\n    this.agGridDefaultParams = {};\n    this.jsComps = {};\n    this.dynamicBeans = {};\n    this.selectors = {};\n    this.icons = {};\n  }\n  postConstruct() {\n    const comps = this.gos.get(\"components\");\n    if (comps != null) {\n      for (const key of Object.keys(comps)) {\n        this.jsComps[key] = comps[key];\n      }\n    }\n  }\n  registerModule(module) {\n    const { icons, userComponents, dynamicBeans, selectors } = module;\n    if (userComponents) {\n      const registerUserComponent = (name, component, params) => {\n        this.agGridDefaults[name] = component;\n        if (params) {\n          this.agGridDefaultParams[name] = params;\n        }\n      };\n      for (const name of Object.keys(userComponents)) {\n        const comp = userComponents[name];\n        if (typeof comp === \"object\") {\n          registerUserComponent(name, comp.classImp, comp.params);\n        } else {\n          registerUserComponent(name, comp);\n        }\n      }\n    }\n    if (dynamicBeans) {\n      for (const name of Object.keys(dynamicBeans)) {\n        this.dynamicBeans[name] = dynamicBeans[name];\n      }\n    }\n    selectors?.forEach((selector) => {\n      this.selectors[selector.selector] = selector;\n    });\n    if (icons) {\n      for (const name of Object.keys(icons)) {\n        this.icons[name] = icons[name];\n      }\n    }\n  }\n  getUserComponent(propertyName, name) {\n    const createResult = (component, componentFromFramework, params) => ({\n      componentFromFramework,\n      component,\n      params\n    });\n    const { frameworkOverrides } = this.beans;\n    const registeredViaFrameworkComp = frameworkOverrides.frameworkComponent(name, this.gos.get(\"components\"));\n    if (registeredViaFrameworkComp != null) {\n      return createResult(registeredViaFrameworkComp, true);\n    }\n    const jsComponent = this.jsComps[name];\n    if (jsComponent) {\n      const isFwkComp = frameworkOverrides.isFrameworkComponent(jsComponent);\n      return createResult(jsComponent, isFwkComp);\n    }\n    const defaultComponent = this.agGridDefaults[name];\n    if (defaultComponent) {\n      return createResult(defaultComponent, false, this.agGridDefaultParams[name]);\n    }\n    this.beans.validation?.missingUserComponent(propertyName, name, this.agGridDefaults, this.jsComps);\n    return null;\n  }\n  createDynamicBean(name, mandatory, ...args) {\n    const BeanClass = this.dynamicBeans[name];\n    if (BeanClass == null) {\n      if (mandatory) {\n        throw new Error(_errMsg(256));\n      }\n      return void 0;\n    }\n    return new BeanClass(...args);\n  }\n  getSelector(name) {\n    return this.selectors[name];\n  }\n  getIcon(name) {\n    return this.icons[name];\n  }\n};\n\n// packages/ag-grid-community/src/ctrlsService.ts\nvar NUM_CTRLS = 23;\nvar CtrlsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"ctrlsSvc\";\n    this.params = {};\n    this.ready = false;\n    this.readyCallbacks = [];\n  }\n  postConstruct() {\n    this.addEventListener(\n      \"ready\",\n      () => {\n        this.updateReady();\n        if (this.ready) {\n          this.readyCallbacks.forEach((c) => c(this.params));\n          this.readyCallbacks.length = 0;\n        }\n      },\n      this.beans.frameworkOverrides.runWhenReadyAsync?.() ?? false\n    );\n  }\n  updateReady() {\n    const values = Object.values(this.params);\n    this.ready = values.length === NUM_CTRLS && values.every((ctrl) => {\n      return ctrl?.isAlive() ?? false;\n    });\n  }\n  whenReady(caller, callback) {\n    if (this.ready) {\n      callback(this.params);\n    } else {\n      this.readyCallbacks.push(callback);\n    }\n    caller.addDestroyFunc(() => {\n      const index = this.readyCallbacks.indexOf(callback);\n      if (index >= 0) {\n        this.readyCallbacks.splice(index, 1);\n      }\n    });\n  }\n  register(ctrlType, ctrl) {\n    this.params[ctrlType] = ctrl;\n    this.updateReady();\n    if (this.ready) {\n      this.dispatchLocalEvent({ type: \"ready\" });\n    }\n    ctrl.addDestroyFunc(() => {\n      this.updateReady();\n    });\n  }\n  get(ctrlType) {\n    return this.params[ctrlType];\n  }\n  getGridBodyCtrl() {\n    return this.params.gridBodyCtrl;\n  }\n  getHeaderRowContainerCtrls() {\n    const { leftHeader, centerHeader, rightHeader } = this.params;\n    return [leftHeader, rightHeader, centerHeader];\n  }\n  getHeaderRowContainerCtrl(pinned) {\n    const params = this.params;\n    switch (pinned) {\n      case \"left\":\n        return params.leftHeader;\n      case \"right\":\n        return params.rightHeader;\n      default:\n        return params.centerHeader;\n    }\n  }\n  getScrollFeature() {\n    return this.getGridBodyCtrl().scrollFeature;\n  }\n};\n\n// packages/ag-grid-community/src/theming/core/core.css-GENERATED.ts\nvar coreCSS = (\n  /*css*/\n  `:where(.ag-root-wrapper,.ag-popup,.ag-dnd-ghost,.ag-chart),:where(.ag-root-wrapper,.ag-popup,.ag-dnd-ghost,.ag-chart) :where([class^=ag-]){box-sizing:border-box;&:after,&:before{box-sizing:border-box}&:where(div,span,label):focus-visible{box-shadow:inset var(--ag-focus-shadow);outline:none}}:where(.ag-root-wrapper,.ag-popup,.ag-dnd-ghost,.ag-chart) :where([class^=ag-]) ::-ms-clear{display:none}.ag-aria-description-container{border:0;z-index:9999;clip:rect(1px,1px,1px,1px);height:1px;overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:1px}.ag-hidden{display:none!important}.ag-invisible{visibility:hidden!important}.ag-unselectable{-webkit-user-select:none;-moz-user-select:none;user-select:none}.ag-selectable{-webkit-user-select:text;-moz-user-select:text;user-select:text}.ag-tab-guard{display:block;height:0;position:absolute;width:0}:where(.ag-virtual-list-viewport) .ag-tab-guard{position:sticky}.ag-tab-guard-top{top:1px}.ag-tab-guard-bottom{bottom:1px}.ag-shake-left-to-right{animation-direction:alternate;animation-duration:.2s;animation-iteration-count:infinite;animation-name:ag-shake-left-to-right}@keyframes ag-shake-left-to-right{0%{padding-left:6px;padding-right:2px}to{padding-left:2px;padding-right:6px}}.ag-body-horizontal-scroll-viewport,.ag-body-vertical-scroll-viewport,.ag-body-viewport,.ag-center-cols-viewport,.ag-floating-bottom-viewport,.ag-floating-top-viewport,.ag-header-viewport,.ag-sticky-bottom-viewport,.ag-sticky-top-viewport,.ag-virtual-list-viewport{flex:1 1 auto;height:100%;min-width:0;overflow:hidden;position:relative}.ag-viewport{position:relative}.ag-spanning-container{position:absolute;top:0;z-index:1}.ag-body-viewport,.ag-center-cols-viewport,.ag-floating-bottom-viewport,.ag-floating-top-viewport,.ag-header-viewport,.ag-sticky-bottom-viewport,.ag-sticky-top-viewport{overflow-x:auto;-ms-overflow-style:none!important;scrollbar-width:none!important;&::-webkit-scrollbar{display:none!important}}.ag-body-viewport{display:flex;overflow-x:hidden;&:where(.ag-layout-normal){overflow-y:auto;-webkit-overflow-scrolling:touch}}.ag-sticky-bottom-container,.ag-sticky-top-container{min-height:1px}.ag-center-cols-viewport{min-height:100%;width:100%}.ag-body-horizontal-scroll-viewport{overflow-x:scroll}.ag-body-vertical-scroll-viewport{overflow-y:scroll}.ag-virtual-list-viewport{overflow:auto;width:100%}.ag-body-container,.ag-body-horizontal-scroll-container,.ag-body-vertical-scroll-container,.ag-center-cols-container,.ag-floating-bottom-container,.ag-floating-bottom-full-width-container,.ag-floating-top-container,.ag-full-width-container,.ag-header-container,.ag-pinned-left-cols-container,.ag-pinned-right-cols-container,.ag-sticky-bottom-container,.ag-sticky-top-container,.ag-virtual-list-container{position:relative}.ag-floating-bottom-container,.ag-floating-top-container,.ag-header-container,.ag-pinned-left-floating-bottom,.ag-pinned-left-floating-top,.ag-pinned-right-floating-bottom,.ag-pinned-right-floating-top,.ag-sticky-bottom-container,.ag-sticky-top-container{height:100%;white-space:nowrap}.ag-center-cols-container,.ag-pinned-right-cols-container{display:block}.ag-body-horizontal-scroll-container{height:100%}.ag-body-vertical-scroll-container{width:100%}.ag-floating-bottom-full-width-container,.ag-floating-top-full-width-container,.ag-full-width-container,.ag-sticky-bottom-full-width-container,.ag-sticky-top-full-width-container{pointer-events:none;position:absolute;top:0}:where(.ag-ltr) .ag-floating-bottom-full-width-container,:where(.ag-ltr) .ag-floating-top-full-width-container,:where(.ag-ltr) .ag-full-width-container,:where(.ag-ltr) .ag-sticky-bottom-full-width-container,:where(.ag-ltr) .ag-sticky-top-full-width-container{left:0}:where(.ag-rtl) .ag-floating-bottom-full-width-container,:where(.ag-rtl) .ag-floating-top-full-width-container,:where(.ag-rtl) .ag-full-width-container,:where(.ag-rtl) .ag-sticky-bottom-full-width-container,:where(.ag-rtl) .ag-sticky-top-full-width-container{right:0}.ag-full-width-container{width:100%}.ag-floating-bottom-full-width-container,.ag-floating-top-full-width-container{display:inline-block;height:100%;overflow:hidden;width:100%}.ag-virtual-list-container{overflow:hidden}.ag-body{display:flex;flex:1 1 auto;flex-direction:row!important;min-height:0;position:relative}.ag-body-horizontal-scroll,.ag-body-vertical-scroll{display:flex;min-height:0;min-width:0;position:relative;&:where(.ag-scrollbar-invisible){bottom:0;position:absolute;&:where(.ag-apple-scrollbar){opacity:0;transition:opacity .4s;visibility:hidden;&:where(.ag-scrollbar-scrolling,.ag-scrollbar-active){opacity:1;visibility:visible}}}}.ag-body-horizontal-scroll{width:100%;&:where(.ag-scrollbar-invisible){left:0;right:0}}.ag-body-vertical-scroll{height:100%;&:where(.ag-scrollbar-invisible){top:0;z-index:10}}:where(.ag-ltr) .ag-body-vertical-scroll{&:where(.ag-scrollbar-invisible){right:0}}:where(.ag-rtl) .ag-body-vertical-scroll{&:where(.ag-scrollbar-invisible){left:0}}.ag-force-vertical-scroll{overflow-y:scroll!important}.ag-horizontal-left-spacer,.ag-horizontal-right-spacer{height:100%;min-width:0;overflow-x:scroll;&:where(.ag-scroller-corner){overflow-x:hidden}}:where(.ag-row-animation) .ag-row{transition:transform .4s,top .4s,opacity .2s;&:where(.ag-after-created){transition:transform .4s,top .4s,height .4s,opacity .2s}}:where(.ag-row-no-animation) .ag-row{transition:none}.ag-row-loading{align-items:center;display:flex}.ag-row-position-absolute{position:absolute}.ag-row-position-relative{position:relative}.ag-full-width-row{overflow:hidden;pointer-events:all}.ag-row-inline-editing{z-index:1}.ag-row-dragging{z-index:2}.ag-stub-cell{align-items:center;display:flex}.ag-cell{display:inline-block;height:100%;position:absolute;white-space:nowrap;&:focus-visible{box-shadow:none}}.ag-cell-value{flex:1 1 auto}.ag-cell-value,.ag-group-value{overflow:hidden;text-overflow:ellipsis}.ag-cell-wrap-text{white-space:normal;word-break:break-word}:where(.ag-cell) .ag-icon{display:inline-block;vertical-align:middle}.ag-floating-top{border-bottom:var(--ag-pinned-row-border)}.ag-floating-bottom,.ag-floating-top{display:flex;overflow:hidden;position:relative;white-space:nowrap;width:100%}.ag-floating-bottom{border-top:var(--ag-pinned-row-border)}.ag-sticky-bottom,.ag-sticky-top{background-color:var(--ag-background-color);display:flex;height:0;overflow:hidden;position:absolute;width:100%;z-index:1}.ag-opacity-zero{opacity:0!important}.ag-cell-label-container{align-items:center;display:flex;flex-direction:row-reverse;height:100%;justify-content:space-between;width:100%}:where(.ag-right-aligned-header){.ag-cell-label-container{flex-direction:row}.ag-header-cell-text{text-align:end}}.ag-column-group-icons{display:block;>*{cursor:pointer}}:where(.ag-ltr){direction:ltr;.ag-body,.ag-body-horizontal-scroll,.ag-body-viewport,.ag-floating-bottom,.ag-floating-top,.ag-header,.ag-sticky-bottom,.ag-sticky-top{flex-direction:row}}:where(.ag-rtl){direction:rtl;text-align:right;.ag-body,.ag-body-horizontal-scroll,.ag-body-viewport,.ag-floating-bottom,.ag-floating-top,.ag-header,.ag-sticky-bottom,.ag-sticky-top{flex-direction:row-reverse}.ag-icon-contracted,.ag-icon-expanded,.ag-icon-tree-closed{display:block}}:where(.ag-rtl){.ag-icon-contracted,.ag-icon-expanded,.ag-icon-tree-closed{transform:rotate(180deg)}}:where(.ag-rtl){.ag-icon-contracted,.ag-icon-expanded,.ag-icon-tree-closed{transform:rotate(-180deg)}}.ag-measurement-container{height:0;overflow:hidden;visibility:hidden;width:0}.ag-measurement-element-border{display:inline-block;&:before{border-left:var(--ag-internal-measurement-border);content:\"\";display:block}}.ag-group{position:relative;width:100%}.ag-group-title-bar{align-items:center;display:flex;padding:var(--ag-spacing)}.ag-group-title{display:inline;min-width:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:where(.ag-group-title-bar) .ag-group-title{cursor:default}.ag-group-toolbar{align-items:center;display:flex;padding:var(--ag-spacing)}.ag-group-container{display:flex}.ag-disabled .ag-group-container{pointer-events:none}.ag-disabled-group-container,.ag-disabled-group-title-bar{opacity:.5}.ag-group-container-horizontal{flex-flow:row wrap}.ag-group-container-vertical{flex-direction:column}.ag-group-title-bar-icon{cursor:pointer;flex:none}:where(.ag-ltr) .ag-group-title-bar-icon{margin-right:var(--ag-spacing)}:where(.ag-rtl) .ag-group-title-bar-icon{margin-left:var(--ag-spacing)}:where(.ag-group-item-alignment-stretch) .ag-group-item{align-items:stretch}:where(.ag-group-item-alignment-start) .ag-group-item{align-items:flex-start}:where(.ag-group-item-alignment-end) .ag-group-item{align-items:flex-end}.ag-popup-child{top:0;z-index:5;&:where(:not(.ag-tooltip-custom)){box-shadow:var(--ag-popup-shadow)}}.ag-popup-editor{position:absolute;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ag-large-text-input{display:block}:where(.ag-ltr) .ag-row:not(.ag-row-level-0) .ag-pivot-leaf-group{margin-left:var(--ag-row-group-indent-size)}:where(.ag-rtl) .ag-row:not(.ag-row-level-0) .ag-pivot-leaf-group{margin-right:var(--ag-row-group-indent-size)}:where(.ag-ltr) .ag-row-group-leaf-indent{margin-left:calc(var(--ag-cell-widget-spacing) + var(--ag-icon-size))}:where(.ag-rtl) .ag-row-group-leaf-indent{margin-right:calc(var(--ag-cell-widget-spacing) + var(--ag-icon-size))}.ag-value-change-delta{padding:0 2px}.ag-value-change-delta-up{color:var(--ag-value-change-delta-up-color)}.ag-value-change-delta-down{color:var(--ag-value-change-delta-down-color)}.ag-value-change-value{background-color:transparent;border-radius:1px;padding-left:1px;padding-right:1px;transition:background-color 1s}.ag-value-change-value-highlight{background-color:var(--ag-value-change-value-highlight-background-color);transition:background-color .1s}.ag-cell-data-changed{background-color:var(--ag-value-change-value-highlight-background-color)!important}.ag-cell-data-changed-animation{background-color:transparent}.ag-cell-highlight{background-color:var(--ag-range-selection-highlight-color)!important}.ag-row,.ag-spanned-row{color:var(--ag-cell-text-color);font-family:var(--ag-cell-font-family);font-size:var(--ag-data-font-size);white-space:nowrap;--ag-internal-content-line-height:calc(min(var(--ag-row-height), var(--ag-line-height, 1000px)) - var(--ag-internal-row-border-width, 1px) - 2px)}.ag-row{background-color:var(--ag-background-color);border-bottom:var(--ag-row-border);height:var(--ag-row-height);width:100%}:where(.ag-body-vertical-content-no-gap>div>div>div,.ag-body-vertical-content-no-gap>div>div>div>div)>.ag-row-last{border-bottom-color:transparent}.ag-sticky-bottom{border-top:var(--ag-row-border);box-sizing:content-box!important}.ag-group-contracted,.ag-group-expanded{cursor:pointer}.ag-cell,.ag-full-width-row .ag-cell-wrapper.ag-row-group{border:1px solid transparent;line-height:var(--ag-internal-content-line-height);-webkit-font-smoothing:subpixel-antialiased}:where(.ag-ltr) .ag-cell{border-right:var(--ag-column-border)}:where(.ag-rtl) .ag-cell{border-left:var(--ag-column-border)}.ag-spanned-cell-wrapper{background-color:var(--ag-background-color);position:absolute}.ag-spanned-cell-wrapper>.ag-spanned-cell{display:block;position:relative}:where(.ag-ltr) :where(.ag-body-horizontal-content-no-gap) .ag-column-last{border-right-color:transparent}:where(.ag-rtl) :where(.ag-body-horizontal-content-no-gap) .ag-column-last{border-left-color:transparent}.ag-cell-wrapper{align-items:center;display:flex;>:where(:not(.ag-cell-value,.ag-group-value)){align-items:center;display:flex;height:var(--ag-internal-content-line-height)}&:where(.ag-row-group){align-items:flex-start}:where(.ag-full-width-row) &:where(.ag-row-group){align-items:center;height:100%}}:where(.ag-ltr) .ag-cell-wrapper{padding-left:calc(var(--ag-indentation-level)*var(--ag-row-group-indent-size))}:where(.ag-rtl) .ag-cell-wrapper{padding-right:calc(var(--ag-indentation-level)*var(--ag-row-group-indent-size))}:where(.ag-cell-wrap-text:not(.ag-cell-auto-height)) .ag-cell-wrapper{align-items:normal;height:100%;:where(.ag-cell-value){height:100%}}:where(.ag-ltr) .ag-row>.ag-cell-wrapper.ag-row-group{padding-left:calc(var(--ag-cell-horizontal-padding) + var(--ag-row-group-indent-size)*var(--ag-indentation-level))}:where(.ag-rtl) .ag-row>.ag-cell-wrapper.ag-row-group{padding-right:calc(var(--ag-cell-horizontal-padding) + var(--ag-row-group-indent-size)*var(--ag-indentation-level))}.ag-cell-focus:not(.ag-cell-range-selected):focus-within,.ag-cell-range-single-cell,.ag-cell-range-single-cell.ag-cell-range-handle,.ag-context-menu-open .ag-cell-focus:not(.ag-cell-range-selected),.ag-context-menu-open .ag-full-width-row.ag-row-focus .ag-cell-wrapper.ag-row-group,.ag-full-width-row.ag-row-focus:focus .ag-cell-wrapper.ag-row-group{border:1px solid;border-color:var(--ag-range-selection-border-color);border-style:var(--ag-range-selection-border-style);outline:initial}.ag-full-width-row.ag-row-focus:focus{box-shadow:none}:where(.ag-ltr) .ag-group-contracted,:where(.ag-ltr) .ag-group-expanded,:where(.ag-ltr) .ag-row-drag,:where(.ag-ltr) .ag-selection-checkbox{margin-right:var(--ag-cell-widget-spacing)}:where(.ag-rtl) .ag-group-contracted,:where(.ag-rtl) .ag-group-expanded,:where(.ag-rtl) .ag-row-drag,:where(.ag-rtl) .ag-selection-checkbox{margin-left:var(--ag-cell-widget-spacing)}:where(.ag-ltr) .ag-group-child-count{margin-left:3px}:where(.ag-rtl) .ag-group-child-count{margin-right:3px}.ag-row-highlight-above:after,.ag-row-highlight-below:after{background-color:var(--ag-range-selection-border-color);content:\"\";height:1px;position:absolute;width:calc(100% - 1px)}:where(.ag-ltr) .ag-row-highlight-above:after,:where(.ag-ltr) .ag-row-highlight-below:after{left:1px}:where(.ag-rtl) .ag-row-highlight-above:after,:where(.ag-rtl) .ag-row-highlight-below:after{right:1px}.ag-row-highlight-above:after{top:0}.ag-row-highlight-below:after{bottom:0}.ag-row-odd{background-color:var(--ag-odd-row-background-color)}.ag-row-selected:before{background-color:var(--ag-selected-row-background-color);content:\"\";display:block;inset:0;pointer-events:none;position:absolute}.ag-row-hover.ag-full-width-row.ag-row-group:before,.ag-row-hover:not(.ag-full-width-row):before{background-color:var(--ag-row-hover-color);content:\"\";display:block;inset:0;pointer-events:none;position:absolute}.ag-row-hover.ag-row-selected:before{background-color:var(--ag-row-hover-color);background-image:linear-gradient(var(--ag-selected-row-background-color),var(--ag-selected-row-background-color))}.ag-row-hover.ag-full-width-row.ag-row-group>*{position:relative}.ag-column-hover{background-color:var(--ag-column-hover-color)}.ag-header-range-highlight{background-color:var(--ag-range-header-highlight-color)}.ag-right-aligned-cell{font-variant-numeric:tabular-nums}:where(.ag-ltr) .ag-right-aligned-cell{text-align:right}:where(.ag-rtl) .ag-right-aligned-cell{text-align:left}.ag-right-aligned-cell .ag-cell-value,.ag-right-aligned-cell .ag-group-value{margin-left:auto}:where(.ag-ltr) .ag-cell:not(.ag-cell-inline-editing),:where(.ag-ltr) .ag-full-width-row .ag-cell-wrapper.ag-row-group{padding-left:calc(var(--ag-cell-horizontal-padding) - 1px + var(--ag-row-group-indent-size)*var(--ag-indentation-level));padding-right:calc(var(--ag-cell-horizontal-padding) - 1px)}:where(.ag-rtl) .ag-cell:not(.ag-cell-inline-editing),:where(.ag-rtl) .ag-full-width-row .ag-cell-wrapper.ag-row-group{padding-left:calc(var(--ag-cell-horizontal-padding) - 1px);padding-right:calc(var(--ag-cell-horizontal-padding) - 1px + var(--ag-row-group-indent-size)*var(--ag-indentation-level))}.ag-row>.ag-cell-wrapper{padding-left:calc(var(--ag-cell-horizontal-padding) - 1px);padding-right:calc(var(--ag-cell-horizontal-padding) - 1px)}.ag-row-dragging{cursor:move;opacity:.5}.ag-details-row{background-color:var(--ag-background-color);padding:calc(var(--ag-spacing)*3.75)}.ag-layout-auto-height,.ag-layout-print{.ag-center-cols-container,.ag-center-cols-viewport{min-height:150px}}.ag-overlay-loading-wrapper{background-color:var(--ag-modal-overlay-background-color)}.ag-skeleton-container{align-content:center;height:100%;width:100%}.ag-skeleton-effect{animation:ag-skeleton-loading 1.5s ease-in-out .5s infinite;background-color:var(--ag-row-loading-skeleton-effect-color);border-radius:.25rem;height:1em;width:100%}:where(.ag-ltr) .ag-right-aligned-cell .ag-skeleton-effect{margin-left:auto}:where(.ag-rtl) .ag-right-aligned-cell .ag-skeleton-effect{margin-right:auto}@keyframes ag-skeleton-loading{0%{opacity:1}50%{opacity:.4}to{opacity:1}}.ag-loading{align-items:center;display:flex;height:100%}:where(.ag-ltr) .ag-loading{padding-left:var(--ag-cell-horizontal-padding)}:where(.ag-rtl) .ag-loading{padding-right:var(--ag-cell-horizontal-padding)}:where(.ag-ltr) .ag-loading-icon{padding-right:var(--ag-cell-widget-spacing)}:where(.ag-rtl) .ag-loading-icon{padding-left:var(--ag-cell-widget-spacing)}.ag-icon-loading{animation-duration:1s;animation-iteration-count:infinite;animation-name:spin;animation-timing-function:linear}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.ag-input-wrapper,.ag-picker-field-wrapper{align-items:center;display:flex;flex:1 1 auto;line-height:normal;position:relative}.ag-input-field{align-items:center;display:flex;flex-direction:row}.ag-input-field-input:where(:not([type=checkbox],[type=radio])){flex:1 1 auto;min-width:0;width:100%}.ag-header{background-color:var(--ag-header-background-color);border-bottom:var(--ag-header-row-border);color:var(--ag-header-text-color);display:flex;font-family:var(--ag-header-font-family);font-size:var(--ag-header-font-size);font-weight:var(--ag-header-font-weight);overflow:hidden;white-space:nowrap;width:100%}.ag-header-row{height:var(--ag-header-height);position:absolute}.ag-floating-filter-button-button,.ag-header-cell-filter-button,.ag-header-cell-menu-button,.ag-header-expand-icon,.ag-panel-title-bar-button,:where(.ag-header-cell-sortable) .ag-header-cell-label{cursor:pointer}:where(.ag-ltr) .ag-header-expand-icon{margin-left:4px}:where(.ag-rtl) .ag-header-expand-icon{margin-right:4px}.ag-header-row:where(:not(:first-child)){:where(.ag-header-cell:not(.ag-header-span-height.ag-header-span-total,.ag-header-parent-hidden),.ag-header-group-cell.ag-header-group-cell-with-group){border-top:var(--ag-header-row-border)}}.ag-header-row:where(:not(.ag-header-row-column-group)){overflow:hidden}:where(.ag-header.ag-header-allow-overflow) .ag-header-row{overflow:visible}.ag-header-cell{display:inline-flex;overflow:hidden}.ag-header-group-cell{contain:paint;display:flex}.ag-header-cell,.ag-header-group-cell{align-items:center;gap:var(--ag-cell-widget-spacing);height:100%;padding:0 var(--ag-cell-horizontal-padding);position:absolute}@property --ag-internal-moving-color{syntax:\"<color>\";inherits:false;initial-value:transparent}@property --ag-internal-hover-color{syntax:\"<color>\";inherits:false;initial-value:transparent}.ag-header-cell:where(:not(.ag-floating-filter)),.ag-header-group-cell{&:before{background-image:linear-gradient(var(--ag-internal-hover-color),var(--ag-internal-hover-color)),linear-gradient(var(--ag-internal-moving-color),var(--ag-internal-moving-color));content:\"\";inset:0;position:absolute;--ag-internal-moving-color:transparent;--ag-internal-hover-color:transparent;transition:--ag-internal-moving-color var(--ag-header-cell-background-transition-duration),--ag-internal-hover-color var(--ag-header-cell-background-transition-duration)}&:where(:hover):before{--ag-internal-hover-color:var(--ag-header-cell-hover-background-color)}&:where(.ag-header-cell-moving):before{--ag-internal-moving-color:var(--ag-header-cell-moving-background-color);--ag-internal-hover-color:var(--ag-header-cell-hover-background-color)}}:where(.ag-header-cell:not(.ag-floating-filter) *,.ag-header-group-cell *){position:relative;z-index:1}.ag-header-cell-menu-button:where(:not(.ag-header-menu-always-show)){opacity:0;transition:opacity .2s}.ag-header-cell-filter-button,:where(.ag-header-cell.ag-header-active) .ag-header-cell-menu-button{opacity:1}.ag-header-cell-label,.ag-header-group-cell-label{align-items:center;align-self:stretch;display:flex;flex:1 1 auto;overflow:hidden;padding:5px 0}:where(.ag-ltr) .ag-sort-indicator-icon{padding-left:var(--ag-spacing)}:where(.ag-rtl) .ag-sort-indicator-icon{padding-right:var(--ag-spacing)}.ag-header-cell-label{text-overflow:ellipsis}.ag-header-group-cell-label.ag-sticky-label{flex:none;max-width:100%;overflow:visible;position:sticky}:where(.ag-ltr) .ag-header-group-cell-label.ag-sticky-label{left:var(--ag-cell-horizontal-padding)}:where(.ag-rtl) .ag-header-group-cell-label.ag-sticky-label{right:var(--ag-cell-horizontal-padding)}.ag-header-cell-text,.ag-header-group-text{overflow:hidden;text-overflow:ellipsis}.ag-header-cell-text{word-break:break-word}.ag-header-cell-comp-wrapper{width:100%}:where(.ag-header-group-cell) .ag-header-cell-comp-wrapper{display:flex}:where(.ag-header-cell:not(.ag-header-cell-auto-height)) .ag-header-cell-comp-wrapper{align-items:center;display:flex;height:100%}.ag-header-cell-wrap-text .ag-header-cell-comp-wrapper{white-space:normal}.ag-header-cell-comp-wrapper-limited-height>*{overflow:hidden}:where(.ag-right-aligned-header) .ag-header-cell-label{flex-direction:row-reverse}:where(.ag-ltr) :where(.ag-header-cell:not(.ag-right-aligned-header)){.ag-header-label-icon,.ag-header-menu-icon{margin-left:var(--ag-spacing)}}:where(.ag-rtl) :where(.ag-header-cell:not(.ag-right-aligned-header)){.ag-header-label-icon,.ag-header-menu-icon{margin-right:var(--ag-spacing)}}:where(.ag-ltr) :where(.ag-header-cell.ag-right-aligned-header){.ag-header-label-icon,.ag-header-menu-icon{margin-right:var(--ag-spacing)}}:where(.ag-rtl) :where(.ag-header-cell.ag-right-aligned-header){.ag-header-label-icon,.ag-header-menu-icon{margin-left:var(--ag-spacing)}}.ag-header-cell:after,.ag-header-group-cell:where(:not(.ag-header-span-height.ag-header-group-cell-no-group)):after{content:\"\";height:var(--ag-header-column-border-height);position:absolute;top:calc(50% - var(--ag-header-column-border-height)*.5);z-index:1}:where(.ag-ltr) .ag-header-cell:after,:where(.ag-ltr) .ag-header-group-cell:where(:not(.ag-header-span-height.ag-header-group-cell-no-group)):after{border-right:var(--ag-header-column-border);right:0}:where(.ag-rtl) .ag-header-cell:after,:where(.ag-rtl) .ag-header-group-cell:where(:not(.ag-header-span-height.ag-header-group-cell-no-group)):after{border-left:var(--ag-header-column-border);left:0}.ag-header-highlight-after:after,.ag-header-highlight-before:after{background-color:var(--ag-accent-color);content:\"\";height:100%;position:absolute;width:1px}:where(.ag-ltr) .ag-header-highlight-before:after{left:0}:where(.ag-rtl) .ag-header-highlight-before:after{right:0}:where(.ag-ltr) .ag-header-highlight-after:after{right:0;:where(.ag-pinned-left-header) &{right:1px}}:where(.ag-rtl) .ag-header-highlight-after:after{left:0;:where(.ag-pinned-left-header) &{left:1px}}.ag-header-cell-resize{align-items:center;cursor:ew-resize;display:flex;height:100%;position:absolute;top:0;width:8px;z-index:2;&:after{background-color:var(--ag-header-column-resize-handle-color);content:\"\";height:var(--ag-header-column-resize-handle-height);position:absolute;top:calc(50% - var(--ag-header-column-resize-handle-height)*.5);width:var(--ag-header-column-resize-handle-width);z-index:1}}:where(.ag-ltr) .ag-header-cell-resize{right:-3px;&:after{left:calc(50% - var(--ag-header-column-resize-handle-width))}}:where(.ag-rtl) .ag-header-cell-resize{left:-3px;&:after{right:calc(50% - var(--ag-header-column-resize-handle-width))}}:where(.ag-header-cell.ag-header-span-height) .ag-header-cell-resize:after{height:calc(100% - var(--ag-spacing)*4);top:calc(var(--ag-spacing)*2)}.ag-header-group-cell-no-group:where(.ag-header-span-height){display:none}.ag-sort-indicator-container{display:flex;gap:var(--ag-spacing)}.ag-layout-print{&.ag-body{display:block;height:unset}&.ag-root-wrapper{display:inline-block}.ag-body-horizontal-scroll,.ag-body-vertical-scroll{display:none}&.ag-force-vertical-scroll{overflow-y:visible!important}}@media print{.ag-root-wrapper.ag-layout-print{display:table;.ag-body-horizontal-scroll-viewport,.ag-body-viewport,.ag-center-cols-container,.ag-center-cols-viewport,.ag-root,.ag-root-wrapper-body,.ag-virtual-list-viewport{display:block!important;height:auto!important;overflow:hidden!important}.ag-cell,.ag-row{-moz-column-break-inside:avoid;break-inside:avoid}}}ag-grid,ag-grid-angular{display:block}.ag-chart,.ag-dnd-ghost,.ag-popup,.ag-root-wrapper{cursor:default;line-height:normal;white-space:normal;-webkit-font-smoothing:antialiased;background-color:var(--ag-background-color);color:var(--ag-text-color);color-scheme:var(--ag-browser-color-scheme);font-family:var(--ag-font-family);font-size:var(--ag-font-size);--ag-indentation-level:0}.ag-root-wrapper{border:var(--ag-wrapper-border);border-radius:var(--ag-wrapper-border-radius);display:flex;flex-direction:column;overflow:hidden;position:relative;&.ag-layout-normal{height:100%}}.ag-root-wrapper-body{display:flex;flex-direction:row;&.ag-layout-normal{flex:1 1 auto;height:0;min-height:0}}.ag-root{display:flex;flex-direction:column;position:relative;&.ag-layout-auto-height,&.ag-layout-normal{flex:1 1 auto;overflow:hidden;width:0}&.ag-layout-normal{height:100%}}.ag-drag-handle{color:var(--ag-drag-handle-color);cursor:grab}.ag-list-item,.ag-virtual-list-item{height:var(--ag-list-item-height)}.ag-virtual-list-item{position:absolute;width:100%}.ag-select-list{background-color:var(--ag-picker-list-background-color);border:var(--ag-picker-list-border);border-radius:var(--ag-border-radius);box-shadow:var(--ag-dropdown-shadow);overflow:hidden auto}.ag-list-item{align-items:center;display:flex;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;&.ag-active-item{background-color:var(--ag-row-hover-color)}}.ag-select-list-item{cursor:default;-webkit-user-select:none;-moz-user-select:none;user-select:none;:where(span){overflow:hidden;text-overflow:ellipsis;white-space:nowrap}}:where(.ag-ltr) .ag-select-list-item{padding-left:calc(var(--ag-cell-horizontal-padding)/2)}:where(.ag-rtl) .ag-select-list-item{padding-right:calc(var(--ag-cell-horizontal-padding)/2)}.ag-list-item-hovered:after{background-color:var(--ag-accent-color);content:\"\";height:1px;left:0;position:absolute;right:0}.ag-item-highlight-top:after{top:0}.ag-item-highlight-bottom:after{bottom:0}:where(.ag-icon):before{align-items:center;background-color:currentcolor;color:inherit;content:\"\";display:flex;font-family:inherit;font-size:var(--ag-icon-size);font-style:normal;font-variant:normal;height:var(--ag-icon-size);justify-content:center;line-height:var(--ag-icon-size);-webkit-mask-size:contain;mask-size:contain;text-transform:none;width:var(--ag-icon-size)}.ag-icon{background-position:50%;background-repeat:no-repeat;background-size:contain;color:var(--ag-icon-color);display:block;height:var(--ag-icon-size);position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;width:var(--ag-icon-size)}.ag-column-select-column-group-readonly,.ag-column-select-column-readonly,.ag-disabled,[disabled]{.ag-icon{opacity:.5}&.ag-icon-grip{opacity:.35}}.ag-column-select-column-readonly{&.ag-icon-grip,.ag-icon-grip{opacity:.35}}.ag-chart-menu-icon,.ag-chart-settings-next,.ag-chart-settings-prev,.ag-column-group-icons,.ag-column-select-header-icon,.ag-filter-toolpanel-expand,.ag-floating-filter-button-button,.ag-group-title-bar-icon,.ag-header-cell-filter-button,.ag-header-cell-menu-button,.ag-header-expand-icon,.ag-panel-title-bar-button,.ag-panel-title-bar-button-icon,.ag-set-filter-group-icons,:where(.ag-group-contracted) .ag-icon,:where(.ag-group-expanded) .ag-icon{background-color:var(--ag-icon-button-background-color);border-radius:var(--ag-icon-button-border-radius);box-shadow:0 0 0 var(--ag-icon-button-background-spread) var(--ag-icon-button-background-color);color:var(--ag-icon-button-color);&:hover{background-color:var(--ag-icon-button-hover-background-color);box-shadow:0 0 0 var(--ag-icon-button-background-spread) var(--ag-icon-button-hover-background-color);color:var(--ag-icon-button-hover-color)}}.ag-filter-active{background-image:linear-gradient(var(--ag-icon-button-active-background-color),var(--ag-icon-button-active-background-color));border-radius:1px;outline:solid var(--ag-icon-button-background-spread) var(--ag-icon-button-active-background-color);position:relative;&:after{background-color:var(--ag-accent-color);border-radius:50%;content:\"\";height:6px;position:absolute;top:-1px;width:6px}:where(.ag-icon-filter){clip-path:path(\"M8,0C8,4.415 11.585,8 16,8L16,16L0,16L0,0L8,0Z\");color:var(--ag-icon-button-active-color)}}:where(.ag-ltr) .ag-filter-active{&:after{right:-1px}}:where(.ag-rtl) .ag-filter-active{&:after{left:-1px}}.ag-menu{background-color:var(--ag-menu-background-color);border:var(--ag-menu-border);border-radius:var(--ag-border-radius);box-shadow:var(--ag-menu-shadow);color:var(--ag-menu-text-color);max-height:100%;overflow-y:auto}.ag-menu,.ag-resizer{position:absolute;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ag-resizer{pointer-events:none;z-index:1}:where(.ag-resizer){&.ag-resizer-topLeft{cursor:nwse-resize;height:5px;left:0;top:0;width:5px}&.ag-resizer-top{cursor:ns-resize;height:5px;left:5px;right:5px;top:0}&.ag-resizer-topRight{cursor:nesw-resize;height:5px;right:0;top:0;width:5px}&.ag-resizer-right{bottom:5px;cursor:ew-resize;right:0;top:5px;width:5px}&.ag-resizer-bottomRight{bottom:0;cursor:nwse-resize;height:5px;right:0;width:5px}&.ag-resizer-bottom{bottom:0;cursor:ns-resize;height:5px;left:5px;right:5px}&.ag-resizer-bottomLeft{bottom:0;cursor:nesw-resize;height:5px;left:0;width:5px}&.ag-resizer-left{bottom:5px;cursor:ew-resize;left:0;top:5px;width:5px}}`\n);\n\n// packages/ag-grid-community/src/theming/inject.ts\nvar IS_SSR = typeof window !== \"object\" || !window?.document?.fonts?.forEach;\nvar injectionsByContainer = /* @__PURE__ */ new WeakMap();\nvar _injectGlobalCSS = (css, styleContainer, debugId, layer, priority) => {\n  if (IS_SSR)\n    return;\n  if (FORCE_LEGACY_THEMES)\n    return;\n  if (layer) {\n    css = `@layer ${CSS.escape(layer)} { ${css} }`;\n  }\n  let injections = injectionsByContainer.get(styleContainer);\n  if (!injections) {\n    injections = [];\n    injectionsByContainer.set(styleContainer, injections);\n  }\n  if (injections.find((i) => i.css === css))\n    return;\n  const el = document.createElement(\"style\");\n  el.dataset.agGlobalCss = debugId;\n  el.textContent = css;\n  const newInjection = { css, el, priority };\n  let insertAfter;\n  for (const injection of injections) {\n    if (injection.priority > priority)\n      break;\n    insertAfter = injection;\n  }\n  if (insertAfter) {\n    insertAfter.el.insertAdjacentElement(\"afterend\", el);\n    const index = injections.indexOf(insertAfter);\n    injections.splice(index + 1, 0, newInjection);\n  } else {\n    styleContainer.insertBefore(el, styleContainer.querySelector(\":not(title, meta)\"));\n    injections.push(newInjection);\n  }\n};\nvar _injectCoreAndModuleCSS = (styleContainer, layer) => {\n  _injectGlobalCSS(coreCSS, styleContainer, \"core\", layer, 0);\n  Array.from(_getAllRegisteredModules()).sort((a, b) => a.moduleName.localeCompare(b.moduleName)).forEach(\n    (module) => module.css?.forEach((css) => _injectGlobalCSS(css, styleContainer, `module-${module.moduleName}`, layer, 0))\n  );\n};\nvar gridsUsingThemingAPI = /* @__PURE__ */ new Set();\nvar _registerGridUsingThemingAPI = (environment) => {\n  gridsUsingThemingAPI.add(environment);\n};\nvar _unregisterGridUsingThemingAPI = (environment) => {\n  gridsUsingThemingAPI.delete(environment);\n  if (gridsUsingThemingAPI.size === 0) {\n    injectionsByContainer = /* @__PURE__ */ new WeakMap();\n    for (const style of document.head.querySelectorAll(\"style[data-ag-global-css]\")) {\n      style.remove();\n    }\n  }\n};\n\n// packages/ag-grid-community/src/theming/Part.ts\nvar createPart = (args) => {\n  return new PartImpl(args);\n};\nvar defaultModeName = \"$default\";\nvar partCounter = 0;\nvar PartImpl = class {\n  constructor({ feature, params, modeParams = {}, css, cssImports }) {\n    this.feature = feature;\n    this.css = css;\n    this.cssImports = cssImports;\n    this.modeParams = {\n      // NOTE: it's important that default is defined first, putting it\n      // first in iteration order, because when merging params the default\n      // params override any prior modal params, so modal params in this\n      // part need to come after default params to prevent them from being\n      // immediately overridden.\n      [defaultModeName]: {\n        ...modeParams[defaultModeName] ?? {},\n        ...params ?? {}\n      },\n      ...modeParams\n    };\n  }\n  use(styleContainer, layer) {\n    let inject = this._inject;\n    if (inject == null) {\n      let { css } = this;\n      if (css) {\n        const className = `ag-theme-${this.feature ?? \"part\"}-${++partCounter}`;\n        if (typeof css === \"function\")\n          css = css();\n        css = `:where(.${className}) {\n${css}\n}\n`;\n        for (const cssImport of this.cssImports ?? []) {\n          css = `@import url(${JSON.stringify(cssImport)});\n${css}`;\n        }\n        inject = { css, class: className };\n      } else {\n        inject = false;\n      }\n      this._inject = inject;\n    }\n    if (inject && styleContainer) {\n      _injectGlobalCSS(inject.css, styleContainer, inject.class, layer, 1);\n    }\n    return inject ? inject.class : false;\n  }\n};\n\n// packages/ag-grid-community/src/theming/theme-utils.ts\nvar kebabCase = (str) => str.replace(/[A-Z]/g, (m) => `-${m}`).toLowerCase();\nvar paramToVariableName = (paramName) => `--ag-${kebabCase(paramName)}`;\nvar paramToVariableExpression = (paramName) => `var(${paramToVariableName(paramName)})`;\nvar clamp = (value, min, max) => Math.max(min, Math.min(max, value));\nvar memoize = (fn) => {\n  const values = /* @__PURE__ */ new Map();\n  return (a) => {\n    const key = a;\n    if (!values.has(key)) {\n      values.set(key, fn(a));\n    }\n    return values.get(key);\n  };\n};\nvar accentMix = (mix) => ({ ref: \"accentColor\", mix });\nvar foregroundMix = (mix) => ({ ref: \"foregroundColor\", mix });\nvar foregroundBackgroundMix = (mix) => ({\n  ref: \"foregroundColor\",\n  mix,\n  onto: \"backgroundColor\"\n});\nvar foregroundHeaderBackgroundMix = (mix) => ({\n  ref: \"foregroundColor\",\n  mix,\n  onto: \"headerBackgroundColor\"\n});\nvar backgroundColor = { ref: \"backgroundColor\" };\nvar foregroundColor = { ref: \"foregroundColor\" };\nvar accentColor = { ref: \"accentColor\" };\n\n// packages/ag-grid-community/src/theming/core/core-css.ts\nvar defaultLightColorSchemeParams = {\n  backgroundColor: \"#fff\",\n  foregroundColor: \"#181d1f\",\n  borderColor: foregroundMix(0.15),\n  chromeBackgroundColor: foregroundBackgroundMix(0.02),\n  browserColorScheme: \"light\"\n};\nvar coreDefaults = {\n  ...defaultLightColorSchemeParams,\n  textColor: foregroundColor,\n  accentColor: \"#2196f3\",\n  invalidColor: \"#e02525\",\n  wrapperBorder: true,\n  rowBorder: true,\n  headerRowBorder: true,\n  footerRowBorder: {\n    ref: \"rowBorder\"\n  },\n  columnBorder: {\n    style: \"solid\",\n    width: 1,\n    color: \"transparent\"\n  },\n  headerColumnBorder: false,\n  headerColumnBorderHeight: \"100%\",\n  pinnedColumnBorder: true,\n  pinnedRowBorder: true,\n  sidePanelBorder: true,\n  sideBarPanelWidth: 250,\n  sideBarBackgroundColor: {\n    ref: \"chromeBackgroundColor\"\n  },\n  sideButtonBarBackgroundColor: {\n    ref: \"sideBarBackgroundColor\"\n  },\n  sideButtonBarTopPadding: 0,\n  sideButtonSelectedUnderlineWidth: 2,\n  sideButtonSelectedUnderlineColor: \"transparent\",\n  sideButtonSelectedUnderlineTransitionDuration: 0,\n  sideButtonBackgroundColor: \"transparent\",\n  sideButtonTextColor: { ref: \"textColor\" },\n  sideButtonHoverBackgroundColor: { ref: \"sideButtonBackgroundColor\" },\n  sideButtonHoverTextColor: { ref: \"sideButtonTextColor\" },\n  sideButtonSelectedBackgroundColor: backgroundColor,\n  sideButtonSelectedTextColor: { ref: \"sideButtonTextColor\" },\n  sideButtonBorder: \"solid 1px transparent\",\n  sideButtonSelectedBorder: true,\n  sideButtonLeftPadding: { ref: \"spacing\" },\n  sideButtonRightPadding: { ref: \"spacing\" },\n  sideButtonVerticalPadding: { calc: \"spacing * 3\" },\n  fontFamily: [\n    \"-apple-system\",\n    \"BlinkMacSystemFont\",\n    \"Segoe UI\",\n    \"Roboto\",\n    \"Oxygen-Sans\",\n    \"Ubuntu\",\n    \"Cantarell\",\n    \"Helvetica Neue\",\n    \"sans-serif\"\n  ],\n  headerBackgroundColor: {\n    ref: \"chromeBackgroundColor\"\n  },\n  headerFontFamily: {\n    ref: \"fontFamily\"\n  },\n  cellFontFamily: {\n    ref: \"fontFamily\"\n  },\n  headerFontWeight: 500,\n  headerFontSize: {\n    ref: \"fontSize\"\n  },\n  dataFontSize: {\n    ref: \"fontSize\"\n  },\n  headerTextColor: {\n    ref: \"textColor\"\n  },\n  headerCellHoverBackgroundColor: \"transparent\",\n  headerCellMovingBackgroundColor: { ref: \"headerCellHoverBackgroundColor\" },\n  headerCellBackgroundTransitionDuration: \"0.2s\",\n  cellTextColor: {\n    ref: \"textColor\"\n  },\n  subtleTextColor: {\n    ref: \"textColor\",\n    mix: 0.5\n  },\n  rangeSelectionBorderStyle: \"solid\",\n  rangeSelectionBorderColor: accentColor,\n  rangeSelectionBackgroundColor: accentMix(0.2),\n  rangeSelectionChartBackgroundColor: \"#0058FF1A\",\n  rangeSelectionChartCategoryBackgroundColor: \"#00FF841A\",\n  rangeSelectionHighlightColor: accentMix(0.5),\n  rangeHeaderHighlightColor: foregroundHeaderBackgroundMix(0.08),\n  rowNumbersSelectedColor: accentMix(0.5),\n  rowHoverColor: accentMix(0.08),\n  columnHoverColor: accentMix(0.05),\n  selectedRowBackgroundColor: accentMix(0.12),\n  modalOverlayBackgroundColor: {\n    ref: \"backgroundColor\",\n    mix: 0.66\n  },\n  oddRowBackgroundColor: backgroundColor,\n  borderRadius: 4,\n  wrapperBorderRadius: 8,\n  cellHorizontalPadding: {\n    calc: \"spacing * 2 * cellHorizontalPaddingScale\"\n  },\n  cellWidgetSpacing: {\n    calc: \"spacing * 1.5\"\n  },\n  cellHorizontalPaddingScale: 1,\n  rowGroupIndentSize: {\n    calc: \"cellWidgetSpacing + iconSize\"\n  },\n  valueChangeDeltaUpColor: \"#43a047\",\n  valueChangeDeltaDownColor: \"#e53935\",\n  valueChangeValueHighlightBackgroundColor: \"#16a08580\",\n  spacing: 8,\n  fontSize: 14,\n  rowHeight: {\n    calc: \"max(iconSize, dataFontSize) + spacing * 3.25 * rowVerticalPaddingScale\"\n  },\n  rowVerticalPaddingScale: 1,\n  headerHeight: {\n    calc: \"max(iconSize, dataFontSize) + spacing * 4 * headerVerticalPaddingScale\"\n  },\n  headerVerticalPaddingScale: 1,\n  popupShadow: \"0 0 16px #00000026\",\n  cardShadow: \"0 1px 4px 1px #00000018\",\n  dropdownShadow: { ref: \"cardShadow\" },\n  dragAndDropImageBackgroundColor: backgroundColor,\n  dragAndDropImageBorder: true,\n  dragAndDropImageShadow: {\n    ref: \"popupShadow\"\n  },\n  dragHandleColor: foregroundMix(0.7),\n  focusShadow: {\n    spread: 3,\n    color: accentMix(0.5)\n  },\n  headerColumnResizeHandleHeight: \"30%\",\n  headerColumnResizeHandleWidth: 2,\n  headerColumnResizeHandleColor: {\n    ref: \"borderColor\"\n  },\n  widgetContainerHorizontalPadding: {\n    calc: \"spacing * 1.5\"\n  },\n  widgetContainerVerticalPadding: {\n    calc: \"spacing * 1.5\"\n  },\n  widgetHorizontalSpacing: {\n    calc: \"spacing * 1.5\"\n  },\n  widgetVerticalSpacing: {\n    ref: \"spacing\"\n  },\n  listItemHeight: {\n    calc: \"max(iconSize, dataFontSize) + widgetVerticalSpacing\"\n  },\n  iconSize: 16,\n  iconColor: \"inherit\",\n  iconButtonColor: { ref: \"iconColor\" },\n  iconButtonBackgroundColor: \"transparent\",\n  iconButtonBackgroundSpread: 4,\n  iconButtonBorderRadius: 1,\n  iconButtonHoverColor: { ref: \"iconButtonColor\" },\n  iconButtonHoverBackgroundColor: foregroundMix(0.1),\n  iconButtonActiveColor: accentColor,\n  iconButtonActiveBackgroundColor: accentMix(0.28),\n  iconButtonActiveIndicatorColor: accentColor,\n  toggleButtonWidth: 28,\n  toggleButtonHeight: 18,\n  toggleButtonOnBackgroundColor: accentColor,\n  toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.3),\n  toggleButtonSwitchBackgroundColor: backgroundColor,\n  toggleButtonSwitchInset: 2,\n  menuBorder: {\n    color: foregroundMix(0.2)\n  },\n  menuBackgroundColor: foregroundBackgroundMix(0.03),\n  menuTextColor: foregroundBackgroundMix(0.95),\n  menuShadow: {\n    ref: \"popupShadow\"\n  },\n  menuSeparatorColor: {\n    ref: \"borderColor\"\n  },\n  setFilterIndentSize: {\n    ref: \"iconSize\"\n  },\n  chartMenuPanelWidth: 260,\n  chartMenuLabelColor: foregroundMix(0.8),\n  dialogShadow: {\n    ref: \"popupShadow\"\n  },\n  cellEditingBorder: {\n    color: accentColor\n  },\n  cellEditingShadow: { ref: \"cardShadow\" },\n  dialogBorder: {\n    color: foregroundMix(0.2)\n  },\n  panelBackgroundColor: backgroundColor,\n  panelTitleBarBackgroundColor: {\n    ref: \"headerBackgroundColor\"\n  },\n  panelTitleBarIconColor: {\n    ref: \"headerTextColor\"\n  },\n  panelTitleBarTextColor: {\n    ref: \"headerTextColor\"\n  },\n  panelTitleBarFontWeight: {\n    ref: \"headerFontWeight\"\n  },\n  panelTitleBarBorder: true,\n  columnSelectIndentSize: {\n    ref: \"iconSize\"\n  },\n  toolPanelSeparatorBorder: true,\n  tooltipBackgroundColor: {\n    ref: \"chromeBackgroundColor\"\n  },\n  tooltipTextColor: {\n    ref: \"textColor\"\n  },\n  tooltipBorder: true,\n  columnDropCellBackgroundColor: foregroundMix(0.07),\n  columnDropCellTextColor: {\n    ref: \"textColor\"\n  },\n  columnDropCellDragHandleColor: {\n    ref: \"textColor\"\n  },\n  columnDropCellBorder: {\n    color: foregroundMix(0.13)\n  },\n  selectCellBackgroundColor: foregroundMix(0.07),\n  selectCellBorder: {\n    color: foregroundMix(0.13)\n  },\n  advancedFilterBuilderButtonBarBorder: true,\n  advancedFilterBuilderIndentSize: {\n    calc: \"spacing * 2 + iconSize\"\n  },\n  advancedFilterBuilderJoinPillColor: \"#f08e8d\",\n  advancedFilterBuilderColumnPillColor: \"#a6e194\",\n  advancedFilterBuilderOptionPillColor: \"#f3c08b\",\n  advancedFilterBuilderValuePillColor: \"#85c0e4\",\n  filterToolPanelGroupIndent: {\n    ref: \"spacing\"\n  },\n  rowLoadingSkeletonEffectColor: foregroundMix(0.15),\n  statusBarLabelColor: foregroundColor,\n  statusBarLabelFontWeight: 500,\n  statusBarValueColor: foregroundColor,\n  statusBarValueFontWeight: 500\n};\n\n// packages/ag-grid-community/src/theming/parts/button-style/button-style-base.css-GENERATED.ts\nvar buttonStyleBaseCSS = (\n  /*css*/\n  `:where(.ag-button){background:none;border:none;color:inherit;cursor:pointer;font-family:inherit;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;margin:0;padding:0;text-indent:inherit;text-shadow:inherit;text-transform:inherit;word-spacing:inherit;&:disabled{cursor:default}&:focus-visible{box-shadow:var(--ag-focus-shadow);outline:none}}.ag-standard-button{-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:var(--ag-button-background-color);border:var(--ag-button-border);border-radius:var(--ag-button-border-radius);color:var(--ag-button-text-color);cursor:pointer;font-weight:var(--ag-button-font-weight);padding:var(--ag-button-vertical-padding) var(--ag-button-horizontal-padding);&:hover{background-color:var(--ag-button-hover-background-color);border:var(--ag-button-hover-border);color:var(--ag-button-hover-text-color)}&:active{background-color:var(--ag-button-active-background-color);border:var(--ag-button-active-border);color:var(--ag-button-active-text-color)}&:disabled{background-color:var(--ag-button-disabled-background-color);border:var(--ag-button-disabled-border);color:var(--ag-button-disabled-text-color)}}`\n);\n\n// packages/ag-grid-community/src/theming/parts/button-style/button-styles.ts\nvar baseParams = {\n  buttonTextColor: \"inherit\",\n  buttonFontWeight: \"normal\",\n  buttonBackgroundColor: \"transparent\",\n  buttonBorder: false,\n  buttonBorderRadius: { ref: \"borderRadius\" },\n  buttonHorizontalPadding: { calc: \"spacing * 2\" },\n  buttonVerticalPadding: { ref: \"spacing\" },\n  buttonHoverTextColor: { ref: \"buttonTextColor\" },\n  buttonHoverBackgroundColor: { ref: \"buttonBackgroundColor\" },\n  buttonHoverBorder: { ref: \"buttonBorder\" },\n  buttonActiveTextColor: { ref: \"buttonHoverTextColor\" },\n  buttonActiveBackgroundColor: { ref: \"buttonHoverBackgroundColor\" },\n  buttonActiveBorder: { ref: \"buttonHoverBorder\" },\n  buttonDisabledTextColor: { ref: \"inputDisabledTextColor\" },\n  buttonDisabledBackgroundColor: { ref: \"inputDisabledBackgroundColor\" },\n  buttonDisabledBorder: { ref: \"inputDisabledBorder\" }\n};\nvar makeButtonStyleBaseTreeShakeable = () => createPart({\n  feature: \"buttonStyle\",\n  params: baseParams,\n  css: buttonStyleBaseCSS\n});\nvar buttonStyleBase = /* @__PURE__ */ makeButtonStyleBaseTreeShakeable();\nvar makeButtonStyleQuartzTreeShakeable = () => createPart({\n  feature: \"buttonStyle\",\n  params: {\n    ...baseParams,\n    buttonBackgroundColor: backgroundColor,\n    buttonBorder: true,\n    buttonHoverBackgroundColor: { ref: \"rowHoverColor\" },\n    buttonActiveBorder: { color: accentColor }\n  },\n  css: buttonStyleBaseCSS\n});\nvar buttonStyleQuartz = /* @__PURE__ */ makeButtonStyleQuartzTreeShakeable();\nvar makeButtonStyleAlpineTreeShakeable = () => createPart({\n  feature: \"buttonStyle\",\n  params: {\n    ...baseParams,\n    buttonBackgroundColor: backgroundColor,\n    buttonBorder: { color: accentColor },\n    buttonFontWeight: 600,\n    buttonTextColor: accentColor,\n    buttonHoverBackgroundColor: { ref: \"rowHoverColor\" },\n    buttonActiveBackgroundColor: accentColor,\n    buttonActiveTextColor: backgroundColor\n  },\n  css: buttonStyleBaseCSS\n});\nvar buttonStyleAlpine = /* @__PURE__ */ makeButtonStyleAlpineTreeShakeable();\nvar makeButtonStyleBalhamTreeShakeable = () => createPart({\n  feature: \"buttonStyle\",\n  params: {\n    ...baseParams,\n    buttonBorder: { color: foregroundColor, width: 2, style: \"outset\" },\n    buttonActiveBorder: { color: foregroundColor, width: 2, style: \"inset\" },\n    buttonBackgroundColor: foregroundBackgroundMix(0.07),\n    buttonHoverBackgroundColor: backgroundColor,\n    buttonVerticalPadding: { calc: \"spacing * 0.5\" }\n  },\n  css: buttonStyleBaseCSS\n});\nvar buttonStyleBalham = /* @__PURE__ */ makeButtonStyleBalhamTreeShakeable();\n\n// packages/ag-grid-community/src/theming/parts/column-drop-style/column-drop-style-bordered.css-GENERATED.ts\nvar columnDropStyleBorderedCSS = (\n  /*css*/\n  `.ag-column-drop-vertical-empty-message{align-items:center;border:1px dashed;border-color:var(--ag-border-color);display:flex;inset:0;justify-content:center;margin:calc(var(--ag-spacing)*1.5) calc(var(--ag-spacing)*2);overflow:hidden;padding:calc(var(--ag-spacing)*2);position:absolute}`\n);\n\n// packages/ag-grid-community/src/theming/parts/column-drop-style/column-drop-style-plain.css-GENERATED.ts\nvar columnDropStylePlainCSS = (\n  /*css*/\n  `.ag-column-drop-vertical-empty-message{color:var(--ag-subtle-text-color);font-size:calc(var(--ag-font-size) - 1px);font-weight:600;padding-top:var(--ag-spacing)}:where(.ag-ltr) .ag-column-drop-vertical-empty-message{padding-left:calc(var(--ag-icon-size) + var(--ag-spacing) + var(--ag-widget-horizontal-spacing));padding-right:var(--ag-spacing)}:where(.ag-rtl) .ag-column-drop-vertical-empty-message{padding-left:var(--ag-spacing);padding-right:calc(var(--ag-icon-size) + var(--ag-spacing) + var(--ag-widget-horizontal-spacing))}`\n);\n\n// packages/ag-grid-community/src/theming/parts/column-drop-style/column-drop-styles.ts\nvar makeColumnDropStyleBorderedTreeShakeable = () => {\n  return createPart({\n    feature: \"columnDropStyle\",\n    css: columnDropStyleBorderedCSS\n  });\n};\nvar columnDropStyleBordered = /* @__PURE__ */ makeColumnDropStyleBorderedTreeShakeable();\nvar makeColumnDropStylePlainTreeShakeable = () => {\n  return createPart({\n    feature: \"columnDropStyle\",\n    css: columnDropStylePlainCSS\n  });\n};\nvar columnDropStylePlain = /* @__PURE__ */ makeColumnDropStylePlainTreeShakeable();\n\n// packages/ag-grid-community/src/theming/theme-types.ts\nvar paramTypes = [\n  \"colorScheme\",\n  \"color\",\n  \"length\",\n  \"scale\",\n  \"borderStyle\",\n  \"border\",\n  \"shadow\",\n  \"image\",\n  \"fontFamily\",\n  \"fontWeight\",\n  \"duration\"\n];\nvar getParamType = memoize((param) => {\n  param = param.toLowerCase();\n  return paramTypes.find((type) => param.endsWith(type.toLowerCase())) ?? \"length\";\n});\nvar literalToCSS = (value) => {\n  if (typeof value === \"object\" && value?.ref)\n    return paramToVariableExpression(value.ref);\n  if (typeof value === \"string\")\n    return value;\n  if (typeof value === \"number\")\n    return String(value);\n  return false;\n};\nvar colorValueToCss = (value) => {\n  if (typeof value === \"string\")\n    return value;\n  if (value && \"ref\" in value) {\n    const colorExpr = paramToVariableExpression(value.ref);\n    if (value.mix == null) {\n      return colorExpr;\n    }\n    const backgroundExpr = value.onto ? paramToVariableExpression(value.onto) : \"transparent\";\n    return `color-mix(in srgb, ${backgroundExpr}, ${colorExpr} ${clamp(value.mix * 100, 0, 100)}%)`;\n  }\n  return false;\n};\nvar colorSchemeValueToCss = literalToCSS;\nvar lengthValueToCss = (value) => {\n  if (typeof value === \"string\")\n    return value;\n  if (typeof value === \"number\")\n    return `${value}px`;\n  if (value && \"calc\" in value) {\n    const valueWithSpaces = value.calc.replace(/ ?[*/+] ?/g, \" $& \");\n    return `calc(${valueWithSpaces.replace(/-?\\b[a-z][a-z0-9]*\\b(?![-(])/gi, (p) => p[0] === \"-\" ? p : ` ${paramToVariableExpression(p)} `)})`;\n  }\n  if (value && \"ref\" in value)\n    return paramToVariableExpression(value.ref);\n  return false;\n};\nvar scaleValueToCss = literalToCSS;\nvar borderValueToCss = (value, param) => {\n  if (typeof value === \"string\")\n    return value;\n  if (value === true)\n    return \"solid 1px var(--ag-border-color)\";\n  if (value === false)\n    return param === \"columnBorder\" ? \"solid 1px transparent\" : \"none\";\n  if (value && \"ref\" in value)\n    return paramToVariableExpression(value.ref);\n  return borderStyleValueToCss(value.style ?? \"solid\") + \" \" + lengthValueToCss(value.width ?? 1) + \" \" + colorValueToCss(value.color ?? { ref: \"borderColor\" });\n};\nvar shadowValueToCss = (value) => {\n  if (typeof value === \"string\")\n    return value;\n  if (value === false)\n    return \"none\";\n  if (value && \"ref\" in value)\n    return paramToVariableExpression(value.ref);\n  return [\n    lengthValueToCss(value.offsetX ?? 0),\n    lengthValueToCss(value.offsetY ?? 0),\n    lengthValueToCss(value.radius ?? 0),\n    lengthValueToCss(value.spread ?? 0),\n    colorValueToCss(value.color ?? { ref: \"foregroundColor\" })\n  ].join(\" \");\n};\nvar borderStyleValueToCss = literalToCSS;\nvar fontFamilyValueToCss = (value) => {\n  if (typeof value === \"string\")\n    return value;\n  if (value && \"googleFont\" in value)\n    return fontFamilyValueToCss(value.googleFont);\n  if (value && \"ref\" in value)\n    return paramToVariableExpression(value.ref);\n  if (Array.isArray(value)) {\n    return value.map((font) => {\n      if (typeof font === \"object\" && \"googleFont\" in font) {\n        font = font.googleFont;\n      }\n      return quoteUnsafeChars(font);\n    }).join(\", \");\n  }\n  return false;\n};\nvar quoteUnsafeChars = (font) => (\n  // don't quote var() expressions or quote safe identifier names, so that\n  // people can specify fonts like sans-serif which are keywords not strings,\n  // or var(--my-var)\n  /^[\\w-]+$|\\w\\(/.test(font) ? font : JSON.stringify(font)\n);\nvar fontWeightValueToCss = literalToCSS;\nvar imageValueToCss = (value) => {\n  if (typeof value === \"string\")\n    return value;\n  if (value && \"url\" in value)\n    return `url(${JSON.stringify(value.url)})`;\n  if (value && \"svg\" in value)\n    return imageValueToCss({ url: `data:image/svg+xml,${encodeURIComponent(value.svg)}` });\n  if (value && \"ref\" in value)\n    return paramToVariableExpression(value.ref);\n  return false;\n};\nvar durationValueToCss = (value, param) => {\n  if (typeof value === \"string\")\n    return value;\n  if (typeof value === \"number\") {\n    if (value >= 10) {\n      _error(104, { value, param });\n    }\n    return `${value}s`;\n  }\n  if (value && \"ref\" in value)\n    return paramToVariableExpression(value.ref);\n  return false;\n};\nvar paramValidators = {\n  color: colorValueToCss,\n  colorScheme: colorSchemeValueToCss,\n  length: lengthValueToCss,\n  scale: scaleValueToCss,\n  border: borderValueToCss,\n  borderStyle: borderStyleValueToCss,\n  shadow: shadowValueToCss,\n  image: imageValueToCss,\n  fontFamily: fontFamilyValueToCss,\n  fontWeight: fontWeightValueToCss,\n  duration: durationValueToCss\n};\nvar paramValueToCss = (param, value) => {\n  const type = getParamType(param);\n  return paramValidators[type](value, param);\n};\n\n// packages/ag-grid-community/src/theming/Theme.ts\nvar FORCE_LEGACY_THEMES = false;\nvar _asThemeImpl = (theme) => {\n  if (!(theme instanceof ThemeImpl)) {\n    throw new Error(\"theme is not an object created by createTheme\");\n  }\n  return theme;\n};\nvar createTheme = () => new ThemeImpl().withPart(buttonStyleQuartz).withPart(columnDropStyleBordered);\nvar ThemeImpl = class _ThemeImpl {\n  constructor(parts = []) {\n    this.parts = parts;\n  }\n  withPart(part) {\n    if (typeof part === \"function\")\n      part = part();\n    if (!(part instanceof PartImpl)) {\n      _logPreInitErr(259, { part }, \"Invalid part\");\n      return this;\n    }\n    return new _ThemeImpl([...this.parts, part]);\n  }\n  withoutPart(feature) {\n    return this.withPart(createPart({ feature }));\n  }\n  withParams(params, mode = defaultModeName) {\n    return this.withPart(\n      createPart({\n        modeParams: { [mode]: params }\n      })\n    );\n  }\n  /**\n   * Called by a grid instance when it starts using the theme. This installs\n   * the theme's parts into document head, or the shadow DOM if the provided\n   * container is within a shadow root.\n   */\n  _startUse({ styleContainer, cssLayer, loadThemeGoogleFonts }) {\n    if (IS_SSR)\n      return;\n    if (FORCE_LEGACY_THEMES)\n      return;\n    uninstallLegacyCSS();\n    _injectCoreAndModuleCSS(styleContainer, cssLayer);\n    const googleFontsUsed = getGoogleFontsUsed(this);\n    if (googleFontsUsed.length > 0) {\n      for (const googleFont of googleFontsUsed) {\n        if (loadThemeGoogleFonts) {\n          loadGoogleFont(googleFont);\n        }\n      }\n    }\n    for (const part of this.parts) {\n      part.use(styleContainer, cssLayer);\n    }\n  }\n  /**\n   * Return CSS that that applies the params of this theme to elements with\n   * the provided class name\n   */\n  _getCssClass() {\n    if (FORCE_LEGACY_THEMES)\n      return \"ag-theme-quartz\";\n    return this._cssClassCache ?? (this._cssClassCache = deduplicatePartsByFeature(this.parts).map((part) => part.use(void 0, void 0)).filter(Boolean).join(\" \"));\n  }\n  _getModeParams() {\n    let paramsCache = this._paramsCache;\n    if (!paramsCache) {\n      const mergedModeParams = {\n        // NOTE: defining the default mode here is important, it ensures\n        // that the default mode is first in iteration order, which puts\n        // it first in outputted CSS, allowing other modes to override it\n        [defaultModeName]: { ...coreDefaults }\n      };\n      for (const part of deduplicatePartsByFeature(this.parts)) {\n        for (const partMode of Object.keys(part.modeParams)) {\n          const partParams = part.modeParams[partMode];\n          if (partParams) {\n            const mergedParams = mergedModeParams[partMode] ?? (mergedModeParams[partMode] = {});\n            const partParamNames = /* @__PURE__ */ new Set();\n            for (const partParamName of Object.keys(partParams)) {\n              const partParamValue = partParams[partParamName];\n              if (partParamValue !== void 0) {\n                mergedParams[partParamName] = partParamValue;\n                partParamNames.add(partParamName);\n              }\n            }\n            if (partMode === defaultModeName) {\n              for (const mergedMode of Object.keys(mergedModeParams)) {\n                const mergedParams2 = mergedModeParams[mergedMode];\n                if (mergedMode !== defaultModeName) {\n                  for (const partParamName of partParamNames) {\n                    delete mergedParams2[partParamName];\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      this._paramsCache = paramsCache = mergedModeParams;\n    }\n    return paramsCache;\n  }\n  /**\n   * Return the CSS chunk that is inserted into the grid DOM, and will\n   * therefore be removed automatically when the grid is destroyed or it\n   * starts to use a new theme.\n   *\n   * @param className a unique class name on the grid wrapper used to scope the returned CSS to the grid instance\n   */\n  _getPerGridCss(className) {\n    const selectorPlaceholder = \"##SELECTOR##\";\n    let innerParamsCss = this._paramsCssCache;\n    if (!innerParamsCss) {\n      let variablesCss = \"\";\n      let inheritanceCss = \"\";\n      const modeParams = this._getModeParams();\n      for (const mode of Object.keys(modeParams)) {\n        const params = modeParams[mode];\n        if (mode !== defaultModeName) {\n          const escapedMode = typeof CSS === \"object\" ? CSS.escape(mode) : mode;\n          const wrapPrefix = `:where([data-ag-theme-mode=\"${escapedMode}\"]) & {\n`;\n          variablesCss += wrapPrefix;\n          inheritanceCss += wrapPrefix;\n        }\n        for (const key of Object.keys(params).sort()) {\n          const value = params[key];\n          const cssValue = paramValueToCss(key, value);\n          if (cssValue === false) {\n            _error(107, { key, value });\n          } else {\n            const cssName = paramToVariableName(key);\n            const inheritedName = cssName.replace(\"--ag-\", \"--ag-inherited-\");\n            variablesCss += `\t${cssName}: var(${inheritedName}, ${cssValue});\n`;\n            inheritanceCss += `\t${inheritedName}: var(${cssName});\n`;\n          }\n        }\n        if (mode !== defaultModeName) {\n          variablesCss += \"}\\n\";\n          inheritanceCss += \"}\\n\";\n        }\n      }\n      let css = `${selectorPlaceholder} {\n${variablesCss}}\n`;\n      css += `:has(> ${selectorPlaceholder}):not(${selectorPlaceholder}) {\n${inheritanceCss}}\n`;\n      this._paramsCssCache = innerParamsCss = css;\n    }\n    return innerParamsCss.replaceAll(selectorPlaceholder, `:where(.${className})`);\n  }\n};\nvar deduplicatePartsByFeature = (parts) => {\n  const lastPartByFeature = /* @__PURE__ */ new Map();\n  for (const part of parts) {\n    lastPartByFeature.set(part.feature, part);\n  }\n  const result = [];\n  for (const part of parts) {\n    if (!part.feature || lastPartByFeature.get(part.feature) === part) {\n      result.push(part);\n    }\n  }\n  return result;\n};\nvar getGoogleFontsUsed = (theme) => {\n  const googleFontsUsed = /* @__PURE__ */ new Set();\n  const visitParamValue = (paramValue) => {\n    if (Array.isArray(paramValue)) {\n      paramValue.forEach(visitParamValue);\n    } else {\n      const googleFont = paramValue?.googleFont;\n      if (typeof googleFont === \"string\") {\n        googleFontsUsed.add(googleFont);\n      }\n    }\n  };\n  const allModeValues = Object.values(theme._getModeParams());\n  const allValues = allModeValues.flatMap((mv) => Object.values(mv));\n  allValues.forEach(visitParamValue);\n  return Array.from(googleFontsUsed).sort();\n};\nvar uninstalledLegacyCSS = false;\nvar uninstallLegacyCSS = () => {\n  if (uninstalledLegacyCSS)\n    return;\n  uninstalledLegacyCSS = true;\n  for (const style of Array.from(document.head.querySelectorAll('style[data-ag-scope=\"legacy\"]'))) {\n    style.remove();\n  }\n};\nvar googleFontsLoaded = /* @__PURE__ */ new Set();\nvar loadGoogleFont = async (font) => {\n  googleFontsLoaded.add(font);\n  const css = `@import url('https://${googleFontsDomain}/css2?family=${encodeURIComponent(font)}:wght@100;200;300;400;500;600;700;800;900&display=swap');\n`;\n  _injectGlobalCSS(css, document.head, `googleFont:${font}`, void 0, 0);\n};\nvar googleFontsDomain = \"fonts.googleapis.com\";\n\n// packages/ag-grid-community/src/theming/parts/checkbox-style/checkbox-style-default.css-GENERATED.ts\nvar checkboxStyleDefaultCSS = (\n  /*css*/\n  `.ag-checkbox-input-wrapper,.ag-radio-button-input-wrapper{background-color:var(--ag-checkbox-unchecked-background-color);border:solid var(--ag-checkbox-border-width) var(--ag-checkbox-unchecked-border-color);flex:none;height:var(--ag-icon-size);position:relative;width:var(--ag-icon-size);:where(input){-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;display:block;height:var(--ag-icon-size);margin:0;opacity:0;width:var(--ag-icon-size)}&:after{content:\"\";display:block;inset:0;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;pointer-events:none;position:absolute}&:where(.ag-checked){background-color:var(--ag-checkbox-checked-background-color);border-color:var(--ag-checkbox-checked-border-color);&:after{background-color:var(--ag-checkbox-checked-shape-color)}}&:where(:focus-within,:active){box-shadow:var(--ag-focus-shadow)}&:where(.ag-disabled){filter:grayscale();opacity:.5}}.ag-checkbox-input-wrapper{border-radius:var(--ag-checkbox-border-radius);&:where(.ag-checked):after{-webkit-mask-image:var(--ag-checkbox-checked-shape-image);mask-image:var(--ag-checkbox-checked-shape-image)}&:where(.ag-indeterminate){background-color:var(--ag-checkbox-indeterminate-background-color);border-color:var(--ag-checkbox-indeterminate-border-color);&:after{background-color:var(--ag-checkbox-indeterminate-shape-color);-webkit-mask-image:var(--ag-checkbox-indeterminate-shape-image);mask-image:var(--ag-checkbox-indeterminate-shape-image)}}}.ag-radio-button-input-wrapper{border-radius:100%;&:where(.ag-checked):after{-webkit-mask-image:var(--ag-radio-checked-shape-image);mask-image:var(--ag-radio-checked-shape-image)}}`\n);\n\n// packages/ag-grid-community/src/theming/parts/checkbox-style/checkbox-styles.ts\nvar makeCheckboxStyleDefaultTreeShakeable = () => createPart({\n  feature: \"checkboxStyle\",\n  params: {\n    checkboxBorderWidth: 1,\n    checkboxBorderRadius: {\n      ref: \"borderRadius\"\n    },\n    checkboxUncheckedBackgroundColor: backgroundColor,\n    checkboxUncheckedBorderColor: foregroundBackgroundMix(0.3),\n    checkboxCheckedBackgroundColor: accentColor,\n    checkboxCheckedBorderColor: { ref: \"checkboxCheckedBackgroundColor\" },\n    checkboxCheckedShapeImage: {\n      svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"7\" fill=\"none\"><path stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.75\" d=\"M1 3.5 3.5 6l5-5\"/></svg>'\n    },\n    checkboxCheckedShapeColor: backgroundColor,\n    checkboxIndeterminateBackgroundColor: foregroundBackgroundMix(0.3),\n    checkboxIndeterminateBorderColor: { ref: \"checkboxIndeterminateBackgroundColor\" },\n    checkboxIndeterminateShapeImage: {\n      svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"2\" fill=\"none\"><rect width=\"10\" height=\"2\" fill=\"#000\" rx=\"1\"/></svg>'\n    },\n    checkboxIndeterminateShapeColor: backgroundColor,\n    radioCheckedShapeImage: {\n      svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"6\" fill=\"none\"><circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#000\"/></svg>'\n    }\n  },\n  css: checkboxStyleDefaultCSS\n});\nvar checkboxStyleDefault = /* @__PURE__ */ makeCheckboxStyleDefaultTreeShakeable();\n\n// packages/ag-grid-community/src/theming/parts/color-scheme/color-schemes.ts\nvar makeColorSchemeLightTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: defaultLightColorSchemeParams\n});\nvar colorSchemeLight = /* @__PURE__ */ makeColorSchemeLightTreeShakeable();\nvar makeColorSchemeLightWarmTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: {\n    ...defaultLightColorSchemeParams,\n    foregroundColor: \"#000000de\",\n    borderColor: \"#60300026\",\n    chromeBackgroundColor: \"#60300005\"\n  }\n});\nvar colorSchemeLightWarm = /* @__PURE__ */ makeColorSchemeLightWarmTreeShakeable();\nvar makeColorSchemeLightColdTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: {\n    ...defaultLightColorSchemeParams,\n    foregroundColor: \"#000\",\n    chromeBackgroundColor: \"#f3f8f8\"\n  }\n});\nvar colorSchemeLightCold = /* @__PURE__ */ makeColorSchemeLightColdTreeShakeable();\nvar darkParams = () => ({\n  ...defaultLightColorSchemeParams,\n  backgroundColor: \"hsl(217, 0%, 17%)\",\n  foregroundColor: \"#FFF\",\n  chromeBackgroundColor: foregroundBackgroundMix(0.05),\n  rowHoverColor: accentMix(0.15),\n  selectedRowBackgroundColor: accentMix(0.2),\n  menuBackgroundColor: foregroundBackgroundMix(0.1),\n  browserColorScheme: \"dark\",\n  popupShadow: \"0 0px 20px #000A\",\n  cardShadow: \"0 1px 4px 1px #000A\",\n  advancedFilterBuilderJoinPillColor: \"#7a3a37\",\n  advancedFilterBuilderColumnPillColor: \"#355f2d\",\n  advancedFilterBuilderOptionPillColor: \"#5a3168\",\n  advancedFilterBuilderValuePillColor: \"#374c86\",\n  checkboxUncheckedBorderColor: foregroundBackgroundMix(0.4),\n  toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.4)\n});\nvar makeColorSchemeDarkTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: darkParams()\n});\nvar colorSchemeDark = /* @__PURE__ */ makeColorSchemeDarkTreeShakeable();\nvar makeColorSchemeDarkWarmTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: {\n    backgroundColor: \"hsl(29, 10%, 17%)\",\n    foregroundColor: \"#FFF\",\n    browserColorScheme: \"dark\"\n  }\n});\nvar darkBlueParams = () => ({\n  ...darkParams(),\n  backgroundColor: \"#1f2836\"\n});\nvar colorSchemeDarkWarm = /* @__PURE__ */ makeColorSchemeDarkWarmTreeShakeable();\nvar makeColorSchemeDarkBlueTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: darkBlueParams()\n});\nvar colorSchemeDarkBlue = /* @__PURE__ */ makeColorSchemeDarkBlueTreeShakeable();\nvar makeColorSchemeVariableTreeShakeable = () => createPart({\n  feature: \"colorScheme\",\n  params: defaultLightColorSchemeParams,\n  modeParams: {\n    light: defaultLightColorSchemeParams,\n    dark: darkParams(),\n    \"dark-blue\": darkBlueParams()\n  }\n});\nvar colorSchemeVariable = /* @__PURE__ */ makeColorSchemeVariableTreeShakeable();\n\n// packages/ag-grid-community/src/theming/parts/icon-set/balham/icon-set-balham.css-GENERATED.ts\nvar iconSetBalhamCSS = (\n  /*css*/\n  `.ag-icon-aggregation:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eaggregation%3C/title%3E%3Cpath d='M25.128 2.002c2.56.096 4.772 2.292 4.87 4.87a712 712 0 0 1 0 18.256c-.096 2.56-2.292 4.772-4.87 4.87a712 712 0 0 1-18.256 0c-2.558-.096-4.772-2.29-4.87-4.87a712 712 0 0 1 0-18.256c.096-2.56 2.292-4.772 4.87-4.87a712 712 0 0 1 18.256 0M7.006 4c-1.57.02-2.946 1.348-3.004 2.922-.078 6.078-.23 12.16.002 18.234.094 1.484 1.354 2.746 2.84 2.84 6.1.232 12.212.232 18.312 0 1.48-.094 2.746-1.35 2.84-2.84.232-6.1.232-12.212 0-18.312-.094-1.48-1.35-2.746-2.84-2.84C19.11 3.774 13.056 4 7.006 4M22 12h-2v-2h-8v.092c.056 1.352 3.426 2.598 4.472 4.404.682 1.174.438 2.754-.572 3.72C14.29 19.618 12 20.924 12 22h8v-2h2v4H10c0-1.586-.098-3.304 1.016-4.314 1.904-1.632 4.89-3.108 3.54-4.42-1.918-1.68-4.464-2.936-4.554-5.12L10 8h12z'/%3E%3C/svg%3E\")}.ag-icon-arrows:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Earrows%3C/title%3E%3Cpath d='m6.414 17 2.294 2.292-1.416 1.416L2.586 16l4.706-4.708 1.416 1.416L6.414 15H15V6.414l-2.292 2.294-1.416-1.416L16 2.586l4.708 4.706-1.416 1.416L17 6.414V15h8.586l-2.294-2.292 1.416-1.416L29.414 16l-4.706 4.708-1.416-1.416L25.586 17H17v8.586l2.292-2.294 1.416 1.416L16 29.414l-4.708-4.706 1.416-1.416L15 25.586V17z'/%3E%3C/svg%3E\")}.ag-icon-asc:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Easc%3C/title%3E%3Cpath d='m15 10.621-4.292 4.294-1.416-1.416L16 6.793l6.708 6.706-1.416 1.416L17 10.621v14.586h-2z'/%3E%3C/svg%3E\")}.ag-icon-cancel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecancel%3C/title%3E%3Cpath d='M16 4C9.378 4 4 9.378 4 16s5.378 12 12 12 12-5.378 12-12S22.622 4 16 4m0 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S6 21.52 6 16 10.48 6 16 6m0 8.586 5.292-5.294 1.416 1.416L17.414 16l5.294 5.292-1.416 1.416L16 17.414l-5.292 5.294-1.416-1.416L14.586 16l-5.294-5.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-chart:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Echart%3C/title%3E%3Cpath d='M6.667 12.267h4v13.067h-4zm7.466-5.6h3.733v18.667h-3.733zM21.6 17.333h3.733v8H21.6z'/%3E%3C/svg%3E\")}.ag-icon-color-picker:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecolor-picker%3C/title%3E%3Cpath d='M23.907 17.587 10.574 4.254l-1.88 1.88 3.173 3.173-8.28 8.28 10.16 10.16zm-16.547 0 6.387-6.387 6.387 6.387H7.361zm18.387 2s-2.667 2.893-2.667 4.667c0 1.467 1.2 2.667 2.667 2.667s2.667-1.2 2.667-2.667c0-1.773-2.667-4.667-2.667-4.667'/%3E%3C/svg%3E\")}.ag-icon-columns:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecolumns%3C/title%3E%3Cpath d='M14 25h-2V7h2zm6 0h-2V7h2zm6 0h-2V7h2zM8 25H6V7h2z'/%3E%3C/svg%3E\")}.ag-icon-contracted:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Econtracted%3C/title%3E%3Cpath d='m21.061 16-8.706 8.708-1.416-1.416L18.233 16l-7.294-7.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-copy:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecopy%3C/title%3E%3Cpath d='M21.929 27.999h-7.828a5.09 5.09 0 0 1-5.086-5.086v-9.812a5.087 5.087 0 0 1 5.086-5.086h7.828a5.09 5.09 0 0 1 5.086 5.086v9.812a5.087 5.087 0 0 1-5.086 5.086m.16-17.984h-8.088a2.94 2.94 0 0 0-2.938 2.938v10.132a2.94 2.94 0 0 0 2.938 2.938h8.088a2.94 2.94 0 0 0 2.936-2.938V12.953a2.94 2.94 0 0 0-2.936-2.938M7.041 26.013h-2.05a4 4 0 0 1-.006-.228V9.065a5.07 5.07 0 0 1 5.064-5.064h12.812q.069 0 .134.002v2.012H9.915a2.876 2.876 0 0 0-2.874 2.874z'/%3E%3C/svg%3E\")}.ag-icon-cross:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='4 4 24 24'%3E%3Ctitle%3Ecross%3C/title%3E%3Cpath d='m16 14.586 5.292-5.294 1.416 1.416L17.414 16l5.294 5.292-1.416 1.416L16 17.414l-5.292 5.294-1.416-1.416L14.586 16l-5.294-5.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-csv:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='M.688-.226a.2.2 0 0 1-.017.074.28.28 0 0 1-.145.14.412.412 0 0 1-.234.013.28.28 0 0 1-.202-.168.468.468 0 0 1-.04-.19q0-.086.025-.155a.319.319 0 0 1 .182-.191.4.4 0 0 1 .134-.025q.087 0 .155.035a.3.3 0 0 1 .104.085.17.17 0 0 1 .036.097.06.06 0 0 1-.018.044.06.06 0 0 1-.042.019.06.06 0 0 1-.042-.013.2.2 0 0 1-.031-.046.2.2 0 0 0-.066-.079.16.16 0 0 0-.095-.027.17.17 0 0 0-.142.068.3.3 0 0 0-.053.193.4.4 0 0 0 .023.139.2.2 0 0 0 .067.083.2.2 0 0 0 .1.027q.063 0 .106-.031a.2.2 0 0 0 .065-.091.2.2 0 0 1 .023-.046q.014-.018.044-.018a.06.06 0 0 1 .044.018.06.06 0 0 1 .019.045' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 7.122 25.977)'/%3E%3Cpath d='M.622-.215a.2.2 0 0 1-.033.117.23.23 0 0 1-.098.081.4.4 0 0 1-.153.029.34.34 0 0 1-.175-.04.23.23 0 0 1-.079-.077.17.17 0 0 1-.031-.093q0-.027.019-.045a.06.06 0 0 1 .046-.019.06.06 0 0 1 .039.014.1.1 0 0 1 .027.044.3.3 0 0 0 .03.057q.015.023.044.038.03.015.076.015.065 0 .105-.03a.09.09 0 0 0 .04-.075.08.08 0 0 0-.022-.058.14.14 0 0 0-.056-.034 1 1 0 0 0-.092-.025.7.7 0 0 1-.129-.042.2.2 0 0 1-.083-.066.17.17 0 0 1-.03-.104q0-.058.032-.105a.2.2 0 0 1 .093-.07.4.4 0 0 1 .144-.025q.066 0 .114.016a.3.3 0 0 1 .08.044.2.2 0 0 1 .046.057q.015.03.015.058a.07.07 0 0 1-.018.046.06.06 0 0 1-.046.021q-.025 0-.038-.012a.2.2 0 0 1-.028-.041.2.2 0 0 0-.047-.063Q.387-.625.326-.625a.15.15 0 0 0-.09.025q-.035.024-.035.059 0 .021.012.037a.1.1 0 0 0 .032.027.4.4 0 0 0 .111.036q.06.015.11.031.048.018.083.042a.2.2 0 0 1 .054.062.2.2 0 0 1 .019.091' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 13.339 25.977)'/%3E%3Cpath d='m.184-.633.162.48.163-.483q.013-.038.019-.053a.062.062 0 0 1 .061-.039q.018 0 .034.009a.1.1 0 0 1 .025.025q.009.015.009.031L.654-.64l-.007.025-.009.024-.173.468-.019.051a.2.2 0 0 1-.021.042.1.1 0 0 1-.033.03.1.1 0 0 1-.049.012.1.1 0 0 1-.05-.011A.1.1 0 0 1 .26-.03a.2.2 0 0 1-.021-.042L.22-.123.05-.587.041-.612.033-.638.03-.662q0-.025.02-.046a.07.07 0 0 1 .05-.02q.037 0 .053.023.015.023.031.072' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 18.94 25.977)'/%3E%3C/svg%3E\")}.ag-icon-cut:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M14.703 15.096 6.215 4.719a1 1 0 1 1 1.548-1.267l13.058 15.965A5.001 5.001 0 0 1 28 23.916a5 5 0 0 1-4.999 4.999 5 5 0 0 1-4.999-4.999 4.98 4.98 0 0 1 1.23-3.283l-3.238-3.958-3.272 4.001a4.98 4.98 0 0 1 1.265 3.323 5 5 0 0 1-4.999 4.999 5 5 0 0 1-4.999-4.999 5 5 0 0 1 7.13-4.522zM8.991 20.8a3.1 3.1 0 0 0-3.1 3.1c0 1.711 1.389 3.1 3.1 3.1s3.1-1.389 3.1-3.1-1.389-3.1-3.1-3.1M23 20.8a3.1 3.1 0 0 0-3.1 3.1c0 1.711 1.389 3.1 3.1 3.1s3.1-1.389 3.1-3.1-1.389-3.1-3.1-3.1m-5.723-8.852 1.292 1.579 7.205-8.808a1 1 0 0 0-1.548-1.267z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-desc:before,.ag-icon-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Edesc%3C/title%3E%3Cpath d='m17 21.379 4.292-4.294 1.416 1.416L16 25.207l-6.708-6.706 1.416-1.416L15 21.379V6.793h2z'/%3E%3C/svg%3E\")}.ag-icon-excel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='m.052-.139.16-.234-.135-.208a.4.4 0 0 1-.028-.052.1.1 0 0 1-.01-.042.05.05 0 0 1 .018-.037.07.07 0 0 1 .045-.016q.03 0 .047.018a1 1 0 0 1 .047.066l.107.174.115-.174.024-.038.019-.026.021-.015a.1.1 0 0 1 .027-.005.06.06 0 0 1 .044.016.05.05 0 0 1 .018.039q0 .033-.038.089l-.141.211.152.234a.3.3 0 0 1 .03.051.1.1 0 0 1 .009.038.1.1 0 0 1-.008.031.1.1 0 0 1-.024.023.1.1 0 0 1-.034.008.1.1 0 0 1-.035-.008.1.1 0 0 1-.023-.022L.427-.067.301-.265l-.134.204-.022.034-.016.019a.1.1 0 0 1-.022.015.1.1 0 0 1-.03.005.06.06 0 0 1-.044-.016.06.06 0 0 1-.017-.047q0-.036.036-.088' style='fill-rule:nonzero' transform='matrix(17.82892 0 0 16.50777 10.371 25.928)'/%3E%3C/svg%3E\")}.ag-icon-expanded:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eexpanded%3C/title%3E%3Cpath d='M21.061 8.708 13.767 16l7.294 7.292-1.416 1.416L10.939 16l8.706-8.708z'/%3E%3C/svg%3E\")}.ag-icon-eye-slash:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye-slash%3C/title%3E%3Cpath d='M9.304 7.89a15.2 15.2 0 0 1 6.404-1.638c.294-.002.292-.002.584 0 5.956.174 11.328 4.088 13.62 9.748 0 0-1.318 3.178-3.224 5.174a13.6 13.6 0 0 1-2.226 1.874L26.414 25 25 26.414l-2.336-2.336C17.866 26.396 11.776 26.15 7.36 22.96a14.9 14.9 0 0 1-4.168-4.612c-.41-.71-.694-1.336-1.104-2.348 0 0 .898-2.218 2.002-3.718a14.6 14.6 0 0 1 3.442-3.334L5.586 7 7 5.586zm-.3 2.528c-2.038 1.344-3.708 3.246-4.724 5.508L4.248 16c2.46 5.762 9.622 9.064 15.63 7.15q.688-.219 1.342-.516l-.912-.912a6.96 6.96 0 0 1-4.19 1.394c-3.862 0-7-3.136-7-7 0-1.57.52-3.022 1.394-4.19zm14.032 11.204a13.25 13.25 0 0 0 4.684-5.548l.032-.074c-1.984-4.646-6.834-7.798-12.006-7.748-1.712.05-3.386.458-4.922 1.158l1.102 1.102a6.97 6.97 0 0 1 4.192-1.396 7.003 7.003 0 0 1 5.606 11.192zm-11.09-8.262a5.003 5.003 0 0 0 6.928 6.928zm8.342 5.514a5.002 5.002 0 0 0-6.928-6.928z'/%3E%3C/svg%3E\")}.ag-icon-eye:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye%3C/title%3E%3Cpath d='M16.292 6.32c5.956.174 11.328 4.086 13.62 9.746 0 0-1.318 3.18-3.224 5.176-4.862 5.088-13.534 5.97-19.328 1.784a14.9 14.9 0 0 1-4.168-4.612c-.41-.71-.694-1.336-1.104-2.348 0 0 .898-2.216 2.002-3.716 2.678-3.64 7.03-5.896 11.618-6.03.294-.004.292-.004.584 0m-.546 2c-4.896.142-9.458 3.202-11.466 7.672l-.032.074c2.46 5.762 9.622 9.066 15.63 7.152 3.458-1.102 6.342-3.738 7.842-7.076l.032-.076C25.768 11.42 20.918 8.27 15.746 8.32m.254.946c3.754 0 6.8 3.048 6.8 6.8 0 3.754-3.046 6.8-6.8 6.8s-6.8-3.046-6.8-6.8c0-3.752 3.046-6.8 6.8-6.8m5 6.768V16c0-2.76-2.24-5-5-5s-5 2.24-5 5v.066c0 2.76 2.24 5 5 5s5-2.24 5-5z'/%3E%3C/svg%3E\")}.ag-icon-filter:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Efilter%3C/title%3E%3Cpath d='M26 8.184c-.066 2.658-4.058 5.154-6.742 7.974a1.05 1.05 0 0 0-.258.682v3.66L13 25c0-2.74.066-5.482-.002-8.222a1.05 1.05 0 0 0-.256-.62C10.026 13.304 6.06 10.61 6 8.184V6h20zM8 8c0 .304.06.612.258.842 2.716 2.854 6.682 5.548 6.742 7.974V21l2-1.5v-2.684c.066-2.658 4.058-5.154 6.742-7.974.198-.23.258-.538.258-.842z'/%3E%3C/svg%3E\")}.ag-icon-first:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Efirst%3C/title%3E%3Cpath d='M24.354 8.708 17.06 16l7.294 7.292-1.416 1.416L14.232 16l8.706-8.708zM9.646 8v16h-2V8z'/%3E%3C/svg%3E\")}.ag-icon-group:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Egroup%3C/title%3E%3Cpath d='M25.128 2.002c2.56.096 4.772 2.292 4.87 4.87a712 712 0 0 1 0 18.256c-.096 2.56-2.292 4.772-4.87 4.87a712 712 0 0 1-18.256 0c-2.558-.096-4.772-2.29-4.87-4.87a712 712 0 0 1 0-18.256c.096-2.56 2.292-4.772 4.87-4.87a712 712 0 0 1 18.256 0M7.006 4c-1.57.02-2.946 1.348-3.004 2.922-.078 6.078-.23 12.16.002 18.234.094 1.484 1.354 2.746 2.84 2.84 6.1.232 12.212.232 18.312 0 1.48-.094 2.746-1.35 2.84-2.84.232-6.1.232-12.212 0-18.312-.094-1.48-1.35-2.746-2.84-2.84C19.11 3.774 13.056 4 7.006 4M14 21h-4v-2h4zm12 0H16v-2h10zm-12-4h-4v-2h4zm12 0H16v-2h10zm-16-4H6v-2h4zm16 0H12v-2h14z'/%3E%3C/svg%3E\")}.ag-icon-last:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Elast%3C/title%3E%3Cpath d='m17.768 16-8.706 8.708-1.416-1.416L14.94 16 7.646 8.708l1.416-1.416zm6.586 8h-2V8h2z'/%3E%3C/svg%3E\")}.ag-icon-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eleft%3C/title%3E%3Cpath d='m17.621 11-2 2h12.586v6H15.621l2 2-4.414 4.414L3.793 16l9.414-9.414zm-11 5 6.586 6.586L14.793 21l-4-4h15.414v-2H10.793l4-4-1.586-1.586z'/%3E%3C/svg%3E\")}.ag-icon-linked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Elinked%3C/title%3E%3Cpath d='M17.138 13.418a1.03 1.03 0 0 0-.298.658s.125.096.226.178c1.372 1.114 2.033 3.039 1.582 4.796a4.7 4.7 0 0 1-1.205 2.123c-1.145 1.151-2.296 2.294-3.445 3.441-1.241 1.232-3.185 1.691-4.864 1.105-1.546-.54-2.756-1.938-3.048-3.572-.267-1.496.246-3.108 1.319-4.186l.578-.578-.03-.092a10.5 10.5 0 0 1-.452-2.3v-.005c-.776.775-1.621 1.489-2.275 2.396-1.817 2.522-1.643 6.323.706 8.669 1.813 1.811 4.708 2.462 7.171 1.517a6.75 6.75 0 0 0 2.336-1.518l3.427-3.424c1.939-1.954 2.533-5.126 1.294-7.674a6.8 6.8 0 0 0-2.071-2.481l-.003-.002zM21.265 4a6.8 6.8 0 0 0-4.734 1.964l-3.427 3.424c-1.961 1.977-2.52 5.092-1.32 7.619a6.8 6.8 0 0 0 2.098 2.537l.003.002c.32-.32.643-.637.96-.96.167-.172.27-.401.286-.64l-.204-.167c-1.603-1.287-2.215-3.68-1.316-5.616a4.7 4.7 0 0 1 .918-1.32c1.145-1.151 2.296-2.294 3.445-3.441 1.239-1.23 3.178-1.694 4.864-1.105 1.83.639 3.16 2.498 3.12 4.493a4.8 4.8 0 0 1-1.391 3.265l-.578.578.03.092c.235.743.387 1.519.452 2.3v.005c.732-.731 1.521-1.406 2.162-2.244 1.192-1.559 1.643-3.651 1.204-5.575a6.8 6.8 0 0 0-3.98-4.703 6.8 6.8 0 0 0-2.529-.506h-.061z'/%3E%3C/svg%3E\")}.ag-icon-loading:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eloading%3C/title%3E%3Cpath d='M17 29h-2v-8h2zm-3.586-9L7 26.414 5.586 25 12 18.586zm13 5L25 26.414 18.586 20 20 18.586zM29 17h-8v-2h8zm-18 0H3v-2h8zm2.414-5L12 13.414 5.586 7 7 5.586zm13-5L20 13.414 18.586 12 25 5.586zM17 11h-2V3h2z'/%3E%3C/svg%3E\")}.ag-icon-maximize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='3 3 26 26'%3E%3Ctitle%3Emaximize%3C/title%3E%3Cpath d='m7.54 17.4.1 6.98 6.96.1-2.24-2.24L16 18.6 13.4 16l-3.64 3.64zm16.92-2.8-.1-6.98-6.96-.1 2.24 2.24L16 13.4l2.6 2.6 3.64-3.64z'/%3E%3C/svg%3E\")}.ag-icon-menu:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Emenu%3C/title%3E%3Cpath d='M26 23H6v-2h20zm0-6H6v-2h20zm0-6H6V9h20z'/%3E%3C/svg%3E\")}.ag-icon-menu-alt:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none'%3E%3Cpath fill='%23000' d='M16 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4m0-7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m0 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4'/%3E%3C/svg%3E\")}.ag-icon-minimize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='3 3 26 26'%3E%3Ctitle%3Eminimize%3C/title%3E%3Cpath d='m14.8 24.26-.1-6.96-6.96-.1 2.24 2.24-3.64 3.64 2.6 2.6 3.64-3.64zm2.4-16.52.1 6.96 6.96.1-2.24-2.24 3.64-3.64-2.6-2.6-3.64 3.64z'/%3E%3C/svg%3E\")}.ag-icon-minus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.515 7.515c-4.683 4.682-4.683 12.288 0 16.97 4.682 4.683 12.288 4.683 16.97 0 4.683-4.682 4.683-12.288 0-16.97-4.682-4.683-12.288-4.683-16.97 0m1.414 1.414c3.903-3.903 10.239-3.903 14.142 0s3.903 10.239 0 14.142-10.239 3.903-14.142 0-3.903-10.239 0-14.142m-1.414 6.07h16.97v2.002H7.515z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-next:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enext%3C/title%3E%3Cpath d='m21.061 16-8.706 8.708-1.416-1.416L18.233 16l-7.294-7.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-none:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enone%3C/title%3E%3Cpath d='m10.044 21.258 4.478-4.198L16 18.444 9 25l-7-6.556 1.478-1.384 4.478 4.198V7h2.088zm14 3.742h-2.088V10.742l-4.478 4.198L16 13.556 23 7q3.5 3.28 7 6.556l-1.478 1.384-4.478-4.198z'/%3E%3C/svg%3E\")}.ag-icon-not-allowed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enot-allowed%3C/title%3E%3Cpath d='M16.186 3.646c8.188.154 14.898 9.796 11.17 17.78-3.298 7.066-13.932 9.374-19.848 3.87-3.9-3.632-5.076-9.896-2.684-14.708 2.082-4.19 6.588-6.974 11.362-6.942m-.298 1.998c-6.922.132-12.578 8.308-9.33 15.052 3.342 6.934 15.246 7.646 18.932 0 3.076-6.386-1.988-15.1-9.602-15.052m7.596 6.422c2.864 5.33-1.744 13.186-8.306 12.536a8.6 8.6 0 0 1-3.232-.998l-1.266-.706L22.778 10.8q.351.633.706 1.266m-9.422 10.276c3.296 1.028 7.246-1.006 8.216-4.418a6.6 6.6 0 0 0-.056-3.742zm2.104-14.696a8.8 8.8 0 0 1 3.936 1.038l1.266.706L9.27 21.488c-3.018-5.41-.99-13.37 6.318-13.834q.289-.01.578-.008m-.31 2c-4.06.154-7.23 4.614-6.03 8.46l8.16-8.16a6.8 6.8 0 0 0-2.13-.3'/%3E%3C/svg%3E\")}.ag-icon-paste:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epaste%3C/title%3E%3Cpath d='M20 6.5c0-1-1-3-4-3s-4 2-4 3H8c-2.21 0-4 1.79-4 4v14c0 2.21 1.79 4 4 4h16c2.21 0 4-1.79 4-4v-14c0-2.21-1.79-4-4-4zm-4 .546c.734 0 1.334.572 1.334 1.272S16.734 9.59 16 9.59s-1.334-.572-1.334-1.272.6-1.272 1.334-1.272M24 26.5H8a2 2 0 0 1-2-2v-14a2 2 0 0 1 2-2h2v4h12v-4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2'/%3E%3C/svg%3E\")}.ag-icon-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epin%3C/title%3E%3Cpath d='m10.78 19.777-4.668-4.666s.032-1 .67-1.87c1.366-1.86 4.052-1.96 6.056-1.572l3.158-3.108c-.7-2.342 3.352-5.046 3.352-5.046l9.166 9.168q-.334.447-.67.894c-1.074 1.426-2.538 2.63-4.272 2.338l-3.32 3.218c.046.344.042.03.118 1.152.144 2.13-.64 4.324-2.632 5.34l-.746.364-4.798-4.798-7.292 7.294-1.416-1.416zm8.24-13.672c-.688.568-1.416 1.45-1.024 2.072l.49.722-4.986 4.988c-1.988-.506-4.346-.636-5.156.614l9.02 9.032q.14-.099.272-.21c1.226-1.08.764-3.04.498-4.9l4.79-4.79s1.47.938 2.936-.776l-6.79-6.79q-.026.019-.05.038'/%3E%3C/svg%3E\")}.ag-icon-pivot:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epivot%3C/title%3E%3Cpath d='M25.128 2.002c2.56.096 4.772 2.292 4.87 4.87a712 712 0 0 1 0 18.256c-.096 2.56-2.292 4.772-4.87 4.87a712 712 0 0 1-18.256 0c-2.558-.096-4.772-2.29-4.87-4.87a712 712 0 0 1 0-18.256c.096-2.56 2.292-4.772 4.87-4.87a712 712 0 0 1 18.256 0m2.966 7.954H9.892v18.136c5.086.13 10.18.098 15.264-.096 1.48-.094 2.746-1.35 2.84-2.84.192-5.064.226-10.134.098-15.2M3.968 24.1q.015.528.036 1.056c.094 1.484 1.354 2.746 2.84 2.84l1.012.036V24.1zM22 15.414l-.292.294-1.416-1.416L23 11.586l2.708 2.706-1.416 1.416-.292-.294v3.592c-.032 2.604-2.246 4.892-4.872 4.992L15.414 24l.294.292-1.416 1.416L11.586 23l2.706-2.708 1.416 1.416-.322.32c3.372.03 6.578-.164 6.614-3.034zM3.88 18.038c.002 1.346.012 2.694.038 4.04h3.938v-4.04zm.05-6.062a681 681 0 0 0-.044 4.042h3.97v-4.042zm5.962-7.99Q8.449 3.999 7.006 4c-1.57.02-2.946 1.348-3.004 2.922q-.02 1.517-.042 3.034h3.896v-2.02h2.036zm14.244-.016v3.966h3.898q-.017-.546-.038-1.092c-.094-1.48-1.35-2.746-2.84-2.84q-.51-.019-1.02-.034m-8.14-.054q-2.035.022-4.07.048v3.972h4.07zm6.106.008c-1.358-.022-2.714-.026-4.07-.022v4.034h4.07z'/%3E%3C/svg%3E\")}.ag-icon-plus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.515 7.515c-4.683 4.682-4.683 12.288 0 16.97 4.682 4.683 12.288 4.683 16.97 0 4.683-4.682 4.683-12.288 0-16.97-4.682-4.683-12.288-4.683-16.97 0m1.414 1.414c3.903-3.903 10.239-3.903 14.142 0s3.903 10.239 0 14.142-10.239 3.903-14.142 0-3.903-10.239 0-14.142M15 15l-.001-7.485h2.002L17 15l7.485-.001v2.002L17 17l.001 7.485h-2.002L15 17l-7.485.001v-2.002z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-previous:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eprevious%3C/title%3E%3Cpath d='M21.061 8.708 13.767 16l7.294 7.292-1.416 1.416L10.939 16l8.706-8.708z'/%3E%3C/svg%3E\")}.ag-icon-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eright%3C/title%3E%3Cpath d='m28.207 16-9.414 9.414L14.379 21l2-2H3.793v-6h12.586l-2-2 4.414-4.414zm-11-5 4 4H5.793v2h15.414l-4 4 1.586 1.586L25.379 16l-6.586-6.586z'/%3E%3C/svg%3E\")}.ag-icon-save:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esave%3C/title%3E%3Cpath d='M25.333 16v9.333H6.666V16H3.999v9.333C3.999 26.8 5.199 28 6.666 28h18.667C26.8 28 28 26.8 28 25.333V16zm-8 .893 3.453-3.44 1.88 1.88L15.999 22l-6.667-6.667 1.88-1.88 3.453 3.44V4h2.667v12.893z'/%3E%3C/svg%3E\")}.ag-icon-small-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-down%3C/title%3E%3Cpath d='M24.708 12.355 16 21.061l-8.708-8.706 1.416-1.416L16 18.233l7.292-7.294z'/%3E%3C/svg%3E\")}.ag-icon-small-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-left%3C/title%3E%3Cpath d='M21.061 8.708 13.767 16l7.294 7.292-1.416 1.416L10.939 16l8.706-8.708z'/%3E%3C/svg%3E\")}.ag-icon-small-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-right%3C/title%3E%3Cpath d='m21.061 16-8.706 8.708-1.416-1.416L18.233 16l-7.294-7.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-small-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-up%3C/title%3E%3Cpath d='m24.708 19.645-1.416 1.416L16 13.767l-7.292 7.294-1.416-1.416L16 10.939z'/%3E%3C/svg%3E\")}.ag-icon-tick:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etick%3C/title%3E%3Cpath d='M24.708 10.855 13 22.561l-5.708-5.706 1.416-1.416L13 19.733 23.292 9.439z'/%3E%3C/svg%3E\")}.ag-icon-tree-closed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-closed%3C/title%3E%3Cpath d='m21.061 16-8.706 8.708-1.416-1.416L18.233 16l-7.294-7.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-tree-indeterminate:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-indeterminate%3C/title%3E%3Cpath d='M6 15h20v2H6z'/%3E%3C/svg%3E\")}.ag-icon-tree-open:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-open%3C/title%3E%3Cpath d='M24.708 12.355 16 21.061l-8.708-8.706 1.416-1.416L16 18.233l7.292-7.294z'/%3E%3C/svg%3E\")}.ag-icon-unlinked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eunlinked%3C/title%3E%3Cpath d='M5.35 3.999a.2.2 0 0 0-.14.058c-.388.38-.768.768-1.152 1.152a.21.21 0 0 0-.002.288c7.459 7.506 14.965 14.965 22.447 22.447a.21.21 0 0 0 .288.002q.576-.574 1.151-1.151a.21.21 0 0 0 .002-.288C20.484 19.002 12.979 11.542 5.497 4.06a.2.2 0 0 0-.146-.061zm.611 12.548c-1.933 1.939-2.538 5.119-1.289 7.688a6.79 6.79 0 0 0 4.891 3.672 6.82 6.82 0 0 0 5.893-1.866l1.984-1.984-1.438-1.438-1.986 1.986c-1.486 1.476-3.993 1.81-5.834.629a4.73 4.73 0 0 1-2.024-2.853 4.76 4.76 0 0 1 1.241-4.393l1.986-1.986-1.438-1.438-1.984 1.984zM21.273 3.999a6.78 6.78 0 0 0-4.727 1.963l-1.984 1.984L16 9.384l1.985-1.985a4.74 4.74 0 0 1 2.776-1.338c1.974-.224 4.045.926 4.845 2.834.712 1.699.329 3.778-1.004 5.12L22.616 16l1.439 1.438q1-1 2-2c2.012-2.031 2.557-5.368 1.112-7.982-1.144-2.07-3.432-3.441-5.834-3.459h-.061z'/%3E%3C/svg%3E\")}.ag-icon-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Easc%3C/title%3E%3Cpath d='m15 10.621-4.292 4.294-1.416-1.416L16 6.793l6.708 6.706-1.416 1.416L17 10.621v14.586h-2z'/%3E%3C/svg%3E\")}.ag-icon-grip:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Egrip%3C/title%3E%3Cpath d='M8 24H6v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zM8 18H6v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zM8 12H6V8h2zm6 0h-2V8h2zm6 0h-2V8h2zm6 0h-2V8h2z'/%3E%3C/svg%3E\")}.ag-icon-settings:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M30 8h-4.1c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2v2h14.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30zm-9 4c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3M2 24h4.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30v-2H15.9c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2zm9-4c1.7 0 3 1.3 3 3s-1.3 3-3 3-3-1.3-3-3 1.3-3 3-3'/%3E%3C/svg%3E\")}`\n);\n\n// packages/ag-grid-community/src/theming/parts/icon-set/balham/icon-set-balham.ts\nvar iconSetBalham = /* @__PURE__ */ createPart({\n  feature: \"iconSet\",\n  css: iconSetBalhamCSS\n});\n\n// packages/ag-grid-community/src/theming/parts/icon-set/alpine/icon-set-alpine.css-GENERATED.ts\nvar iconSetAlpineCSS = (\n  /*css*/\n  `.ag-icon-aggregation:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M24 6H8v2l8 8-8 8v2h16v-2H11l8-8-8-8h13z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-arrows:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.515 11.171 2.687 16l4.828 4.829-1.414 1.414L-.142 16l6.243-6.243zm16.97 0 1.414-1.414L32.142 16l-6.243 6.243-1.414-1.414L29.313 16zM16.028 13.2l2.829 2.828-2.829 2.829-2.828-2.829zm-4.857 11.285L16 29.313l4.829-4.828 1.414 1.414L16 32.142l-6.243-6.243zm0-16.97L9.757 6.101 16-.142l6.243 6.243-1.414 1.414L16 2.687z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-asc:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m5.333 16 1.88 1.88 7.453-7.44v16.227h2.667V10.44l7.44 7.453L26.666 16 15.999 5.333 5.332 16z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-cancel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M16 2.667A13.32 13.32 0 0 0 2.667 16c0 7.373 5.96 13.333 13.333 13.333S29.333 23.373 29.333 16 23.373 2.667 16 2.667m6.667 18.12-1.88 1.88L16 17.88l-4.787 4.787-1.88-1.88L14.12 16l-4.787-4.787 1.88-1.88L16 14.12l4.787-4.787 1.88 1.88L17.88 16z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-chart:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Echart%3C/title%3E%3Cg fill='%23000' fill-rule='nonzero'%3E%3Cpath d='M14 7h4v18h-4zM8 17h4v8H8zM20 13h4v12h-4z'/%3E%3C/g%3E%3C/svg%3E\")}.ag-icon-color-picker:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M23.907 17.587 10.574 4.254l-1.88 1.88 3.173 3.173-8.28 8.28 10.16 10.16zm-16.547 0 6.387-6.387 6.387 6.387zm18.387 2s-2.667 2.893-2.667 4.667c0 1.467 1.2 2.667 2.667 2.667s2.667-1.2 2.667-2.667c0-1.773-2.667-4.667-2.667-4.667' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-columns:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M26 25H6V7h20zM12 11H8v12h4zm6 0h-4v12h4zm6 12V11h-4v12z' style='fill-rule:nonzero' transform='translate(0 -1)'/%3E%3C/svg%3E\")}.ag-icon-contracted:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m12 6 10 10-10 10-2-2 8-8-8-8z'/%3E%3C/svg%3E\")}.ag-icon-copy:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M22 1.333H6A2.675 2.675 0 0 0 3.333 4v18.667H6V4h16zm4 5.334H11.333a2.675 2.675 0 0 0-2.667 2.667v18.667c0 1.467 1.2 2.667 2.667 2.667H26c1.467 0 2.667-1.2 2.667-2.667V9.334c0-1.467-1.2-2.667-2.667-2.667M26 28H11.333V9.333H26z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-cross:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M15.984 13.894 27.05 2.828l2.122 2.122-11.066 11.066 11.066 11.066-2.122 2.12-11.066-11.066L4.918 29.202l-2.12-2.12 11.066-11.066L2.798 4.95l2.12-2.122z'/%3E%3C/svg%3E\")}.ag-icon-csv:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='M.688-.226a.2.2 0 0 1-.017.074.28.28 0 0 1-.145.14.412.412 0 0 1-.234.013.28.28 0 0 1-.202-.168.468.468 0 0 1-.04-.19q0-.086.025-.155a.319.319 0 0 1 .182-.191.4.4 0 0 1 .134-.025q.087 0 .155.035a.3.3 0 0 1 .104.085.17.17 0 0 1 .036.097.06.06 0 0 1-.018.044.06.06 0 0 1-.042.019.06.06 0 0 1-.042-.013.2.2 0 0 1-.031-.046.2.2 0 0 0-.066-.079.16.16 0 0 0-.095-.027.17.17 0 0 0-.142.068.3.3 0 0 0-.053.193.4.4 0 0 0 .023.139.2.2 0 0 0 .067.083.2.2 0 0 0 .1.027q.063 0 .106-.031a.2.2 0 0 0 .065-.091.2.2 0 0 1 .023-.046q.014-.018.044-.018a.06.06 0 0 1 .044.018.06.06 0 0 1 .019.045' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 7.122 25.977)'/%3E%3Cpath d='M.622-.215a.2.2 0 0 1-.033.117.23.23 0 0 1-.098.081.4.4 0 0 1-.153.029.34.34 0 0 1-.175-.04.23.23 0 0 1-.079-.077.17.17 0 0 1-.031-.093q0-.027.019-.045a.06.06 0 0 1 .046-.019.06.06 0 0 1 .039.014.1.1 0 0 1 .027.044.3.3 0 0 0 .03.057q.015.023.044.038.03.015.076.015.065 0 .105-.03a.09.09 0 0 0 .04-.075.08.08 0 0 0-.022-.058.14.14 0 0 0-.056-.034 1 1 0 0 0-.092-.025.7.7 0 0 1-.129-.042.2.2 0 0 1-.083-.066.17.17 0 0 1-.03-.104q0-.058.032-.105a.2.2 0 0 1 .093-.07.4.4 0 0 1 .144-.025q.066 0 .114.016a.3.3 0 0 1 .08.044.2.2 0 0 1 .046.057q.015.03.015.058a.07.07 0 0 1-.018.046.06.06 0 0 1-.046.021q-.025 0-.038-.012a.2.2 0 0 1-.028-.041.2.2 0 0 0-.047-.063Q.387-.625.326-.625a.15.15 0 0 0-.09.025q-.035.024-.035.059 0 .021.012.037a.1.1 0 0 0 .032.027.4.4 0 0 0 .111.036q.06.015.11.031.048.018.083.042a.2.2 0 0 1 .054.062.2.2 0 0 1 .019.091' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 13.339 25.977)'/%3E%3Cpath d='m.184-.633.162.48.163-.483q.013-.038.019-.053a.062.062 0 0 1 .061-.039q.018 0 .034.009a.1.1 0 0 1 .025.025q.009.015.009.031L.654-.64l-.007.025-.009.024-.173.468-.019.051a.2.2 0 0 1-.021.042.1.1 0 0 1-.033.03.1.1 0 0 1-.049.012.1.1 0 0 1-.05-.011A.1.1 0 0 1 .26-.03a.2.2 0 0 1-.021-.042L.22-.123.05-.587.041-.612.033-.638.03-.662q0-.025.02-.046a.07.07 0 0 1 .05-.02q.037 0 .053.023.015.023.031.072' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 18.94 25.977)'/%3E%3C/svg%3E\")}.ag-icon-cut:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M13.775 15.198 3.835 2.945a1.501 1.501 0 0 1 2.33-1.89l14.997 18.488A6.003 6.003 0 0 1 29.657 25c0 3.311-2.688 6-6 6s-6-2.689-6-6c0-1.335.437-2.569 1.176-3.566l-3.127-3.855-3.001 3.7A5.97 5.97 0 0 1 14 25c0 3.311-2.689 6-6 6s-6-2.689-6-6a6.003 6.003 0 0 1 8.315-5.536zm9.882 6.702a3.1 3.1 0 0 0-3.1 3.1c0 1.711 1.389 3.1 3.1 3.1s3.1-1.389 3.1-3.1-1.389-3.1-3.1-3.1M8 21.95a3.05 3.05 0 1 0 .001 6.101A3.05 3.05 0 0 0 8 21.95m9.63-11.505 1.932 2.381 8.015-9.881a1.5 1.5 0 0 0-2.329-1.89z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-desc:before,.ag-icon-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m26.667 16-1.88-1.88-7.453 7.44V5.333h-2.667V21.56l-7.44-7.453L5.334 16l10.667 10.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-excel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='m.052-.139.16-.234-.135-.208a.4.4 0 0 1-.028-.052.1.1 0 0 1-.01-.042.05.05 0 0 1 .018-.037.07.07 0 0 1 .045-.016q.03 0 .047.018a1 1 0 0 1 .047.066l.107.174.115-.174.024-.038.019-.026.021-.015a.1.1 0 0 1 .027-.005.06.06 0 0 1 .044.016.05.05 0 0 1 .018.039q0 .033-.038.089l-.141.211.152.234a.3.3 0 0 1 .03.051.1.1 0 0 1 .009.038.1.1 0 0 1-.008.031.1.1 0 0 1-.024.023.1.1 0 0 1-.034.008.1.1 0 0 1-.035-.008.1.1 0 0 1-.023-.022L.427-.067.301-.265l-.134.204-.022.034-.016.019a.1.1 0 0 1-.022.015.1.1 0 0 1-.03.005.06.06 0 0 1-.044-.016.06.06 0 0 1-.017-.047q0-.036.036-.088' style='fill-rule:nonzero' transform='matrix(17.82892 0 0 16.50777 10.371 25.928)'/%3E%3C/svg%3E\")}.ag-icon-expanded:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M20 26 10 16 20 6l2 2-8 8 8 8z'/%3E%3C/svg%3E\")}.ag-icon-eye-slash:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye-slash%3C/title%3E%3Cpath fill='%23000' fill-rule='nonzero' d='M8.95 10.364 7 8.414 8.414 7l2.32 2.32A13.2 13.2 0 0 1 16.5 8c5.608 0 10.542 3.515 12.381 8.667L29 17l-.119.333a13 13 0 0 1-4.255 5.879l1.466 1.466-1.414 1.414-1.754-1.753A13.2 13.2 0 0 1 16.5 26c-5.608 0-10.542-3.515-12.381-8.667L4 17l.119-.333a13 13 0 0 1 4.83-6.303m1.445 1.445A11.02 11.02 0 0 0 6.148 17c1.646 4.177 5.728 7 10.352 7 1.76 0 3.441-.409 4.94-1.146l-1.878-1.878A5.06 5.06 0 0 1 16.5 22c-2.789 0-5.05-2.239-5.05-5 0-1.158.398-2.223 1.065-3.07zm1.855-.974 1.794 1.795A5.07 5.07 0 0 1 16.5 12c2.789 0 5.05 2.239 5.05 5 0 .9-.24 1.745-.661 2.474l2.305 2.306A11 11 0 0 0 26.852 17c-1.646-4.177-5.728-7-10.352-7-1.495 0-2.933.295-4.25.835'/%3E%3C/svg%3E\")}.ag-icon-eye:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M16.5 23c4.624 0 8.706-2.823 10.352-7-1.646-4.177-5.728-7-10.352-7s-8.706 2.823-10.352 7c1.646 4.177 5.728 7 10.352 7M4.119 15.667C5.958 10.515 10.892 7 16.5 7s10.542 3.515 12.381 8.667L29 16l-.119.333C27.042 21.485 22.108 25 16.5 25S5.958 21.485 4.119 16.333L4 16zM16.5 21c2.789 0 5.049-2.239 5.049-5s-2.26-5-5.049-5-5.049 2.239-5.049 5 2.26 5 5.049 5' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-filter:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m28 8-8 8v5l-6 6V16L6 8V6h22zM9 8l7 7v7l2-2v-5l7-7z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-first:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M24.273 22.12 18.153 16l6.12-6.12L22.393 8l-8 8 8 8zM7.727 8h2.667v16H7.727z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-group:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M14 7v1H9V7zm0-3v1H5.001V4zm-7 7H5v-1h2zm0-3H5V7h2zM3 5H1V4h2zm11 5v1H9v-1zm-7 4H5v-1h2zm7-1v1H9v-1z' style='fill-rule:nonzero' transform='matrix(2 0 0 2 0 -2)'/%3E%3C/svg%3E\")}.ag-icon-last:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m7.727 9.88 6.12 6.12-6.12 6.12L9.607 24l8-8-8-8zM21.607 8h2.667v16h-2.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M26.667 14.667H10.44l7.453-7.453L16 5.334 5.333 16.001 16 26.668l1.88-1.88-7.44-7.453h16.227z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-linked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M5.2 16a4.136 4.136 0 0 1 4.133-4.133h5.333V9.334H9.333a6.67 6.67 0 0 0-6.667 6.667 6.67 6.67 0 0 0 6.667 6.667h5.333v-2.533H9.333A4.136 4.136 0 0 1 5.2 16.002zm5.467 1.333h10.667v-2.667H10.667zm12-8h-5.333v2.533h5.333a4.136 4.136 0 0 1 4.133 4.133 4.136 4.136 0 0 1-4.133 4.133h-5.333v2.533h5.333a6.67 6.67 0 0 0 6.667-6.667 6.67 6.67 0 0 0-6.667-6.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-loading:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M17 29h-2v-8h2zm-3.586-9L7 26.414 5.586 25 12 18.586zm13 5L25 26.414 18.586 20 20 18.586zM29 17h-8v-2h8zm-18 0H3v-2h8zm2.414-5L12 13.414 5.586 7 7 5.586zm13-5L20 13.414 18.586 12 25 5.586zM17 11h-2V3h2z' style='fill-rule:nonzero' transform='translate(-3.692 -3.692)scale(1.23077)'/%3E%3C/svg%3E\")}.ag-icon-maximize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M14 30H2V18h2.828v7.05l8.254-8.252 2.12 2.12-8.252 8.254H14zm4-28h12v12h-2.828V6.95l-8.254 8.252-2.12-2.12 8.252-8.254H18z'/%3E%3C/svg%3E\")}.ag-icon-menu:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M20 13H0v-2h20zm0-6H0V5h20zm0-6H0v-2h20z' style='fill-rule:nonzero' transform='translate(6 9)'/%3E%3C/svg%3E\")}.ag-icon-menu-alt:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M16 19a3 3 0 1 0 0-6 3 3 0 0 0 0 6M16 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6M16 27a3 3 0 1 0 0-6 3 3 0 0 0 0 6'/%3E%3C/svg%3E\")}.ag-icon-minimize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M2 18h12v12h-2.828v-7.05l-8.254 8.252-2.12-2.12 8.252-8.254H2zm28-4H18V2h2.828v7.05L29.082.798l2.12 2.12-8.252 8.254H30z'/%3E%3C/svg%3E\")}.ag-icon-minus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6.572 6.572a13.32 13.32 0 0 0 0 18.856 13.32 13.32 0 0 0 18.856 0 13.32 13.32 0 0 0 0-18.856 13.32 13.32 0 0 0-18.856 0m17.527 8.099v2.658H7.901v-2.658z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-next:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M10.94 6 9.06 7.88 17.167 16 9.06 24.12 10.94 26l10-10z' style='fill-rule:nonzero' transform='translate(1)'/%3E%3C/svg%3E\")}.ag-icon-none:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enone%3C/title%3E%3Cg fill='%23000' fill-rule='nonzero'%3E%3Cpath d='M23.708 14.645 16 6.939l-7.708 7.706 1.416 1.416L16 9.767l6.292 6.294zM23.708 20.355 16 28.061l-7.708-7.706 1.416-1.416L16 25.233l6.292-6.294z'/%3E%3C/g%3E%3C/svg%3E\")}.ag-icon-not-allowed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M16 2.667C8.64 2.667 2.667 8.64 2.667 16S8.64 29.333 16 29.333 29.333 23.36 29.333 16 23.36 2.667 16 2.667M5.333 16c0-5.893 4.773-10.667 10.667-10.667 2.467 0 4.733.84 6.533 2.253L7.586 22.533A10.54 10.54 0 0 1 5.333 16M16 26.667c-2.467 0-4.733-.84-6.533-2.253L24.414 9.467A10.54 10.54 0 0 1 26.667 16c0 5.893-4.773 10.667-10.667 10.667' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-paste:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M25.334 4H19.76C19.2 2.453 17.733 1.333 16 1.333S12.8 2.453 12.24 4H6.667A2.675 2.675 0 0 0 4 6.667V28c0 1.467 1.2 2.667 2.667 2.667h18.667c1.467 0 2.667-1.2 2.667-2.667V6.667C28.001 5.2 26.801 4 25.334 4M16 4c.733 0 1.333.6 1.333 1.333s-.6 1.333-1.333 1.333-1.333-.6-1.333-1.333S15.267 4 16 4m9.333 24H6.666V6.667h2.667v4h13.333v-4h2.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m10.78 19.777-4.668-4.666s.032-1 .67-1.87c1.366-1.86 4.052-1.96 6.056-1.572l3.158-3.108c-.7-2.342 3.352-5.046 3.352-5.046l9.166 9.168q-.334.447-.67.894c-1.074 1.426-2.538 2.63-4.272 2.338l-3.32 3.218c.046.344.042.03.118 1.152.144 2.13-.64 4.324-2.632 5.34l-.746.364-4.798-4.798-7.292 7.294-1.416-1.416zm8.24-13.672c-.688.568-1.416 1.45-1.024 2.072l.49.722-4.986 4.988c-1.988-.506-4.346-.636-5.156.614l9.02 9.032q.14-.099.272-.21c1.226-1.08.764-3.04.498-4.9l4.79-4.79s1.47.938 2.936-.776l-6.79-6.79q-.026.019-.05.038' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-pivot:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M25.128 2.002c2.56.096 4.772 2.292 4.87 4.87a712 712 0 0 1 0 18.256c-.096 2.56-2.292 4.772-4.87 4.87a712 712 0 0 1-18.256 0c-2.558-.096-4.772-2.29-4.87-4.87a712 712 0 0 1 0-18.256c.096-2.56 2.292-4.772 4.87-4.87a712 712 0 0 1 18.256 0m2.966 7.954H9.892v18.136c5.086.13 10.18.098 15.264-.096 1.48-.094 2.746-1.35 2.84-2.84.192-5.064.226-10.134.098-15.2M3.968 24.1q.015.528.036 1.056c.094 1.484 1.354 2.746 2.84 2.84l1.012.036V24.1zM22 15.414l-.292.294-1.416-1.416L23 11.586l2.708 2.706-1.416 1.416-.292-.294v3.592c-.032 2.604-2.246 4.892-4.872 4.992L15.414 24l.294.292-1.416 1.416L11.586 23l2.706-2.708 1.416 1.416-.322.32c3.372.03 6.578-.164 6.614-3.034zM3.88 18.038c.002 1.346.012 2.694.038 4.04h3.938v-4.04zm.05-6.062a681 681 0 0 0-.044 4.042h3.97v-4.042zm5.962-7.99Q8.449 3.999 7.006 4c-1.57.02-2.946 1.348-3.004 2.922q-.02 1.517-.042 3.034h3.896v-2.02h2.036zm14.244-.016v3.966h3.898q-.017-.546-.038-1.092c-.094-1.48-1.35-2.746-2.84-2.84q-.51-.019-1.02-.034m-8.14-.054q-2.035.022-4.07.048v3.972h4.07zm6.106.008a213 213 0 0 0-4.07-.022v4.034h4.07z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-plus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6.572 6.572a13.32 13.32 0 0 0 0 18.856 13.32 13.32 0 0 0 18.856 0 13.32 13.32 0 0 0 0-18.856 13.32 13.32 0 0 0-18.856 0m17.527 8.099v2.658h-6.77v6.77h-2.658v-6.77h-6.77v-2.658h6.77v-6.77h2.658v6.77z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-previous:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M21.94 7.88 20.06 6l-10 10 10 10 1.88-1.88L13.833 16z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m16 5.333-1.88 1.88 7.44 7.453H5.333v2.667H21.56l-7.44 7.453 1.88 1.88 10.667-10.667L16 5.332z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-save:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M15.708 2.355 8 10.061.292 2.355 1.708.939 8 7.233 14.292.939z' style='fill-rule:nonzero' transform='translate(8 14)'/%3E%3Cpath d='M5 26h22v2H5zM15 4h2v18h-2z'/%3E%3C/svg%3E\")}.ag-icon-small-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.334 10.667 16 21.334l8.667-10.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-small-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M21.333 7.334 10.666 16l10.667 8.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-small-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M10.667 24.666 21.334 16 10.667 7.333z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-small-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.334 21.333 16 10.666l8.667 10.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-tick:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M11.586 22.96 27.718 6.828 29.84 8.95 11.586 27.202 2.4 18.016l2.12-2.122z'/%3E%3C/svg%3E\")}.ag-icon-tree-closed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m11.94 6-1.88 1.88L18.167 16l-8.107 8.12L11.94 26l10-10z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-tree-indeterminate:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6 13.5h20v3H6z'/%3E%3C/svg%3E\")}.ag-icon-tree-open:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M24.12 9.06 16 17.167 7.88 9.06 6 10.94l10 10 10-10z' style='fill-rule:nonzero' transform='translate(0 1)'/%3E%3C/svg%3E\")}.ag-icon-unlinked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M22.667 9.333h-5.333v2.533h5.333a4.136 4.136 0 0 1 4.133 4.133c0 1.907-1.307 3.507-3.08 3.973l1.947 1.947c2.173-1.107 3.667-3.32 3.667-5.92a6.67 6.67 0 0 0-6.667-6.667zm-1.334 5.334h-2.92l2.667 2.667h.253zM2.667 5.693 6.814 9.84A6.65 6.65 0 0 0 2.667 16a6.67 6.67 0 0 0 6.667 6.667h5.333v-2.533H9.334a4.136 4.136 0 0 1-4.133-4.133c0-2.12 1.613-3.867 3.68-4.093l2.76 2.76h-.973v2.667h3.64l3.027 3.027v2.307h2.307l5.347 5.333 1.68-1.68L4.362 4.002 2.669 5.695z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m5.333 16 1.88 1.88 7.453-7.44v16.227h2.667V10.44l7.44 7.453L26.666 16 15.999 5.333 5.332 16z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-grip:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M8 24H6v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zM8 18H6v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zM8 12H6V8h2zm6 0h-2V8h2zm6 0h-2V8h2zm6 0h-2V8h2z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-settings:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M30 8h-4.1c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2v2h14.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30zm-9 4c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3M2 24h4.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30v-2H15.9c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2zm9-4c1.7 0 3 1.3 3 3s-1.3 3-3 3-3-1.3-3-3 1.3-3 3-3'/%3E%3C/svg%3E\")}`\n);\n\n// packages/ag-grid-community/src/theming/parts/icon-set/alpine/icon-set-alpine.ts\nvar iconSetAlpine = /* @__PURE__ */ createPart({\n  feature: \"iconSet\",\n  css: iconSetAlpineCSS\n});\n\n// packages/ag-grid-community/src/theming/parts/icon-set/material/icon-set-material.css-GENERATED.ts\nvar iconSetMaterialCSS = (\n  /*css*/\n  `.ag-icon-aggregation:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eaggregation%3C/title%3E%3Cpath d='M24 5.333H8V8l8.667 8L8 24v2.667h16v-4h-9.333L21.334 16l-6.667-6.667H24z'/%3E%3C/svg%3E\")}.ag-icon-arrows:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Earrows%3C/title%3E%3Cpath d='M13.333 11.556h5.333V8h3.556L16 1.778 9.778 8h3.556zm-1.777 1.777H8V9.777l-6.222 6.222L8 22.221v-3.556h3.556zM30.222 16 24 9.778v3.556h-3.556v5.333H24v3.556l6.222-6.222zm-11.555 4.444h-5.333V24H9.778L16 30.222 22.222 24h-3.556z'/%3E%3C/svg%3E\")}.ag-icon-asc:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Easc%3C/title%3E%3Cpath d='m5.333 16 1.88 1.88 7.453-7.44v16.227h2.667V10.44l7.44 7.453L26.666 16 15.999 5.333z'/%3E%3C/svg%3E\")}.ag-icon-cancel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecancel%3C/title%3E%3Cpath d='M16 2.667C8.627 2.667 2.667 8.627 2.667 16S8.627 29.333 16 29.333 29.333 23.373 29.333 16 23.373 2.667 16 2.667m6.667 18.12-1.88 1.88L16 17.88l-4.787 4.787-1.88-1.88L14.12 16l-4.787-4.787 1.88-1.88L16 14.12l4.787-4.787 1.88 1.88L17.88 16z'/%3E%3C/svg%3E\")}.ag-icon-chart:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Echart%3C/title%3E%3Cpath d='M6.667 12.267h4v13.067h-4zm7.466-5.6h3.733v18.667h-3.733zM21.6 17.333h3.733v8H21.6z'/%3E%3C/svg%3E\")}.ag-icon-color-picker:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecolor-picker%3C/title%3E%3Cpath d='M23.907 17.587 10.574 4.254l-1.88 1.88 3.173 3.173-8.28 8.28 10.16 10.16zm-16.547 0 6.387-6.387 6.387 6.387H7.361zm18.387 2s-2.667 2.893-2.667 4.667c0 1.467 1.2 2.667 2.667 2.667s2.667-1.2 2.667-2.667c0-1.773-2.667-4.667-2.667-4.667'/%3E%3C/svg%3E\")}.ag-icon-columns:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecolumns%3C/title%3E%3Cpath d='M5.333 10.667h5.333V5.334H5.333zm8 16h5.333v-5.333h-5.333zm-8 0h5.333v-5.333H5.333zm0-8h5.333v-5.333H5.333zm8 0h5.333v-5.333h-5.333zm8-13.334v5.333h5.333V5.333zm-8 5.334h5.333V5.334h-5.333zm8 8h5.333v-5.333h-5.333zm0 8h5.333v-5.333h-5.333z'/%3E%3C/svg%3E\")}.ag-icon-contracted:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Econtracted%3C/title%3E%3Cpath d='m12.94 8-1.88 1.88L17.167 16l-6.107 6.12L12.94 24l8-8z'/%3E%3C/svg%3E\")}.ag-icon-copy:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecopy%3C/title%3E%3Cpath d='M22 1.333H6A2.675 2.675 0 0 0 3.333 4v18.667H6V4h16zm4 5.334H11.333a2.675 2.675 0 0 0-2.667 2.667v18.667c0 1.467 1.2 2.667 2.667 2.667H26c1.467 0 2.667-1.2 2.667-2.667V9.334c0-1.467-1.2-2.667-2.667-2.667M26 28H11.333V9.333H26z'/%3E%3C/svg%3E\")}.ag-icon-cross:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecross%3C/title%3E%3Cpath d='m25.333 8.547-1.88-1.88L16 14.12 8.547 6.667l-1.88 1.88L14.12 16l-7.453 7.453 1.88 1.88L16 17.88l7.453 7.453 1.88-1.88L17.88 16z'/%3E%3C/svg%3E\")}.ag-icon-csv:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='M.688-.226a.2.2 0 0 1-.017.074.28.28 0 0 1-.145.14.412.412 0 0 1-.234.013.28.28 0 0 1-.202-.168.468.468 0 0 1-.04-.19q0-.086.025-.155a.319.319 0 0 1 .182-.191.4.4 0 0 1 .134-.025q.087 0 .155.035a.3.3 0 0 1 .104.085.17.17 0 0 1 .036.097.06.06 0 0 1-.018.044.06.06 0 0 1-.042.019.06.06 0 0 1-.042-.013.2.2 0 0 1-.031-.046.2.2 0 0 0-.066-.079.16.16 0 0 0-.095-.027.17.17 0 0 0-.142.068.3.3 0 0 0-.053.193.4.4 0 0 0 .023.139.2.2 0 0 0 .067.083.2.2 0 0 0 .1.027q.063 0 .106-.031a.2.2 0 0 0 .065-.091.2.2 0 0 1 .023-.046q.014-.018.044-.018a.06.06 0 0 1 .044.018.06.06 0 0 1 .019.045' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 7.122 25.977)'/%3E%3Cpath d='M.622-.215a.2.2 0 0 1-.033.117.23.23 0 0 1-.098.081.4.4 0 0 1-.153.029.34.34 0 0 1-.175-.04.23.23 0 0 1-.079-.077.17.17 0 0 1-.031-.093q0-.027.019-.045a.06.06 0 0 1 .046-.019.06.06 0 0 1 .039.014.1.1 0 0 1 .027.044.3.3 0 0 0 .03.057q.015.023.044.038.03.015.076.015.065 0 .105-.03a.09.09 0 0 0 .04-.075.08.08 0 0 0-.022-.058.14.14 0 0 0-.056-.034 1 1 0 0 0-.092-.025.7.7 0 0 1-.129-.042.2.2 0 0 1-.083-.066.17.17 0 0 1-.03-.104q0-.058.032-.105a.2.2 0 0 1 .093-.07.4.4 0 0 1 .144-.025q.066 0 .114.016a.3.3 0 0 1 .08.044.2.2 0 0 1 .046.057q.015.03.015.058a.07.07 0 0 1-.018.046.06.06 0 0 1-.046.021q-.025 0-.038-.012a.2.2 0 0 1-.028-.041.2.2 0 0 0-.047-.063Q.387-.625.326-.625a.15.15 0 0 0-.09.025q-.035.024-.035.059 0 .021.012.037a.1.1 0 0 0 .032.027.4.4 0 0 0 .111.036q.06.015.11.031.048.018.083.042a.2.2 0 0 1 .054.062.2.2 0 0 1 .019.091' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 13.339 25.977)'/%3E%3Cpath d='m.184-.633.162.48.163-.483q.013-.038.019-.053a.062.062 0 0 1 .061-.039q.018 0 .034.009a.1.1 0 0 1 .025.025q.009.015.009.031L.654-.64l-.007.025-.009.024-.173.468-.019.051a.2.2 0 0 1-.021.042.1.1 0 0 1-.033.03.1.1 0 0 1-.049.012.1.1 0 0 1-.05-.011A.1.1 0 0 1 .26-.03a.2.2 0 0 1-.021-.042L.22-.123.05-.587.041-.612.033-.638.03-.662q0-.025.02-.046a.07.07 0 0 1 .05-.02q.037 0 .053.023.015.023.031.072' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 18.94 25.977)'/%3E%3C/svg%3E\")}.ag-icon-cut:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m19 3-6 6 2 2 7-7V3m-10 9.5a.503.503 0 0 1-.5-.5c0-.274.226-.5.5-.5s.5.226.5.5-.226.5-.5.5M6 20c-1.097 0-2-.903-2-2a2 2 0 0 1 2-2c1.097 0 2 .903 2 2a2 2 0 0 1-2 2M6 8c-1.097 0-2-.903-2-2a2 2 0 0 1 2-2c1.097 0 2 .903 2 2a2 2 0 0 1-2 2m3.64-.36c.23-.5.36-1.05.36-1.64 0-2.194-1.806-4-4-4S2 3.806 2 6s1.806 4 4 4c.59 0 1.14-.13 1.64-.36L10 12l-2.36 2.36C7.14 14.13 6.59 14 6 14c-2.194 0-4 1.806-4 4s1.806 4 4 4 4-1.806 4-4c0-.59-.13-1.14-.36-1.64L12 14l7 7h3v-1z' style='fill-rule:nonzero' transform='translate(4 4)'/%3E%3C/svg%3E\")}.ag-icon-desc:before,.ag-icon-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Edesc%3C/title%3E%3Cpath d='m26.667 16-1.88-1.88-7.453 7.44V5.333h-2.667V21.56l-7.44-7.453L5.334 16l10.667 10.667L26.668 16z'/%3E%3C/svg%3E\")}.ag-icon-excel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='m.052-.139.16-.234-.135-.208a.4.4 0 0 1-.028-.052.1.1 0 0 1-.01-.042.05.05 0 0 1 .018-.037.07.07 0 0 1 .045-.016q.03 0 .047.018a1 1 0 0 1 .047.066l.107.174.115-.174.024-.038.019-.026.021-.015a.1.1 0 0 1 .027-.005.06.06 0 0 1 .044.016.05.05 0 0 1 .018.039q0 .033-.038.089l-.141.211.152.234a.3.3 0 0 1 .03.051.1.1 0 0 1 .009.038.1.1 0 0 1-.008.031.1.1 0 0 1-.024.023.1.1 0 0 1-.034.008.1.1 0 0 1-.035-.008.1.1 0 0 1-.023-.022L.427-.067.301-.265l-.134.204-.022.034-.016.019a.1.1 0 0 1-.022.015.1.1 0 0 1-.03.005.06.06 0 0 1-.044-.016.06.06 0 0 1-.017-.047q0-.036.036-.088' style='fill-rule:nonzero' transform='matrix(17.82892 0 0 16.50777 10.371 25.928)'/%3E%3C/svg%3E\")}.ag-icon-expanded:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eexpanded%3C/title%3E%3Cpath d='M20.94 9.88 19.06 8l-8 8 8 8 1.88-1.88L14.833 16z'/%3E%3C/svg%3E\")}.ag-icon-eye-slash:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye-slash%3C/title%3E%3Cpath d='M21.106 15.088A5.19 5.19 0 0 0 16 10.814a5.17 5.17 0 0 0-3.668 1.522L9.866 9.868a12.2 12.2 0 0 1 6.133-1.646c5.186 0 9.614 3.225 11.408 7.778a12.34 12.34 0 0 1-5.276 6.133l-2.468-2.466a5.17 5.17 0 0 0 1.449-2.802h-2.123c-.148.508-.42.964-.782 1.33l-1.33-1.33h-2.514l2.196 2.196q-.272.049-.56.05a3.11 3.11 0 0 1-2.99-2.245h-2.123a5.19 5.19 0 0 0 7.3 3.836l2.247 2.247a12.2 12.2 0 0 1-4.434.828c-5.186 0-9.614-3.225-11.408-7.778a12.3 12.3 0 0 1 3.781-5.111l2.924 2.924a5.1 5.1 0 0 0-.404 1.275h4.206l-1.296-1.296a3.1 3.1 0 0 1 2.196-.903c1.404 0 2.587.924 2.976 2.199h2.13z'/%3E%3C/svg%3E\")}.ag-icon-eye:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye%3C/title%3E%3Cpath d='M16 8.222c-5.186 0-9.614 3.225-11.408 7.778 1.794 4.553 6.222 7.778 11.408 7.778S25.614 20.553 27.408 16C25.614 11.447 21.186 8.222 16 8.222m0 12.964c-2.862 0-5.186-2.324-5.186-5.186s2.324-5.186 5.186-5.186 5.186 2.324 5.186 5.186-2.324 5.186-5.186 5.186m0-8.297c-1.721 0-3.111 1.39-3.111 3.111s1.39 3.111 3.111 3.111 3.111-1.39 3.111-3.111-1.39-3.111-3.111-3.111'/%3E%3C/svg%3E\")}.ag-icon-filter:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Efilter%3C/title%3E%3Cpath d='M13.333 24h5.333v-2.667h-5.333zM4 8v2.667h24V8zm4 9.333h16v-2.667H8z'/%3E%3C/svg%3E\")}.ag-icon-first:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Efirst%3C/title%3E%3Cpath d='M24.273 22.12 18.153 16l6.12-6.12L22.393 8l-8 8 8 8zM7.727 8h2.667v16H7.727z'/%3E%3C/svg%3E\")}.ag-icon-group:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Egroup%3C/title%3E%3Cpath d='M18.667 21.333h8.889A3.555 3.555 0 0 1 24 24.889h-5.333zm8.888-7.111v3.556h-8.889v-3.556zM24 7.111a3.555 3.555 0 0 1 3.556 3.556h-16V7.111zm-8.889 17.778h-3.556v-3.556h3.556zm0-7.111h-3.556v-3.556h3.556zM8 10.667H4.444A3.555 3.555 0 0 1 8 7.111z'/%3E%3C/svg%3E\")}.ag-icon-last:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Elast%3C/title%3E%3Cpath d='m7.727 9.88 6.12 6.12-6.12 6.12L9.607 24l8-8-8-8zM21.607 8h2.667v16h-2.667z'/%3E%3C/svg%3E\")}.ag-icon-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eleft%3C/title%3E%3Cpath d='M26.667 14.667H10.44l7.453-7.453L16 5.334 5.333 16.001 16 26.668l1.88-1.88-7.44-7.453h16.227v-2.667z'/%3E%3C/svg%3E\")}.ag-icon-linked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Elinked%3C/title%3E%3Cpath d='M5.2 16a4.136 4.136 0 0 1 4.133-4.133h5.333V9.334H9.333c-3.68 0-6.667 2.987-6.667 6.667s2.987 6.667 6.667 6.667h5.333v-2.533H9.333A4.136 4.136 0 0 1 5.2 16.002zm5.467 1.333h10.667v-2.667H10.667zm12-8h-5.333v2.533h5.333c2.28 0 4.133 1.853 4.133 4.133s-1.853 4.133-4.133 4.133h-5.333v2.533h5.333c3.68 0 6.667-2.987 6.667-6.667s-2.987-6.667-6.667-6.667z'/%3E%3C/svg%3E\")}.ag-icon-loading:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eloading%3C/title%3E%3Cpath d='m17.778 11.708 3.25-3.251 2.516 2.516-3.251 3.25h4.597v3.556h-4.597l3.251 3.25-2.516 2.516-3.25-3.251v4.597h-3.556v-4.597l-3.25 3.251-2.516-2.516 3.251-3.25H7.11v-3.556h4.597l-3.251-3.25 2.516-2.516 3.25 3.251V7.111h3.556zm-3.251 7.847h2.944l2.084-2.084v-2.944l-2.084-2.084h-2.944l-2.084 2.084v2.944z'/%3E%3C/svg%3E\")}.ag-icon-maximize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Emaximize%3C/title%3E%3Cpath d='M4 4h24v2.667H4z'/%3E%3C/svg%3E\")}.ag-icon-menu:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Emenu%3C/title%3E%3Cpath d='M4 24h24v-2.667H4zm0-6.667h24v-2.667H4zM4 8v2.667h24V8z'/%3E%3C/svg%3E\")}.ag-icon-menu-alt:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M16 26.667a2.57 2.57 0 0 1-1.883-.784A2.57 2.57 0 0 1 13.333 24q0-1.1.784-1.883A2.57 2.57 0 0 1 16 21.333q1.1 0 1.883.784.784.783.784 1.883t-.784 1.883a2.57 2.57 0 0 1-1.883.784m0-8a2.57 2.57 0 0 1-1.883-.784A2.57 2.57 0 0 1 13.333 16q0-1.1.784-1.883A2.57 2.57 0 0 1 16 13.333q1.1 0 1.883.784.784.783.784 1.883t-.784 1.883a2.57 2.57 0 0 1-1.883.784m0-8a2.57 2.57 0 0 1-1.883-.784A2.57 2.57 0 0 1 13.333 8q0-1.1.784-1.883A2.57 2.57 0 0 1 16 5.333q1.1 0 1.883.784.784.783.784 1.883t-.784 1.883a2.57 2.57 0 0 1-1.883.784'/%3E%3C/svg%3E\")}.ag-icon-minimize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eminimize%3C/title%3E%3Cpath d='M8 25.333h16V28H8z'/%3E%3C/svg%3E\")}.ag-icon-minus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6.572 6.572a13.32 13.32 0 0 0 0 18.856 13.32 13.32 0 0 0 18.856 0 13.32 13.32 0 0 0 0-18.856 13.32 13.32 0 0 0-18.856 0m17.527 8.099v2.658H7.901v-2.658z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-next:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enext%3C/title%3E%3Cpath d='m12.94 8-1.88 1.88L17.167 16l-6.107 6.12L12.94 24l8-8z'/%3E%3C/svg%3E\")}.ag-icon-none:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enone%3C/title%3E%3Cpath d='M4 24h16v-2.667H4zM4 8v2.667h24V8zm0 9.333h24v-2.667H4z'/%3E%3C/svg%3E\")}.ag-icon-not-allowed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enot-allowed%3C/title%3E%3Cpath d='M16 2.667C8.64 2.667 2.667 8.64 2.667 16S8.64 29.333 16 29.333 29.333 23.36 29.333 16 23.36 2.667 16 2.667M5.333 16c0-5.893 4.773-10.667 10.667-10.667 2.467 0 4.733.84 6.533 2.253L7.586 22.533A10.54 10.54 0 0 1 5.333 16M16 26.667c-2.467 0-4.733-.84-6.533-2.253L24.414 9.467A10.54 10.54 0 0 1 26.667 16c0 5.893-4.773 10.667-10.667 10.667'/%3E%3C/svg%3E\")}.ag-icon-paste:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epaste%3C/title%3E%3Cpath d='M25.333 4H19.76C19.2 2.453 17.733 1.333 16 1.333S12.8 2.453 12.24 4H6.667A2.675 2.675 0 0 0 4 6.667V28c0 1.467 1.2 2.667 2.667 2.667h18.667c1.467 0 2.667-1.2 2.667-2.667V6.667C28.001 5.2 26.801 4 25.334 4zM16 4c.733 0 1.333.6 1.333 1.333s-.6 1.333-1.333 1.333-1.333-.6-1.333-1.333S15.267 4 16 4m9.333 24H6.666V6.667h2.667v4h13.333v-4h2.667z'/%3E%3C/svg%3E\")}.ag-icon-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epin%3C/title%3E%3Cpath d='m11.106 22.093-4.444 4.444-1.259-1.259 4.444-4.444zm5.872-16.63 9.618 9.62-.962.962-.962-.962-7.694 3.847 1.924 1.924-2.74 2.74-7.696-7.696 2.741-2.74 1.924 1.925 3.847-7.696-.962-.962z'/%3E%3C/svg%3E\")}.ag-icon-pivot:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epivot%3C/title%3E%3Cpath d='M26.667 30.223H5.334a3.556 3.556 0 0 1-3.556-3.556V5.334a3.556 3.556 0 0 1 3.556-3.556h21.333a3.556 3.556 0 0 1 3.556 3.556v21.333a3.556 3.556 0 0 1-3.556 3.556m-16-8.89H5.334v5.333h5.333zm16-7.11H12.444v12.444h14.223zm-9.15 6.85-2.039 2.037 2.039 2.039-1.257 1.257-3.295-3.296 3.295-3.295q.63.628 1.257 1.257zm-6.85-6.85H5.334v5.333h5.333zm15.74 3.816-1.257 1.256-2.039-2.037-2.037 2.037-1.257-1.256 3.295-3.296zM10.667 5.333H5.334v5.333h5.333zm8.889 0h-7.112v5.333h7.112zm7.111 0h-5.333v5.333h5.333z'/%3E%3C/svg%3E\")}.ag-icon-plus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6.572 6.572a13.32 13.32 0 0 0 0 18.856 13.32 13.32 0 0 0 18.856 0 13.32 13.32 0 0 0 0-18.856 13.32 13.32 0 0 0-18.856 0m17.527 8.099v2.658h-6.77v6.77h-2.658v-6.77h-6.77v-2.658h6.77v-6.77h2.658v6.77z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-previous:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eprevious%3C/title%3E%3Cpath d='M20.94 9.88 19.06 8l-8 8 8 8 1.88-1.88L14.833 16z'/%3E%3C/svg%3E\")}.ag-icon-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eright%3C/title%3E%3Cpath d='m16 5.333-1.88 1.88 7.44 7.453H5.333v2.667H21.56l-7.44 7.453 1.88 1.88 10.667-10.667L16 5.332z'/%3E%3C/svg%3E\")}.ag-icon-save:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esave%3C/title%3E%3Cpath d='M25.333 16v9.333H6.666V16H3.999v9.333C3.999 26.8 5.199 28 6.666 28h18.667C26.8 28 28 26.8 28 25.333V16zm-8 .893 3.453-3.44 1.88 1.88L15.999 22l-6.667-6.667 1.88-1.88 3.453 3.44V4h2.667v12.893z'/%3E%3C/svg%3E\")}.ag-icon-small-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-down%3C/title%3E%3Cpath d='M9.333 12.667 16 19.334l6.667-6.667H9.334z'/%3E%3C/svg%3E\")}.ag-icon-small-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-left%3C/title%3E%3Cpath d='M19.333 9.333 12.666 16l6.667 6.667V9.334z'/%3E%3C/svg%3E\")}.ag-icon-small-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-right%3C/title%3E%3Cpath d='M12.667 22.667 19.334 16l-6.667-6.667v13.333z'/%3E%3C/svg%3E\")}.ag-icon-small-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-up%3C/title%3E%3Cpath d='M9.333 19.333 16 12.666l6.667 6.667H9.334z'/%3E%3C/svg%3E\")}.ag-icon-tick:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etick%3C/title%3E%3Cpath d='m11.727 21.167-5.56-5.56-1.893 1.88 7.453 7.453 16-16-1.88-1.88z'/%3E%3C/svg%3E\")}.ag-icon-tree-closed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-closed%3C/title%3E%3Cpath d='m12.94 8-1.88 1.88L17.167 16l-6.107 6.12L12.94 24l8-8z'/%3E%3C/svg%3E\")}.ag-icon-tree-indeterminate:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-indeterminate%3C/title%3E%3Cpath d='M6.667 14.667h18.667v2.667H6.667z'/%3E%3C/svg%3E\")}.ag-icon-tree-open:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-open%3C/title%3E%3Cpath d='M22.12 11.06 16 17.167 9.88 11.06 8 12.94l8 8 8-8z'/%3E%3C/svg%3E\")}.ag-icon-unlinked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eunlinked%3C/title%3E%3Cpath d='M22.667 9.333h-5.333v2.533h5.333a4.136 4.136 0 0 1 4.133 4.133c0 1.907-1.307 3.507-3.08 3.973l1.947 1.947c2.173-1.107 3.667-3.32 3.667-5.92a6.67 6.67 0 0 0-6.667-6.667zm-1.334 5.334h-2.92l2.667 2.667h.253zM2.667 5.693 6.814 9.84A6.65 6.65 0 0 0 2.667 16a6.67 6.67 0 0 0 6.667 6.667h5.333v-2.533H9.334a4.136 4.136 0 0 1-4.133-4.133c0-2.12 1.613-3.867 3.68-4.093l2.76 2.76h-.973v2.667h3.64l3.027 3.027v2.307h2.307l5.347 5.333 1.68-1.68L4.362 4.002 2.669 5.695z'/%3E%3C/svg%3E\")}.ag-icon-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Easc%3C/title%3E%3Cpath d='m5.333 16 1.88 1.88 7.453-7.44v16.227h2.667V10.44l7.44 7.453L26.666 16 15.999 5.333z'/%3E%3C/svg%3E\")}.ag-icon-grip:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Egrip%3C/title%3E%3Cpath d='M26.667 12H5.334v2.667h21.333zM5.333 20h21.333v-2.667H5.333z'/%3E%3C/svg%3E\")}.ag-icon-settings:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M30 8h-4.1c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2v2h14.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30zm-9 4c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3M2 24h4.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30v-2H15.9c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2zm9-4c1.7 0 3 1.3 3 3s-1.3 3-3 3-3-1.3-3-3 1.3-3 3-3'/%3E%3C/svg%3E\")}`\n);\n\n// packages/ag-grid-community/src/theming/parts/icon-set/material/icon-set-material.ts\nvar iconSetMaterial = /* @__PURE__ */ createPart({\n  feature: \"iconSet\",\n  css: iconSetMaterialCSS\n});\n\n// packages/ag-grid-community/src/theming/parts/icon-set/overrides/icon-overrides.ts\nvar iconOverrides = (args) => {\n  const cssParts = [];\n  if (args.type === \"image\") {\n    const { icons, mask } = args;\n    for (const key of Object.keys(icons)) {\n      const imageCssValue = imageValueToCss(icons[key]);\n      if (mask) {\n        cssParts.push(`.ag-icon-${key}::before { mask-image: ${imageCssValue}; }`);\n      } else {\n        cssParts.push(`.ag-icon-${key}::before { background-image: ${imageCssValue}; ${unsetMaskIcon} }`);\n      }\n    }\n  }\n  if (args.type === \"font\") {\n    const { family, weight, color, icons } = args;\n    let properties = unsetMaskIcon;\n    if (family) {\n      properties += ` font-family: ${fontFamilyValueToCss(family)};`;\n    }\n    if (weight) {\n      properties += ` font-weight: ${fontWeightValueToCss(weight)};`;\n    }\n    if (color) {\n      properties += ` color: ${colorValueToCss(color)};`;\n    }\n    for (const key of Object.keys(icons)) {\n      cssParts.push(`.ag-icon-${key}::before { content: ${JSON.stringify(icons[key])}; ${properties} }`);\n    }\n  }\n  return createPart({\n    css: cssParts.join(\";\\n\"),\n    cssImports: args.cssImports\n  });\n};\nvar unsetMaskIcon = `background-color: unset; mask-image: unset; -webkit-mask-image: unset;`;\n\n// packages/ag-grid-community/src/theming/parts/icon-set/quartz/quartz-icon-data.ts\nvar iconNameToSvgFragment = {\n  aggregation: '<path d=\"M18 7V4H6l6 8-6 8h12v-3\"/>',\n  arrows: '<polyline points=\"5 9 2 12 5 15\"/><polyline points=\"9 5 12 2 15 5\"/><polyline points=\"15 19 12 22 9 19\"/><polyline points=\"19 9 22 12 19 15\"/><line x1=\"2\" x2=\"22\" y1=\"12\" y2=\"12\"/><line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"22\"/>',\n  asc: '<path d=\"m5 12 7-7 7 7\"/><path d=\"M12 19V5\"/>',\n  cancel: '<path d=\"m18 6-12 12\"/><path d=\"m6 6 12 12\"/>',\n  chart: '<line x1=\"18\" x2=\"18\" y1=\"20\" y2=\"10\"/><line x1=\"12\" x2=\"12\" y1=\"20\" y2=\"4\"/><line x1=\"6\" x2=\"6\" y1=\"20\" y2=\"14\"/>',\n  \"color-picker\": '<path d=\"m19 11-8-8-8.6 8.6a2 2 0 0 0 0 2.8l5.2 5.2c.8.8 2 .8 2.8 0L19 11Z\"/><path d=\"m5 2 5 5\"/><path d=\"M2 13h15\"/><path d=\"M22 20a2 2 0 1 1-4 0c0-1.6 1.7-2.4 2-4 .3 1.6 2 2.4 2 4Z\"/>',\n  columns: '<path d=\"M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18\"/>',\n  contracted: '<path d=\"m9 18 6-6-6-6\"/>',\n  copy: '<rect width=\"14\" height=\"14\" x=\"8\" y=\"8\" rx=\"2\" ry=\"2\"/><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"/>',\n  cross: '<path d=\"M18 6 6 18\"/><path d=\"m6 6 12 12\"/>',\n  csv: '<path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"/><polyline points=\"14 2 14 8 20 8\"/><path d=\"M8 13h2\"/><path d=\"M8 17h2\"/><path d=\"M14 13h2\"/><path d=\"M14 17h2\"/>',\n  cut: '<circle cx=\"6\" cy=\"6\" r=\"3\"/><path d=\"M8.12 8.12 12 12\"/><path d=\"M20 4 8.12 15.88\"/><circle cx=\"6\" cy=\"18\" r=\"3\"/><path d=\"M14.8 14.8 20 20\"/>',\n  desc: '<path d=\"M12 5v14\"/><path d=\"m19 12-7 7-7-7\"/>',\n  down: '<path d=\"M12 5v14\"/><path d=\"m19 12-7 7-7-7\"/>',\n  excel: '<path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"/><polyline points=\"14 2 14 8 20 8\"/><path d=\"M8 13h2\"/><path d=\"M8 17h2\"/><path d=\"M14 13h2\"/><path d=\"M14 17h2\"/>',\n  expanded: '<path d=\"m15 18-6-6 6-6\"/>',\n  \"eye-slash\": '<path d=\"M9.88 9.88a3 3 0 1 0 4.24 4.24\"/><path d=\"M10.73 5.08A10.43 10.43 0 0 1 12 5c7 0 10 7 10 7a13.16 13.16 0 0 1-1.67 2.68\"/><path d=\"M6.61 6.61A13.526 13.526 0 0 0 2 12s3 7 10 7a9.74 9.74 0 0 0 5.39-1.61\"/><line x1=\"2\" x2=\"22\" y1=\"2\" y2=\"22\"/>',\n  eye: '<path d=\"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/>',\n  filter: '<path d=\"M3 6h18\"/><path d=\"M7 12h10\"/><path d=\"M10 18h4\"/>',\n  first: '<path d=\"m17 18-6-6 6-6\"/><path d=\"M7 6v12\"/>',\n  group: '<path d=\"M16 12H3\"/><path d=\"M16 18H3\"/><path d=\"M10 6H3\"/><path d=\"M21 18V8a2 2 0 0 0-2-2h-5\"/><path d=\"m16 8-2-2 2-2\"/>',\n  last: '<path d=\"m7 18 6-6-6-6\"/><path d=\"M17 6v12\"/>',\n  left: '<path d=\"m12 19-7-7 7-7\"/><path d=\"M19 12H5\"/>',\n  linked: '<path d=\"M9 17H7A5 5 0 0 1 7 7h2\"/><path d=\"M15 7h2a5 5 0 1 1 0 10h-2\"/><line x1=\"8\" x2=\"16\" y1=\"12\" y2=\"12\"/>',\n  loading: '<line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"6\"/><line x1=\"12\" x2=\"12\" y1=\"18\" y2=\"22\"/><line x1=\"4.93\" x2=\"7.76\" y1=\"4.93\" y2=\"7.76\"/><line x1=\"16.24\" x2=\"19.07\" y1=\"16.24\" y2=\"19.07\"/><line x1=\"2\" x2=\"6\" y1=\"12\" y2=\"12\"/><line x1=\"18\" x2=\"22\" y1=\"12\" y2=\"12\"/><line x1=\"4.93\" x2=\"7.76\" y1=\"19.07\" y2=\"16.24\"/><line x1=\"16.24\" x2=\"19.07\" y1=\"7.76\" y2=\"4.93\"/>',\n  maximize: '<polyline points=\"15 3 21 3 21 9\"/><polyline points=\"9 21 3 21 3 15\"/><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"/><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"/>',\n  menu: '<line x1=\"4\" x2=\"20\" y1=\"12\" y2=\"12\"/><line x1=\"4\" x2=\"20\" y1=\"6\" y2=\"6\"/><line x1=\"4\" x2=\"20\" y1=\"18\" y2=\"18\"/>',\n  \"menu-alt\": '<circle cx=\"12\" cy=\"5\" r=\"0.75\" fill=\"#D9D9D9\"/><circle cx=\"12\" cy=\"12\" r=\"0.75\" fill=\"#D9D9D9\"/><circle cx=\"12\" cy=\"19\" r=\"0.75\" fill=\"#D9D9D9\"/>',\n  minimize: '<polyline points=\"4 14 10 14 10 20\"/><polyline points=\"20 10 14 10 14 4\"/><line x1=\"14\" x2=\"21\" y1=\"10\" y2=\"3\"/><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"/>',\n  minus: '<circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M8 12h8\"/>',\n  next: '<path d=\"m9 18 6-6-6-6\"/>',\n  none: '<path d=\"m7 15 5 5 5-5\"/><path d=\"m7 9 5-5 5 5\"/>',\n  \"not-allowed\": '<circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"m4.9 4.9 14.2 14.2\"/>',\n  paste: '<path d=\"M15 2H9a1 1 0 0 0-1 1v2c0 .6.4 1 1 1h6c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1Z\"/><path d=\"M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2M16 4h2a2 2 0 0 1 2 2v2M11 14h10\"/><path d=\"m17 10 4 4-4 4\"/>',\n  pin: '<line x1=\"12\" x2=\"12\" y1=\"17\" y2=\"22\"/><path d=\"M5 17h14v-1.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V6h1a2 2 0 0 0 0-4H8a2 2 0 0 0 0 4h1v4.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24Z\"/>',\n  pivot: '<path d=\"M15 3v18\"/><rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\"/><path d=\"M21 9H3\"/><path d=\"M21 15H3\"/>',\n  plus: '<circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M8 12h8\"/><path d=\"M12 8v8\"/>',\n  previous: '<path d=\"m15 18-6-6 6-6\"/>',\n  right: '<path d=\"M5 12h14\"/><path d=\"m12 5 7 7-7 7\"/>',\n  save: '<path d=\"M12 17V3\"/><path d=\"m6 11 6 6 6-6\"/><path d=\"M19 21H5\"/>',\n  \"small-left\": '<path d=\"m15 18-6-6 6-6\"/>',\n  \"small-right\": '<path d=\"m9 18 6-6-6-6\"/>',\n  tick: '<path d=\"M20 6 9 17l-5-5\"/>',\n  \"tree-closed\": '<path d=\"m9 18 6-6-6-6\"/>',\n  \"tree-indeterminate\": '<path d=\"M5 12h14\"/>',\n  \"tree-open\": '<path d=\"m6 9 6 6 6-6\"/>',\n  unlinked: '<path d=\"M9 17H7A5 5 0 0 1 7 7\"/><path d=\"M15 7h2a5 5 0 0 1 4 8\"/><line x1=\"8\" x2=\"12\" y1=\"12\" y2=\"12\"/><line x1=\"2\" x2=\"22\" y1=\"2\" y2=\"22\"/>',\n  up: '<path d=\"m5 12 7-7 7 7\"/><path d=\"M12 19V5\"/>',\n  grip: '<circle cx=\"5\" cy=\"8\" r=\"0.5\"/><circle cx=\"12\" cy=\"8\" r=\"0.5\"/><circle cx=\"19\" cy=\"8\" r=\"0.5\"/><circle cx=\"5\" cy=\"16\" r=\"0.5\"/><circle cx=\"12\" cy=\"16\" r=\"0.5\"/><circle cx=\"19\" cy=\"16\" r=\"0.5\"/><g stroke=\"none\" fill=\"currentColor\"><circle cx=\"5\" cy=\"8\" r=\"1\"/><circle cx=\"12\" cy=\"8\" r=\"1\"/><circle cx=\"19\" cy=\"8\" r=\"1\"/><circle cx=\"5\" cy=\"16\" r=\"1\"/><circle cx=\"12\" cy=\"16\" r=\"1\"/><circle cx=\"19\" cy=\"16\" r=\"1\"/></g>',\n  settings: '<path d=\"M20 7h-9\"/><path d=\"M14 17H5\"/><circle cx=\"17\" cy=\"17\" r=\"3\"/><circle cx=\"7\" cy=\"7\" r=\"3\"/>'\n};\nvar iconNameToFullSvg = {\n  \"small-down\": '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ag-icon\" fill=\"black\" stroke=\"none\" viewBox=\"0 0 32 32\"><path d=\"M7.334 10.667 16 21.334l8.667-10.667H7.334Z\"/></svg>',\n  \"small-up\": '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ag-icon\" fill=\"black\" stroke=\"none\" viewBox=\"0 0 32 32\"><path d=\"M7.334 21.333 16 10.666l8.667 10.667H7.334Z\"/></svg>'\n};\nvar getQuartzIconsCss = (args = {}) => {\n  let result = \"\";\n  for (const iconName of [...Object.keys(iconNameToSvgFragment), ...Object.keys(iconNameToFullSvg)]) {\n    const iconSvg = quartzIconSvg(iconName, args.strokeWidth);\n    result += `.ag-icon-${iconName}::before { mask-image: url('data:image/svg+xml,${encodeURIComponent(iconSvg)}'); }\n`;\n  }\n  return result;\n};\nvar quartzIconSvg = (name, strokeWidth = 1.5) => {\n  const fullSVG = iconNameToFullSvg[name];\n  if (fullSVG)\n    return fullSVG;\n  const svgFragment = iconNameToSvgFragment[name];\n  if (!svgFragment)\n    throw new Error(`Missing icon data for ${name}`);\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ag-icon\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"black\" stroke-width=\"${strokeWidth}\" viewBox=\"0 0 24 24\"><style>* { vector-effect: non-scaling-stroke; }</style>` + svgFragment + \"</svg>\";\n};\n\n// packages/ag-grid-community/src/theming/parts/icon-set/quartz/icon-set-quartz.ts\nvar iconSetQuartz = (args = {}) => {\n  return createPart({\n    feature: \"iconSet\",\n    css: () => getQuartzIconsCss(args)\n  });\n};\nvar iconSetQuartzLight = /* @__PURE__ */ iconSetQuartz({ strokeWidth: 1 });\nvar iconSetQuartzRegular = /* @__PURE__ */ iconSetQuartz();\nvar iconSetQuartzBold = /* @__PURE__ */ iconSetQuartz({ strokeWidth: 2 });\n\n// packages/ag-grid-community/src/theming/parts/input-style/input-style-base.css-GENERATED.ts\nvar inputStyleBaseCSS = (\n  /*css*/\n  `:where(.ag-input-field-input[type=number]:not(.ag-number-field-input-stepper)){-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield;&::-webkit-inner-spin-button,&::-webkit-outer-spin-button{-webkit-appearance:none;appearance:none;margin:0}}:where(input.ag-input-field-input:not([type]),input.ag-input-field-input[type=text],input.ag-input-field-input[type=number],input.ag-input-field-input[type=tel],input.ag-input-field-input[type=date],input.ag-input-field-input[type=datetime-local],textarea.ag-input-field-input){background-color:var(--ag-input-background-color);border:var(--ag-input-border);border-radius:var(--ag-input-border-radius);color:var(--ag-input-text-color);font-family:inherit;font-size:inherit;line-height:inherit;margin:0;min-height:var(--ag-input-height);padding:0;&:where(:disabled){background-color:var(--ag-input-disabled-background-color);border:var(--ag-input-disabled-border);color:var(--ag-input-disabled-text-color)}&:where(:focus){background-color:var(--ag-input-focus-background-color);border:var(--ag-input-focus-border);box-shadow:var(--ag-input-focus-shadow);color:var(--ag-input-focus-text-color);outline:none}&:where(:invalid){background-color:var(--ag-input-invalid-background-color);border:var(--ag-input-invalid-border);color:var(--ag-input-invalid-text-color)}&:where(.invalid){background-color:var(--ag-input-invalid-background-color);border:var(--ag-input-invalid-border);color:var(--ag-input-invalid-text-color)}&::-moz-placeholder{color:var(--ag-input-placeholder-text-color)}&::placeholder{color:var(--ag-input-placeholder-text-color)}}:where(.ag-ltr) :where(input.ag-input-field-input:not([type]),input.ag-input-field-input[type=text],input.ag-input-field-input[type=number],input.ag-input-field-input[type=tel],input.ag-input-field-input[type=date],input.ag-input-field-input[type=datetime-local],textarea.ag-input-field-input){padding-left:var(--ag-input-padding-start)}:where(.ag-rtl) :where(input.ag-input-field-input:not([type]),input.ag-input-field-input[type=text],input.ag-input-field-input[type=number],input.ag-input-field-input[type=tel],input.ag-input-field-input[type=date],input.ag-input-field-input[type=datetime-local],textarea.ag-input-field-input){padding-right:var(--ag-input-padding-start)}:where(.ag-column-select-header-filter-wrapper,.ag-filter-toolpanel-search,.ag-mini-filter,.ag-filter-filter){.ag-input-wrapper:before{background-color:currentcolor;color:var(--ag-input-icon-color);content:\"\";display:block;height:12px;-webkit-mask-image:url(\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMiIgZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMS41Ij48cGF0aCBkPSJNNS4zIDlhMy43IDMuNyAwIDEgMCAwLTcuNSAzLjcgMy43IDAgMCAwIDAgNy41Wk0xMC41IDEwLjUgOC4zIDguMiIvPjwvc3ZnPg==\");mask-image:url(\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMiIgZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMS41Ij48cGF0aCBkPSJNNS4zIDlhMy43IDMuNyAwIDEgMCAwLTcuNSAzLjcgMy43IDAgMCAwIDAgNy41Wk0xMC41IDEwLjUgOC4zIDguMiIvPjwvc3ZnPg==\");-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;opacity:.5;position:absolute;width:12px}}:where(.ag-ltr) :where(.ag-column-select-header-filter-wrapper,.ag-filter-toolpanel-search,.ag-mini-filter,.ag-filter-filter){.ag-input-wrapper:before{margin-left:var(--ag-spacing)}.ag-number-field-input,.ag-text-field-input{padding-left:calc(var(--ag-spacing)*1.5 + 12px)}}:where(.ag-rtl) :where(.ag-column-select-header-filter-wrapper,.ag-filter-toolpanel-search,.ag-mini-filter,.ag-filter-filter){.ag-input-wrapper:before{margin-right:var(--ag-spacing)}.ag-number-field-input,.ag-text-field-input{padding-right:calc(var(--ag-spacing)*1.5 + 12px)}}`\n);\n\n// packages/ag-grid-community/src/theming/parts/input-style/input-style-bordered.css-GENERATED.ts\nvar inputStyleBorderedCSS = (\n  /*css*/\n  `:where(input.ag-input-field-input:not([type]),input.ag-input-field-input[type=text],input.ag-input-field-input[type=number],input.ag-input-field-input[type=tel],input.ag-input-field-input[type=date],input.ag-input-field-input[type=datetime-local],textarea.ag-input-field-input){&:focus{box-shadow:var(--ag-focus-shadow)}}`\n);\n\n// packages/ag-grid-community/src/theming/parts/input-style/input-style-underlined.css-GENERATED.ts\nvar inputStyleUnderlinedCSS = (\n  /*css*/\n  `:where(input.ag-input-field-input:not([type]),input.ag-input-field-input[type=text],input.ag-input-field-input[type=number],input.ag-input-field-input[type=tel],input.ag-input-field-input[type=date],input.ag-input-field-input[type=datetime-local],textarea.ag-input-field-input){border-left:none;border-right:none;border-top:none}`\n);\n\n// packages/ag-grid-community/src/theming/parts/input-style/input-styles.ts\nvar baseParams2 = {\n  inputBackgroundColor: \"transparent\",\n  inputBorder: false,\n  inputBorderRadius: 0,\n  inputTextColor: {\n    ref: \"textColor\"\n  },\n  inputPlaceholderTextColor: {\n    ref: \"inputTextColor\",\n    mix: 0.5\n  },\n  inputPaddingStart: 0,\n  inputHeight: {\n    calc: \"max(iconSize, fontSize) + spacing * 2\"\n  },\n  inputFocusBackgroundColor: {\n    ref: \"inputBackgroundColor\"\n  },\n  inputFocusBorder: {\n    ref: \"inputBorder\"\n  },\n  inputFocusShadow: \"none\",\n  inputFocusTextColor: {\n    ref: \"inputTextColor\"\n  },\n  inputDisabledBackgroundColor: {\n    ref: \"inputBackgroundColor\"\n  },\n  inputDisabledBorder: {\n    ref: \"inputBorder\"\n  },\n  inputDisabledTextColor: {\n    ref: \"inputTextColor\"\n  },\n  inputInvalidBackgroundColor: {\n    ref: \"inputBackgroundColor\"\n  },\n  inputInvalidBorder: {\n    ref: \"inputBorder\"\n  },\n  inputInvalidTextColor: {\n    ref: \"inputTextColor\"\n  },\n  inputIconColor: {\n    ref: \"inputTextColor\"\n  },\n  pickerButtonBorder: false,\n  pickerButtonFocusBorder: { ref: \"inputFocusBorder\" },\n  pickerButtonBackgroundColor: { ref: \"backgroundColor\" },\n  pickerButtonFocusBackgroundColor: { ref: \"backgroundColor\" },\n  pickerListBorder: false,\n  pickerListBackgroundColor: { ref: \"backgroundColor\" }\n};\nvar makeInputStyleBaseTreeShakeable = () => createPart({\n  feature: \"inputStyle\",\n  params: baseParams2,\n  css: inputStyleBaseCSS\n});\nvar inputStyleBase = /* @__PURE__ */ makeInputStyleBaseTreeShakeable();\nvar makeInputStyleBorderedTreeShakeable = () => createPart({\n  feature: \"inputStyle\",\n  params: {\n    ...baseParams2,\n    inputBackgroundColor: backgroundColor,\n    inputBorder: true,\n    inputBorderRadius: {\n      ref: \"borderRadius\"\n    },\n    inputPaddingStart: {\n      ref: \"spacing\"\n    },\n    inputFocusBorder: {\n      color: accentColor\n    },\n    inputFocusShadow: {\n      ref: \"focusShadow\"\n    },\n    inputDisabledBackgroundColor: foregroundBackgroundMix(0.06),\n    inputDisabledTextColor: {\n      ref: \"textColor\",\n      mix: 0.5\n    },\n    inputInvalidBorder: {\n      color: { ref: \"invalidColor\" }\n    },\n    pickerButtonBorder: true,\n    pickerListBorder: true\n  },\n  css: () => inputStyleBaseCSS + inputStyleBorderedCSS\n});\nvar inputStyleBordered = /* @__PURE__ */ makeInputStyleBorderedTreeShakeable();\nvar makeInputStyleUnderlinedTreeShakeable = () => createPart({\n  feature: \"inputStyle\",\n  params: {\n    ...baseParams2,\n    inputBackgroundColor: \"transparent\",\n    inputBorder: {\n      width: 2,\n      color: foregroundMix(0.3)\n    },\n    inputPaddingStart: {\n      ref: \"spacing\"\n    },\n    inputFocusBorder: \"solid 2px var(--ag-accent-color)\",\n    inputDisabledTextColor: {\n      ref: \"textColor\",\n      mix: 0.5\n    },\n    inputDisabledBorder: \"solid 1px var(--ag-border-color)\",\n    inputInvalidBorder: {\n      width: 2,\n      color: {\n        ref: \"invalidColor\",\n        mix: 0.3\n      }\n    }\n  },\n  css: () => inputStyleBaseCSS + inputStyleUnderlinedCSS\n});\nvar inputStyleUnderlined = /* @__PURE__ */ makeInputStyleUnderlinedTreeShakeable();\n\n// packages/ag-grid-community/src/theming/parts/tab-style/tab-style-base.css-GENERATED.ts\nvar tabStyleBaseCSS = (\n  /*css*/\n  `.ag-tabs-header{background-color:var(--ag-tab-bar-background-color);border-bottom:var(--ag-tab-bar-border);display:flex;flex:1;gap:var(--ag-tab-spacing);padding:var(--ag-tab-bar-top-padding) var(--ag-tab-bar-horizontal-padding) 0}.ag-tabs-header-wrapper{display:flex}.ag-tabs-close-button-wrapper{align-items:center;border:0;display:flex;padding:var(--ag-spacing)}:where(.ag-ltr) .ag-tabs-close-button-wrapper{border-right:1px solid var(--ag-border-color)}:where(.ag-rtl) .ag-tabs-close-button-wrapper{border-left:1px solid var(--ag-border-color)}.ag-tabs-close-button{background-color:unset;border:0;cursor:pointer;padding:0}.ag-tab{align-items:center;background-color:var(--ag-tab-background-color);border-left:var(--ag-tab-selected-border-width) solid transparent;border-right:var(--ag-tab-selected-border-width) solid transparent;color:var(--ag-tab-text-color);cursor:pointer;display:flex;flex:1;justify-content:center;padding:var(--ag-tab-top-padding) var(--ag-tab-horizontal-padding) var(--ag-tab-bottom-padding);position:relative;&:hover{background-color:var(--ag-tab-hover-background-color);color:var(--ag-tab-hover-text-color)}&.ag-tab-selected{background-color:var(--ag-tab-selected-background-color);color:var(--ag-tab-selected-text-color)}&:after{background-color:var(--ag-tab-selected-underline-color);bottom:0;content:\"\";display:block;height:var(--ag-tab-selected-underline-width);left:0;opacity:0;position:absolute;right:0;transition:opacity var(--ag-tab-selected-underline-transition-duration)}&.ag-tab-selected:after{opacity:1}}:where(.ag-ltr) .ag-tab{&.ag-tab-selected{&:where(:not(:first-of-type)){border-left-color:var(--ag-tab-selected-border-color)}&:where(:not(:last-of-type)){border-right-color:var(--ag-tab-selected-border-color)}}}:where(.ag-rtl) .ag-tab{&.ag-tab-selected{&:where(:not(:first-of-type)){border-right-color:var(--ag-tab-selected-border-color)}&:where(:not(:last-of-type)){border-left-color:var(--ag-tab-selected-border-color)}}}`\n);\n\n// packages/ag-grid-community/src/theming/parts/tab-style/tab-style-rolodex.css-GENERATED.ts\nvar tabStyleRolodexCSS = (\n  /*css*/\n  `.ag-tab{border-left:var(--ag-tab-selected-border-width) solid transparent;border-right:var(--ag-tab-selected-border-width) solid transparent;border-top:var(--ag-tab-selected-border-width) solid transparent;flex:none;&.ag-tab-selected{border-left-color:var(--ag-tab-selected-border-color);border-right-color:var(--ag-tab-selected-border-color);border-top-color:var(--ag-tab-selected-border-color);margin-bottom:-1px;padding-bottom:calc(var(--ag-tab-bottom-padding) + 1px)}}`\n);\n\n// packages/ag-grid-community/src/theming/parts/tab-style/tab-styles.ts\nvar baseParams3 = {\n  tabBarBackgroundColor: \"transparent\",\n  tabBarHorizontalPadding: 0,\n  tabBarTopPadding: 0,\n  tabBackgroundColor: \"transparent\",\n  tabTextColor: {\n    ref: \"textColor\"\n  },\n  tabHorizontalPadding: {\n    ref: \"spacing\"\n  },\n  tabTopPadding: {\n    ref: \"spacing\"\n  },\n  tabBottomPadding: {\n    ref: \"spacing\"\n  },\n  tabSpacing: \"0\",\n  tabHoverBackgroundColor: {\n    ref: \"tabBackgroundColor\"\n  },\n  tabHoverTextColor: {\n    ref: \"tabTextColor\"\n  },\n  tabSelectedBackgroundColor: {\n    ref: \"tabBackgroundColor\"\n  },\n  tabSelectedTextColor: {\n    ref: \"tabTextColor\"\n  },\n  tabSelectedBorderWidth: 1,\n  tabSelectedBorderColor: \"transparent\",\n  tabSelectedUnderlineColor: \"transparent\",\n  tabSelectedUnderlineWidth: 0,\n  tabSelectedUnderlineTransitionDuration: 0,\n  tabBarBorder: false\n};\nvar makeTabStyleBaseTreeShakeable = () => createPart({\n  feature: \"tabStyle\",\n  params: baseParams3,\n  css: tabStyleBaseCSS\n});\nvar tabStyleBase = /* @__PURE__ */ makeTabStyleBaseTreeShakeable();\nvar makeTabStyleQuartzTreeShakeable = () => createPart({\n  feature: \"tabStyle\",\n  params: {\n    ...baseParams3,\n    tabBarBorder: true,\n    tabBarBackgroundColor: foregroundMix(0.05),\n    tabTextColor: {\n      ref: \"textColor\",\n      mix: 0.7\n    },\n    tabSelectedTextColor: {\n      ref: \"textColor\"\n    },\n    tabHoverTextColor: {\n      ref: \"textColor\"\n    },\n    tabSelectedBorderColor: {\n      ref: \"borderColor\"\n    },\n    tabSelectedBackgroundColor: backgroundColor\n  },\n  css: tabStyleBaseCSS\n});\nvar tabStyleQuartz = /* @__PURE__ */ makeTabStyleQuartzTreeShakeable();\nvar makeTabStyleMaterialTreeShakeable = () => createPart({\n  feature: \"tabStyle\",\n  params: {\n    ...baseParams3,\n    tabBarBackgroundColor: {\n      ref: \"chromeBackgroundColor\"\n    },\n    tabSelectedUnderlineColor: {\n      ref: \"primaryColor\"\n    },\n    tabSelectedUnderlineWidth: 2,\n    tabSelectedUnderlineTransitionDuration: 0\n  },\n  css: tabStyleBaseCSS\n});\nvar tabStyleMaterial = /* @__PURE__ */ makeTabStyleMaterialTreeShakeable();\nvar makeTabStyleAlpineTreeShakeable = () => createPart({\n  feature: \"tabStyle\",\n  params: {\n    ...baseParams3,\n    tabBarBorder: true,\n    tabBarBackgroundColor: {\n      ref: \"chromeBackgroundColor\"\n    },\n    tabHoverTextColor: accentColor,\n    tabSelectedTextColor: accentColor,\n    tabSelectedUnderlineColor: accentColor,\n    tabSelectedUnderlineWidth: 2,\n    tabSelectedUnderlineTransitionDuration: \"0.3s\"\n  },\n  css: tabStyleBaseCSS\n});\nvar tabStyleAlpine = /* @__PURE__ */ makeTabStyleAlpineTreeShakeable();\nvar makeTabStyleRolodexTreeShakeable = () => createPart({\n  feature: \"tabStyle\",\n  params: {\n    ...baseParams3,\n    tabBarBackgroundColor: {\n      ref: \"chromeBackgroundColor\"\n    },\n    tabBarHorizontalPadding: {\n      ref: \"spacing\"\n    },\n    tabBarTopPadding: {\n      ref: \"spacing\"\n    },\n    tabBarBorder: true,\n    tabHorizontalPadding: { calc: \"spacing * 2\" },\n    tabTopPadding: {\n      ref: \"spacing\"\n    },\n    tabBottomPadding: {\n      ref: \"spacing\"\n    },\n    tabSpacing: {\n      ref: \"spacing\"\n    },\n    tabSelectedBorderColor: {\n      ref: \"borderColor\"\n    },\n    tabSelectedBackgroundColor: backgroundColor\n  },\n  css: () => tabStyleBaseCSS + tabStyleRolodexCSS\n});\nvar tabStyleRolodex = /* @__PURE__ */ makeTabStyleRolodexTreeShakeable();\n\n// packages/ag-grid-community/src/theming/parts/theme/material-adjustments.css-GENERATED.ts\nvar materialAdjustmentsCSS = (\n  /*css*/\n  `.ag-dnd-ghost,.ag-filter-toolpanel-header,.ag-filter-toolpanel-search,.ag-header-row,.ag-multi-filter-group-title-bar,.ag-panel-title-bar-title,.ag-status-bar{color:var(--ag-header-text-color);font-size:calc(var(--ag-font-size) - 1px);font-weight:600}.ag-column-drop-horizontal{background-color:color-mix(in srgb,var(--ag-background-color),var(--ag-foreground-color) 8%)}.ag-cell.ag-cell-inline-editing{background-color:var(--ag-background-color);background-image:linear-gradient(0deg,var(--ag-input-background-color),var(--ag-input-background-color));border:var(--ag-input-border)!important;border-width:1px!important;height:calc(var(--ag-row-height) + var(--ag-spacing)*3);padding:var(--ag-spacing);:where(.ag-row-last:not(.ag-row-first)) &{bottom:0}:where(.ag-has-focus) &{border:var(--ag-input-focus-border)!important;border-width:1px!important}}.ag-advanced-filter-builder-button,.ag-standard-button{text-transform:uppercase}.ag-status-bar{border:1px solid var(--ag-border-color)}.ag-list-item-hovered:after{background-color:var(--ag-primary-color)}.ag-pill-button:hover{color:var(--ag-primary-color)}.ag-header-highlight-after:after,.ag-header-highlight-before:after{background-color:var(--ag-primary-color)}`\n);\n\n// packages/ag-grid-community/src/theming/parts/theme/themes.ts\nvar makeThemeQuartzTreeShakeable = () => createTheme().withPart(checkboxStyleDefault).withPart(colorSchemeVariable).withPart(iconSetQuartzRegular).withPart(tabStyleQuartz).withPart(inputStyleBordered).withPart(columnDropStyleBordered).withParams({\n  fontFamily: [\n    { googleFont: \"IBM Plex Sans\" },\n    \"-apple-system\",\n    \"BlinkMacSystemFont\",\n    \"Segoe UI\",\n    \"Roboto\",\n    \"Oxygen-Sans\",\n    \"Ubuntu\"\n  ]\n});\nvar themeQuartz = /* @__PURE__ */ makeThemeQuartzTreeShakeable();\nvar makeThemeAlpineTreeShakeable = () => createTheme().withPart(buttonStyleAlpine).withPart(checkboxStyleDefault).withPart(colorSchemeVariable).withPart(iconSetAlpine).withPart(tabStyleAlpine).withPart(inputStyleBordered).withPart(columnDropStyleBordered).withParams({\n  accentColor: \"#2196f3\",\n  selectedRowBackgroundColor: accentMix(0.3),\n  inputFocusBorder: {\n    color: accentMix(0.4)\n  },\n  focusShadow: { radius: 2, spread: 1.6, color: accentMix(0.4) },\n  iconButtonHoverBackgroundColor: \"transparent\",\n  iconButtonActiveBackgroundColor: \"transparent\",\n  checkboxUncheckedBorderColor: foregroundBackgroundMix(0.45),\n  checkboxIndeterminateBackgroundColor: foregroundBackgroundMix(0.45),\n  checkboxIndeterminateBorderColor: foregroundBackgroundMix(0.45),\n  checkboxBorderWidth: 2,\n  checkboxBorderRadius: 2,\n  fontSize: 13,\n  dataFontSize: 14,\n  headerFontWeight: 700,\n  borderRadius: 3,\n  wrapperBorderRadius: 3,\n  tabSelectedUnderlineColor: accentColor,\n  tabSelectedBorderWidth: 0,\n  tabSelectedUnderlineTransitionDuration: 0.3,\n  sideButtonSelectedUnderlineColor: accentColor,\n  sideButtonSelectedUnderlineWidth: 2,\n  sideButtonSelectedUnderlineTransitionDuration: 0.3,\n  sideButtonBorder: false,\n  sideButtonSelectedBorder: false,\n  sideButtonBarTopPadding: { calc: \"spacing * 3\" },\n  sideButtonSelectedBackgroundColor: \"transparent\",\n  sideButtonHoverTextColor: accentColor,\n  iconButtonHoverColor: accentColor,\n  toggleButtonWidth: 28,\n  toggleButtonHeight: 18,\n  toggleButtonSwitchInset: 1,\n  toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.45)\n});\nvar themeAlpine = /* @__PURE__ */ makeThemeAlpineTreeShakeable();\nvar makeThemeBalhamTreeShakeable = () => createTheme().withPart(buttonStyleBalham).withPart(checkboxStyleDefault).withPart(colorSchemeVariable).withPart(iconSetBalham).withPart(tabStyleRolodex).withPart(inputStyleBordered).withPart(columnDropStylePlain).withParams({\n  accentColor: \"#0091ea\",\n  borderColor: foregroundMix(0.2),\n  spacing: 4,\n  widgetVerticalSpacing: { calc: \"max(8px, spacing)\" },\n  borderRadius: 2,\n  wrapperBorderRadius: 2,\n  headerColumnResizeHandleColor: \"transparent\",\n  headerColumnBorder: true,\n  headerColumnBorderHeight: \"50%\",\n  oddRowBackgroundColor: {\n    ref: \"chromeBackgroundColor\",\n    mix: 0.5\n  },\n  checkboxBorderRadius: 2,\n  checkboxBorderWidth: 1,\n  checkboxUncheckedBackgroundColor: backgroundColor,\n  checkboxUncheckedBorderColor: foregroundBackgroundMix(0.5),\n  checkboxCheckedBackgroundColor: backgroundColor,\n  checkboxCheckedBorderColor: accentColor,\n  checkboxCheckedShapeColor: accentColor,\n  checkboxIndeterminateBackgroundColor: backgroundColor,\n  checkboxIndeterminateBorderColor: foregroundBackgroundMix(0.5),\n  checkboxIndeterminateShapeColor: foregroundBackgroundMix(0.5),\n  focusShadow: { radius: 2, spread: 1, color: accentColor },\n  headerTextColor: foregroundMix(0.6),\n  iconButtonHoverBackgroundColor: \"transparent\",\n  iconButtonActiveBackgroundColor: \"transparent\",\n  fontSize: 12,\n  tabSelectedBackgroundColor: backgroundColor,\n  headerFontWeight: \"bold\",\n  toggleButtonWidth: 32,\n  toggleButtonHeight: 16,\n  toggleButtonSwitchInset: 1,\n  toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.5),\n  sideButtonBorder: true,\n  sideButtonBarTopPadding: { calc: \"spacing * 4\" },\n  popupShadow: \"5px 5px 10px rgba(0, 0, 0, 0.3)\",\n  statusBarLabelColor: foregroundMix(0.54),\n  statusBarLabelFontWeight: 600,\n  statusBarValueFontWeight: 600,\n  panelTitleBarIconColor: foregroundColor\n});\nvar themeBalham = /* @__PURE__ */ makeThemeBalhamTreeShakeable();\nvar makeStyleMaterialTreeShakeable = () => {\n  const sharedParams = {\n    tabSelectedUnderlineColor: { ref: \"primaryColor\" },\n    sideButtonSelectedUnderlineColor: { ref: \"primaryColor\" },\n    buttonTextColor: { ref: \"primaryColor\" },\n    rangeSelectionBackgroundColor: {\n      ref: \"primaryColor\",\n      mix: 0.2\n    },\n    rangeSelectionBorderColor: {\n      ref: \"primaryColor\"\n    },\n    rangeSelectionHighlightColor: {\n      ref: \"primaryColor\",\n      mix: 0.5\n    },\n    rangeHeaderHighlightColor: {\n      ref: \"foregroundColor\",\n      mix: 0.08\n    },\n    rowNumbersSelectedColor: {\n      ref: \"primaryColor\",\n      mix: 0.5\n    },\n    inputFocusBorder: {\n      width: 2,\n      color: { ref: \"primaryColor\" }\n    },\n    pickerButtonFocusBorder: {\n      width: 1,\n      color: { ref: \"primaryColor\" }\n    },\n    cellEditingBorder: {\n      color: { ref: \"primaryColor\" }\n    },\n    menuBackgroundColor: { ref: \"backgroundColor\" },\n    sideButtonBarBackgroundColor: backgroundColor,\n    sideButtonSelectedBackgroundColor: \"transparent\",\n    sideButtonBarTopPadding: { calc: \"spacing * 4\" },\n    headerColumnResizeHandleColor: \"none\",\n    headerBackgroundColor: {\n      ref: \"backgroundColor\"\n    },\n    rowHoverColor: foregroundMix(0.08),\n    columnHoverColor: foregroundMix(0.08),\n    headerCellHoverBackgroundColor: foregroundMix(0.05),\n    statusBarLabelColor: foregroundMix(0.63),\n    statusBarLabelFontWeight: 600,\n    statusBarValueFontWeight: 600,\n    valueChangeValueHighlightBackgroundColor: \"#00acc1\",\n    panelTitleBarIconColor: foregroundColor,\n    advancedFilterBuilderButtonBarBorder: false\n  };\n  const lightParams = {\n    ...sharedParams,\n    primaryColor: \"#3f51b5\",\n    foregroundColor: \"#000D\",\n    headerTextColor: \"#0008\",\n    accentColor: \"#ff4081\",\n    checkboxUncheckedBorderColor: foregroundColor,\n    checkboxIndeterminateBackgroundColor: foregroundColor,\n    toggleButtonOffBackgroundColor: foregroundColor,\n    selectedRowBackgroundColor: \"rgba(33, 150, 243, 0.3)\"\n  };\n  const darkParams2 = {\n    ...sharedParams,\n    primaryColor: \"#3f51b5\",\n    foregroundColor: \"#fffD\",\n    headerTextColor: \"#fff8\",\n    accentColor: \"#bb86fc\",\n    checkboxUncheckedBorderColor: foregroundBackgroundMix(0.5),\n    checkboxIndeterminateBackgroundColor: foregroundBackgroundMix(0.5),\n    toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.5),\n    selectedRowBackgroundColor: \"#bb86fc33\"\n  };\n  return createPart({\n    feature: \"styleMaterial\",\n    css: materialAdjustmentsCSS,\n    params: lightParams,\n    modeParams: {\n      light: lightParams,\n      dark: darkParams2,\n      \"dark-blue\": darkParams2\n    }\n  });\n};\nvar styleMaterial = /* @__PURE__ */ makeStyleMaterialTreeShakeable();\nvar makeThemeMaterialTreeShakeable = () => /* @__PURE__ */ createTheme().withPart(buttonStyleBase).withPart(checkboxStyleDefault).withPart(colorSchemeVariable).withPart(iconSetMaterial).withPart(tabStyleMaterial).withPart(inputStyleUnderlined).withPart(columnDropStylePlain).withPart(styleMaterial).withParams({\n  rowHeight: {\n    calc: \"max(iconSize, dataFontSize) + spacing * 3.75 * rowVerticalPaddingScale\"\n  },\n  headerHeight: {\n    calc: \"max(iconSize, dataFontSize) + spacing * 4.75 * headerVerticalPaddingScale\"\n  },\n  widgetVerticalSpacing: {\n    calc: \"spacing * 1.75\"\n  },\n  cellHorizontalPadding: { calc: \"spacing * 3\" },\n  buttonHorizontalPadding: { ref: \"spacing\" },\n  widgetContainerHorizontalPadding: { calc: \"spacing * 1.5\" },\n  widgetContainerVerticalPadding: { calc: \"spacing * 2\" },\n  fontSize: 13,\n  iconSize: 18,\n  borderRadius: 0,\n  wrapperBorderRadius: 0,\n  wrapperBorder: false,\n  menuBorder: false,\n  dialogBorder: false,\n  panelTitleBarBorder: false,\n  tabSelectedBorderWidth: 0,\n  tabSelectedUnderlineTransitionDuration: 0.3,\n  sidePanelBorder: false,\n  sideButtonSelectedBorder: false,\n  sideButtonSelectedUnderlineWidth: 2,\n  sideButtonSelectedUnderlineTransitionDuration: 0.3,\n  sideButtonBorder: false,\n  buttonBorder: false,\n  buttonDisabledBorder: false,\n  focusShadow: {\n    spread: 4,\n    color: foregroundMix(0.16)\n  },\n  fontFamily: [\n    { googleFont: \"Roboto\" },\n    \"-apple-system\",\n    \"BlinkMacSystemFont\",\n    \"Segoe UI\",\n    \"Oxygen-Sans\",\n    \"Ubuntu\",\n    \"Cantarell\",\n    \"Helvetica Neue\",\n    \"sans-serif\"\n  ],\n  inputHeight: {\n    calc: \"max(iconSize, fontSize) + spacing * 3\"\n  },\n  pickerButtonBorder: {\n    width: 1,\n    color: \"transparent\"\n  },\n  headerFontWeight: 600,\n  checkboxBorderWidth: 2,\n  checkboxBorderRadius: 2,\n  toggleButtonWidth: 34,\n  toggleButtonSwitchInset: 1,\n  cardShadow: \"0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12)\",\n  popupShadow: \"5px 5px 10px rgba(0, 0, 0, 0.3)\"\n});\nvar themeMaterial = /* @__PURE__ */ makeThemeMaterialTreeShakeable();\n\n// packages/ag-grid-community/src/environment.ts\nvar ROW_HEIGHT = {\n  cssName: \"--ag-row-height\",\n  changeKey: \"rowHeightChanged\",\n  defaultValue: 42\n};\nvar HEADER_HEIGHT = {\n  cssName: \"--ag-header-height\",\n  changeKey: \"headerHeightChanged\",\n  defaultValue: 48\n};\nvar LIST_ITEM_HEIGHT = {\n  cssName: \"--ag-list-item-height\",\n  changeKey: \"listItemHeightChanged\",\n  defaultValue: 24\n};\nvar ROW_BORDER_WIDTH = {\n  cssName: \"--ag-row-border\",\n  changeKey: \"rowBorderWidthChanged\",\n  defaultValue: 1,\n  border: true\n};\nvar paramsId = 0;\nvar Environment = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"environment\";\n    this.sizeEls = /* @__PURE__ */ new Map();\n    this.lastKnownValues = /* @__PURE__ */ new Map();\n    this.sizesMeasured = false;\n    this.paramsClass = `ag-theme-params-${++paramsId}`;\n    this.globalCSS = [];\n  }\n  wireBeans(beans) {\n    const { eGridDiv, gridOptions } = beans;\n    this.eGridDiv = eGridDiv;\n    this.eStyleContainer = gridOptions.themeStyleContainer ?? (eGridDiv.getRootNode() === document ? document.head : eGridDiv);\n    this.cssLayer = gridOptions.themeCssLayer;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"theme\", () => this.handleThemeGridOptionChange());\n    this.handleThemeGridOptionChange();\n    this.addManagedPropertyListener(\"rowHeight\", () => this.refreshRowHeightVariable());\n    this.getSizeEl(ROW_HEIGHT);\n    this.getSizeEl(HEADER_HEIGHT);\n    this.getSizeEl(LIST_ITEM_HEIGHT);\n    this.getSizeEl(ROW_BORDER_WIDTH);\n    this.refreshRowBorderWidthVariable();\n    this.addDestroyFunc(() => _unregisterGridUsingThemingAPI(this));\n    this.mutationObserver = new MutationObserver(() => {\n      this.fireGridStylesChangedEvent(\"themeChanged\");\n    });\n    this.addDestroyFunc(() => this.mutationObserver.disconnect());\n  }\n  getDefaultRowHeight() {\n    return this.getCSSVariablePixelValue(ROW_HEIGHT);\n  }\n  getDefaultHeaderHeight() {\n    return this.getCSSVariablePixelValue(HEADER_HEIGHT);\n  }\n  getDefaultColumnMinWidth() {\n    return Math.min(36, this.getDefaultRowHeight());\n  }\n  getDefaultListItemHeight() {\n    return this.getCSSVariablePixelValue(LIST_ITEM_HEIGHT);\n  }\n  getRowBorderWidth() {\n    return this.getCSSVariablePixelValue(ROW_BORDER_WIDTH);\n  }\n  applyThemeClasses(el) {\n    const { gridTheme } = this;\n    let themeClass = \"\";\n    if (gridTheme) {\n      themeClass = `${this.paramsClass} ${gridTheme._getCssClass()}`;\n    } else {\n      this.mutationObserver.disconnect();\n      let node = this.eGridDiv;\n      while (node) {\n        let isThemeEl = false;\n        for (const className of Array.from(node.classList)) {\n          if (className.startsWith(\"ag-theme-\")) {\n            isThemeEl = true;\n            themeClass = themeClass ? `${themeClass} ${className}` : className;\n          }\n        }\n        if (isThemeEl) {\n          this.mutationObserver.observe(node, {\n            attributes: true,\n            attributeFilter: [\"class\"]\n          });\n        }\n        node = node.parentElement;\n      }\n    }\n    for (const className of Array.from(el.classList)) {\n      if (className.startsWith(\"ag-theme-\")) {\n        el.classList.remove(className);\n      }\n    }\n    if (themeClass) {\n      const oldClass = el.className;\n      el.className = oldClass + (oldClass ? \" \" : \"\") + themeClass;\n    }\n  }\n  refreshRowHeightVariable() {\n    const { eGridDiv } = this;\n    const oldRowHeight = eGridDiv.style.getPropertyValue(\"--ag-line-height\").trim();\n    const height = this.gos.get(\"rowHeight\");\n    if (height == null || isNaN(height) || !isFinite(height)) {\n      if (oldRowHeight !== null) {\n        eGridDiv.style.setProperty(\"--ag-line-height\", null);\n      }\n      return -1;\n    }\n    const newRowHeight = `${height}px`;\n    if (oldRowHeight != newRowHeight) {\n      eGridDiv.style.setProperty(\"--ag-line-height\", newRowHeight);\n      return height;\n    }\n    return oldRowHeight != \"\" ? parseFloat(oldRowHeight) : -1;\n  }\n  addGlobalCSS(css, debugId) {\n    if (this.gridTheme) {\n      _injectGlobalCSS(css, this.eStyleContainer, debugId, this.cssLayer, 0);\n    } else {\n      this.globalCSS.push([css, debugId]);\n    }\n  }\n  getCSSVariablePixelValue(variable) {\n    const cached = this.lastKnownValues.get(variable);\n    if (cached != null) {\n      return cached;\n    }\n    const measurement = this.measureSizeEl(variable);\n    if (measurement === \"detached\" || measurement === \"no-styles\") {\n      return variable.defaultValue;\n    }\n    this.lastKnownValues.set(variable, measurement);\n    return measurement;\n  }\n  measureSizeEl(variable) {\n    const sizeEl = this.getSizeEl(variable);\n    if (sizeEl.offsetParent == null) {\n      return \"detached\";\n    }\n    const newSize = sizeEl.offsetWidth;\n    if (newSize === NO_VALUE_SENTINEL)\n      return \"no-styles\";\n    this.sizesMeasured = true;\n    return newSize;\n  }\n  getMeasurementContainer() {\n    let container = this.eMeasurementContainer;\n    if (!container) {\n      container = this.eMeasurementContainer = document.createElement(\"div\");\n      container.className = \"ag-measurement-container\";\n      this.eGridDiv.appendChild(container);\n    }\n    return container;\n  }\n  getSizeEl(variable) {\n    let sizeEl = this.sizeEls.get(variable);\n    if (sizeEl) {\n      return sizeEl;\n    }\n    const container = this.getMeasurementContainer();\n    sizeEl = document.createElement(\"div\");\n    const { border } = variable;\n    if (border) {\n      sizeEl.className = \"ag-measurement-element-border\";\n      sizeEl.style.setProperty(\n        \"--ag-internal-measurement-border\",\n        `var(${variable.cssName}, solid ${NO_VALUE_SENTINEL}px`\n      );\n    } else {\n      sizeEl.style.width = `var(${variable.cssName}, ${NO_VALUE_SENTINEL}px)`;\n    }\n    container.appendChild(sizeEl);\n    this.sizeEls.set(variable, sizeEl);\n    let lastMeasurement = this.measureSizeEl(variable);\n    if (lastMeasurement === \"no-styles\") {\n      _warn(9, { variable });\n    }\n    const unsubscribe = _observeResize(this.beans, sizeEl, () => {\n      const newMeasurement = this.measureSizeEl(variable);\n      if (newMeasurement === \"detached\" || newMeasurement === \"no-styles\") {\n        return;\n      }\n      this.lastKnownValues.set(variable, newMeasurement);\n      if (newMeasurement !== lastMeasurement) {\n        lastMeasurement = newMeasurement;\n        this.fireGridStylesChangedEvent(variable.changeKey);\n      }\n    });\n    this.addDestroyFunc(() => unsubscribe());\n    return sizeEl;\n  }\n  fireGridStylesChangedEvent(change) {\n    if (change === \"rowBorderWidthChanged\") {\n      this.refreshRowBorderWidthVariable();\n    }\n    this.eventSvc.dispatchEvent({\n      type: \"gridStylesChanged\",\n      [change]: true\n    });\n  }\n  refreshRowBorderWidthVariable() {\n    const width = this.getCSSVariablePixelValue(ROW_BORDER_WIDTH);\n    this.eGridDiv.style.setProperty(\"--ag-internal-row-border-width\", `${width}px`);\n  }\n  handleThemeGridOptionChange() {\n    const { gos, eGridDiv, globalCSS, gridTheme: oldGridTheme } = this;\n    const themeGridOption = gos.get(\"theme\");\n    let newGridTheme;\n    if (themeGridOption === \"legacy\") {\n      newGridTheme = void 0;\n    } else {\n      const themeOrDefault = themeGridOption ?? themeQuartz;\n      if (themeOrDefault instanceof ThemeImpl) {\n        newGridTheme = themeOrDefault;\n      } else {\n        _error(240, { theme: themeOrDefault });\n      }\n    }\n    if (newGridTheme !== oldGridTheme) {\n      if (newGridTheme) {\n        _registerGridUsingThemingAPI(this);\n        _injectCoreAndModuleCSS(this.eStyleContainer, this.cssLayer);\n        for (const [css, debugId] of globalCSS) {\n          _injectGlobalCSS(css, this.eStyleContainer, debugId, this.cssLayer, 0);\n        }\n        globalCSS.length = 0;\n      }\n      this.gridTheme = newGridTheme;\n      newGridTheme?._startUse({\n        loadThemeGoogleFonts: gos.get(\"loadThemeGoogleFonts\"),\n        styleContainer: this.eStyleContainer,\n        cssLayer: this.cssLayer\n      });\n      let eParamsStyle = this.eParamsStyle;\n      if (!eParamsStyle) {\n        eParamsStyle = this.eParamsStyle = document.createElement(\"style\");\n        eGridDiv.appendChild(eParamsStyle);\n      }\n      if (!IS_SSR) {\n        eParamsStyle.textContent = newGridTheme?._getPerGridCss(this.paramsClass) || \"\";\n      }\n      this.applyThemeClasses(eGridDiv);\n      this.fireGridStylesChangedEvent(\"themeChanged\");\n    }\n    if (newGridTheme && getComputedStyle(this.getMeasurementContainer()).getPropertyValue(\"--ag-legacy-styles-loaded\")) {\n      if (themeGridOption) {\n        _error(106);\n      } else {\n        _error(239);\n      }\n    }\n  }\n};\nvar NO_VALUE_SENTINEL = 15538;\n\n// packages/ag-grid-community/src/eventService.ts\nvar EventService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"eventSvc\";\n    this.globalEventService = new LocalEventService();\n  }\n  postConstruct() {\n    const { globalListener, globalSyncListener } = this.beans;\n    if (globalListener) {\n      this.addGlobalListener(globalListener, true);\n    }\n    if (globalSyncListener) {\n      this.addGlobalListener(globalSyncListener, false);\n    }\n  }\n  addEventListener(eventType, listener, async) {\n    this.globalEventService.addEventListener(eventType, listener, async);\n  }\n  removeEventListener(eventType, listener, async) {\n    this.globalEventService.removeEventListener(eventType, listener, async);\n  }\n  addGlobalListener(listener, async = false) {\n    this.globalEventService.addGlobalListener(listener, async);\n  }\n  removeGlobalListener(listener, async = false) {\n    this.globalEventService.removeGlobalListener(listener, async);\n  }\n  /** @deprecated DO NOT FIRE LOCAL EVENTS OFF THE EVENT SERVICE */\n  dispatchLocalEvent() {\n  }\n  dispatchEvent(event) {\n    this.globalEventService.dispatchEvent(_addGridCommonParams(this.gos, event));\n  }\n  dispatchEventOnce(event) {\n    this.globalEventService.dispatchEventOnce(_addGridCommonParams(this.gos, event));\n  }\n};\n\n// packages/ag-grid-community/src/navigation/headerNavigationService.ts\nfunction isAnyChildSpanningHeaderHeight(columnGroup) {\n  if (!columnGroup) {\n    return false;\n  }\n  return columnGroup.getLeafColumns().some((col) => col.isSpanHeaderHeight());\n}\nfunction getHeaderIndexToFocus(column, currentIndex) {\n  let nextColumn;\n  if (isColumnGroup2(column) && isAnyChildSpanningHeaderHeight(column) && column.isPadding()) {\n    const targetColumn = column;\n    nextColumn = targetColumn.getLeafColumns()[0];\n    let col = nextColumn;\n    while (col !== targetColumn) {\n      currentIndex++;\n      col = col.getParent();\n    }\n  }\n  return {\n    column: nextColumn || column,\n    headerRowIndex: currentIndex\n  };\n}\nvar HeaderNavigationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"headerNavigation\";\n    this.currentHeaderRowWithoutSpan = -1;\n  }\n  postConstruct() {\n    const beans = this.beans;\n    beans.ctrlsSvc.whenReady(this, (p) => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n    const eDocument = _getDocument(beans);\n    this.addManagedElementListeners(eDocument, {\n      mousedown: () => {\n        this.currentHeaderRowWithoutSpan = -1;\n      }\n    });\n  }\n  getHeaderPositionForColumn(colKey, floatingFilter) {\n    let column;\n    const { colModel, colGroupSvc, ctrlsSvc } = this.beans;\n    if (typeof colKey === \"string\") {\n      column = colModel.getCol(colKey);\n      if (!column) {\n        column = colGroupSvc?.getColumnGroup(colKey) ?? null;\n      }\n    } else {\n      column = colKey;\n    }\n    if (!column) {\n      return null;\n    }\n    const centerHeaderContainer = ctrlsSvc.getHeaderRowContainerCtrl();\n    const allCtrls = centerHeaderContainer?.getAllCtrls();\n    const isFloatingFilterVisible = _last(allCtrls || []).type === \"filter\";\n    const headerRowCount = getFocusHeaderRowCount(this.beans) - 1;\n    let row = -1;\n    let col = column;\n    while (col) {\n      row++;\n      col = col.getParent();\n    }\n    let headerRowIndex = row;\n    if (floatingFilter && isFloatingFilterVisible && headerRowIndex === headerRowCount - 1) {\n      headerRowIndex++;\n    }\n    return headerRowIndex === -1 ? null : {\n      headerRowIndex,\n      column\n    };\n  }\n  /*\n   * This method navigates grid header vertically\n   * @return {boolean} true to preventDefault on the event that caused this navigation.\n   */\n  navigateVertically(direction, fromHeader, event) {\n    const focusSvc = this.beans.focusSvc;\n    if (!fromHeader) {\n      fromHeader = focusSvc.focusedHeader;\n    }\n    if (!fromHeader) {\n      return false;\n    }\n    const { headerRowIndex } = fromHeader;\n    const column = fromHeader.column;\n    const rowLen = getFocusHeaderRowCount(this.beans);\n    const isUp = direction === \"UP\";\n    const currentRowType = this.getHeaderRowType(headerRowIndex);\n    let {\n      headerRowIndex: nextRow,\n      column: nextFocusColumn,\n      headerRowIndexWithoutSpan\n    } = isUp ? getColumnVisibleParent(currentRowType, column, headerRowIndex) : getColumnVisibleChild(currentRowType, column, headerRowIndex);\n    let skipColumn = false;\n    if (nextRow < 0) {\n      nextRow = 0;\n      nextFocusColumn = column;\n      skipColumn = true;\n    }\n    if (nextRow >= rowLen) {\n      nextRow = -1;\n      this.currentHeaderRowWithoutSpan = -1;\n    } else if (headerRowIndexWithoutSpan !== void 0) {\n      this.currentHeaderRowWithoutSpan = headerRowIndexWithoutSpan;\n    }\n    if (!skipColumn && !nextFocusColumn) {\n      return false;\n    }\n    return focusSvc.focusHeaderPosition({\n      headerPosition: { headerRowIndex: nextRow, column: nextFocusColumn },\n      allowUserOverride: true,\n      event\n    });\n  }\n  /*\n   * This method navigates grid header horizontally\n   * @return {boolean} true to preventDefault on the event that caused this navigation.\n   */\n  navigateHorizontally(direction, fromTab = false, event) {\n    const { focusSvc, gos } = this.beans;\n    const focusedHeader = focusSvc.focusedHeader;\n    let nextHeader;\n    let normalisedDirection;\n    if (this.currentHeaderRowWithoutSpan !== -1) {\n      focusedHeader.headerRowIndex = this.currentHeaderRowWithoutSpan;\n    } else {\n      this.currentHeaderRowWithoutSpan = focusedHeader.headerRowIndex;\n    }\n    if (direction === \"LEFT\" !== gos.get(\"enableRtl\")) {\n      normalisedDirection = \"Before\";\n      nextHeader = this.findHeader(focusedHeader, normalisedDirection);\n    } else {\n      normalisedDirection = \"After\";\n      nextHeader = this.findHeader(focusedHeader, normalisedDirection);\n    }\n    if (nextHeader || !fromTab) {\n      return focusSvc.focusHeaderPosition({\n        headerPosition: nextHeader,\n        direction: normalisedDirection,\n        fromTab,\n        allowUserOverride: true,\n        event\n      });\n    } else if (fromTab) {\n      const userFunc = gos.getCallback(\"tabToNextHeader\");\n      if (userFunc) {\n        return focusSvc.focusHeaderPositionFromUserFunc({\n          userFunc,\n          headerPosition: nextHeader,\n          direction: normalisedDirection\n        });\n      }\n    }\n    return this.focusNextHeaderRow(focusedHeader, normalisedDirection, event);\n  }\n  focusNextHeaderRow(focusedHeader, direction, event) {\n    const currentIndex = focusedHeader.headerRowIndex;\n    let nextPosition = null;\n    let nextRowIndex;\n    const beans = this.beans;\n    if (direction === \"Before\") {\n      if (currentIndex > 0) {\n        nextRowIndex = currentIndex - 1;\n        this.currentHeaderRowWithoutSpan -= 1;\n        nextPosition = this.findColAtEdgeForHeaderRow(nextRowIndex, \"end\");\n      }\n    } else {\n      nextRowIndex = currentIndex + 1;\n      if (this.currentHeaderRowWithoutSpan < getFocusHeaderRowCount(beans)) {\n        this.currentHeaderRowWithoutSpan += 1;\n      } else {\n        this.currentHeaderRowWithoutSpan = -1;\n      }\n      nextPosition = this.findColAtEdgeForHeaderRow(nextRowIndex, \"start\");\n    }\n    if (!nextPosition) {\n      return false;\n    }\n    const { column, headerRowIndex } = getHeaderIndexToFocus(\n      nextPosition.column,\n      nextPosition?.headerRowIndex\n    );\n    return beans.focusSvc.focusHeaderPosition({\n      headerPosition: { column, headerRowIndex },\n      direction,\n      fromTab: true,\n      allowUserOverride: true,\n      event\n    });\n  }\n  scrollToColumn(column, direction = \"After\") {\n    if (column.getPinned()) {\n      return;\n    }\n    let columnToScrollTo;\n    if (isColumnGroup2(column)) {\n      const columns = column.getDisplayedLeafColumns();\n      columnToScrollTo = direction === \"Before\" ? _last(columns) : columns[0];\n    } else {\n      columnToScrollTo = column;\n    }\n    this.gridBodyCon.scrollFeature.ensureColumnVisible(columnToScrollTo);\n  }\n  findHeader(focusedHeader, direction) {\n    let nextColumn;\n    let getColMethod;\n    const { colGroupSvc, visibleCols } = this.beans;\n    if (isColumnGroup2(focusedHeader.column)) {\n      nextColumn = colGroupSvc?.getGroupAtDirection(focusedHeader.column, direction) ?? void 0;\n    } else {\n      getColMethod = `getCol${direction}`;\n      nextColumn = visibleCols[getColMethod](focusedHeader.column);\n    }\n    if (!nextColumn) {\n      return;\n    }\n    const { headerRowIndex } = focusedHeader;\n    if (this.getHeaderRowType(headerRowIndex) !== \"filter\") {\n      const columnsInPath = [nextColumn];\n      while (nextColumn.getParent()) {\n        nextColumn = nextColumn.getParent();\n        columnsInPath.push(nextColumn);\n      }\n      nextColumn = columnsInPath[Math.max(0, columnsInPath.length - 1 - headerRowIndex)];\n    }\n    const { column, headerRowIndex: indexToFocus } = getHeaderIndexToFocus(nextColumn, headerRowIndex);\n    return {\n      column,\n      headerRowIndex: indexToFocus\n    };\n  }\n  getHeaderRowType(rowIndex) {\n    const centerHeaderContainer = this.beans.ctrlsSvc.getHeaderRowContainerCtrl();\n    if (centerHeaderContainer) {\n      return centerHeaderContainer.getRowType(rowIndex);\n    }\n  }\n  findColAtEdgeForHeaderRow(level, position) {\n    const { visibleCols, ctrlsSvc, colGroupSvc } = this.beans;\n    const displayedColumns = visibleCols.allCols;\n    const column = displayedColumns[position === \"start\" ? 0 : displayedColumns.length - 1];\n    if (!column) {\n      return;\n    }\n    const childContainer = ctrlsSvc.getHeaderRowContainerCtrl(column.getPinned());\n    const type = childContainer?.getRowType(level);\n    if (type == \"group\") {\n      const columnGroup = colGroupSvc?.getColGroupAtLevel(column, level);\n      return {\n        headerRowIndex: level,\n        column: columnGroup\n      };\n    }\n    return {\n      // if type==null, means the header level didn't exist\n      headerRowIndex: type == null ? -1 : level,\n      column\n    };\n  }\n};\nfunction getColumnVisibleParent(currentRowType, currentColumn, currentIndex) {\n  const isFloatingFilter = currentRowType === \"filter\";\n  const isColumn2 = currentRowType === \"column\";\n  let nextFocusColumn = isFloatingFilter ? currentColumn : currentColumn.getParent();\n  let nextRow = currentIndex - 1;\n  let headerRowIndexWithoutSpan = nextRow;\n  if (isColumn2 && isAnyChildSpanningHeaderHeight(currentColumn.getParent())) {\n    while (nextFocusColumn && nextFocusColumn.isPadding()) {\n      nextFocusColumn = nextFocusColumn.getParent();\n      nextRow--;\n    }\n    headerRowIndexWithoutSpan = nextRow;\n    if (nextRow < 0) {\n      nextFocusColumn = currentColumn;\n      nextRow = currentIndex;\n      headerRowIndexWithoutSpan = void 0;\n    }\n  }\n  return { column: nextFocusColumn, headerRowIndex: nextRow, headerRowIndexWithoutSpan };\n}\nfunction getColumnVisibleChild(currentRowType, column, currentIndex, direction = \"After\") {\n  let nextFocusColumn = column;\n  let nextRow = currentIndex + 1;\n  const headerRowIndexWithoutSpan = nextRow;\n  if (currentRowType === \"group\") {\n    const leafColumns = column.getDisplayedLeafColumns();\n    const leafColumn = direction === \"After\" ? leafColumns[0] : _last(leafColumns);\n    const columnsInTheWay = [];\n    let currentColumn = leafColumn;\n    while (currentColumn.getParent() !== column) {\n      currentColumn = currentColumn.getParent();\n      columnsInTheWay.push(currentColumn);\n    }\n    nextFocusColumn = leafColumn;\n    if (leafColumn.isSpanHeaderHeight()) {\n      for (let i = columnsInTheWay.length - 1; i >= 0; i--) {\n        const colToFocus = columnsInTheWay[i];\n        if (!colToFocus.isPadding()) {\n          nextFocusColumn = colToFocus;\n          break;\n        }\n        nextRow++;\n      }\n    } else {\n      nextFocusColumn = _last(columnsInTheWay);\n      if (!nextFocusColumn) {\n        nextFocusColumn = leafColumn;\n      }\n    }\n  }\n  return { column: nextFocusColumn, headerRowIndex: nextRow, headerRowIndexWithoutSpan };\n}\n\n// packages/ag-grid-community/src/focusService.ts\nvar FocusService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"focusSvc\";\n  }\n  wireBeans(beans) {\n    this.colModel = beans.colModel;\n    this.visibleCols = beans.visibleCols;\n    this.rowRenderer = beans.rowRenderer;\n    this.navigation = beans.navigation;\n    this.filterManager = beans.filterManager;\n    this.overlays = beans.overlays;\n  }\n  postConstruct() {\n    const clearFocusedCellListener = this.clearFocusedCell.bind(this);\n    this.addManagedEventListeners({\n      columnPivotModeChanged: clearFocusedCellListener,\n      newColumnsLoaded: this.onColumnEverythingChanged.bind(this),\n      columnGroupOpened: clearFocusedCellListener,\n      columnRowGroupChanged: clearFocusedCellListener\n    });\n    this.addDestroyFunc(_registerKeyboardFocusEvents(this.beans));\n  }\n  onColumnEverythingChanged() {\n    if (!this.focusedCell) {\n      return;\n    }\n    const col = this.focusedCell.column;\n    const colFromColumnModel = this.colModel.getCol(col.getId());\n    if (col !== colFromColumnModel) {\n      this.clearFocusedCell();\n    }\n  }\n  // we check if the browser is focusing something, and if it is, and\n  // it's the cell we think is focused, then return the cell. so this\n  // methods returns the cell if a) we think it has focus and b) the\n  // browser thinks it has focus. this then returns nothing if we\n  // first focus a cell, then second click outside the grid, as then the\n  // grid cell will still be focused as far as the grid is concerned,\n  // however the browser focus will have moved somewhere else.\n  getFocusCellToUseAfterRefresh() {\n    if (this.gos.get(\"suppressFocusAfterRefresh\") || !this.focusedCell) {\n      return null;\n    }\n    if (this.isDomDataMissingInHierarchy(_getActiveDomElement(this.beans), DOM_DATA_KEY_ROW_CTRL)) {\n      return null;\n    }\n    return this.focusedCell;\n  }\n  getFocusHeaderToUseAfterRefresh() {\n    if (this.gos.get(\"suppressFocusAfterRefresh\") || !this.focusedHeader) {\n      return null;\n    }\n    if (this.isDomDataMissingInHierarchy(_getActiveDomElement(this.beans), DOM_DATA_KEY_HEADER_CTRL)) {\n      return null;\n    }\n    return this.focusedHeader;\n  }\n  isDomDataMissingInHierarchy(eBrowserCell, key) {\n    let ePointer = eBrowserCell;\n    while (ePointer) {\n      const data = _getDomData(this.gos, ePointer, key);\n      if (data) {\n        return false;\n      }\n      ePointer = ePointer.parentNode;\n    }\n    return true;\n  }\n  getFocusedCell() {\n    return this.focusedCell;\n  }\n  shouldRestoreFocus(cell) {\n    if (this.isCellRestoreFocused(cell)) {\n      setTimeout(() => {\n        this.restoredFocusedCell = null;\n      }, 0);\n      return true;\n    }\n    return false;\n  }\n  clearRestoreFocus() {\n    this.restoredFocusedCell = null;\n    this.awaitRestoreFocusedCell = false;\n  }\n  restoreFocusedCell(cellPosition, setFocusCallback) {\n    this.awaitRestoreFocusedCell = true;\n    setTimeout(() => {\n      if (!this.awaitRestoreFocusedCell) {\n        return;\n      }\n      this.setRestoreFocusedCell(cellPosition);\n      setFocusCallback();\n    });\n  }\n  isCellRestoreFocused(cellPosition) {\n    if (this.restoredFocusedCell == null) {\n      return false;\n    }\n    if (\"cellSpan\" in cellPosition) {\n      return cellPosition.doesSpanContain(this.restoredFocusedCell);\n    }\n    return _areCellsEqual(cellPosition, this.restoredFocusedCell);\n  }\n  setRestoreFocusedCell(cellPosition) {\n    if (this.beans.frameworkOverrides.renderingEngine === \"react\") {\n      this.restoredFocusedCell = cellPosition;\n    }\n  }\n  getFocusEventParams(focusedCellPosition) {\n    const { rowIndex, rowPinned, column } = focusedCellPosition;\n    const params = {\n      rowIndex,\n      rowPinned,\n      column,\n      isFullWidthCell: false\n    };\n    const rowCtrl = this.rowRenderer.getRowByPosition({ rowIndex, rowPinned });\n    if (rowCtrl) {\n      params.isFullWidthCell = rowCtrl.isFullWidth();\n    }\n    return params;\n  }\n  clearFocusedCell() {\n    this.restoredFocusedCell = null;\n    if (this.focusedCell == null) {\n      return;\n    }\n    const focusEventParams = this.getFocusEventParams(this.focusedCell);\n    this.focusedCell = null;\n    this.eventSvc.dispatchEvent({\n      type: \"cellFocusCleared\",\n      ...focusEventParams\n    });\n  }\n  setFocusedCell(params) {\n    const { column, rowIndex, rowPinned, forceBrowserFocus = false, preventScrollOnBrowserFocus = false } = params;\n    const gridColumn = this.colModel.getCol(column);\n    if (!gridColumn) {\n      this.focusedCell = null;\n      return;\n    }\n    this.focusedCell = {\n      rowIndex,\n      rowPinned: _makeNull(rowPinned),\n      column: gridColumn\n    };\n    this.eventSvc.dispatchEvent({\n      type: \"cellFocused\",\n      ...this.getFocusEventParams(this.focusedCell),\n      forceBrowserFocus,\n      preventScrollOnBrowserFocus\n    });\n  }\n  isCellFocused(cellPosition) {\n    if (this.focusedCell == null) {\n      return false;\n    }\n    return _areCellsEqual(cellPosition, this.focusedCell);\n  }\n  isRowNodeFocused(rowNode) {\n    return this.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n  }\n  isHeaderWrapperFocused(headerCtrl) {\n    if (this.focusedHeader == null) {\n      return false;\n    }\n    const {\n      column,\n      rowCtrl: { rowIndex: headerRowIndex, pinned }\n    } = headerCtrl;\n    const { column: focusedColumn, headerRowIndex: focusedHeaderRowIndex } = this.focusedHeader;\n    return column === focusedColumn && headerRowIndex === focusedHeaderRowIndex && pinned == focusedColumn.getPinned();\n  }\n  focusHeaderPosition(params) {\n    if (_isHeaderFocusSuppressed(this.beans)) {\n      return false;\n    }\n    const { direction, fromTab, allowUserOverride, event, fromCell, rowWithoutSpanValue } = params;\n    let { headerPosition } = params;\n    if (fromCell && this.filterManager?.isAdvFilterHeaderActive()) {\n      return this.focusAdvancedFilter(headerPosition);\n    }\n    if (allowUserOverride) {\n      const currentPosition = this.focusedHeader;\n      const headerRowCount = getFocusHeaderRowCount(this.beans);\n      if (fromTab) {\n        const userFunc = this.gos.getCallback(\"tabToNextHeader\");\n        if (userFunc) {\n          headerPosition = this.getHeaderPositionFromUserFunc({\n            userFunc,\n            direction,\n            currentPosition,\n            headerPosition,\n            headerRowCount\n          });\n        }\n      } else {\n        const userFunc = this.gos.getCallback(\"navigateToNextHeader\");\n        if (userFunc && event) {\n          const params2 = {\n            key: event.key,\n            previousHeaderPosition: currentPosition,\n            nextHeaderPosition: headerPosition,\n            headerRowCount,\n            event\n          };\n          headerPosition = userFunc(params2);\n        }\n      }\n    }\n    if (!headerPosition) {\n      return false;\n    }\n    return this.focusProvidedHeaderPosition({\n      headerPosition,\n      direction,\n      event,\n      fromCell,\n      rowWithoutSpanValue\n    });\n  }\n  focusHeaderPositionFromUserFunc(params) {\n    if (_isHeaderFocusSuppressed(this.beans)) {\n      return false;\n    }\n    const { userFunc, headerPosition, direction, event } = params;\n    const currentPosition = this.focusedHeader;\n    const headerRowCount = getFocusHeaderRowCount(this.beans);\n    const newHeaderPosition = this.getHeaderPositionFromUserFunc({\n      userFunc,\n      direction,\n      currentPosition,\n      headerPosition,\n      headerRowCount\n    });\n    return !!newHeaderPosition && this.focusProvidedHeaderPosition({\n      headerPosition: newHeaderPosition,\n      direction,\n      event\n    });\n  }\n  getHeaderPositionFromUserFunc(params) {\n    const { userFunc, direction, currentPosition, headerPosition, headerRowCount } = params;\n    const userFuncParams = {\n      backwards: direction === \"Before\",\n      previousHeaderPosition: currentPosition,\n      nextHeaderPosition: headerPosition,\n      headerRowCount\n    };\n    const userResult = userFunc(userFuncParams);\n    if (userResult === true) {\n      return currentPosition;\n    }\n    if (userResult === false) {\n      return null;\n    }\n    return userResult;\n  }\n  focusProvidedHeaderPosition(params) {\n    const { headerPosition, direction, fromCell, rowWithoutSpanValue, event } = params;\n    const { column, headerRowIndex } = headerPosition;\n    const { filterManager, ctrlsSvc, headerNavigation } = this.beans;\n    if (headerRowIndex === -1) {\n      if (filterManager?.isAdvFilterHeaderActive()) {\n        return this.focusAdvancedFilter(headerPosition);\n      }\n      return this.focusGridView({ column, event });\n    }\n    headerNavigation?.scrollToColumn(column, direction);\n    const headerRowContainerCtrl = ctrlsSvc.getHeaderRowContainerCtrl(column.getPinned());\n    const focusSuccess = headerRowContainerCtrl?.focusHeader(headerPosition.headerRowIndex, column, event) || false;\n    if (headerNavigation && focusSuccess && (rowWithoutSpanValue != null || fromCell)) {\n      headerNavigation.currentHeaderRowWithoutSpan = rowWithoutSpanValue ?? -1;\n    }\n    return focusSuccess;\n  }\n  focusFirstHeader() {\n    if (this.overlays?.isExclusive() && this.focusOverlay()) {\n      return true;\n    }\n    let firstColumn = this.visibleCols.allCols[0];\n    if (!firstColumn) {\n      return false;\n    }\n    const { colGroupSvc } = this.beans;\n    if (colGroupSvc && firstColumn.getParent()) {\n      firstColumn = colGroupSvc.getColGroupAtLevel(firstColumn, 0);\n    }\n    const headerPosition = getHeaderIndexToFocus(firstColumn, 0);\n    return this.focusHeaderPosition({\n      headerPosition,\n      rowWithoutSpanValue: 0\n    });\n  }\n  focusLastHeader(event) {\n    if (this.overlays?.isExclusive() && this.focusOverlay(true)) {\n      return true;\n    }\n    const headerRowIndex = getFocusHeaderRowCount(this.beans) - 1;\n    const column = _last(this.visibleCols.allCols);\n    return this.focusHeaderPosition({\n      headerPosition: { headerRowIndex, column },\n      rowWithoutSpanValue: -1,\n      event\n    });\n  }\n  focusPreviousFromFirstCell(event) {\n    if (this.filterManager?.isAdvFilterHeaderActive()) {\n      return this.focusAdvancedFilter(null);\n    }\n    return this.focusLastHeader(event);\n  }\n  isAnyCellFocused() {\n    return !!this.focusedCell;\n  }\n  isRowFocused(rowIndex, rowPinnedType) {\n    if (this.focusedCell == null) {\n      return false;\n    }\n    return this.focusedCell.rowIndex === rowIndex && this.focusedCell.rowPinned === _makeNull(rowPinnedType);\n  }\n  focusOverlay(backwards) {\n    const overlayGui = this.overlays?.isVisible() && this.overlays.eWrapper?.getGui();\n    return !!overlayGui && _focusInto(overlayGui, backwards);\n  }\n  focusGridView(params) {\n    const { backwards = false, canFocusOverlay = true, event } = params;\n    if (this.overlays?.isExclusive()) {\n      return canFocusOverlay && this.focusOverlay(backwards);\n    }\n    if (_isCellFocusSuppressed(this.beans)) {\n      if (backwards) {\n        if (!_isHeaderFocusSuppressed(this.beans)) {\n          return this.focusLastHeader();\n        }\n      }\n      if (canFocusOverlay && this.focusOverlay(backwards)) {\n        return true;\n      }\n      if (backwards) {\n        return false;\n      }\n      return _focusNextGridCoreContainer(this.beans, backwards);\n    }\n    const nextRow = backwards ? _getLastRow(this.beans) : _getFirstRow(this.beans);\n    if (nextRow) {\n      const column = params.column ?? this.focusedHeader?.column;\n      const { rowIndex, rowPinned } = nextRow;\n      const rowNode = _getRowNode(this.beans, nextRow);\n      if (!column || !rowNode || rowIndex == null) {\n        return false;\n      }\n      if (column.isSuppressNavigable(rowNode)) {\n        const isRtl = this.gos.get(\"enableRtl\");\n        let key;\n        if (!event || event.key === KeyCode.TAB) {\n          key = isRtl ? KeyCode.LEFT : KeyCode.RIGHT;\n        } else {\n          key = event.key;\n        }\n        this.beans.navigation?.navigateToNextCell(\n          null,\n          key,\n          { rowIndex, column, rowPinned: rowPinned || null },\n          true\n        );\n        return true;\n      }\n      this.navigation?.ensureCellVisible({ rowIndex, column, rowPinned });\n      if (backwards) {\n        const rowCtrl = this.rowRenderer.getRowByPosition(nextRow);\n        if (rowCtrl?.isFullWidth() && this.navigation?.tryToFocusFullWidthRow(nextRow, backwards)) {\n          return true;\n        }\n      }\n      this.setFocusedCell({\n        rowIndex,\n        column,\n        rowPinned: _makeNull(rowPinned),\n        forceBrowserFocus: true\n      });\n      this.beans.rangeSvc?.setRangeToCell({ rowIndex, rowPinned, column });\n      return true;\n    }\n    if (canFocusOverlay && this.focusOverlay(backwards)) {\n      return true;\n    }\n    if (backwards && this.focusLastHeader()) {\n      return true;\n    }\n    return false;\n  }\n  focusAdvancedFilter(position) {\n    this.advFilterFocusColumn = position?.column;\n    return this.beans.advancedFilter?.getCtrl().focusHeaderComp() ?? false;\n  }\n  focusNextFromAdvancedFilter(backwards, forceFirstColumn) {\n    const column = (forceFirstColumn ? void 0 : this.advFilterFocusColumn) ?? this.visibleCols.allCols?.[0];\n    if (backwards) {\n      return this.focusHeaderPosition({\n        headerPosition: {\n          column,\n          headerRowIndex: getFocusHeaderRowCount(this.beans) - 1\n        }\n      });\n    } else {\n      return this.focusGridView({ column });\n    }\n  }\n  clearAdvancedFilterColumn() {\n    this.advFilterFocusColumn = void 0;\n  }\n};\n\n// packages/ag-grid-community/src/gridBodyComp/scrollVisibleService.ts\nvar ScrollVisibleService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"scrollVisibleSvc\";\n  }\n  wireBeans(beans) {\n    this.ctrlsSvc = beans.ctrlsSvc;\n    this.colAnimation = beans.colAnimation;\n  }\n  postConstruct() {\n    this.getScrollbarWidth();\n    this.addManagedEventListeners({\n      displayedColumnsChanged: this.updateScrollVisible.bind(this),\n      displayedColumnsWidthChanged: this.updateScrollVisible.bind(this)\n    });\n  }\n  updateScrollVisible() {\n    const { colAnimation } = this;\n    if (colAnimation?.isActive()) {\n      colAnimation.executeLaterVMTurn(() => {\n        colAnimation.executeLaterVMTurn(() => this.updateScrollVisibleImpl());\n      });\n    } else {\n      this.updateScrollVisibleImpl();\n    }\n  }\n  updateScrollVisibleImpl() {\n    const centerRowCtrl = this.ctrlsSvc.get(\"center\");\n    if (!centerRowCtrl || this.colAnimation?.isActive()) {\n      return;\n    }\n    const params = {\n      horizontalScrollShowing: centerRowCtrl.isHorizontalScrollShowing(),\n      verticalScrollShowing: this.verticalScrollShowing\n    };\n    this.setScrollsVisible(params);\n    this.updateScrollGap();\n  }\n  updateScrollGap() {\n    const centerRowCtrl = this.ctrlsSvc.get(\"center\");\n    const horizontalGap = centerRowCtrl.hasHorizontalScrollGap();\n    const verticalGap = centerRowCtrl.hasVerticalScrollGap();\n    const atLeastOneDifferent = this.horizontalScrollGap !== horizontalGap || this.verticalScrollGap !== verticalGap;\n    if (atLeastOneDifferent) {\n      this.horizontalScrollGap = horizontalGap;\n      this.verticalScrollGap = verticalGap;\n      this.eventSvc.dispatchEvent({\n        type: \"scrollGapChanged\"\n      });\n    }\n  }\n  setScrollsVisible(params) {\n    const atLeastOneDifferent = this.horizontalScrollShowing !== params.horizontalScrollShowing || this.verticalScrollShowing !== params.verticalScrollShowing;\n    if (atLeastOneDifferent) {\n      this.horizontalScrollShowing = params.horizontalScrollShowing;\n      this.verticalScrollShowing = params.verticalScrollShowing;\n      this.eventSvc.dispatchEvent({\n        type: \"scrollVisibilityChanged\"\n      });\n    }\n  }\n  // the user might be using some non-standard scrollbar, eg a scrollbar that has zero\n  // width and overlays (like the Safari scrollbar, but presented in Chrome). so we\n  // allow the user to provide the scroll width before we work it out.\n  getScrollbarWidth() {\n    if (this.scrollbarWidth == null) {\n      const gridOptionsScrollbarWidth = this.gos.get(\"scrollbarWidth\");\n      const useGridOptions = typeof gridOptionsScrollbarWidth === \"number\" && gridOptionsScrollbarWidth >= 0;\n      const scrollbarWidth = useGridOptions ? gridOptionsScrollbarWidth : _getScrollbarWidth();\n      if (scrollbarWidth != null) {\n        this.scrollbarWidth = scrollbarWidth;\n        this.eventSvc.dispatchEvent({\n          type: \"scrollbarWidthChanged\"\n        });\n      }\n    }\n    return this.scrollbarWidth;\n  }\n};\n\n// packages/ag-grid-community/src/gridDestroyService.ts\nvar GridDestroyService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"gridDestroySvc\";\n    this.destroyCalled = false;\n  }\n  destroy() {\n    if (this.destroyCalled) {\n      return;\n    }\n    const { stateSvc, ctrlsSvc, context } = this.beans;\n    this.eventSvc.dispatchEvent({\n      type: \"gridPreDestroyed\",\n      state: stateSvc?.getState() ?? {}\n    });\n    this.destroyCalled = true;\n    ctrlsSvc.get(\"gridCtrl\")?.destroyGridUi();\n    context.destroy();\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/events.ts\nvar ALWAYS_SYNC_GLOBAL_EVENTS = /* @__PURE__ */ new Set([\"gridPreDestroyed\", \"fillStart\", \"pasteStart\"]);\n\n// packages/ag-grid-community/src/gridOptionsDefault.ts\nvar GRID_OPTION_DEFAULTS = {\n  suppressContextMenu: false,\n  preventDefaultOnContextMenu: false,\n  allowContextMenuWithControlKey: false,\n  suppressMenuHide: true,\n  enableBrowserTooltips: false,\n  tooltipTrigger: \"hover\",\n  tooltipShowDelay: 2e3,\n  tooltipHideDelay: 1e4,\n  tooltipMouseTrack: false,\n  tooltipShowMode: \"standard\",\n  tooltipInteraction: false,\n  copyHeadersToClipboard: false,\n  copyGroupHeadersToClipboard: false,\n  clipboardDelimiter: \"\t\",\n  suppressCopyRowsToClipboard: false,\n  suppressCopySingleCellRanges: false,\n  suppressLastEmptyLineOnPaste: false,\n  suppressClipboardPaste: false,\n  suppressClipboardApi: false,\n  suppressCutToClipboard: false,\n  maintainColumnOrder: false,\n  enableStrictPivotColumnOrder: false,\n  suppressFieldDotNotation: false,\n  allowDragFromColumnsToolPanel: false,\n  suppressMovableColumns: false,\n  suppressColumnMoveAnimation: false,\n  suppressMoveWhenColumnDragging: false,\n  suppressDragLeaveHidesColumns: false,\n  suppressRowGroupHidesColumns: false,\n  suppressAutoSize: false,\n  autoSizePadding: 20,\n  skipHeaderOnAutoSize: false,\n  singleClickEdit: false,\n  suppressClickEdit: false,\n  readOnlyEdit: false,\n  stopEditingWhenCellsLoseFocus: false,\n  enterNavigatesVertically: false,\n  enterNavigatesVerticallyAfterEdit: false,\n  enableCellEditingOnBackspace: false,\n  undoRedoCellEditing: false,\n  undoRedoCellEditingLimit: 10,\n  suppressCsvExport: false,\n  suppressExcelExport: false,\n  cacheQuickFilter: false,\n  includeHiddenColumnsInQuickFilter: false,\n  excludeChildrenWhenTreeDataFiltering: false,\n  enableAdvancedFilter: false,\n  includeHiddenColumnsInAdvancedFilter: false,\n  enableCharts: false,\n  masterDetail: false,\n  keepDetailRows: false,\n  keepDetailRowsCount: 10,\n  detailRowAutoHeight: false,\n  tabIndex: 0,\n  rowBuffer: 10,\n  valueCache: false,\n  valueCacheNeverExpires: false,\n  enableCellExpressions: false,\n  suppressTouch: false,\n  suppressFocusAfterRefresh: false,\n  suppressBrowserResizeObserver: false,\n  suppressPropertyNamesCheck: false,\n  suppressChangeDetection: false,\n  debug: false,\n  suppressLoadingOverlay: false,\n  suppressNoRowsOverlay: false,\n  pagination: false,\n  paginationPageSize: 100,\n  paginationPageSizeSelector: true,\n  paginationAutoPageSize: false,\n  paginateChildRows: false,\n  suppressPaginationPanel: false,\n  pivotMode: false,\n  pivotPanelShow: \"never\",\n  pivotDefaultExpanded: 0,\n  pivotSuppressAutoColumn: false,\n  suppressExpandablePivotGroups: false,\n  functionsReadOnly: false,\n  suppressAggFuncInHeader: false,\n  alwaysAggregateAtRootLevel: false,\n  aggregateOnlyChangedColumns: false,\n  suppressAggFilteredOnly: false,\n  removePivotHeaderRowWhenSingleValueColumn: false,\n  animateRows: true,\n  cellFlashDuration: 500,\n  cellFadeDuration: 1e3,\n  allowShowChangeAfterFilter: false,\n  domLayout: \"normal\",\n  ensureDomOrder: false,\n  enableRtl: false,\n  suppressColumnVirtualisation: false,\n  suppressMaxRenderedRowRestriction: false,\n  suppressRowVirtualisation: false,\n  rowDragManaged: false,\n  suppressRowDrag: false,\n  suppressMoveWhenRowDragging: false,\n  rowDragEntireRow: false,\n  rowDragMultiRow: false,\n  embedFullWidthRows: false,\n  groupDisplayType: \"singleColumn\",\n  groupDefaultExpanded: 0,\n  groupMaintainOrder: false,\n  groupSelectsChildren: false,\n  groupSuppressBlankHeader: false,\n  groupSelectsFiltered: false,\n  showOpenedGroup: false,\n  groupRemoveSingleChildren: false,\n  groupRemoveLowestSingleChildren: false,\n  groupHideOpenParents: false,\n  groupAllowUnbalanced: false,\n  rowGroupPanelShow: \"never\",\n  suppressMakeColumnVisibleAfterUnGroup: false,\n  treeData: false,\n  rowGroupPanelSuppressSort: false,\n  suppressGroupRowsSticky: false,\n  rowModelType: \"clientSide\",\n  asyncTransactionWaitMillis: 50,\n  suppressModelUpdateAfterUpdateTransaction: false,\n  cacheOverflowSize: 1,\n  infiniteInitialRowCount: 1,\n  serverSideInitialRowCount: 1,\n  cacheBlockSize: 100,\n  maxBlocksInCache: -1,\n  maxConcurrentDatasourceRequests: 2,\n  blockLoadDebounceMillis: 0,\n  purgeClosedRowNodes: false,\n  serverSideSortAllLevels: false,\n  serverSideOnlyRefreshFilteredGroups: false,\n  serverSidePivotResultFieldSeparator: \"_\",\n  viewportRowModelPageSize: 5,\n  viewportRowModelBufferSize: 5,\n  alwaysShowHorizontalScroll: false,\n  alwaysShowVerticalScroll: false,\n  debounceVerticalScrollbar: false,\n  suppressHorizontalScroll: false,\n  suppressScrollOnNewData: false,\n  suppressScrollWhenPopupsAreOpen: false,\n  suppressAnimationFrame: false,\n  suppressMiddleClickScrolls: false,\n  suppressPreventDefaultOnMouseWheel: false,\n  rowMultiSelectWithClick: false,\n  suppressRowDeselection: false,\n  suppressRowClickSelection: false,\n  suppressCellFocus: false,\n  suppressHeaderFocus: false,\n  suppressMultiRangeSelection: false,\n  enableCellTextSelection: false,\n  enableRangeSelection: false,\n  enableRangeHandle: false,\n  enableFillHandle: false,\n  fillHandleDirection: \"xy\",\n  suppressClearOnFillReduction: false,\n  accentedSort: false,\n  unSortIcon: false,\n  suppressMultiSort: false,\n  alwaysMultiSort: false,\n  suppressMaintainUnsortedOrder: false,\n  suppressRowHoverHighlight: false,\n  suppressRowTransform: false,\n  columnHoverHighlight: false,\n  deltaSort: false,\n  enableGroupEdit: false,\n  groupLockGroupColumns: 0,\n  serverSideEnableClientSideSort: false,\n  suppressServerSideFullWidthLoadingRow: false,\n  pivotMaxGeneratedColumns: -1,\n  columnMenu: \"new\",\n  reactiveCustomComponents: true,\n  suppressSetFilterByDefault: false,\n  rowNumbers: false\n};\n\n// packages/ag-grid-community/src/gridOptionsService.ts\nvar changeSetId = 0;\nvar gridInstanceSequence = 0;\nvar GridOptionsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"gos\";\n    this.domDataKey = \"__AG_\" + Math.random().toString();\n    /** This is only used for the main DOM element */\n    this.gridInstanceId = gridInstanceSequence++;\n    this.propEventSvc = new LocalEventService();\n    // responsible for calling the onXXX functions on gridOptions\n    // It forces events defined in GridOptionsService.alwaysSyncGlobalEvents to be fired synchronously.\n    // This is required for events such as GridPreDestroyed.\n    // Other events can be fired asynchronously or synchronously depending on config.\n    this.globalEventHandlerFactory = (restrictToSyncOnly) => {\n      return (eventName, event) => {\n        if (!this.isAlive()) {\n          return;\n        }\n        const alwaysSync = ALWAYS_SYNC_GLOBAL_EVENTS.has(eventName);\n        if (alwaysSync && !restrictToSyncOnly || !alwaysSync && restrictToSyncOnly) {\n          return;\n        }\n        const eventHandlerName = _getCallbackForEvent(eventName);\n        const eventHandler = this.gridOptions[eventHandlerName];\n        if (typeof eventHandler === \"function\") {\n          this.beans.frameworkOverrides.wrapOutgoing(() => {\n            eventHandler(event);\n          });\n        }\n      };\n    };\n  }\n  wireBeans(beans) {\n    this.gridOptions = beans.gridOptions;\n    this.validation = beans.validation;\n    this.api = beans.gridApi;\n    this.gridId = beans.context.getGridId();\n  }\n  // This is quicker then having code call gridOptionsService.get('context')\n  get gridOptionsContext() {\n    return this.gridOptions[\"context\"];\n  }\n  postConstruct() {\n    this.eventSvc.addGlobalListener(this.globalEventHandlerFactory().bind(this), true);\n    this.eventSvc.addGlobalListener(this.globalEventHandlerFactory(true).bind(this), false);\n    this.propEventSvc.setFrameworkOverrides(this.beans.frameworkOverrides);\n    this.addManagedEventListeners({\n      gridOptionsChanged: ({ options }) => {\n        this.updateGridOptions({ options, force: true, source: \"gridOptionsUpdated\" });\n      }\n    });\n  }\n  /**\n   * Get the raw value of the GridOptions property provided.\n   * @param property\n   */\n  get(property) {\n    return this.gridOptions[property] ?? GRID_OPTION_DEFAULTS[property];\n  }\n  /**\n   * Get the GridOption callback but wrapped so that the common params of api and context are automatically applied to the params.\n   * @param property GridOption callback properties based on the fact that this property has a callback with params extending AgGridCommon\n   */\n  getCallback(property) {\n    return this.mergeGridCommonParams(this.gridOptions[property]);\n  }\n  /**\n   * Returns `true` if a value has been specified for this GridOption.\n   * @param property GridOption property\n   */\n  exists(property) {\n    return _exists(this.gridOptions[property]);\n  }\n  /**\n   * Wrap the user callback and attach the api and context to the params object on the way through.\n   * @param callback User provided callback\n   * @returns Wrapped callback where the params object not require api and context\n   */\n  mergeGridCommonParams(callback) {\n    if (callback) {\n      const wrapped = (callbackParams) => {\n        return callback(this.addGridCommonParams(callbackParams));\n      };\n      return wrapped;\n    }\n    return callback;\n  }\n  updateGridOptions({\n    options,\n    force,\n    source = \"api\"\n  }) {\n    const changeSet = { id: changeSetId++, properties: [] };\n    const events = [];\n    const { gridOptions, validation: validation2 } = this;\n    for (const key of Object.keys(options)) {\n      const value = options[key];\n      validation2?.warnOnInitialPropertyUpdate(source, key);\n      const shouldForce = force || typeof value === \"object\" && source === \"api\";\n      const previousValue = gridOptions[key];\n      if (shouldForce || previousValue !== value) {\n        gridOptions[key] = value;\n        const event = {\n          type: key,\n          currentValue: value,\n          previousValue,\n          changeSet,\n          source\n        };\n        events.push(event);\n      }\n    }\n    validation2?.processGridOptions(this.gridOptions);\n    changeSet.properties = events.map((event) => event.type);\n    events.forEach((event) => {\n      _logIfDebug(this, `Updated property ${event.type} from`, event.previousValue, ` to `, event.currentValue);\n      this.propEventSvc.dispatchEvent(event);\n    });\n  }\n  addPropertyEventListener(key, listener) {\n    this.propEventSvc.addEventListener(key, listener);\n  }\n  removePropertyEventListener(key, listener) {\n    this.propEventSvc.removeEventListener(key, listener);\n  }\n  getDomDataKey() {\n    return this.domDataKey;\n  }\n  /** Prefer _addGridCommonParams from gridOptionsUtils for bundle size savings */\n  addGridCommonParams(params) {\n    params.api = this.api;\n    params.context = this.gridOptionsContext;\n    return params;\n  }\n  assertModuleRegistered(moduleName, reasonOrId) {\n    const registered = Array.isArray(moduleName) ? moduleName.some((modName) => this.isModuleRegistered(modName)) : this.isModuleRegistered(moduleName);\n    if (!registered) {\n      _error(200, {\n        ...this.getModuleErrorParams(),\n        moduleName,\n        reasonOrId\n      });\n    }\n    return registered;\n  }\n  getModuleErrorParams() {\n    return {\n      gridId: this.gridId,\n      gridScoped: _areModulesGridScoped(),\n      rowModelType: this.get(\"rowModelType\"),\n      isUmd: _isUmd()\n    };\n  }\n  isModuleRegistered(moduleName) {\n    return _isModuleRegistered(moduleName, this.gridId, this.get(\"rowModelType\"));\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/column/headerComp.ts\nfunction getHeaderCompTemplate(includeSortIndicator) {\n  return (\n    /* html */\n    `<div class=\"ag-cell-label-container\" role=\"presentation\">\n        <span data-ref=\"eMenu\" class=\"ag-header-icon ag-header-cell-menu-button\" aria-hidden=\"true\"></span>\n        <span data-ref=\"eFilterButton\" class=\"ag-header-icon ag-header-cell-filter-button\" aria-hidden=\"true\"></span>\n        <div data-ref=\"eLabel\" class=\"ag-header-cell-label\" role=\"presentation\">\n            <span data-ref=\"eText\" class=\"ag-header-cell-text\"></span>\n            <span data-ref=\"eFilter\" class=\"ag-header-icon ag-header-label-icon ag-filter-icon\" aria-hidden=\"true\"></span>\n            ${includeSortIndicator ? '<ag-sort-indicator data-ref=\"eSortIndicator\"></ag-sort-indicator>' : \"\"}\n        </div>\n    </div>`\n  );\n}\nvar HeaderComp = class extends Component {\n  constructor() {\n    super(...arguments);\n    this.eFilter = RefPlaceholder;\n    this.eFilterButton = RefPlaceholder;\n    this.eSortIndicator = RefPlaceholder;\n    this.eMenu = RefPlaceholder;\n    this.eLabel = RefPlaceholder;\n    this.eText = RefPlaceholder;\n    /**\n     * Selectors for custom headers templates\n     */\n    this.eSortOrder = RefPlaceholder;\n    this.eSortAsc = RefPlaceholder;\n    this.eSortDesc = RefPlaceholder;\n    this.eSortMixed = RefPlaceholder;\n    this.eSortNone = RefPlaceholder;\n    this.isLoadingInnerComponent = false;\n  }\n  refresh(params) {\n    const oldParams = this.params;\n    this.params = params;\n    if (this.workOutTemplate() != this.currentTemplate || this.workOutShowMenu() != this.currentShowMenu || params.enableSorting != this.currentSort || this.currentSuppressMenuHide != null && this.shouldSuppressMenuHide() != this.currentSuppressMenuHide || oldParams.enableFilterButton != params.enableFilterButton || oldParams.enableFilterIcon != params.enableFilterIcon) {\n      return false;\n    }\n    if (this.innerHeaderComponent) {\n      this.innerHeaderComponent.refresh?.(params);\n    } else {\n      this.setDisplayName(params);\n    }\n    return true;\n  }\n  workOutTemplate() {\n    const { params, beans } = this;\n    const template = params.template ?? getHeaderCompTemplate(!!beans.sortSvc);\n    return template?.trim ? template.trim() : template;\n  }\n  init(params) {\n    this.params = params;\n    const { sortSvc, touchSvc, rowNumbersSvc, userCompFactory } = this.beans;\n    this.currentTemplate = this.workOutTemplate();\n    this.setTemplate(this.currentTemplate, sortSvc ? [sortSvc.getSortIndicatorSelector()] : void 0);\n    touchSvc?.setupForHeader(this);\n    this.setMenu();\n    this.setupSort();\n    rowNumbersSvc?.setupForHeader(this);\n    this.setupFilterIcon();\n    this.setupFilterButton();\n    this.workOutInnerHeaderComponent(userCompFactory, params);\n    this.setDisplayName(params);\n  }\n  workOutInnerHeaderComponent(userCompFactory, params) {\n    const userCompDetails = _getInnerHeaderCompDetails(userCompFactory, params, params);\n    if (!userCompDetails) {\n      return;\n    }\n    this.isLoadingInnerComponent = true;\n    userCompDetails.newAgStackInstance().then((comp) => {\n      this.isLoadingInnerComponent = false;\n      if (!comp) {\n        return;\n      }\n      if (this.isAlive()) {\n        this.innerHeaderComponent = comp;\n        this.eText.appendChild(comp.getGui());\n      } else {\n        this.destroyBean(comp);\n      }\n    });\n  }\n  setDisplayName(params) {\n    const { displayName } = params;\n    const oldDisplayName = this.currentDisplayName;\n    this.currentDisplayName = displayName;\n    if (oldDisplayName === displayName || this.innerHeaderComponent || this.isLoadingInnerComponent) {\n      return;\n    }\n    const displayNameSanitised = _escapeString(displayName, true);\n    this.eText.textContent = displayNameSanitised;\n  }\n  addInIcon(iconName, eParent, column) {\n    if (eParent == null) {\n      return;\n    }\n    const eIcon = _createIconNoSpan(iconName, this.beans, column);\n    if (eIcon) {\n      eParent.appendChild(eIcon);\n    }\n  }\n  workOutShowMenu() {\n    return this.params.enableMenu && !!this.beans.menuSvc?.isHeaderMenuButtonEnabled();\n  }\n  shouldSuppressMenuHide() {\n    return !!this.beans.menuSvc?.isHeaderMenuButtonAlwaysShowEnabled();\n  }\n  setMenu() {\n    if (!this.eMenu) {\n      return;\n    }\n    this.currentShowMenu = this.workOutShowMenu();\n    if (!this.currentShowMenu) {\n      _removeFromParent(this.eMenu);\n      this.eMenu = void 0;\n      return;\n    }\n    const { gos, eMenu, params } = this;\n    const isLegacyMenu = _isLegacyMenuEnabled(gos);\n    this.addInIcon(isLegacyMenu ? \"menu\" : \"menuAlt\", eMenu, params.column);\n    eMenu.classList.toggle(\"ag-header-menu-icon\", !isLegacyMenu);\n    const currentSuppressMenuHide = this.shouldSuppressMenuHide();\n    this.currentSuppressMenuHide = currentSuppressMenuHide;\n    this.addManagedElementListeners(eMenu, { click: () => this.showColumnMenu(this.eMenu) });\n    this.toggleMenuAlwaysShow(currentSuppressMenuHide);\n  }\n  toggleMenuAlwaysShow(alwaysShow) {\n    this.eMenu?.classList.toggle(\"ag-header-menu-always-show\", alwaysShow);\n  }\n  showColumnMenu(element) {\n    const { currentSuppressMenuHide, params } = this;\n    if (!currentSuppressMenuHide) {\n      this.toggleMenuAlwaysShow(true);\n    }\n    params.showColumnMenu(element, () => {\n      if (!currentSuppressMenuHide) {\n        this.toggleMenuAlwaysShow(false);\n      }\n    });\n  }\n  onMenuKeyboardShortcut(isFilterShortcut) {\n    const { params, gos, beans, eMenu, eFilterButton } = this;\n    const column = params.column;\n    const isLegacyMenuEnabled = _isLegacyMenuEnabled(gos);\n    if (isFilterShortcut && !isLegacyMenuEnabled) {\n      if (beans.menuSvc?.isFilterMenuInHeaderEnabled(column)) {\n        params.showFilter(eFilterButton ?? eMenu ?? this.getGui());\n        return true;\n      }\n    } else if (params.enableMenu) {\n      this.showColumnMenu(eMenu ?? eFilterButton ?? this.getGui());\n      return true;\n    }\n    return false;\n  }\n  setupSort() {\n    const { sortSvc } = this.beans;\n    if (!sortSvc) {\n      return;\n    }\n    const { enableSorting, column } = this.params;\n    this.currentSort = enableSorting;\n    if (!this.eSortIndicator) {\n      this.eSortIndicator = this.createBean(sortSvc.createSortIndicator(true));\n      const { eSortIndicator, eSortOrder, eSortAsc, eSortDesc, eSortMixed, eSortNone } = this;\n      eSortIndicator.attachCustomElements(eSortOrder, eSortAsc, eSortDesc, eSortMixed, eSortNone);\n    }\n    this.eSortIndicator.setupSort(column);\n    if (!this.currentSort) {\n      return;\n    }\n    sortSvc.setupHeader(this, column, this.eLabel);\n  }\n  setupFilterIcon() {\n    const { eFilter, params } = this;\n    if (!eFilter) {\n      return;\n    }\n    this.configureFilter(params.enableFilterIcon, eFilter, this.onFilterChangedIcon.bind(this), \"filterActive\");\n  }\n  setupFilterButton() {\n    const { eFilterButton, params } = this;\n    if (!eFilterButton) {\n      return;\n    }\n    const configured = this.configureFilter(\n      params.enableFilterButton,\n      eFilterButton,\n      this.onFilterChangedButton.bind(this),\n      \"filter\"\n    );\n    if (configured) {\n      this.addManagedElementListeners(eFilterButton, {\n        click: () => params.showFilter(eFilterButton)\n      });\n    } else {\n      this.eFilterButton = void 0;\n    }\n  }\n  configureFilter(enabled, element, filterChangedCallback, icon) {\n    if (!enabled) {\n      _removeFromParent(element);\n      return false;\n    }\n    const column = this.params.column;\n    this.addInIcon(icon, element, column);\n    this.addManagedListeners(column, { filterChanged: filterChangedCallback });\n    filterChangedCallback();\n    return true;\n  }\n  onFilterChangedIcon() {\n    const filterPresent = this.params.column.isFilterActive();\n    _setDisplayed(this.eFilter, filterPresent, { skipAriaHidden: true });\n  }\n  onFilterChangedButton() {\n    const filterPresent = this.params.column.isFilterActive();\n    this.eFilterButton.classList.toggle(\"ag-filter-active\", filterPresent);\n  }\n  getAnchorElementForMenu(isFilter) {\n    const { eFilterButton, eMenu } = this;\n    if (isFilter) {\n      return eFilterButton ?? eMenu ?? this.getGui();\n    }\n    return eMenu ?? eFilterButton ?? this.getGui();\n  }\n  destroy() {\n    super.destroy();\n    if (this.innerHeaderComponent) {\n      this.destroyBean(this.innerHeaderComponent);\n      this.innerHeaderComponent = void 0;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/columnGroup/headerGroupComp.ts\nvar HeaderGroupComp = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-header-group-cell-label\" role=\"presentation\">\n            <span data-ref=\"agLabel\" class=\"ag-header-group-text\" role=\"presentation\"></span>\n            <span data-ref=\"agOpened\" class=\"ag-header-icon ag-header-expand-icon ag-header-expand-icon-expanded\"></span>\n            <span data-ref=\"agClosed\" class=\"ag-header-icon ag-header-expand-icon ag-header-expand-icon-collapsed\"></span>\n        </div>`\n    );\n    this.agOpened = RefPlaceholder;\n    this.agClosed = RefPlaceholder;\n    this.agLabel = RefPlaceholder;\n    this.isLoadingInnerComponent = false;\n  }\n  init(params) {\n    const { userCompFactory } = this.beans;\n    this.params = params;\n    this.checkWarnings();\n    this.workOutInnerHeaderGroupComponent(userCompFactory, params);\n    this.setupLabel(params);\n    this.addGroupExpandIcon(params);\n    this.setupExpandIcons();\n  }\n  checkWarnings() {\n    const paramsAny = this.params;\n    if (paramsAny.template) {\n      _warn(89);\n    }\n  }\n  workOutInnerHeaderGroupComponent(userCompFactory, params) {\n    const userCompDetails = _getInnerHeaderGroupCompDetails(userCompFactory, params, params);\n    if (!userCompDetails) {\n      return;\n    }\n    this.isLoadingInnerComponent = true;\n    userCompDetails.newAgStackInstance().then((comp) => {\n      this.isLoadingInnerComponent = false;\n      if (!comp) {\n        return;\n      }\n      if (this.isAlive()) {\n        this.innerHeaderGroupComponent = comp;\n        this.agLabel.appendChild(comp.getGui());\n      } else {\n        this.destroyBean(comp);\n      }\n    });\n  }\n  setupExpandIcons() {\n    const {\n      agOpened,\n      agClosed,\n      params: { columnGroup },\n      beans\n    } = this;\n    this.addInIcon(\"columnGroupOpened\", agOpened);\n    this.addInIcon(\"columnGroupClosed\", agClosed);\n    const expandAction = (event) => {\n      if (_isStopPropagationForAgGrid(event)) {\n        return;\n      }\n      const newExpandedValue = !columnGroup.isExpanded();\n      beans.colGroupSvc.setColumnGroupOpened(\n        columnGroup.getProvidedColumnGroup(),\n        newExpandedValue,\n        \"uiColumnExpanded\"\n      );\n    };\n    this.addTouchAndClickListeners(beans, agClosed, expandAction);\n    this.addTouchAndClickListeners(beans, agOpened, expandAction);\n    const stopPropagationAction = (event) => {\n      _stopPropagationForAgGrid(event);\n    };\n    this.addManagedElementListeners(agClosed, { dblclick: stopPropagationAction });\n    this.addManagedElementListeners(agOpened, { dblclick: stopPropagationAction });\n    this.addManagedElementListeners(this.getGui(), { dblclick: expandAction });\n    this.updateIconVisibility();\n    const providedColumnGroup = columnGroup.getProvidedColumnGroup();\n    const updateIcon = this.updateIconVisibility.bind(this);\n    this.addManagedListeners(providedColumnGroup, {\n      expandedChanged: updateIcon,\n      expandableChanged: updateIcon\n    });\n  }\n  addTouchAndClickListeners(beans, eElement, action) {\n    beans.touchSvc?.setupForHeaderGroup(this, eElement, action);\n    this.addManagedElementListeners(eElement, { click: action });\n  }\n  updateIconVisibility() {\n    const {\n      agOpened,\n      agClosed,\n      params: { columnGroup }\n    } = this;\n    if (columnGroup.isExpandable()) {\n      const expanded = columnGroup.isExpanded();\n      _setDisplayed(agOpened, expanded);\n      _setDisplayed(agClosed, !expanded);\n    } else {\n      _setDisplayed(agOpened, false);\n      _setDisplayed(agClosed, false);\n    }\n  }\n  addInIcon(iconName, element) {\n    const eIcon = _createIconNoSpan(iconName, this.beans, null);\n    if (eIcon) {\n      element.appendChild(eIcon);\n    }\n  }\n  addGroupExpandIcon(params) {\n    if (!params.columnGroup.isExpandable()) {\n      const { agOpened, agClosed } = this;\n      _setDisplayed(agOpened, false);\n      _setDisplayed(agClosed, false);\n      return;\n    }\n  }\n  setupLabel(params) {\n    const { displayName, columnGroup } = params;\n    const hasInnerComponent = this.innerHeaderGroupComponent || this.isLoadingInnerComponent;\n    if (_exists(displayName) && !hasInnerComponent) {\n      const displayNameSanitised = _escapeString(displayName, true);\n      this.agLabel.textContent = displayNameSanitised;\n    }\n    this.addOrRemoveCssClass(\"ag-sticky-label\", !columnGroup.getColGroupDef()?.suppressStickyLabel);\n  }\n  destroy() {\n    super.destroy();\n    if (this.innerHeaderGroupComponent) {\n      this.destroyBean(this.innerHeaderGroupComponent);\n      this.innerHeaderGroupComponent = void 0;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/headerModule.ts\nvar ColumnHeaderCompModule = {\n  moduleName: \"ColumnHeaderComp\",\n  version: VERSION,\n  userComponents: {\n    agColumnHeader: HeaderComp\n  },\n  icons: {\n    // button to launch legacy column menu\n    menu: \"menu\",\n    // button to launch new enterprise column menu\n    menuAlt: \"menu-alt\"\n  }\n};\nvar ColumnGroupHeaderCompModule = {\n  moduleName: \"ColumnGroupHeaderComp\",\n  version: VERSION,\n  userComponents: {\n    agColumnGroupHeader: HeaderGroupComp\n  },\n  icons: {\n    // header column group shown when expanded (click to contract)\n    columnGroupOpened: \"expanded\",\n    // header column group shown when contracted (click to expand)\n    columnGroupClosed: \"contracted\"\n  }\n};\n\n// packages/ag-grid-community/src/misc/animationFrameModule.ts\nvar AnimationFrameModule = {\n  moduleName: \"AnimationFrame\",\n  version: VERSION,\n  beans: [AnimationFrameService]\n};\n\n// packages/ag-grid-community/src/misc/touchService.ts\nvar TouchService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"touchSvc\";\n  }\n  mockBodyContextMenu(ctrl, listener) {\n    this.mockContextMenu(ctrl, ctrl.eBodyViewport, listener);\n  }\n  mockHeaderContextMenu(ctrl, listener) {\n    this.mockContextMenu(ctrl, ctrl.eGui, listener);\n  }\n  mockRowContextMenu(ctrl) {\n    if (!_isIOSUserAgent()) {\n      return;\n    }\n    const listener = (mouseListener, touch, touchEvent) => {\n      const { rowCtrl, cellCtrl } = ctrl.getControlsForEventTarget(touchEvent?.target ?? null);\n      if (cellCtrl?.column) {\n        cellCtrl.dispatchCellContextMenuEvent(touchEvent ?? null);\n      }\n      this.beans.contextMenuSvc?.handleContextMenuMouseEvent(void 0, touchEvent, rowCtrl, cellCtrl);\n    };\n    this.mockContextMenu(ctrl, ctrl.element, listener);\n  }\n  handleCellDoubleClick(ctrl, mouseEvent) {\n    const isDoubleClickOnIPad = () => {\n      if (!_isIOSUserAgent() || _isEventSupported(\"dblclick\")) {\n        return false;\n      }\n      const nowMillis = (/* @__PURE__ */ new Date()).getTime();\n      const res = nowMillis - ctrl.lastIPadMouseClickEvent < 200;\n      ctrl.lastIPadMouseClickEvent = nowMillis;\n      return res;\n    };\n    if (isDoubleClickOnIPad()) {\n      ctrl.onCellDoubleClicked(mouseEvent);\n      mouseEvent.preventDefault();\n      return true;\n    }\n    return false;\n  }\n  setupForHeader(comp) {\n    const { gos, sortSvc } = this.beans;\n    if (gos.get(\"suppressTouch\")) {\n      return;\n    }\n    const { params, eMenu, eFilterButton } = comp;\n    const touchListener = new TouchListener(comp.getGui(), true);\n    const suppressMenuHide = comp.shouldSuppressMenuHide();\n    const tapMenuButton = suppressMenuHide && _exists(eMenu);\n    const menuTouchListener = tapMenuButton ? new TouchListener(eMenu, true) : touchListener;\n    if (params.enableMenu) {\n      const eventType = tapMenuButton ? \"tap\" : \"longTap\";\n      const showMenuFn = (event) => params.showColumnMenuAfterMouseClick(event.touchStart);\n      comp.addManagedListeners(menuTouchListener, { [eventType]: showMenuFn });\n    }\n    if (params.enableSorting) {\n      const tapListener = (event) => {\n        const target = event.touchStart.target;\n        if (suppressMenuHide && (eMenu?.contains(target) || eFilterButton?.contains(target))) {\n          return;\n        }\n        sortSvc?.progressSort(params.column, false, \"uiColumnSorted\");\n      };\n      comp.addManagedListeners(touchListener, { tap: tapListener });\n    }\n    if (params.enableFilterButton && eFilterButton) {\n      const filterButtonTouchListener = new TouchListener(eFilterButton, true);\n      comp.addManagedListeners(filterButtonTouchListener, {\n        tap: () => params.showFilter(eFilterButton)\n      });\n      comp.addDestroyFunc(() => filterButtonTouchListener.destroy());\n    }\n    comp.addDestroyFunc(() => touchListener.destroy());\n    if (tapMenuButton) {\n      comp.addDestroyFunc(() => menuTouchListener.destroy());\n    }\n  }\n  setupForHeaderGroup(comp, eElement, action) {\n    const touchListener = new TouchListener(eElement, true);\n    comp.addManagedListeners(touchListener, { tap: action });\n    comp.addDestroyFunc(() => touchListener.destroy());\n  }\n  mockContextMenu(ctrl, element, listener) {\n    if (!_isIOSUserAgent()) {\n      return;\n    }\n    const touchListener = new TouchListener(element);\n    const longTapListener = (event) => {\n      listener(void 0, event.touchStart, event.touchEvent);\n    };\n    ctrl.addManagedListeners(touchListener, { longTap: longTapListener });\n    ctrl.addDestroyFunc(() => touchListener.destroy());\n  }\n};\n\n// packages/ag-grid-community/src/misc/touchModule.ts\nvar TouchModule = {\n  moduleName: \"Touch\",\n  version: VERSION,\n  beans: [TouchService]\n};\n\n// packages/ag-grid-community/src/navigation/cellNavigationService.ts\nvar CellNavigationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"cellNavigation\";\n  }\n  wireBeans(beans) {\n    this.rowSpanSvc = beans.rowSpanSvc;\n  }\n  // returns null if no cell to focus on, ie at the end of the grid\n  getNextCellToFocus(key, focusedCell, ctrlPressed = false) {\n    if (ctrlPressed) {\n      return this.getNextCellToFocusWithCtrlPressed(key, focusedCell);\n    }\n    return this.getNextCellToFocusWithoutCtrlPressed(key, focusedCell);\n  }\n  getNextCellToFocusWithCtrlPressed(key, focusedCell) {\n    const upKey = key === KeyCode.UP;\n    const downKey = key === KeyCode.DOWN;\n    const leftKey = key === KeyCode.LEFT;\n    let column;\n    let rowIndex;\n    const { pageBounds, gos, visibleCols } = this.beans;\n    if (upKey || downKey) {\n      rowIndex = upKey ? pageBounds.getFirstRow() : pageBounds.getLastRow();\n      column = focusedCell.column;\n    } else {\n      const isRtl = gos.get(\"enableRtl\");\n      rowIndex = focusedCell.rowIndex;\n      const allColumns = leftKey !== isRtl ? visibleCols.allCols : [...visibleCols.allCols].reverse();\n      column = allColumns.find(\n        (col) => this.isCellGoodToFocusOn({\n          rowIndex,\n          rowPinned: null,\n          column: col\n        })\n      );\n    }\n    return column ? {\n      rowIndex,\n      rowPinned: null,\n      column\n    } : null;\n  }\n  getNextCellToFocusWithoutCtrlPressed(key, focusedCell) {\n    let pointer = focusedCell;\n    let finished = false;\n    while (!finished) {\n      switch (key) {\n        case KeyCode.UP:\n          pointer = this.getCellAbove(pointer);\n          break;\n        case KeyCode.DOWN:\n          pointer = this.getCellBelow(pointer);\n          break;\n        case KeyCode.RIGHT:\n          pointer = this.gos.get(\"enableRtl\") ? this.getCellToLeft(pointer) : this.getCellToRight(pointer);\n          break;\n        case KeyCode.LEFT:\n          pointer = this.gos.get(\"enableRtl\") ? this.getCellToRight(pointer) : this.getCellToLeft(pointer);\n          break;\n        default:\n          pointer = null;\n          _warn(8, { key });\n          break;\n      }\n      if (pointer) {\n        finished = this.isCellGoodToFocusOn(pointer);\n      } else {\n        finished = true;\n      }\n    }\n    return pointer;\n  }\n  isCellGoodToFocusOn(gridCell) {\n    const column = gridCell.column;\n    let rowNode;\n    const { pinnedRowModel, rowModel } = this.beans;\n    switch (gridCell.rowPinned) {\n      case \"top\":\n        rowNode = pinnedRowModel?.getPinnedTopRow(gridCell.rowIndex);\n        break;\n      case \"bottom\":\n        rowNode = pinnedRowModel?.getPinnedBottomRow(gridCell.rowIndex);\n        break;\n      default:\n        rowNode = rowModel.getRow(gridCell.rowIndex);\n        break;\n    }\n    if (!rowNode) {\n      return false;\n    }\n    const suppressNavigable = this.isSuppressNavigable(column, rowNode);\n    return !suppressNavigable;\n  }\n  getCellToLeft(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const colToLeft = this.beans.visibleCols.getColBefore(lastCell.column);\n    if (!colToLeft) {\n      return null;\n    }\n    return {\n      rowIndex: lastCell.rowIndex,\n      column: colToLeft,\n      rowPinned: lastCell.rowPinned\n    };\n  }\n  getCellToRight(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const colToRight = this.beans.visibleCols.getColAfter(lastCell.column);\n    if (!colToRight) {\n      return null;\n    }\n    return {\n      rowIndex: lastCell.rowIndex,\n      column: colToRight,\n      rowPinned: lastCell.rowPinned\n    };\n  }\n  getRowBelow(rowPosition) {\n    const index = rowPosition.rowIndex;\n    const pinned = rowPosition.rowPinned;\n    let ignoreSticky = false;\n    const { pageBounds, pinnedRowModel, rowModel } = this.beans;\n    if (this.isLastRowInContainer(rowPosition)) {\n      switch (pinned) {\n        case \"bottom\":\n          return null;\n        case \"top\":\n          if (rowModel.isRowsToRender()) {\n            return { rowIndex: pageBounds.getFirstRow(), rowPinned: null };\n          }\n          if (pinnedRowModel?.isRowsToRender(\"bottom\")) {\n            return { rowIndex: 0, rowPinned: \"bottom\" };\n          }\n          return null;\n        default:\n          if (pinnedRowModel?.isRowsToRender(\"bottom\")) {\n            return { rowIndex: 0, rowPinned: \"bottom\" };\n          }\n          return null;\n      }\n    } else if (pinned) {\n      ignoreSticky = true;\n    }\n    const rowNode = rowModel.getRow(rowPosition.rowIndex);\n    const nextStickyPosition = ignoreSticky ? void 0 : this.getNextStickyPosition(rowNode);\n    if (nextStickyPosition) {\n      return nextStickyPosition;\n    }\n    return { rowIndex: index + 1, rowPinned: pinned };\n  }\n  getNextStickyPosition(rowNode, up) {\n    const { gos, rowRenderer } = this.beans;\n    if (!_isGroupRowsSticky(gos) || !rowNode || !rowNode.sticky) {\n      return;\n    }\n    const isTopCtrls = rowRenderer.getStickyTopRowCtrls().some((ctrl) => ctrl.rowNode.rowIndex === rowNode.rowIndex);\n    let stickyRowCtrls = [];\n    if (isTopCtrls) {\n      stickyRowCtrls = [...rowRenderer.getStickyTopRowCtrls()].sort(\n        (a, b) => a.rowNode.rowIndex - b.rowNode.rowIndex\n      );\n    } else {\n      stickyRowCtrls = [...rowRenderer.getStickyBottomRowCtrls()].sort(\n        (a, b) => b.rowNode.rowIndex - a.rowNode.rowIndex\n      );\n    }\n    const diff = up ? -1 : 1;\n    const idx = stickyRowCtrls.findIndex((ctrl) => ctrl.rowNode.rowIndex === rowNode.rowIndex);\n    const nextCtrl = stickyRowCtrls[idx + diff];\n    if (nextCtrl) {\n      return { rowIndex: nextCtrl.rowNode.rowIndex, rowPinned: null };\n    }\n  }\n  getCellBelow(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const adjustedLastCell = this.rowSpanSvc?.getCellEnd(lastCell) ?? lastCell;\n    const rowBelow = this.getRowBelow(adjustedLastCell);\n    if (rowBelow) {\n      return {\n        rowIndex: rowBelow.rowIndex,\n        column: lastCell.column,\n        rowPinned: rowBelow.rowPinned\n      };\n    }\n    return null;\n  }\n  isLastRowInContainer(rowPosition) {\n    const pinned = rowPosition.rowPinned;\n    const index = rowPosition.rowIndex;\n    const { pinnedRowModel, pageBounds } = this.beans;\n    if (pinned === \"top\") {\n      const lastTopIndex = pinnedRowModel?.getPinnedTopRowCount() ?? 0 - 1;\n      return lastTopIndex <= index;\n    }\n    if (pinned === \"bottom\") {\n      const lastBottomIndex = pinnedRowModel?.getPinnedBottomRowCount() ?? 0 - 1;\n      return lastBottomIndex <= index;\n    }\n    const lastBodyIndex = pageBounds.getLastRow();\n    return lastBodyIndex <= index;\n  }\n  getRowAbove(rowPosition) {\n    const index = rowPosition.rowIndex;\n    const pinned = rowPosition.rowPinned;\n    const { pageBounds, pinnedRowModel, rowModel } = this.beans;\n    const isFirstRow = pinned ? index === 0 : index === pageBounds.getFirstRow();\n    let ignoreSticky = false;\n    const getLastFloatingTopRow = () => {\n      const lastFloatingRow = pinnedRowModel?.getPinnedTopRowCount() ?? 0 - 1;\n      return { rowIndex: lastFloatingRow, rowPinned: \"top\" };\n    };\n    if (isFirstRow) {\n      if (pinned === \"top\") {\n        return null;\n      }\n      if (!pinned) {\n        if (pinnedRowModel?.isRowsToRender(\"top\")) {\n          return getLastFloatingTopRow();\n        }\n        return null;\n      }\n      if (rowModel.isRowsToRender()) {\n        const lastBodyRow = pageBounds.getLastRow();\n        return { rowIndex: lastBodyRow, rowPinned: null };\n      }\n      if (pinnedRowModel?.isRowsToRender(\"top\")) {\n        return getLastFloatingTopRow();\n      }\n      return null;\n    } else if (pinned) {\n      ignoreSticky = true;\n    }\n    const rowNode = rowModel.getRow(rowPosition.rowIndex);\n    const nextStickyPosition = ignoreSticky ? void 0 : this.getNextStickyPosition(rowNode, true);\n    if (nextStickyPosition) {\n      return nextStickyPosition;\n    }\n    return { rowIndex: index - 1, rowPinned: pinned };\n  }\n  getCellAbove(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const adjustedLastCell = this.rowSpanSvc?.getCellStart(lastCell) ?? lastCell;\n    const rowAbove = this.getRowAbove({\n      rowIndex: adjustedLastCell.rowIndex,\n      rowPinned: adjustedLastCell.rowPinned\n    });\n    if (rowAbove) {\n      return {\n        rowIndex: rowAbove.rowIndex,\n        column: lastCell.column,\n        rowPinned: rowAbove.rowPinned\n      };\n    }\n    return null;\n  }\n  getNextTabbedCell(gridCell, backwards) {\n    if (backwards) {\n      return this.getNextTabbedCellBackwards(gridCell);\n    }\n    return this.getNextTabbedCellForwards(gridCell);\n  }\n  getNextTabbedCellForwards(gridCell) {\n    const { visibleCols, pagination } = this.beans;\n    const displayedColumns = visibleCols.allCols;\n    let newRowIndex = gridCell.rowIndex;\n    let newFloating = gridCell.rowPinned;\n    let newColumn = visibleCols.getColAfter(gridCell.column);\n    if (!newColumn) {\n      newColumn = displayedColumns[0];\n      const rowBelow = this.getRowBelow(gridCell);\n      if (_missing(rowBelow)) {\n        return null;\n      }\n      if (!rowBelow.rowPinned && !(pagination?.isRowInPage(rowBelow) ?? true)) {\n        return null;\n      }\n      newRowIndex = rowBelow ? rowBelow.rowIndex : null;\n      newFloating = rowBelow ? rowBelow.rowPinned : null;\n    }\n    return { rowIndex: newRowIndex, column: newColumn, rowPinned: newFloating };\n  }\n  getNextTabbedCellBackwards(gridCell) {\n    const { visibleCols, pagination } = this.beans;\n    const displayedColumns = visibleCols.allCols;\n    let newRowIndex = gridCell.rowIndex;\n    let newFloating = gridCell.rowPinned;\n    let newColumn = visibleCols.getColBefore(gridCell.column);\n    if (!newColumn) {\n      newColumn = _last(displayedColumns);\n      const rowAbove = this.getRowAbove({ rowIndex: gridCell.rowIndex, rowPinned: gridCell.rowPinned });\n      if (_missing(rowAbove)) {\n        return null;\n      }\n      if (!rowAbove.rowPinned && !(pagination?.isRowInPage(rowAbove) ?? true)) {\n        return null;\n      }\n      newRowIndex = rowAbove ? rowAbove.rowIndex : null;\n      newFloating = rowAbove ? rowAbove.rowPinned : null;\n    }\n    return { rowIndex: newRowIndex, column: newColumn, rowPinned: newFloating };\n  }\n  isSuppressNavigable(column, rowNode) {\n    const { suppressNavigable } = column.colDef;\n    if (typeof suppressNavigable === \"boolean\") {\n      return suppressNavigable;\n    }\n    if (typeof suppressNavigable === \"function\") {\n      const params = column.createColumnFunctionCallbackParams(rowNode);\n      const userFunc = suppressNavigable;\n      return userFunc(params);\n    }\n    return false;\n  }\n};\n\n// packages/ag-grid-community/src/navigation/navigationApi.ts\nfunction getFocusedCell(beans) {\n  return beans.focusSvc.getFocusedCell();\n}\nfunction clearFocusedCell(beans) {\n  return beans.focusSvc.clearFocusedCell();\n}\nfunction setFocusedCell(beans, rowIndex, colKey, rowPinned) {\n  beans.focusSvc.setFocusedCell({ rowIndex, column: colKey, rowPinned, forceBrowserFocus: true });\n}\nfunction tabToNextCell(beans, event) {\n  return beans.navigation?.tabToNextCell(false, event) ?? false;\n}\nfunction tabToPreviousCell(beans, event) {\n  return beans.navigation?.tabToNextCell(true, event) ?? false;\n}\nfunction setFocusedHeader(beans, colKey, floatingFilter = false) {\n  const headerPosition = beans.headerNavigation?.getHeaderPositionForColumn(colKey, floatingFilter);\n  if (!headerPosition) {\n    return;\n  }\n  beans.focusSvc.focusHeaderPosition({ headerPosition });\n}\n\n// packages/ag-grid-community/src/navigation/navigationService.ts\nvar NavigationService = class extends BeanStub {\n  constructor() {\n    super();\n    this.beanName = \"navigation\";\n    this.onPageDown = _throttle(this.onPageDown, 100);\n    this.onPageUp = _throttle(this.onPageUp, 100);\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n  }\n  handlePageScrollingKey(event, fromFullWidth = false) {\n    const key = event.key;\n    const alt = event.altKey;\n    const ctrl = event.ctrlKey || event.metaKey;\n    const rangeServiceShouldHandleShift = !!this.beans.rangeSvc && event.shiftKey;\n    const currentCell = _getCellPositionForEvent(this.gos, event);\n    let processed = false;\n    switch (key) {\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        if (!ctrl && !alt) {\n          this.onHomeOrEndKey(key);\n          processed = true;\n        }\n        break;\n      case KeyCode.LEFT:\n      case KeyCode.RIGHT:\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n        if (!currentCell) {\n          return false;\n        }\n        if (ctrl && !alt && !rangeServiceShouldHandleShift) {\n          this.onCtrlUpDownLeftRight(key, currentCell);\n          processed = true;\n        }\n        break;\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n        if (!ctrl && !alt) {\n          processed = this.handlePageUpDown(key, currentCell, fromFullWidth);\n        }\n        break;\n    }\n    if (processed) {\n      event.preventDefault();\n    }\n    return processed;\n  }\n  handlePageUpDown(key, currentCell, fromFullWidth) {\n    if (fromFullWidth) {\n      currentCell = this.beans.focusSvc.getFocusedCell();\n    }\n    if (!currentCell) {\n      return false;\n    }\n    if (key === KeyCode.PAGE_UP) {\n      this.onPageUp(currentCell);\n    } else {\n      this.onPageDown(currentCell);\n    }\n    return true;\n  }\n  navigateTo(navigateParams) {\n    const { scrollIndex, scrollType, scrollColumn, focusIndex, focusColumn } = navigateParams;\n    const { scrollFeature } = this.gridBodyCon;\n    if (_exists(scrollColumn) && !scrollColumn.isPinned()) {\n      scrollFeature.ensureColumnVisible(scrollColumn);\n    }\n    if (_exists(scrollIndex)) {\n      scrollFeature.ensureIndexVisible(scrollIndex, scrollType);\n    }\n    if (!navigateParams.isAsync) {\n      scrollFeature.ensureIndexVisible(focusIndex);\n    }\n    const { focusSvc, rangeSvc } = this.beans;\n    focusSvc.setFocusedCell({\n      rowIndex: focusIndex,\n      column: focusColumn,\n      rowPinned: null,\n      forceBrowserFocus: true\n    });\n    rangeSvc?.setRangeToCell({ rowIndex: focusIndex, rowPinned: null, column: focusColumn });\n  }\n  // this method is throttled, see the `constructor`\n  onPageDown(gridCell) {\n    const beans = this.beans;\n    const scrollPosition = getVScroll(beans);\n    const pixelsInOnePage = this.getViewportHeight();\n    const { pageBounds, rowModel, rowAutoHeight } = beans;\n    const pagingPixelOffset = pageBounds.getPixelOffset();\n    const currentPageBottomPixel = scrollPosition.top + pixelsInOnePage;\n    const currentPageBottomRow = rowModel.getRowIndexAtPixel(currentPageBottomPixel + pagingPixelOffset);\n    if (rowAutoHeight?.active) {\n      this.navigateToNextPageWithAutoHeight(gridCell, currentPageBottomRow);\n    } else {\n      this.navigateToNextPage(gridCell, currentPageBottomRow);\n    }\n  }\n  // this method is throttled, see the `constructor`\n  onPageUp(gridCell) {\n    const beans = this.beans;\n    const scrollPosition = getVScroll(beans);\n    const { pageBounds, rowModel, rowAutoHeight } = beans;\n    const pagingPixelOffset = pageBounds.getPixelOffset();\n    const currentPageTopPixel = scrollPosition.top;\n    const currentPageTopRow = rowModel.getRowIndexAtPixel(currentPageTopPixel + pagingPixelOffset);\n    if (rowAutoHeight?.active) {\n      this.navigateToNextPageWithAutoHeight(gridCell, currentPageTopRow, true);\n    } else {\n      this.navigateToNextPage(gridCell, currentPageTopRow, true);\n    }\n  }\n  navigateToNextPage(gridCell, scrollIndex, up = false) {\n    const { pageBounds, rowModel } = this.beans;\n    const pixelsInOnePage = this.getViewportHeight();\n    const firstRow = pageBounds.getFirstRow();\n    const lastRow = pageBounds.getLastRow();\n    const pagingPixelOffset = pageBounds.getPixelOffset();\n    const currentRowNode = rowModel.getRow(gridCell.rowIndex);\n    const rowPixelDiff = up ? (\n      // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n      currentRowNode?.rowHeight - pixelsInOnePage - pagingPixelOffset\n    ) : pixelsInOnePage - pagingPixelOffset;\n    const nextCellPixel = currentRowNode?.rowTop + rowPixelDiff;\n    let focusIndex = rowModel.getRowIndexAtPixel(nextCellPixel + pagingPixelOffset);\n    if (focusIndex === gridCell.rowIndex) {\n      const diff = up ? -1 : 1;\n      scrollIndex = focusIndex = gridCell.rowIndex + diff;\n    }\n    let scrollType;\n    if (up) {\n      scrollType = \"bottom\";\n      if (focusIndex < firstRow) {\n        focusIndex = firstRow;\n      }\n      if (scrollIndex < firstRow) {\n        scrollIndex = firstRow;\n      }\n    } else {\n      scrollType = \"top\";\n      if (focusIndex > lastRow) {\n        focusIndex = lastRow;\n      }\n      if (scrollIndex > lastRow) {\n        scrollIndex = lastRow;\n      }\n    }\n    if (this.isRowTallerThanView(rowModel.getRow(focusIndex))) {\n      scrollIndex = focusIndex;\n      scrollType = \"top\";\n    }\n    this.navigateTo({\n      scrollIndex,\n      scrollType,\n      scrollColumn: null,\n      focusIndex,\n      focusColumn: gridCell.column\n    });\n  }\n  navigateToNextPageWithAutoHeight(gridCell, scrollIndex, up = false) {\n    this.navigateTo({\n      scrollIndex,\n      scrollType: up ? \"bottom\" : \"top\",\n      scrollColumn: null,\n      focusIndex: scrollIndex,\n      focusColumn: gridCell.column\n    });\n    setTimeout(() => {\n      const focusIndex = this.getNextFocusIndexForAutoHeight(gridCell, up);\n      this.navigateTo({\n        scrollIndex,\n        scrollType: up ? \"bottom\" : \"top\",\n        scrollColumn: null,\n        focusIndex,\n        focusColumn: gridCell.column,\n        isAsync: true\n      });\n    }, 50);\n  }\n  getNextFocusIndexForAutoHeight(gridCell, up = false) {\n    const step = up ? -1 : 1;\n    const pixelsInOnePage = this.getViewportHeight();\n    const { pageBounds, rowModel } = this.beans;\n    const lastRowIndex = pageBounds.getLastRow();\n    let pixelSum = 0;\n    let currentIndex = gridCell.rowIndex;\n    while (currentIndex >= 0 && currentIndex <= lastRowIndex) {\n      const currentCell = rowModel.getRow(currentIndex);\n      if (currentCell) {\n        const currentCellHeight = currentCell.rowHeight ?? 0;\n        if (pixelSum + currentCellHeight > pixelsInOnePage) {\n          break;\n        }\n        pixelSum += currentCellHeight;\n      }\n      currentIndex += step;\n    }\n    return Math.max(0, Math.min(currentIndex, lastRowIndex));\n  }\n  getViewportHeight() {\n    const beans = this.beans;\n    const scrollPosition = getVScroll(beans);\n    const scrollbarWidth = this.beans.scrollVisibleSvc.getScrollbarWidth();\n    let pixelsInOnePage = scrollPosition.bottom - scrollPosition.top;\n    if (beans.ctrlsSvc.get(\"center\").isHorizontalScrollShowing()) {\n      pixelsInOnePage -= scrollbarWidth;\n    }\n    return pixelsInOnePage;\n  }\n  isRowTallerThanView(rowNode) {\n    if (!rowNode) {\n      return false;\n    }\n    const rowHeight = rowNode.rowHeight;\n    if (typeof rowHeight !== \"number\") {\n      return false;\n    }\n    return rowHeight > this.getViewportHeight();\n  }\n  onCtrlUpDownLeftRight(key, gridCell) {\n    const cellToFocus = this.beans.cellNavigation.getNextCellToFocus(key, gridCell, true);\n    const { rowIndex } = cellToFocus;\n    const column = cellToFocus.column;\n    this.navigateTo({\n      scrollIndex: rowIndex,\n      scrollType: null,\n      scrollColumn: column,\n      focusIndex: rowIndex,\n      focusColumn: column\n    });\n  }\n  // home brings focus to top left cell, end brings focus to bottom right, grid scrolled to bring\n  // same cell into view (which means either scroll all the way up, or all the way down).\n  onHomeOrEndKey(key) {\n    const homeKey = key === KeyCode.PAGE_HOME;\n    const { visibleCols, pageBounds, rowModel } = this.beans;\n    const allColumns = visibleCols.allCols;\n    const scrollIndex = homeKey ? pageBounds.getFirstRow() : pageBounds.getLastRow();\n    const rowNode = rowModel.getRow(scrollIndex);\n    if (!rowNode) {\n      return;\n    }\n    const columnToSelect = (homeKey ? allColumns : [...allColumns].reverse()).find(\n      (col) => !col.isSuppressNavigable(rowNode)\n    );\n    if (!columnToSelect) {\n      return;\n    }\n    this.navigateTo({\n      scrollIndex,\n      scrollType: null,\n      scrollColumn: columnToSelect,\n      focusIndex: scrollIndex,\n      focusColumn: columnToSelect\n    });\n  }\n  // result of keyboard event\n  onTabKeyDown(previous, keyboardEvent) {\n    const backwards = keyboardEvent.shiftKey;\n    const movedToNextCell = this.tabToNextCellCommon(previous, backwards, keyboardEvent);\n    const beans = this.beans;\n    const { ctrlsSvc, pageBounds, focusSvc, gos } = beans;\n    if (movedToNextCell !== false) {\n      if (movedToNextCell) {\n        keyboardEvent.preventDefault();\n      } else if (movedToNextCell === null) {\n        ctrlsSvc.get(\"gridCtrl\").allowFocusForNextCoreContainer(backwards);\n      }\n      return;\n    }\n    if (backwards) {\n      const { rowIndex, rowPinned } = previous.getRowPosition();\n      const firstRow = rowPinned ? rowIndex === 0 : rowIndex === pageBounds.getFirstRow();\n      if (firstRow) {\n        if (gos.get(\"headerHeight\") === 0 || _isHeaderFocusSuppressed(beans)) {\n          _focusNextGridCoreContainer(beans, true, true);\n        } else {\n          keyboardEvent.preventDefault();\n          focusSvc.focusPreviousFromFirstCell(keyboardEvent);\n        }\n      }\n    } else {\n      if (previous instanceof CellCtrl) {\n        previous.focusCell(true);\n      }\n      if (!backwards && focusSvc.focusOverlay(false) || _focusNextGridCoreContainer(beans, backwards)) {\n        keyboardEvent.preventDefault();\n      }\n    }\n  }\n  // comes from API\n  tabToNextCell(backwards, event) {\n    const beans = this.beans;\n    const { focusSvc, rowRenderer } = beans;\n    const focusedCell = focusSvc.getFocusedCell();\n    if (!focusedCell) {\n      return false;\n    }\n    let cellOrRow = _getCellByPosition(beans, focusedCell);\n    if (!cellOrRow) {\n      cellOrRow = rowRenderer.getRowByPosition(focusedCell);\n      if (!cellOrRow || !cellOrRow.isFullWidth()) {\n        return false;\n      }\n    }\n    return !!this.tabToNextCellCommon(cellOrRow, backwards, event);\n  }\n  tabToNextCellCommon(previous, backwards, event) {\n    let editing = previous.editing;\n    if (!editing && previous instanceof CellCtrl) {\n      const cell = previous;\n      const row = cell.rowCtrl;\n      if (row) {\n        editing = row.editing;\n      }\n    }\n    let res;\n    if (editing) {\n      if (this.gos.get(\"editType\") === \"fullRow\") {\n        res = this.moveToNextEditingRow(previous, backwards, event);\n      } else {\n        res = this.moveToNextEditingCell(previous, backwards, event);\n      }\n    } else {\n      res = this.moveToNextCellNotEditing(previous, backwards);\n    }\n    if (res === null) {\n      return res;\n    }\n    return res || !!this.beans.focusSvc.focusedHeader;\n  }\n  // returns null if no navigation should be performed\n  moveToNextEditingCell(previousCell, backwards, event = null) {\n    const previousPos = previousCell.cellPosition;\n    previousCell.eGui.focus();\n    previousCell.stopEditing();\n    const nextCell = this.findNextCellToFocusOn(previousPos, backwards, true);\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell == null) {\n      return false;\n    }\n    this.beans.editSvc?.startEditing(nextCell, null, true, event);\n    nextCell.focusCell(false);\n    return true;\n  }\n  // returns null if no navigation should be performed\n  moveToNextEditingRow(previousCell, backwards, event = null) {\n    const previousPos = previousCell.cellPosition;\n    const nextCell = this.findNextCellToFocusOn(previousPos, backwards, true);\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell == null) {\n      return false;\n    }\n    const nextPos = nextCell.cellPosition;\n    const previousEditable = this.isCellEditable(previousPos);\n    const nextEditable = this.isCellEditable(nextPos);\n    const rowsMatch = nextPos && previousPos.rowIndex === nextPos.rowIndex && previousPos.rowPinned === nextPos.rowPinned;\n    const { editSvc, rowEditSvc } = this.beans;\n    if (previousEditable) {\n      editSvc?.setFocusOutOnEditor(previousCell);\n    }\n    if (!rowsMatch) {\n      const pRow = previousCell.rowCtrl;\n      editSvc?.stopRowEditing(pRow);\n      const nRow = nextCell.rowCtrl;\n      rowEditSvc?.startEditing(nRow, void 0, void 0, event);\n    }\n    if (nextEditable) {\n      editSvc?.setFocusInOnEditor(nextCell);\n      nextCell.focusCell();\n    } else {\n      nextCell.focusCell(true);\n    }\n    return true;\n  }\n  // returns null if no navigation should be performed\n  moveToNextCellNotEditing(previousCell, backwards) {\n    const displayedColumns = this.beans.visibleCols.allCols;\n    let cellPos;\n    if (previousCell instanceof RowCtrl) {\n      cellPos = {\n        ...previousCell.getRowPosition(),\n        column: backwards ? displayedColumns[0] : _last(displayedColumns)\n      };\n    } else {\n      cellPos = previousCell.getFocusedCellPosition();\n    }\n    const nextCell = this.findNextCellToFocusOn(cellPos, backwards, false);\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell instanceof CellCtrl) {\n      nextCell.focusCell(true);\n    } else if (nextCell) {\n      return this.tryToFocusFullWidthRow(nextCell.getRowPosition(), backwards);\n    }\n    return _exists(nextCell);\n  }\n  /**\n   * called by the cell, when tab is pressed while editing.\n   * @return: RenderedCell when navigation successful, false if navigation should not be performed, otherwise null\n   */\n  findNextCellToFocusOn(previousPosition, backwards, startEditing) {\n    let nextPosition = previousPosition;\n    const beans = this.beans;\n    const { cellNavigation, gos, focusSvc, rowRenderer, rangeSvc } = beans;\n    while (true) {\n      if (previousPosition !== nextPosition) {\n        previousPosition = nextPosition;\n      }\n      if (!backwards) {\n        nextPosition = this.getLastCellOfColSpan(nextPosition);\n      }\n      nextPosition = cellNavigation.getNextTabbedCell(nextPosition, backwards);\n      const userFunc = gos.getCallback(\"tabToNextCell\");\n      if (_exists(userFunc)) {\n        const params = {\n          backwards,\n          editing: startEditing,\n          previousCellPosition: previousPosition,\n          nextCellPosition: nextPosition ? nextPosition : null\n        };\n        const userResult = userFunc(params);\n        if (userResult === true) {\n          nextPosition = previousPosition;\n        } else if (userResult === false) {\n          return false;\n        } else {\n          nextPosition = {\n            rowIndex: userResult.rowIndex,\n            column: userResult.column,\n            rowPinned: userResult.rowPinned\n          };\n        }\n      }\n      if (!nextPosition) {\n        return null;\n      }\n      if (nextPosition.rowIndex < 0) {\n        const headerLen = getFocusHeaderRowCount(beans);\n        focusSvc.focusHeaderPosition({\n          headerPosition: {\n            headerRowIndex: headerLen + nextPosition.rowIndex,\n            column: nextPosition.column\n          },\n          fromCell: true\n        });\n        return null;\n      }\n      const fullRowEdit = gos.get(\"editType\") === \"fullRow\";\n      if (startEditing && !fullRowEdit) {\n        const cellIsEditable = this.isCellEditable(nextPosition);\n        if (!cellIsEditable) {\n          continue;\n        }\n      }\n      this.ensureCellVisible(nextPosition);\n      const nextCell = _getCellByPosition(beans, nextPosition);\n      if (!nextCell) {\n        const row = rowRenderer.getRowByPosition(nextPosition);\n        if (!row || !row.isFullWidth() || startEditing) {\n          continue;\n        }\n        return row;\n      }\n      if (cellNavigation.isSuppressNavigable(nextCell.column, nextCell.rowNode)) {\n        continue;\n      }\n      nextCell.setFocusedCellPosition(nextPosition);\n      rangeSvc?.setRangeToCell(nextPosition);\n      return nextCell;\n    }\n  }\n  isCellEditable(cell) {\n    const rowNode = this.lookupRowNodeForCell(cell);\n    if (rowNode) {\n      return cell.column.isCellEditable(rowNode);\n    }\n    return false;\n  }\n  lookupRowNodeForCell({ rowIndex, rowPinned }) {\n    const { pinnedRowModel, rowModel } = this.beans;\n    if (rowPinned === \"top\") {\n      return pinnedRowModel?.getPinnedTopRow(rowIndex);\n    }\n    if (rowPinned === \"bottom\") {\n      return pinnedRowModel?.getPinnedBottomRow(rowIndex);\n    }\n    return rowModel.getRow(rowIndex);\n  }\n  // we use index for rows, but column object for columns, as the next column (by index) might not\n  // be visible (header grouping) so it's not reliable, so using the column object instead.\n  navigateToNextCell(event, key, currentCell, allowUserOverride) {\n    let nextCell = currentCell;\n    let hitEdgeOfGrid = false;\n    const beans = this.beans;\n    const { cellNavigation, focusSvc, gos } = beans;\n    while (nextCell && (nextCell === currentCell || !this.isValidNavigateCell(nextCell))) {\n      if (gos.get(\"enableRtl\")) {\n        if (key === KeyCode.LEFT) {\n          nextCell = this.getLastCellOfColSpan(nextCell);\n        }\n      } else if (key === KeyCode.RIGHT) {\n        nextCell = this.getLastCellOfColSpan(nextCell);\n      }\n      nextCell = cellNavigation.getNextCellToFocus(key, nextCell);\n      hitEdgeOfGrid = _missing(nextCell);\n    }\n    if (hitEdgeOfGrid && event && event.key === KeyCode.UP) {\n      nextCell = {\n        rowIndex: -1,\n        rowPinned: null,\n        column: currentCell.column\n      };\n    }\n    if (allowUserOverride) {\n      const userFunc = gos.getCallback(\"navigateToNextCell\");\n      if (_exists(userFunc)) {\n        const params = {\n          key,\n          previousCellPosition: currentCell,\n          nextCellPosition: nextCell ? nextCell : null,\n          event\n        };\n        const userCell = userFunc(params);\n        if (_exists(userCell)) {\n          nextCell = {\n            rowPinned: userCell.rowPinned,\n            rowIndex: userCell.rowIndex,\n            column: userCell.column\n          };\n        } else {\n          nextCell = null;\n        }\n      }\n    }\n    if (!nextCell) {\n      return;\n    }\n    if (nextCell.rowIndex < 0) {\n      const headerLen = getFocusHeaderRowCount(beans);\n      focusSvc.focusHeaderPosition({\n        headerPosition: { headerRowIndex: headerLen + nextCell.rowIndex, column: currentCell.column },\n        event: event || void 0,\n        fromCell: true\n      });\n      return;\n    }\n    const normalisedPosition = this.getNormalisedPosition(nextCell);\n    if (normalisedPosition) {\n      this.focusPosition(normalisedPosition);\n    } else {\n      this.tryToFocusFullWidthRow(nextCell);\n    }\n  }\n  getNormalisedPosition(cellPosition) {\n    const isSpannedCell = !!this.beans.spannedRowRenderer?.getCellByPosition(cellPosition);\n    if (isSpannedCell) {\n      return cellPosition;\n    }\n    this.ensureCellVisible(cellPosition);\n    const cellCtrl = _getCellByPosition(this.beans, cellPosition);\n    if (!cellCtrl) {\n      return null;\n    }\n    cellPosition = cellCtrl.getFocusedCellPosition();\n    this.ensureCellVisible(cellPosition);\n    return cellPosition;\n  }\n  tryToFocusFullWidthRow(position, backwards) {\n    const { visibleCols, rowRenderer, focusSvc, eventSvc } = this.beans;\n    const displayedColumns = visibleCols.allCols;\n    const rowComp = rowRenderer.getRowByPosition(position);\n    if (!rowComp || !rowComp.isFullWidth()) {\n      return false;\n    }\n    const currentCellFocused = focusSvc.getFocusedCell();\n    const cellPosition = {\n      rowIndex: position.rowIndex,\n      rowPinned: position.rowPinned,\n      column: position.column || (backwards ? _last(displayedColumns) : displayedColumns[0])\n    };\n    this.focusPosition(cellPosition);\n    const fromBelow = backwards == null ? currentCellFocused != null && _isRowBefore(cellPosition, currentCellFocused) : backwards;\n    eventSvc.dispatchEvent({\n      type: \"fullWidthRowFocused\",\n      rowIndex: cellPosition.rowIndex,\n      rowPinned: cellPosition.rowPinned,\n      column: cellPosition.column,\n      isFullWidthCell: true,\n      fromBelow\n    });\n    return true;\n  }\n  focusPosition(cellPosition) {\n    const { focusSvc, rangeSvc } = this.beans;\n    focusSvc.setFocusedCell({\n      rowIndex: cellPosition.rowIndex,\n      column: cellPosition.column,\n      rowPinned: cellPosition.rowPinned,\n      forceBrowserFocus: true\n    });\n    rangeSvc?.setRangeToCell(cellPosition);\n  }\n  isValidNavigateCell(cell) {\n    const rowNode = _getRowNode(this.beans, cell);\n    return !!rowNode;\n  }\n  getLastCellOfColSpan(cell) {\n    const cellCtrl = _getCellByPosition(this.beans, cell);\n    if (!cellCtrl) {\n      return cell;\n    }\n    const colSpanningList = cellCtrl.getColSpanningList();\n    if (colSpanningList.length === 1) {\n      return cell;\n    }\n    return {\n      rowIndex: cell.rowIndex,\n      column: _last(colSpanningList),\n      rowPinned: cell.rowPinned\n    };\n  }\n  ensureCellVisible(gridCell) {\n    const isGroupStickyEnabled = _isGroupRowsSticky(this.gos);\n    const rowNode = this.beans.rowModel.getRow(gridCell.rowIndex);\n    const skipScrollToRow = isGroupStickyEnabled && rowNode?.sticky;\n    const { scrollFeature } = this.gridBodyCon;\n    if (!skipScrollToRow && _missing(gridCell.rowPinned)) {\n      scrollFeature.ensureIndexVisible(gridCell.rowIndex);\n    }\n    if (!gridCell.column.isPinned()) {\n      scrollFeature.ensureColumnVisible(gridCell.column);\n    }\n  }\n};\nfunction getVScroll(beans) {\n  return beans.ctrlsSvc.getScrollFeature().getVScrollPosition();\n}\n\n// packages/ag-grid-community/src/navigation/navigationModule.ts\nvar KeyboardNavigationModule = {\n  moduleName: \"KeyboardNavigation\",\n  version: VERSION,\n  beans: [NavigationService, CellNavigationService, HeaderNavigationService],\n  apiFunctions: {\n    getFocusedCell,\n    clearFocusedCell,\n    setFocusedCell,\n    setFocusedHeader,\n    tabToNextCell,\n    tabToPreviousCell\n  }\n};\n\n// packages/ag-grid-community/src/pagination/pageBoundsListener.ts\nvar PageBoundsListener = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pageBoundsListener\";\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      modelUpdated: this.onModelUpdated.bind(this),\n      recalculateRowBounds: this.calculatePages.bind(this)\n    });\n    this.onModelUpdated();\n  }\n  onModelUpdated(modelUpdatedEvent) {\n    this.calculatePages();\n    this.eventSvc.dispatchEvent({\n      type: \"paginationChanged\",\n      animate: modelUpdatedEvent?.animate ?? false,\n      newData: modelUpdatedEvent?.newData ?? false,\n      newPage: modelUpdatedEvent?.newPage ?? false,\n      newPageSize: modelUpdatedEvent?.newPageSize ?? false,\n      keepRenderedRows: modelUpdatedEvent?.keepRenderedRows ?? false\n    });\n  }\n  calculatePages() {\n    const { pageBounds, pagination, rowModel } = this.beans;\n    if (pagination) {\n      pagination.calculatePages();\n    } else {\n      pageBounds.calculateBounds(0, rowModel.getRowCount() - 1);\n    }\n  }\n};\n\n// packages/ag-grid-community/src/pagination/pageBoundsService.ts\nvar PageBoundsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pageBounds\";\n    this.pixelOffset = 0;\n  }\n  getFirstRow() {\n    return this.topRowBounds?.rowIndex ?? -1;\n  }\n  getLastRow() {\n    return this.bottomRowBounds?.rowIndex ?? -1;\n  }\n  getCurrentPageHeight() {\n    const { topRowBounds, bottomRowBounds } = this;\n    if (!topRowBounds || !bottomRowBounds) {\n      return 0;\n    }\n    return Math.max(bottomRowBounds.rowTop + bottomRowBounds.rowHeight - topRowBounds.rowTop, 0);\n  }\n  getCurrentPagePixelRange() {\n    const { topRowBounds, bottomRowBounds } = this;\n    const pageFirstPixel = topRowBounds?.rowTop ?? 0;\n    const pageLastPixel = bottomRowBounds ? bottomRowBounds.rowTop + bottomRowBounds.rowHeight : 0;\n    return { pageFirstPixel, pageLastPixel };\n  }\n  calculateBounds(topDisplayedRowIndex, bottomDisplayedRowIndex) {\n    const { rowModel } = this.beans;\n    const topRowBounds = rowModel.getRowBounds(topDisplayedRowIndex);\n    if (topRowBounds) {\n      topRowBounds.rowIndex = topDisplayedRowIndex;\n    }\n    this.topRowBounds = topRowBounds;\n    const bottomRowBounds = rowModel.getRowBounds(bottomDisplayedRowIndex);\n    if (bottomRowBounds) {\n      bottomRowBounds.rowIndex = bottomDisplayedRowIndex;\n    }\n    this.bottomRowBounds = bottomRowBounds;\n    this.calculatePixelOffset();\n  }\n  getPixelOffset() {\n    return this.pixelOffset;\n  }\n  calculatePixelOffset() {\n    const value = this.topRowBounds?.rowTop ?? 0;\n    if (this.pixelOffset === value) {\n      return;\n    }\n    this.pixelOffset = value;\n    this.eventSvc.dispatchEvent({ type: \"paginationPixelOffsetChanged\" });\n  }\n};\n\n// packages/ag-grid-community/src/pinnedColumns/pinnedColumnModule.css-GENERATED.ts\nvar pinnedColumnModuleCSS = (\n  /*css*/\n  `.ag-pinned-left-floating-bottom,.ag-pinned-left-floating-top,.ag-pinned-right-floating-bottom,.ag-pinned-right-floating-top{min-width:0;overflow:hidden;position:relative}.ag-pinned-left-sticky-top,.ag-pinned-right-sticky-top{height:100%;overflow:hidden;position:relative}.ag-sticky-bottom-full-width-container,.ag-sticky-top-full-width-container{height:100%;overflow:hidden;width:100%}.ag-pinned-left-header,.ag-pinned-right-header{display:inline-block;height:100%;overflow:hidden;position:relative}.ag-body-horizontal-scroll:not(.ag-scrollbar-invisible){.ag-horizontal-left-spacer:not(.ag-scroller-corner){border-right:var(--ag-pinned-column-border)}.ag-horizontal-right-spacer:not(.ag-scroller-corner){border-left:var(--ag-pinned-column-border)}}.ag-pinned-right-header{border-left:var(--ag-pinned-column-border)}.ag-pinned-left-header{border-right:var(--ag-pinned-column-border)}.ag-cell.ag-cell-first-right-pinned:not(.ag-cell-range-left,.ag-cell-range-single-cell,.ag-cell-focus:not(.ag-cell-range-selected):focus-within){border-left:var(--ag-pinned-column-border)}.ag-cell.ag-cell-last-left-pinned:not(.ag-cell-range-right,.ag-cell-range-single-cell,.ag-cell-focus:not(.ag-cell-range-selected):focus-within){border-right:var(--ag-pinned-column-border)}.ag-pinned-left-header .ag-header-cell-resize:after{left:calc(50% - var(--ag-header-column-resize-handle-width))}.ag-pinned-right-header .ag-header-cell-resize:after{left:50%}.ag-pinned-left-header .ag-header-cell-resize{right:-3px}.ag-pinned-right-header .ag-header-cell-resize{left:-3px}`\n);\n\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/setPinnedWidthFeature.ts\nvar SetPinnedWidthFeature = class extends BeanStub {\n  constructor(isLeft, elements) {\n    super();\n    this.isLeft = isLeft;\n    this.elements = elements;\n    this.getWidth = isLeft ? () => this.beans.pinnedCols.leftWidth : () => this.beans.pinnedCols.rightWidth;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      [`${this.isLeft ? \"left\" : \"right\"}PinnedWidthChanged`]: this.onPinnedWidthChanged.bind(this)\n    });\n  }\n  onPinnedWidthChanged() {\n    const width = this.getWidth();\n    const displayed = width > 0;\n    for (const element of this.elements) {\n      if (element) {\n        _setDisplayed(element, displayed);\n        _setFixedWidth(element, width);\n      }\n    }\n  }\n};\n\n// packages/ag-grid-community/src/pinnedColumns/pinnedColumnService.ts\nvar PinnedColumnService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pinnedCols\";\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n    });\n    const listener = this.checkContainerWidths.bind(this);\n    this.addManagedEventListeners({\n      displayedColumnsChanged: listener,\n      displayedColumnsWidthChanged: listener\n    });\n    this.addManagedPropertyListener(\"domLayout\", listener);\n  }\n  checkContainerWidths() {\n    const { gos, visibleCols, eventSvc } = this.beans;\n    const printLayout = _isDomLayout(gos, \"print\");\n    const newLeftWidth = printLayout ? 0 : visibleCols.getColsLeftWidth();\n    const newRightWidth = printLayout ? 0 : visibleCols.getDisplayedColumnsRightWidth();\n    if (newLeftWidth != this.leftWidth) {\n      this.leftWidth = newLeftWidth;\n      eventSvc.dispatchEvent({ type: \"leftPinnedWidthChanged\" });\n    }\n    if (newRightWidth != this.rightWidth) {\n      this.rightWidth = newRightWidth;\n      eventSvc.dispatchEvent({ type: \"rightPinnedWidthChanged\" });\n    }\n  }\n  keepPinnedColumnsNarrowerThanViewport() {\n    const eBodyViewport = this.gridBodyCtrl.eBodyViewport;\n    const bodyWidth = _getInnerWidth(eBodyViewport);\n    if (bodyWidth <= 50) {\n      return;\n    }\n    const processedColumnsToRemove = this.getPinnedColumnsOverflowingViewport(bodyWidth - 50);\n    const processUnpinnedColumns = this.gos.getCallback(\"processUnpinnedColumns\");\n    const { columns, hasLockedPinned } = processedColumnsToRemove;\n    let columnsToRemove = columns;\n    if (!columnsToRemove.length && !hasLockedPinned) {\n      return;\n    }\n    if (processUnpinnedColumns) {\n      const params = {\n        columns: columnsToRemove,\n        viewportWidth: bodyWidth\n      };\n      columnsToRemove = processUnpinnedColumns(params);\n    }\n    if (!columnsToRemove || !columnsToRemove.length) {\n      return;\n    }\n    columnsToRemove = columnsToRemove.filter((col) => !isRowNumberCol(col));\n    this.setColsPinned(columnsToRemove, null, \"viewportSizeFeature\");\n  }\n  createPinnedWidthFeature(isLeft, ...elements) {\n    return new SetPinnedWidthFeature(isLeft, elements);\n  }\n  setColsPinned(keys, pinned, source) {\n    const { colModel, colAnimation, visibleCols, gos } = this.beans;\n    if (!colModel.cols) {\n      return;\n    }\n    if (!keys?.length) {\n      return;\n    }\n    if (_isDomLayout(gos, \"print\")) {\n      _warn(37);\n      return;\n    }\n    colAnimation?.start();\n    let actualPinned;\n    if (pinned === true || pinned === \"left\") {\n      actualPinned = \"left\";\n    } else if (pinned === \"right\") {\n      actualPinned = \"right\";\n    } else {\n      actualPinned = null;\n    }\n    const updatedCols = [];\n    keys.forEach((key) => {\n      if (!key) {\n        return;\n      }\n      const column = colModel.getCol(key);\n      if (!column) {\n        return;\n      }\n      if (column.getPinned() !== actualPinned) {\n        this.setColPinned(column, actualPinned);\n        updatedCols.push(column);\n      }\n    });\n    if (updatedCols.length) {\n      visibleCols.refresh(source);\n      dispatchColumnPinnedEvent(this.eventSvc, updatedCols, source);\n    }\n    colAnimation?.finish();\n  }\n  initCol(column) {\n    const { pinned, initialPinned } = column.colDef;\n    if (pinned !== void 0) {\n      this.setColPinned(column, pinned);\n    } else {\n      this.setColPinned(column, initialPinned);\n    }\n  }\n  setColPinned(column, pinned) {\n    if (pinned === true || pinned === \"left\") {\n      column.pinned = \"left\";\n    } else if (pinned === \"right\") {\n      column.pinned = \"right\";\n    } else {\n      column.pinned = null;\n    }\n    column.dispatchStateUpdatedEvent(\"pinned\");\n  }\n  setupHeaderPinnedWidth(ctrl) {\n    const { scrollVisibleSvc } = this.beans;\n    if (ctrl.pinned == null) {\n      return;\n    }\n    const pinningLeft = ctrl.pinned === \"left\";\n    const pinningRight = ctrl.pinned === \"right\";\n    ctrl.hidden = true;\n    const listener = () => {\n      const width = pinningLeft ? this.leftWidth : this.rightWidth;\n      if (width == null) {\n        return;\n      }\n      const hidden = width == 0;\n      const hiddenChanged = ctrl.hidden !== hidden;\n      const isRtl = this.gos.get(\"enableRtl\");\n      const scrollbarWidth = scrollVisibleSvc.getScrollbarWidth();\n      const addPaddingForScrollbar = scrollVisibleSvc.verticalScrollShowing && (isRtl && pinningLeft || !isRtl && pinningRight);\n      const widthWithPadding = addPaddingForScrollbar ? width + scrollbarWidth : width;\n      ctrl.comp.setPinnedContainerWidth(`${widthWithPadding}px`);\n      ctrl.comp.setDisplayed(!hidden);\n      if (hiddenChanged) {\n        ctrl.hidden = hidden;\n        ctrl.refresh();\n      }\n    };\n    ctrl.addManagedEventListeners({\n      leftPinnedWidthChanged: listener,\n      rightPinnedWidthChanged: listener,\n      scrollVisibilityChanged: listener,\n      scrollbarWidthChanged: listener\n    });\n  }\n  getHeaderResizeDiff(diff, column) {\n    const pinned = column.getPinned();\n    if (pinned) {\n      const { leftWidth, rightWidth } = this;\n      const bodyWidth = _getInnerWidth(this.beans.ctrlsSvc.getGridBodyCtrl().eBodyViewport) - 50;\n      if (leftWidth + rightWidth + diff > bodyWidth) {\n        if (bodyWidth > leftWidth + rightWidth) {\n          diff = bodyWidth - leftWidth - rightWidth;\n        } else {\n          return 0;\n        }\n      }\n    }\n    return diff;\n  }\n  getPinnedColumnsOverflowingViewport(viewportWidth) {\n    const pinnedRightWidth = this.rightWidth ?? 0;\n    const pinnedLeftWidth = this.leftWidth ?? 0;\n    const totalPinnedWidth = pinnedRightWidth + pinnedLeftWidth;\n    let hasLockedPinned = false;\n    if (totalPinnedWidth < viewportWidth) {\n      return { columns: [], hasLockedPinned };\n    }\n    const { visibleCols } = this.beans;\n    const pinnedLeftColumns = [...visibleCols.leftCols];\n    const pinnedRightColumns = [...visibleCols.rightCols];\n    let indexRight = 0;\n    let indexLeft = 0;\n    const totalWidthRemoved = 0;\n    const columnsToRemove = [];\n    let spaceNecessary = totalPinnedWidth - totalWidthRemoved - viewportWidth;\n    while ((indexLeft < pinnedLeftColumns.length || indexRight < pinnedRightColumns.length) && spaceNecessary > 0) {\n      if (indexRight < pinnedRightColumns.length) {\n        const currentColumn = pinnedRightColumns[indexRight++];\n        if (currentColumn.colDef.lockPinned) {\n          hasLockedPinned = true;\n          continue;\n        }\n        spaceNecessary -= currentColumn.getActualWidth();\n        columnsToRemove.push(currentColumn);\n      }\n      if (indexLeft < pinnedLeftColumns.length && spaceNecessary > 0) {\n        const currentColumn = pinnedLeftColumns[indexLeft++];\n        if (currentColumn.colDef.lockPinned) {\n          hasLockedPinned = true;\n          continue;\n        }\n        spaceNecessary -= currentColumn.getActualWidth();\n        columnsToRemove.push(currentColumn);\n      }\n    }\n    return { columns: columnsToRemove, hasLockedPinned };\n  }\n};\n\n// packages/ag-grid-community/src/pinnedColumns/pinnedColumnModule.ts\nvar PinnedColumnModule = {\n  moduleName: \"PinnedColumn\",\n  version: VERSION,\n  beans: [PinnedColumnService],\n  css: [pinnedColumnModuleCSS]\n};\n\n// packages/ag-grid-community/src/rendering/ariaAnnouncementService.ts\nvar AriaAnnouncementService = class extends BeanStub {\n  constructor() {\n    super();\n    this.beanName = \"ariaAnnounce\";\n    this.descriptionContainer = null;\n    this.pendingAnnouncements = /* @__PURE__ */ new Map();\n    this.lastAnnouncement = \"\";\n    this.updateAnnouncement = _debounce(this, this.updateAnnouncement.bind(this), 200);\n  }\n  postConstruct() {\n    const beans = this.beans;\n    const eDocument = _getDocument(beans);\n    const div = this.descriptionContainer = eDocument.createElement(\"div\");\n    div.classList.add(\"ag-aria-description-container\");\n    _setAriaLive(div, \"polite\");\n    _setAriaRelevant(div, \"additions text\");\n    _setAriaAtomic(div, true);\n    beans.eGridDiv.appendChild(div);\n  }\n  /**\n   * @param key used for debouncing calls\n   */\n  announceValue(value, key) {\n    this.pendingAnnouncements.set(key, value);\n    this.updateAnnouncement();\n  }\n  updateAnnouncement() {\n    if (!this.descriptionContainer) {\n      return;\n    }\n    const value = Array.from(this.pendingAnnouncements.values()).join(\". \");\n    this.pendingAnnouncements.clear();\n    this.descriptionContainer.textContent = \"\";\n    setTimeout(() => {\n      if (this.isAlive() && this.descriptionContainer) {\n        let valueToAnnounce = value;\n        if (this.lastAnnouncement === valueToAnnounce) {\n          valueToAnnounce = `${valueToAnnounce}.`;\n        }\n        this.lastAnnouncement = valueToAnnounce;\n        this.descriptionContainer.textContent = valueToAnnounce;\n      }\n    }, 50);\n  }\n  destroy() {\n    super.destroy();\n    const { descriptionContainer } = this;\n    if (descriptionContainer) {\n      _clearElement(descriptionContainer);\n      descriptionContainer.parentElement?.removeChild(descriptionContainer);\n    }\n    this.descriptionContainer = null;\n    this.pendingAnnouncements.clear();\n  }\n};\n\n// packages/ag-grid-community/src/rendering/ariaModule.ts\nvar AriaModule = {\n  moduleName: \"Aria\",\n  version: VERSION,\n  beans: [AriaAnnouncementService]\n};\n\n// packages/ag-grid-community/src/rendering/overlays/overlayApi.ts\nfunction showLoadingOverlay(beans) {\n  beans.overlays?.showLoadingOverlay();\n}\nfunction showNoRowsOverlay(beans) {\n  beans.overlays?.showNoRowsOverlay();\n}\nfunction hideOverlay(beans) {\n  beans.overlays?.hideOverlay();\n}\n\n// packages/ag-grid-community/src/rendering/overlays/overlayWrapperComponent.css-GENERATED.ts\nvar overlayWrapperComponentCSS = (\n  /*css*/\n  `.ag-overlay{inset:0;pointer-events:none;position:absolute;z-index:2}.ag-overlay-panel,.ag-overlay-wrapper{display:flex;height:100%;width:100%}.ag-overlay-wrapper{align-items:center;flex:none;justify-content:center;text-align:center}.ag-overlay-loading-wrapper{pointer-events:all}.ag-overlay-loading-center{background:var(--ag-background-color);border:1px solid var(--ag-border-color);border-radius:var(--ag-border-radius);box-shadow:var(--ag-popup-shadow);padding:var(--ag-spacing)}`\n);\n\n// packages/ag-grid-community/src/rendering/overlays/overlayWrapperComponent.ts\nvar OverlayWrapperComponent = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-overlay\" role=\"presentation\">\n                <div class=\"ag-overlay-panel\" role=\"presentation\">\n                    <div class=\"ag-overlay-wrapper\" data-ref=\"eOverlayWrapper\" role=\"presentation\"></div>\n                </div>\n            </div>`\n    );\n    this.eOverlayWrapper = RefPlaceholder;\n    this.activePromise = null;\n    this.activeOverlay = null;\n    this.updateListenerDestroyFunc = null;\n    this.activeCssClass = null;\n    this.elToFocusAfter = null;\n    this.registerCSS(overlayWrapperComponentCSS);\n  }\n  handleKeyDown(e) {\n    if (e.key !== KeyCode.TAB || e.defaultPrevented || _isStopPropagationForAgGrid(e)) {\n      return;\n    }\n    const beans = this.beans;\n    const nextEl = _findNextFocusableElement(beans, this.eOverlayWrapper, false, e.shiftKey);\n    if (nextEl) {\n      return;\n    }\n    let isFocused = false;\n    if (e.shiftKey) {\n      isFocused = beans.focusSvc.focusGridView({\n        column: _last(beans.visibleCols.allCols),\n        backwards: true,\n        canFocusOverlay: false\n      });\n    } else {\n      isFocused = _focusNextGridCoreContainer(beans, false);\n    }\n    if (isFocused) {\n      e.preventDefault();\n    }\n  }\n  updateLayoutClasses(cssClass, params) {\n    const overlayWrapperClassList = this.eOverlayWrapper.classList;\n    const { AUTO_HEIGHT, NORMAL, PRINT } = LayoutCssClasses;\n    overlayWrapperClassList.toggle(AUTO_HEIGHT, params.autoHeight);\n    overlayWrapperClassList.toggle(NORMAL, params.normal);\n    overlayWrapperClassList.toggle(PRINT, params.print);\n  }\n  postConstruct() {\n    this.createManagedBean(new LayoutFeature(this));\n    this.setDisplayed(false, { skipAriaHidden: true });\n    this.beans.overlays.setOverlayWrapperComp(this);\n    this.addManagedElementListeners(this.getFocusableElement(), { keydown: this.handleKeyDown.bind(this) });\n  }\n  setWrapperTypeClass(overlayWrapperCssClass) {\n    const overlayWrapperClassList = this.eOverlayWrapper.classList;\n    if (this.activeCssClass) {\n      overlayWrapperClassList.toggle(this.activeCssClass, false);\n    }\n    this.activeCssClass = overlayWrapperCssClass;\n    overlayWrapperClassList.toggle(overlayWrapperCssClass, true);\n  }\n  showOverlay(overlayComponentPromise, overlayWrapperCssClass, exclusive, gridOption) {\n    this.setWrapperTypeClass(overlayWrapperCssClass);\n    this.destroyActiveOverlay();\n    this.elToFocusAfter = null;\n    this.activePromise = overlayComponentPromise;\n    if (!overlayComponentPromise) {\n      return;\n    }\n    this.setDisplayed(true, { skipAriaHidden: true });\n    if (exclusive && this.isGridFocused()) {\n      const activeElement = _getActiveDomElement(this.beans);\n      if (activeElement && !_isNothingFocused(this.beans)) {\n        this.elToFocusAfter = activeElement;\n      }\n    }\n    overlayComponentPromise.then((comp) => {\n      if (this.activePromise !== overlayComponentPromise) {\n        if (this.activeOverlay !== comp) {\n          this.destroyBean(comp);\n          comp = null;\n        }\n        return;\n      }\n      this.activePromise = null;\n      if (!comp) {\n        return;\n      }\n      if (this.activeOverlay !== comp) {\n        this.eOverlayWrapper.appendChild(comp.getGui());\n        this.activeOverlay = comp;\n        if (gridOption) {\n          const component = comp;\n          this.updateListenerDestroyFunc = this.addManagedPropertyListener(gridOption, ({ currentValue }) => {\n            component.refresh?.(_addGridCommonParams(this.gos, { ...currentValue ?? {} }));\n          });\n        }\n      }\n      if (exclusive && this.isGridFocused()) {\n        _focusInto(this.eOverlayWrapper);\n      }\n    });\n  }\n  updateOverlayWrapperPaddingTop(padding) {\n    this.eOverlayWrapper.style.setProperty(\"padding-top\", `${padding}px`);\n  }\n  destroyActiveOverlay() {\n    this.activePromise = null;\n    const activeOverlay = this.activeOverlay;\n    if (!activeOverlay) {\n      return;\n    }\n    let elementToFocus = this.elToFocusAfter;\n    this.activeOverlay = null;\n    this.elToFocusAfter = null;\n    if (elementToFocus && !this.isGridFocused()) {\n      elementToFocus = null;\n    }\n    const updateListenerDestroyFunc = this.updateListenerDestroyFunc;\n    if (updateListenerDestroyFunc) {\n      updateListenerDestroyFunc();\n      this.updateListenerDestroyFunc = null;\n    }\n    this.destroyBean(activeOverlay);\n    _clearElement(this.eOverlayWrapper);\n    elementToFocus?.focus?.({ preventScroll: true });\n  }\n  hideOverlay() {\n    this.destroyActiveOverlay();\n    this.setDisplayed(false, { skipAriaHidden: true });\n  }\n  isGridFocused() {\n    const activeEl = _getActiveDomElement(this.beans);\n    return !!activeEl && this.beans.eGridDiv.contains(activeEl);\n  }\n  destroy() {\n    this.elToFocusAfter = null;\n    this.destroyActiveOverlay();\n    this.beans.overlays.setOverlayWrapperComp(void 0);\n    super.destroy();\n  }\n};\nvar OverlayWrapperSelector = {\n  selector: \"AG-OVERLAY-WRAPPER\",\n  component: OverlayWrapperComponent\n};\n\n// packages/ag-grid-community/src/rendering/overlays/overlayService.ts\nvar OverlayService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"overlays\";\n    this.state = 0 /* Hidden */;\n    this.showInitialOverlay = true;\n    this.wrapperPadding = 0;\n  }\n  postConstruct() {\n    this.isClientSide = _isClientSideRowModel(this.gos);\n    this.isServerSide = !this.isClientSide && _isServerSideRowModel(this.gos);\n    const updateOverlayVisibility = () => this.updateOverlayVisibility();\n    this.addManagedEventListeners({\n      newColumnsLoaded: updateOverlayVisibility,\n      rowDataUpdated: updateOverlayVisibility,\n      gridSizeChanged: this.refreshWrapperPadding.bind(this),\n      rowCountReady: () => {\n        this.showInitialOverlay = false;\n        this.updateOverlayVisibility();\n      }\n    });\n    this.addManagedPropertyListener(\"loading\", updateOverlayVisibility);\n  }\n  setOverlayWrapperComp(overlayWrapperComp) {\n    this.eWrapper = overlayWrapperComp;\n    this.updateOverlayVisibility();\n  }\n  /** Returns true if the overlay is visible. */\n  isVisible() {\n    return this.state !== 0 /* Hidden */ && !!this.eWrapper;\n  }\n  /** Returns true if the overlay is visible and is exclusive (popup over the grid) */\n  isExclusive() {\n    return this.state === 1 /* Loading */ && !!this.eWrapper;\n  }\n  showLoadingOverlay() {\n    this.showInitialOverlay = false;\n    const gos = this.gos;\n    const loading = gos.get(\"loading\");\n    if (!loading && (loading !== void 0 || gos.get(\"suppressLoadingOverlay\"))) {\n      return;\n    }\n    this.doShowLoadingOverlay();\n  }\n  showNoRowsOverlay() {\n    this.showInitialOverlay = false;\n    const gos = this.gos;\n    if (gos.get(\"loading\") || gos.get(\"suppressNoRowsOverlay\")) {\n      return;\n    }\n    this.doShowNoRowsOverlay();\n  }\n  hideOverlay() {\n    this.showInitialOverlay = false;\n    if (this.gos.get(\"loading\")) {\n      _warn(99);\n      return;\n    }\n    this.doHideOverlay();\n  }\n  getOverlayWrapperSelector() {\n    return OverlayWrapperSelector;\n  }\n  getOverlayWrapperCompClass() {\n    return OverlayWrapperComponent;\n  }\n  updateOverlayVisibility() {\n    if (!this.eWrapper) {\n      this.state = 0 /* Hidden */;\n      return;\n    }\n    const {\n      state,\n      isClientSide,\n      isServerSide,\n      beans: { gos, colModel, rowModel }\n    } = this;\n    let loading = this.gos.get(\"loading\");\n    if (loading !== void 0) {\n      this.showInitialOverlay = false;\n    }\n    if (this.showInitialOverlay && loading === void 0 && !gos.get(\"suppressLoadingOverlay\")) {\n      loading = !gos.get(\"columnDefs\") || !colModel.ready || !gos.get(\"rowData\") && isClientSide;\n    }\n    if (loading) {\n      if (state !== 1 /* Loading */) {\n        this.doShowLoadingOverlay();\n      }\n    } else {\n      this.showInitialOverlay = false;\n      if (isClientSide && rowModel.isEmpty() && !gos.get(\"suppressNoRowsOverlay\")) {\n        if (state !== 2 /* NoRows */) {\n          this.doShowNoRowsOverlay();\n        }\n      } else if (state === 1 /* Loading */ || !isServerSide && state !== 0 /* Hidden */) {\n        this.doHideOverlay();\n      }\n    }\n  }\n  doShowLoadingOverlay() {\n    if (!this.eWrapper) {\n      return;\n    }\n    this.state = 1 /* Loading */;\n    this.showOverlay(\n      _getLoadingOverlayCompDetails(this.beans.userCompFactory, _addGridCommonParams(this.gos, {})),\n      \"ag-overlay-loading-wrapper\",\n      \"loadingOverlayComponentParams\"\n    );\n    this.updateExclusive();\n  }\n  doShowNoRowsOverlay() {\n    if (!this.eWrapper) {\n      return;\n    }\n    this.state = 2 /* NoRows */;\n    this.showOverlay(\n      _getNoRowsOverlayCompDetails(this.beans.userCompFactory, _addGridCommonParams(this.gos, {})),\n      \"ag-overlay-no-rows-wrapper\",\n      \"noRowsOverlayComponentParams\"\n    );\n    this.updateExclusive();\n  }\n  doHideOverlay() {\n    if (!this.eWrapper) {\n      return;\n    }\n    this.state = 0 /* Hidden */;\n    this.eWrapper.hideOverlay();\n    this.updateExclusive();\n  }\n  showOverlay(compDetails, wrapperCssClass, gridOption) {\n    const promise = compDetails?.newAgStackInstance() ?? null;\n    this.eWrapper?.showOverlay(promise, wrapperCssClass, this.isExclusive(), gridOption);\n    this.refreshWrapperPadding();\n  }\n  updateExclusive() {\n    const wasExclusive = this.exclusive;\n    this.exclusive = this.isExclusive();\n    if (this.exclusive !== wasExclusive) {\n      this.eventSvc.dispatchEvent({\n        type: \"overlayExclusiveChanged\"\n      });\n    }\n  }\n  refreshWrapperPadding() {\n    const eWrapper = this.eWrapper;\n    if (!eWrapper) {\n      return;\n    }\n    let newPadding = 0;\n    if (this.state === 2 /* NoRows */) {\n      const headerCtrl = this.beans.ctrlsSvc.get(\"gridHeaderCtrl\");\n      const headerHeight = headerCtrl?.headerHeight || 0;\n      newPadding = headerHeight;\n    } else if (this.wrapperPadding !== 0) {\n      newPadding = 0;\n    }\n    if (this.wrapperPadding === newPadding) {\n      return;\n    }\n    this.wrapperPadding = newPadding;\n    eWrapper.updateOverlayWrapperPaddingTop(newPadding);\n  }\n};\n\n// packages/ag-grid-community/src/rendering/overlays/overlayModule.ts\nvar OverlayModule = {\n  moduleName: \"Overlay\",\n  version: VERSION,\n  userComponents: {\n    agLoadingOverlay: LoadingOverlayComponent2,\n    agNoRowsOverlay: NoRowsOverlayComponent2\n  },\n  apiFunctions: {\n    showLoadingOverlay,\n    showNoRowsOverlay,\n    hideOverlay\n  },\n  beans: [OverlayService]\n};\n\n// packages/ag-grid-community/src/rendering/rowContainerHeightService.ts\nvar RowContainerHeightService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowContainerHeight\";\n    // the scrollY position\n    this.scrollY = 0;\n    // how tall the body is\n    this.uiBodyHeight = 0;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({ bodyHeightChanged: this.updateOffset.bind(this) });\n    this.maxDivHeight = _getMaxDivHeight();\n    _logIfDebug(this.gos, \"RowContainerHeightService - maxDivHeight = \" + this.maxDivHeight);\n  }\n  updateOffset() {\n    if (!this.stretching) {\n      return;\n    }\n    const newScrollY = this.beans.ctrlsSvc.getScrollFeature().getVScrollPosition().top;\n    const newBodyHeight = this.getUiBodyHeight();\n    const atLeastOneChanged = newScrollY !== this.scrollY || newBodyHeight !== this.uiBodyHeight;\n    if (atLeastOneChanged) {\n      this.scrollY = newScrollY;\n      this.uiBodyHeight = newBodyHeight;\n      this.calculateOffset();\n    }\n  }\n  calculateOffset() {\n    this.setUiContainerHeight(this.maxDivHeight);\n    this.pixelsToShave = this.modelHeight - this.uiContainerHeight;\n    this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;\n    const scrollPercent = this.scrollY / this.maxScrollY;\n    const divStretchOffset = scrollPercent * this.pixelsToShave;\n    _logIfDebug(\n      this.gos,\n      `RowContainerHeightService - Div Stretch Offset = ${divStretchOffset} (${this.pixelsToShave} * ${scrollPercent})`\n    );\n    this.setDivStretchOffset(divStretchOffset);\n  }\n  setUiContainerHeight(height) {\n    if (height !== this.uiContainerHeight) {\n      this.uiContainerHeight = height;\n      this.eventSvc.dispatchEvent({ type: \"rowContainerHeightChanged\" });\n    }\n  }\n  clearOffset() {\n    this.setUiContainerHeight(this.modelHeight);\n    this.pixelsToShave = 0;\n    this.setDivStretchOffset(0);\n  }\n  setDivStretchOffset(newOffset) {\n    const newOffsetFloor = typeof newOffset === \"number\" ? Math.floor(newOffset) : null;\n    if (this.divStretchOffset === newOffsetFloor) {\n      return;\n    }\n    this.divStretchOffset = newOffsetFloor;\n    this.eventSvc.dispatchEvent({ type: \"heightScaleChanged\" });\n  }\n  setModelHeight(modelHeight) {\n    this.modelHeight = modelHeight;\n    this.stretching = modelHeight != null && // null happens when in print layout\n    this.maxDivHeight > 0 && modelHeight > this.maxDivHeight;\n    if (this.stretching) {\n      this.calculateOffset();\n    } else {\n      this.clearOffset();\n    }\n  }\n  getRealPixelPosition(modelPixel) {\n    return modelPixel - this.divStretchOffset;\n  }\n  getUiBodyHeight() {\n    const pos = this.beans.ctrlsSvc.getScrollFeature().getVScrollPosition();\n    return pos.bottom - pos.top;\n  }\n  getScrollPositionForPixel(rowTop) {\n    if (this.pixelsToShave <= 0) {\n      return rowTop;\n    }\n    const modelMaxScroll = this.modelHeight - this.getUiBodyHeight();\n    const scrollPercent = rowTop / modelMaxScroll;\n    const scrollPixel = this.maxScrollY * scrollPercent;\n    return scrollPixel;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/rowRenderer.ts\nvar ROW_ANIMATION_TIMEOUT = 400;\nvar RowRenderer = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowRenderer\";\n    this.destroyFuncsForColumnListeners = [];\n    // map of row ids to row objects. keeps track of which elements\n    // are rendered for which rows in the dom.\n    this.rowCtrlsByRowIndex = {};\n    this.zombieRowCtrls = {};\n    this.allRowCtrls = [];\n    this.topRowCtrls = [];\n    this.bottomRowCtrls = [];\n    // we only allow one refresh at a time, otherwise the internal memory structure here\n    // will get messed up. this can happen if the user has a cellRenderer, and inside the\n    // renderer they call an API method that results in another pass of the refresh,\n    // then it will be trying to draw rows in the middle of a refresh.\n    this.refreshInProgress = false;\n    this.dataFirstRenderedFired = false;\n    this.setupRangeSelectionListeners = () => {\n      const onCellSelectionChanged = () => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onCellSelectionChanged());\n      };\n      const onColumnMovedPinnedVisible = () => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.updateRangeBordersIfRangeCount());\n      };\n      const addCellSelectionListeners = () => {\n        this.eventSvc.addEventListener(\"cellSelectionChanged\", onCellSelectionChanged);\n        this.eventSvc.addEventListener(\"columnMoved\", onColumnMovedPinnedVisible);\n        this.eventSvc.addEventListener(\"columnPinned\", onColumnMovedPinnedVisible);\n        this.eventSvc.addEventListener(\"columnVisible\", onColumnMovedPinnedVisible);\n      };\n      const removeCellSelectionListeners = () => {\n        this.eventSvc.removeEventListener(\"cellSelectionChanged\", onCellSelectionChanged);\n        this.eventSvc.removeEventListener(\"columnMoved\", onColumnMovedPinnedVisible);\n        this.eventSvc.removeEventListener(\"columnPinned\", onColumnMovedPinnedVisible);\n        this.eventSvc.removeEventListener(\"columnVisible\", onColumnMovedPinnedVisible);\n      };\n      this.addDestroyFunc(() => removeCellSelectionListeners());\n      this.addManagedPropertyListeners([\"enableRangeSelection\", \"cellSelection\"], () => {\n        const isEnabled = _isCellSelectionEnabled(this.gos);\n        if (isEnabled) {\n          addCellSelectionListeners();\n        } else {\n          removeCellSelectionListeners();\n        }\n      });\n      const cellSelectionEnabled = _isCellSelectionEnabled(this.gos);\n      if (cellSelectionEnabled) {\n        addCellSelectionListeners();\n      }\n    };\n  }\n  wireBeans(beans) {\n    this.pageBounds = beans.pageBounds;\n    this.colModel = beans.colModel;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.rowModel = beans.rowModel;\n    this.focusSvc = beans.focusSvc;\n    this.rowContainerHeight = beans.rowContainerHeight;\n    this.ctrlsSvc = beans.ctrlsSvc;\n  }\n  postConstruct() {\n    this.ctrlsSvc.whenReady(this, (p) => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n      this.initialise();\n    });\n  }\n  initialise() {\n    this.addManagedEventListeners({\n      paginationChanged: this.onPageLoaded.bind(this),\n      pinnedRowDataChanged: this.onPinnedRowDataChanged.bind(this),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      bodyScroll: this.onBodyScroll.bind(this),\n      bodyHeightChanged: this.redraw.bind(this, {})\n    });\n    this.addManagedPropertyListeners([\"domLayout\", \"embedFullWidthRows\"], () => this.onDomLayoutChanged());\n    this.addManagedPropertyListeners([\"suppressMaxRenderedRowRestriction\", \"rowBuffer\"], () => this.redraw());\n    this.addManagedPropertyListener(\"suppressCellFocus\", (e) => this.onSuppressCellFocusChanged(e.currentValue));\n    this.addManagedPropertyListeners(\n      [\n        \"groupSuppressBlankHeader\",\n        \"getBusinessKeyForNode\",\n        \"fullWidthCellRenderer\",\n        \"fullWidthCellRendererParams\",\n        \"suppressStickyTotalRow\",\n        \"groupRowRenderer\",\n        \"groupRowRendererParams\",\n        // maybe only needs to refresh FW rows...\n        \"loadingCellRenderer\",\n        \"loadingCellRendererParams\",\n        \"detailCellRenderer\",\n        \"detailCellRendererParams\",\n        \"enableRangeSelection\",\n        \"enableCellTextSelection\"\n      ],\n      () => this.redrawRows()\n    );\n    this.addManagedPropertyListener(\"cellSelection\", ({ currentValue, previousValue }) => {\n      if (!previousValue && currentValue || previousValue && !currentValue) {\n        this.redrawRows();\n      }\n    });\n    const { stickyRowSvc, gos } = this.beans;\n    if (stickyRowSvc) {\n      this.stickyRowFeature = stickyRowSvc.createStickyRowFeature(\n        this,\n        this.createRowCon.bind(this),\n        this.destroyRowCtrls.bind(this)\n      );\n    } else {\n      const gridBodyCtrl = this.gridBodyCtrl;\n      gridBodyCtrl.setStickyTopHeight(0);\n      gridBodyCtrl.setStickyBottomHeight(0);\n    }\n    this.registerCellEventListeners();\n    this.initialiseCache();\n    this.printLayout = _isDomLayout(gos, \"print\");\n    this.embedFullWidthRows = this.printLayout || gos.get(\"embedFullWidthRows\");\n    this.redrawAfterModelUpdate();\n  }\n  initialiseCache() {\n    if (this.gos.get(\"keepDetailRows\")) {\n      const countProp = this.getKeepDetailRowsCount();\n      const count = countProp != null ? countProp : 3;\n      this.cachedRowCtrls = new RowCtrlCache(count);\n    }\n  }\n  getKeepDetailRowsCount() {\n    return this.gos.get(\"keepDetailRowsCount\");\n  }\n  getStickyTopRowCtrls() {\n    return this.stickyRowFeature?.stickyTopRowCtrls ?? [];\n  }\n  getStickyBottomRowCtrls() {\n    return this.stickyRowFeature?.stickyBottomRowCtrls ?? [];\n  }\n  updateAllRowCtrls() {\n    const liveList = Object.values(this.rowCtrlsByRowIndex);\n    const zombieList = Object.values(this.zombieRowCtrls);\n    const cachedList = this.cachedRowCtrls?.getEntries() ?? [];\n    if (zombieList.length > 0 || cachedList.length > 0) {\n      this.allRowCtrls = [...liveList, ...zombieList, ...cachedList];\n    } else {\n      this.allRowCtrls = liveList;\n    }\n  }\n  onCellFocusChanged(event) {\n    this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onCellFocused(event));\n    this.getFullWidthRowCtrls().forEach((rowCtrl) => rowCtrl.onFullWidthRowFocused(event));\n  }\n  onSuppressCellFocusChanged(suppressCellFocus) {\n    this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onSuppressCellFocusChanged(suppressCellFocus));\n    this.getFullWidthRowCtrls().forEach((rowCtrl) => rowCtrl.onSuppressCellFocusChanged(suppressCellFocus));\n  }\n  // in a clean design, each cell would register for each of these events. however when scrolling, all the cells\n  // registering and de-registering for events is a performance bottleneck. so we register here once and inform\n  // all active cells.\n  registerCellEventListeners() {\n    this.addManagedEventListeners({\n      cellFocused: (event) => {\n        this.onCellFocusChanged(event);\n      },\n      cellFocusCleared: () => this.onCellFocusChanged(),\n      flashCells: (event) => {\n        const { cellFlashSvc } = this.beans;\n        if (cellFlashSvc) {\n          this.getAllCellCtrls().forEach((cellCtrl) => cellFlashSvc.onFlashCells(cellCtrl, event));\n        }\n      },\n      columnHoverChanged: () => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onColumnHover());\n      },\n      displayedColumnsChanged: () => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onDisplayedColumnsChanged());\n      },\n      displayedColumnsWidthChanged: () => {\n        if (this.printLayout) {\n          this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onLeftChanged());\n        }\n      }\n    });\n    this.setupRangeSelectionListeners();\n    this.refreshListenersToColumnsForCellComps();\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.refreshListenersToColumnsForCellComps.bind(this)\n    });\n    this.addDestroyFunc(this.removeGridColumnListeners.bind(this));\n  }\n  // executes all functions in destroyFuncsForColumnListeners and then clears the list\n  removeGridColumnListeners() {\n    this.destroyFuncsForColumnListeners.forEach((func) => func());\n    this.destroyFuncsForColumnListeners.length = 0;\n  }\n  // this function adds listeners onto all the grid columns, which are the column that we could have cellComps for.\n  // when the grid columns change, we add listeners again. in an ideal design, each CellComp would just register to\n  // the column it belongs to on creation, however this was a bottleneck with the number of cells, so do it here\n  // once instead.\n  refreshListenersToColumnsForCellComps() {\n    this.removeGridColumnListeners();\n    const cols = this.colModel.getCols();\n    cols.forEach((col) => {\n      const forEachCellWithThisCol = (callback) => {\n        this.getAllCellCtrls().forEach((cellCtrl) => {\n          if (cellCtrl.column === col) {\n            callback(cellCtrl);\n          }\n        });\n      };\n      const leftChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onLeftChanged());\n      };\n      const widthChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onWidthChanged());\n      };\n      const firstRightPinnedChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onFirstRightPinnedChanged());\n      };\n      const lastLeftPinnedChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onLastLeftPinnedChanged());\n      };\n      const colDefChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onColDefChanged());\n      };\n      col.__addEventListener(\"leftChanged\", leftChangedListener);\n      col.__addEventListener(\"widthChanged\", widthChangedListener);\n      col.__addEventListener(\"firstRightPinnedChanged\", firstRightPinnedChangedListener);\n      col.__addEventListener(\"lastLeftPinnedChanged\", lastLeftPinnedChangedListener);\n      col.__addEventListener(\"colDefChanged\", colDefChangedListener);\n      this.destroyFuncsForColumnListeners.push(() => {\n        col.__removeEventListener(\"leftChanged\", leftChangedListener);\n        col.__removeEventListener(\"widthChanged\", widthChangedListener);\n        col.__removeEventListener(\"firstRightPinnedChanged\", firstRightPinnedChangedListener);\n        col.__removeEventListener(\"lastLeftPinnedChanged\", lastLeftPinnedChangedListener);\n        col.__removeEventListener(\"colDefChanged\", colDefChangedListener);\n      });\n    });\n  }\n  onDomLayoutChanged() {\n    const printLayout = _isDomLayout(this.gos, \"print\");\n    const embedFullWidthRows = printLayout || this.gos.get(\"embedFullWidthRows\");\n    const destroyRows = embedFullWidthRows !== this.embedFullWidthRows || this.printLayout !== printLayout;\n    this.printLayout = printLayout;\n    this.embedFullWidthRows = embedFullWidthRows;\n    if (destroyRows) {\n      this.redrawAfterModelUpdate({ domLayoutChanged: true });\n    }\n  }\n  // for row models that have datasources, when we update the datasource, we need to force the rowRenderer\n  // to redraw all rows. otherwise the old rows from the old datasource will stay displayed.\n  datasourceChanged() {\n    this.firstRenderedRow = 0;\n    this.lastRenderedRow = -1;\n    const rowIndexesToRemove = Object.keys(this.rowCtrlsByRowIndex);\n    this.removeRowCtrls(rowIndexesToRemove);\n  }\n  onPageLoaded(event) {\n    const params = {\n      recycleRows: event.keepRenderedRows,\n      animate: event.animate,\n      newData: event.newData,\n      newPage: event.newPage,\n      // because this is a model updated event (not pinned rows), we\n      // can skip updating the pinned rows. this is needed so that if user\n      // is doing transaction updates, the pinned rows are not getting constantly\n      // trashed - or editing cells in pinned rows are not refreshed and put into read mode\n      onlyBody: true\n    };\n    this.redrawAfterModelUpdate(params);\n  }\n  /**\n   * @param column AgColumn\n   * @returns An array with HTMLElement for every cell of the column passed as param.\n   * If the cell is spanning across multiple columns, it only returns the html element\n   * if the column passed is the first column of the span (used for auto width calculation).\n   */\n  getAllCellsNotSpanningForColumn(column) {\n    const res = [];\n    this.getAllRowCtrls().forEach((rowCtrl) => {\n      const eCell = rowCtrl.getCellCtrl(column, true)?.eGui;\n      if (eCell) {\n        res.push(eCell);\n      }\n    });\n    return res;\n  }\n  refreshFloatingRowComps() {\n    this.refreshFloatingRows(this.topRowCtrls, \"top\");\n    this.refreshFloatingRows(this.bottomRowCtrls, \"bottom\");\n  }\n  /**\n   * Determines which row controllers need to be destroyed and re-created vs which ones can\n   * be re-used.\n   *\n   * This is operation is to pinned/floating rows as `this.recycleRows` is to normal/body rows.\n   *\n   * All `RowCtrl` instances in `rowCtrls` that don't correspond to `RowNode` instances in `rowNodes` are destroyed.\n   * All `RowNode` instances in `rowNodes` that don't correspond to `RowCtrl` instances in `rowCtrls` are created.\n   * All instances in `rowCtrls` must be in the same order as their corresponding nodes in `rowNodes`.\n   *\n   * @param rowCtrls The list of existing row controllers\n   * @param rowNodes The canonical list of row nodes that should have associated controllers\n   */\n  refreshFloatingRows(rowCtrls, floating) {\n    const { pinnedRowModel, beans, printLayout } = this;\n    const rowCtrlMap = Object.fromEntries(rowCtrls.map((ctrl) => [ctrl.rowNode.id, ctrl]));\n    pinnedRowModel?.forEachPinnedRow(floating, (node, i) => {\n      const rowCtrl = rowCtrls[i];\n      const rowCtrlDoesNotExist = rowCtrl && pinnedRowModel.getPinnedRowById(rowCtrl.rowNode.id, floating) === void 0;\n      if (rowCtrlDoesNotExist) {\n        rowCtrl.destroyFirstPass();\n        rowCtrl.destroySecondPass();\n      }\n      if (node.id in rowCtrlMap) {\n        rowCtrls[i] = rowCtrlMap[node.id];\n        delete rowCtrlMap[node.id];\n      } else {\n        rowCtrls[i] = new RowCtrl(node, beans, false, false, printLayout);\n      }\n    });\n    const rowNodeCount = (floating === \"top\" ? pinnedRowModel?.getPinnedTopRowCount() : pinnedRowModel?.getPinnedBottomRowCount()) ?? 0;\n    rowCtrls.length = rowNodeCount;\n  }\n  onPinnedRowDataChanged() {\n    const params = {\n      recycleRows: true\n    };\n    this.redrawAfterModelUpdate(params);\n  }\n  redrawRow(rowNode, suppressEvent = false) {\n    if (rowNode.sticky) {\n      this.stickyRowFeature?.refreshStickyNode(rowNode);\n    } else if (this.cachedRowCtrls?.has(rowNode)) {\n      this.cachedRowCtrls.removeRow(rowNode);\n      return;\n    } else {\n      const destroyAndRecreateCtrl = (dataStruct) => {\n        const ctrl = dataStruct[rowNode.rowIndex];\n        if (!ctrl) {\n          return;\n        }\n        if (ctrl.rowNode !== rowNode) {\n          return;\n        }\n        ctrl.destroyFirstPass();\n        ctrl.destroySecondPass();\n        dataStruct[rowNode.rowIndex] = this.createRowCon(rowNode, false, false);\n      };\n      switch (rowNode.rowPinned) {\n        case \"top\":\n          destroyAndRecreateCtrl(this.topRowCtrls);\n          break;\n        case \"bottom\":\n          destroyAndRecreateCtrl(this.bottomRowCtrls);\n          break;\n        default:\n          destroyAndRecreateCtrl(this.rowCtrlsByRowIndex);\n          this.updateAllRowCtrls();\n      }\n    }\n    if (!suppressEvent) {\n      this.dispatchDisplayedRowsChanged(false);\n    }\n  }\n  redrawRows(rowNodes) {\n    const partialRefresh = rowNodes != null;\n    if (partialRefresh) {\n      rowNodes?.forEach((node) => this.redrawRow(node, true));\n      this.dispatchDisplayedRowsChanged(false);\n      return;\n    }\n    this.redrawAfterModelUpdate();\n  }\n  getCellToRestoreFocusToAfterRefresh(params) {\n    const focusedCell = params?.suppressKeepFocus ? null : this.focusSvc.getFocusCellToUseAfterRefresh();\n    if (focusedCell == null) {\n      return null;\n    }\n    const activeElement = _getActiveDomElement(this.beans);\n    const cellDomData = _getDomData(this.gos, activeElement, DOM_DATA_KEY_CELL_CTRL);\n    const rowDomData = _getDomData(this.gos, activeElement, DOM_DATA_KEY_ROW_CTRL);\n    const gridElementFocused = cellDomData || rowDomData;\n    return gridElementFocused ? focusedCell : null;\n  }\n  // gets called from:\n  // +) initialisation (in registerGridComp) params = null\n  // +) onDomLayoutChanged, params = null\n  // +) onPageLoaded, recycleRows, animate, newData, newPage from event, onlyBody=true\n  // +) onPinnedRowDataChanged, recycleRows = true\n  // +) redrawRows (from Grid API), recycleRows = true/false\n  redrawAfterModelUpdate(params = {}) {\n    this.getLockOnRefresh();\n    const focusedCell = this.getCellToRestoreFocusToAfterRefresh(params);\n    this.updateContainerHeights();\n    this.scrollToTopIfNewData(params);\n    const recycleRows = !params.domLayoutChanged && !!params.recycleRows;\n    const animate = params.animate && _isAnimateRows(this.gos);\n    const rowsToRecycle = recycleRows ? this.getRowsToRecycle() : null;\n    if (!recycleRows) {\n      this.removeAllRowComps();\n    }\n    this.workOutFirstAndLastRowsToRender();\n    const { stickyRowFeature } = this;\n    if (stickyRowFeature) {\n      stickyRowFeature.checkStickyRows();\n      const extraHeight = stickyRowFeature.extraTopHeight + stickyRowFeature.extraBottomHeight;\n      if (extraHeight) {\n        this.updateContainerHeights(extraHeight);\n      }\n    }\n    this.recycleRows(rowsToRecycle, animate);\n    this.gridBodyCtrl.updateRowCount();\n    if (!params.onlyBody) {\n      this.refreshFloatingRowComps();\n    }\n    this.dispatchDisplayedRowsChanged();\n    if (focusedCell != null) {\n      this.restoreFocusedCell(focusedCell);\n    }\n    this.releaseLockOnRefresh();\n  }\n  scrollToTopIfNewData(params) {\n    const scrollToTop = params.newData || params.newPage;\n    const suppressScrollToTop = this.gos.get(\"suppressScrollOnNewData\");\n    if (scrollToTop && !suppressScrollToTop) {\n      this.gridBodyCtrl.scrollFeature.scrollToTop();\n      this.stickyRowFeature?.resetOffsets();\n    }\n  }\n  updateContainerHeights(additionalHeight = 0) {\n    const { rowContainerHeight } = this;\n    if (this.printLayout) {\n      rowContainerHeight.setModelHeight(null);\n      return;\n    }\n    let containerHeight = this.pageBounds.getCurrentPageHeight();\n    if (containerHeight === 0) {\n      containerHeight = 1;\n    }\n    rowContainerHeight.setModelHeight(containerHeight + additionalHeight);\n  }\n  getLockOnRefresh() {\n    if (this.refreshInProgress) {\n      throw new Error(_errMsg(252));\n    }\n    this.refreshInProgress = true;\n    this.beans.frameworkOverrides.getLockOnRefresh?.();\n  }\n  releaseLockOnRefresh() {\n    this.refreshInProgress = false;\n    this.beans.frameworkOverrides.releaseLockOnRefresh?.();\n  }\n  isRefreshInProgress() {\n    return this.refreshInProgress;\n  }\n  // sets the focus to the provided cell, if the cell is provided. this way, the user can call refresh without\n  // worry about the focus been lost. this is important when the user is using keyboard navigation to do edits\n  // and the cellEditor is calling 'refresh' to get other cells to update (as other cells might depend on the\n  // edited cell).\n  restoreFocusedCell(cellPosition) {\n    if (!cellPosition) {\n      return;\n    }\n    this.focusSvc.restoreFocusedCell(cellPosition, () => {\n      this.onCellFocusChanged(\n        _addGridCommonParams(this.gos, {\n          rowIndex: cellPosition.rowIndex,\n          column: cellPosition.column,\n          rowPinned: cellPosition.rowPinned,\n          forceBrowserFocus: true,\n          preventScrollOnBrowserFocus: true,\n          type: \"cellFocused\"\n        })\n      );\n    });\n  }\n  getAllCellCtrls() {\n    const res = [];\n    const rowCtrls = this.getAllRowCtrls();\n    const rowCtrlsLength = rowCtrls.length;\n    for (let i = 0; i < rowCtrlsLength; i++) {\n      const cellCtrls = rowCtrls[i].getAllCellCtrls();\n      const cellCtrlsLength = cellCtrls.length;\n      for (let j = 0; j < cellCtrlsLength; j++) {\n        res.push(cellCtrls[j]);\n      }\n    }\n    return res;\n  }\n  getAllRowCtrls() {\n    const { spannedRowRenderer } = this.beans;\n    const stickyTopRowCtrls = this.getStickyTopRowCtrls();\n    const stickyBottomRowCtrls = this.getStickyBottomRowCtrls();\n    const res = [\n      ...this.topRowCtrls,\n      ...this.bottomRowCtrls,\n      ...stickyTopRowCtrls,\n      ...stickyBottomRowCtrls,\n      ...spannedRowRenderer?.getCtrls(\"top\") ?? [],\n      ...spannedRowRenderer?.getCtrls(\"bottom\") ?? [],\n      ...spannedRowRenderer?.getCtrls(\"center\") ?? [],\n      ...Object.values(this.rowCtrlsByRowIndex)\n    ];\n    return res;\n  }\n  addRenderedRowListener(eventName, rowIndex, callback) {\n    const rowComp = this.rowCtrlsByRowIndex[rowIndex];\n    if (rowComp) {\n      rowComp.addEventListener(eventName, callback);\n    }\n  }\n  refreshCells(params = {}) {\n    const refreshCellParams = {\n      forceRefresh: params.force,\n      newData: false,\n      suppressFlash: params.suppressFlash\n    };\n    for (const cellCtrl of this.getCellCtrls(params.rowNodes, params.columns)) {\n      cellCtrl.refreshOrDestroyCell(refreshCellParams);\n    }\n    this.refreshFullWidth(params.rowNodes);\n  }\n  refreshFullWidth(rowNodes) {\n    if (!rowNodes) {\n      return;\n    }\n    let cellFocused = null;\n    if (this.stickyRowFeature) {\n      cellFocused = this.getCellToRestoreFocusToAfterRefresh() || null;\n    }\n    for (const rowCtrl of this.getRowCtrls(rowNodes)) {\n      if (!rowCtrl.isFullWidth()) {\n        continue;\n      }\n      const refreshed = rowCtrl.refreshFullWidth();\n      if (!refreshed) {\n        this.redrawRow(rowCtrl.rowNode, true);\n      }\n    }\n    this.dispatchDisplayedRowsChanged(false);\n    if (cellFocused) {\n      this.restoreFocusedCell(cellFocused);\n    }\n  }\n  /**\n   * @param rowNodes if provided, returns the RowCtrls for the provided rowNodes. otherwise returns all RowCtrls.\n   */\n  getRowCtrls(rowNodes) {\n    const rowIdsMap = mapRowNodes(rowNodes);\n    const allRowCtrls = this.getAllRowCtrls();\n    if (!rowNodes || !rowIdsMap) {\n      return allRowCtrls;\n    }\n    return allRowCtrls.filter((rowCtrl) => {\n      const rowNode = rowCtrl.rowNode;\n      return isRowInMap(rowNode, rowIdsMap);\n    });\n  }\n  // returns CellCtrl's that match the provided rowNodes and columns. eg if one row node\n  // and two columns provided, that identifies 4 cells, so 4 CellCtrl's returned.\n  getCellCtrls(rowNodes, columns) {\n    let colIdsMap;\n    if (_exists(columns)) {\n      colIdsMap = {};\n      columns.forEach((colKey) => {\n        const column = this.colModel.getCol(colKey);\n        if (_exists(column)) {\n          colIdsMap[column.getId()] = true;\n        }\n      });\n    }\n    const res = [];\n    this.getRowCtrls(rowNodes).forEach((rowCtrl) => {\n      rowCtrl.getAllCellCtrls().forEach((cellCtrl) => {\n        const colId = cellCtrl.column.getId();\n        const excludeColFromRefresh = colIdsMap && !colIdsMap[colId];\n        if (excludeColFromRefresh) {\n          return;\n        }\n        res.push(cellCtrl);\n      });\n    });\n    return res;\n  }\n  destroy() {\n    this.removeAllRowComps(true);\n    super.destroy();\n  }\n  removeAllRowComps(suppressAnimation = false) {\n    const rowIndexesToRemove = Object.keys(this.rowCtrlsByRowIndex);\n    this.removeRowCtrls(rowIndexesToRemove, suppressAnimation);\n    this.stickyRowFeature?.destroyStickyCtrls();\n  }\n  getRowsToRecycle() {\n    const stubNodeIndexes = [];\n    for (const index of Object.keys(this.rowCtrlsByRowIndex)) {\n      const rowCtrl = this.rowCtrlsByRowIndex[index];\n      const stubNode = rowCtrl.rowNode.id == null;\n      if (stubNode) {\n        stubNodeIndexes.push(index);\n      }\n    }\n    this.removeRowCtrls(stubNodeIndexes);\n    const ctrlsByIdMap = {};\n    for (const rowCtrl of Object.values(this.rowCtrlsByRowIndex)) {\n      const rowNode = rowCtrl.rowNode;\n      ctrlsByIdMap[rowNode.id] = rowCtrl;\n    }\n    this.rowCtrlsByRowIndex = {};\n    return ctrlsByIdMap;\n  }\n  // takes array of row indexes\n  removeRowCtrls(rowsToRemove, suppressAnimation = false) {\n    rowsToRemove.forEach((indexToRemove) => {\n      const rowCtrl = this.rowCtrlsByRowIndex[indexToRemove];\n      if (rowCtrl) {\n        rowCtrl.destroyFirstPass(suppressAnimation);\n        rowCtrl.destroySecondPass();\n      }\n      delete this.rowCtrlsByRowIndex[indexToRemove];\n    });\n  }\n  onBodyScroll(e) {\n    if (e.direction !== \"vertical\") {\n      return;\n    }\n    this.redraw({ afterScroll: true });\n  }\n  // gets called when rows don't change, but viewport does, so after:\n  // 1) height of grid body changes, ie number of displayed rows has changed\n  // 2) grid scrolled to new position\n  // 3) ensure index visible (which is a scroll)\n  redraw(params = {}) {\n    const { afterScroll } = params;\n    let cellFocused;\n    const stickyRowFeature = this.stickyRowFeature;\n    if (stickyRowFeature) {\n      cellFocused = this.getCellToRestoreFocusToAfterRefresh() || void 0;\n    }\n    const oldFirstRow = this.firstRenderedRow;\n    const oldLastRow = this.lastRenderedRow;\n    this.workOutFirstAndLastRowsToRender();\n    let hasStickyRowChanges = false;\n    if (stickyRowFeature) {\n      hasStickyRowChanges = stickyRowFeature.checkStickyRows();\n      const extraHeight = stickyRowFeature.extraTopHeight + stickyRowFeature.extraBottomHeight;\n      if (extraHeight) {\n        this.updateContainerHeights(extraHeight);\n      }\n    }\n    const rangeChanged = this.firstRenderedRow !== oldFirstRow || this.lastRenderedRow !== oldLastRow;\n    if (afterScroll && !hasStickyRowChanges && !rangeChanged) {\n      return;\n    }\n    this.getLockOnRefresh();\n    this.recycleRows(null, false, afterScroll);\n    this.releaseLockOnRefresh();\n    this.dispatchDisplayedRowsChanged(afterScroll && !hasStickyRowChanges);\n    if (cellFocused != null) {\n      const newFocusedCell = this.getCellToRestoreFocusToAfterRefresh();\n      if (cellFocused != null && newFocusedCell == null) {\n        this.beans.animationFrameSvc?.flushAllFrames();\n        this.restoreFocusedCell(cellFocused);\n      }\n    }\n  }\n  removeRowCompsNotToDraw(indexesToDraw, suppressAnimation) {\n    const indexesToDrawMap = {};\n    indexesToDraw.forEach((index) => indexesToDrawMap[index] = true);\n    const existingIndexes = Object.keys(this.rowCtrlsByRowIndex);\n    const indexesNotToDraw = existingIndexes.filter((index) => !indexesToDrawMap[index]);\n    this.removeRowCtrls(indexesNotToDraw, suppressAnimation);\n  }\n  calculateIndexesToDraw(rowsToRecycle) {\n    const indexesToDraw = [];\n    for (let i = this.firstRenderedRow; i <= this.lastRenderedRow; i++) {\n      indexesToDraw.push(i);\n    }\n    const checkRowToDraw = (rowComp) => {\n      const index = rowComp.rowNode.rowIndex;\n      if (index == null) {\n        return;\n      }\n      if (index < this.firstRenderedRow || index > this.lastRenderedRow) {\n        if (this.doNotUnVirtualiseRow(rowComp)) {\n          indexesToDraw.push(index);\n        }\n      }\n    };\n    for (const rowCtrl of Object.values(this.rowCtrlsByRowIndex)) {\n      checkRowToDraw(rowCtrl);\n    }\n    if (rowsToRecycle) {\n      for (const rowCtrl of Object.values(rowsToRecycle)) {\n        checkRowToDraw(rowCtrl);\n      }\n    }\n    indexesToDraw.sort((a, b) => a - b);\n    const ret = [];\n    for (let i = 0; i < indexesToDraw.length; i++) {\n      const currRow = indexesToDraw[i];\n      const rowNode = this.rowModel.getRow(currRow);\n      if (rowNode && !rowNode.sticky) {\n        ret.push(currRow);\n      }\n    }\n    return ret;\n  }\n  recycleRows(rowsToRecycle, animate = false, afterScroll = false) {\n    const indexesToDraw = this.calculateIndexesToDraw(rowsToRecycle);\n    if (this.printLayout || afterScroll) {\n      animate = false;\n    }\n    this.removeRowCompsNotToDraw(indexesToDraw, !animate);\n    const rowCtrls = [];\n    indexesToDraw.forEach((rowIndex) => {\n      const rowCtrl = this.createOrUpdateRowCtrl(rowIndex, rowsToRecycle, animate, afterScroll);\n      if (_exists(rowCtrl)) {\n        rowCtrls.push(rowCtrl);\n      }\n    });\n    if (rowsToRecycle) {\n      const { animationFrameSvc } = this.beans;\n      const useAnimationFrame = animationFrameSvc && afterScroll && !this.gos.get(\"suppressAnimationFrame\") && !this.printLayout;\n      if (useAnimationFrame) {\n        animationFrameSvc.addDestroyTask(() => {\n          this.destroyRowCtrls(rowsToRecycle, animate);\n          this.updateAllRowCtrls();\n          this.dispatchDisplayedRowsChanged();\n        });\n      } else {\n        this.destroyRowCtrls(rowsToRecycle, animate);\n      }\n    }\n    this.updateAllRowCtrls();\n  }\n  dispatchDisplayedRowsChanged(afterScroll = false) {\n    this.eventSvc.dispatchEvent({\n      type: \"displayedRowsChanged\",\n      afterScroll\n    });\n  }\n  onDisplayedColumnsChanged() {\n    const { visibleCols } = this.beans;\n    const pinningLeft = visibleCols.isPinningLeft();\n    const pinningRight = visibleCols.isPinningRight();\n    const atLeastOneChanged = this.pinningLeft !== pinningLeft || pinningRight !== this.pinningRight;\n    if (atLeastOneChanged) {\n      this.pinningLeft = pinningLeft;\n      this.pinningRight = pinningRight;\n      if (this.embedFullWidthRows) {\n        this.redrawFullWidthEmbeddedRows();\n      }\n    }\n  }\n  // when embedding, what gets showed in each section depends on what is pinned. eg if embedding group expand / collapse,\n  // then it should go into the pinned left area if pinning left, or the center area if not pinning.\n  redrawFullWidthEmbeddedRows() {\n    const rowsToRemove = [];\n    this.getFullWidthRowCtrls().forEach((fullWidthCtrl) => {\n      const rowIndex = fullWidthCtrl.rowNode.rowIndex;\n      rowsToRemove.push(rowIndex.toString());\n    });\n    this.refreshFloatingRowComps();\n    this.removeRowCtrls(rowsToRemove);\n    this.redraw({ afterScroll: true });\n  }\n  getFullWidthRowCtrls(rowNodes) {\n    const rowNodesMap = mapRowNodes(rowNodes);\n    return this.getAllRowCtrls().filter((rowCtrl) => {\n      if (!rowCtrl.isFullWidth()) {\n        return false;\n      }\n      const rowNode = rowCtrl.rowNode;\n      if (rowNodesMap != null && !isRowInMap(rowNode, rowNodesMap)) {\n        return false;\n      }\n      return true;\n    });\n  }\n  createOrUpdateRowCtrl(rowIndex, rowsToRecycle, animate, afterScroll) {\n    let rowNode;\n    let rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\n    if (!rowCtrl) {\n      rowNode = this.rowModel.getRow(rowIndex);\n      if (_exists(rowNode) && _exists(rowsToRecycle) && rowsToRecycle[rowNode.id] && rowNode.alreadyRendered) {\n        rowCtrl = rowsToRecycle[rowNode.id];\n        rowsToRecycle[rowNode.id] = null;\n      }\n    }\n    const creatingNewRowCtrl = !rowCtrl;\n    if (creatingNewRowCtrl) {\n      if (!rowNode) {\n        rowNode = this.rowModel.getRow(rowIndex);\n      }\n      if (_exists(rowNode)) {\n        rowCtrl = this.createRowCon(rowNode, animate, afterScroll);\n      } else {\n        return;\n      }\n    }\n    if (rowNode) {\n      rowNode.alreadyRendered = true;\n    }\n    this.rowCtrlsByRowIndex[rowIndex] = rowCtrl;\n    return rowCtrl;\n  }\n  destroyRowCtrls(rowCtrlsMap, animate) {\n    const executeInAWhileFuncs = [];\n    if (rowCtrlsMap) {\n      for (const rowCtrl of Object.values(rowCtrlsMap)) {\n        if (!rowCtrl) {\n          continue;\n        }\n        if (this.cachedRowCtrls && rowCtrl.isCacheable()) {\n          this.cachedRowCtrls.addRow(rowCtrl);\n          continue;\n        }\n        rowCtrl.destroyFirstPass(!animate);\n        if (animate) {\n          const instanceId = rowCtrl.instanceId;\n          this.zombieRowCtrls[instanceId] = rowCtrl;\n          executeInAWhileFuncs.push(() => {\n            rowCtrl.destroySecondPass();\n            delete this.zombieRowCtrls[instanceId];\n          });\n        } else {\n          rowCtrl.destroySecondPass();\n        }\n      }\n    }\n    if (animate) {\n      executeInAWhileFuncs.push(() => {\n        this.updateAllRowCtrls();\n        this.dispatchDisplayedRowsChanged();\n      });\n      window.setTimeout(() => executeInAWhileFuncs.forEach((func) => func()), ROW_ANIMATION_TIMEOUT);\n    }\n  }\n  getRowBuffer() {\n    return this.gos.get(\"rowBuffer\");\n  }\n  getRowBufferInPixels() {\n    const rowsToBuffer = this.getRowBuffer();\n    const defaultRowHeight = _getRowHeightAsNumber(this.beans);\n    return rowsToBuffer * defaultRowHeight;\n  }\n  workOutFirstAndLastRowsToRender() {\n    const { rowContainerHeight, pageBounds, rowModel } = this;\n    rowContainerHeight.updateOffset();\n    let newFirst;\n    let newLast;\n    if (!rowModel.isRowsToRender()) {\n      newFirst = 0;\n      newLast = -1;\n    } else if (this.printLayout) {\n      this.beans.environment.refreshRowHeightVariable();\n      newFirst = pageBounds.getFirstRow();\n      newLast = pageBounds.getLastRow();\n    } else {\n      const bufferPixels = this.getRowBufferInPixels();\n      const scrollFeature = this.ctrlsSvc.getScrollFeature();\n      const suppressRowVirtualisation = this.gos.get(\"suppressRowVirtualisation\");\n      let rowHeightsChanged = false;\n      let firstPixel;\n      let lastPixel;\n      do {\n        const paginationOffset = pageBounds.getPixelOffset();\n        const { pageFirstPixel, pageLastPixel } = pageBounds.getCurrentPagePixelRange();\n        const divStretchOffset = rowContainerHeight.divStretchOffset;\n        const bodyVRange = scrollFeature.getVScrollPosition();\n        const bodyTopPixel = bodyVRange.top;\n        const bodyBottomPixel = bodyVRange.bottom;\n        if (suppressRowVirtualisation) {\n          firstPixel = pageFirstPixel + divStretchOffset;\n          lastPixel = pageLastPixel + divStretchOffset;\n        } else {\n          firstPixel = Math.max(bodyTopPixel + paginationOffset - bufferPixels, pageFirstPixel) + divStretchOffset;\n          lastPixel = Math.min(bodyBottomPixel + paginationOffset + bufferPixels, pageLastPixel) + divStretchOffset;\n        }\n        this.firstVisibleVPixel = Math.max(bodyTopPixel + paginationOffset, pageFirstPixel) + divStretchOffset;\n        this.lastVisibleVPixel = Math.min(bodyBottomPixel + paginationOffset, pageLastPixel) + divStretchOffset;\n        rowHeightsChanged = this.ensureAllRowsInRangeHaveHeightsCalculated(firstPixel, lastPixel);\n      } while (rowHeightsChanged);\n      let firstRowIndex = rowModel.getRowIndexAtPixel(firstPixel);\n      let lastRowIndex = rowModel.getRowIndexAtPixel(lastPixel);\n      const pageFirstRow = pageBounds.getFirstRow();\n      const pageLastRow = pageBounds.getLastRow();\n      if (firstRowIndex < pageFirstRow) {\n        firstRowIndex = pageFirstRow;\n      }\n      if (lastRowIndex > pageLastRow) {\n        lastRowIndex = pageLastRow;\n      }\n      newFirst = firstRowIndex;\n      newLast = lastRowIndex;\n    }\n    const rowLayoutNormal = _isDomLayout(this.gos, \"normal\");\n    const suppressRowCountRestriction = this.gos.get(\"suppressMaxRenderedRowRestriction\");\n    const rowBufferMaxSize = Math.max(this.getRowBuffer(), 500);\n    if (rowLayoutNormal && !suppressRowCountRestriction) {\n      if (newLast - newFirst > rowBufferMaxSize) {\n        newLast = newFirst + rowBufferMaxSize;\n      }\n    }\n    const firstDiffers = newFirst !== this.firstRenderedRow;\n    const lastDiffers = newLast !== this.lastRenderedRow;\n    if (firstDiffers || lastDiffers) {\n      this.firstRenderedRow = newFirst;\n      this.lastRenderedRow = newLast;\n      this.eventSvc.dispatchEvent({\n        type: \"viewportChanged\",\n        firstRow: newFirst,\n        lastRow: newLast\n      });\n    }\n  }\n  /**\n   * This event will only be fired once, and is queued until after the browser next renders.\n   * This allows us to fire an event during the start of the render cycle, when we first see data being rendered\n   * but not execute the event until all of the data has finished being rendered to the dom.\n   */\n  dispatchFirstDataRenderedEvent() {\n    if (this.dataFirstRenderedFired) {\n      return;\n    }\n    this.dataFirstRenderedFired = true;\n    _requestAnimationFrame(this.beans, () => {\n      this.beans.eventSvc.dispatchEvent({\n        type: \"firstDataRendered\",\n        firstRow: this.firstRenderedRow,\n        lastRow: this.lastRenderedRow\n      });\n    });\n  }\n  ensureAllRowsInRangeHaveHeightsCalculated(topPixel, bottomPixel) {\n    const pinnedRowHeightsChanged = this.pinnedRowModel?.ensureRowHeightsValid();\n    const stickyHeightsChanged = this.stickyRowFeature?.ensureRowHeightsValid();\n    const { pageBounds, rowModel } = this;\n    const rowModelHeightsChanged = rowModel.ensureRowHeightsValid(\n      topPixel,\n      bottomPixel,\n      pageBounds.getFirstRow(),\n      pageBounds.getLastRow()\n    );\n    if (rowModelHeightsChanged || stickyHeightsChanged) {\n      this.eventSvc.dispatchEvent({\n        type: \"recalculateRowBounds\"\n      });\n    }\n    if (stickyHeightsChanged || rowModelHeightsChanged || pinnedRowHeightsChanged) {\n      this.updateContainerHeights();\n      return true;\n    }\n    return false;\n  }\n  // check that none of the rows to remove are editing or focused as:\n  // a) if editing, we want to keep them, otherwise the user will loose the context of the edit,\n  //    eg user starts editing, enters some text, then scrolls down and then up, next time row rendered\n  //    the edit is reset - so we want to keep it rendered.\n  // b) if focused, we want ot keep keyboard focus, so if user ctrl+c, it goes to clipboard,\n  //    otherwise the user can range select and drag (with focus cell going out of the viewport)\n  //    and then ctrl+c, nothing will happen if cell is removed from dom.\n  // c) if detail record of master detail, as users complained that the context of detail rows\n  //    was getting lost when detail row out of view. eg user expands to show detail row,\n  //    then manipulates the detail panel (eg sorts the detail grid), then context is lost\n  //    after detail panel is scrolled out of / into view.\n  doNotUnVirtualiseRow(rowCtrl) {\n    const REMOVE_ROW = false;\n    const KEEP_ROW = true;\n    const rowNode = rowCtrl.rowNode;\n    const rowHasFocus = this.focusSvc.isRowNodeFocused(rowNode);\n    const rowIsEditing = rowCtrl.editing;\n    const rowIsDetail = rowNode.detail;\n    const mightWantToKeepRow = rowHasFocus || rowIsEditing || rowIsDetail;\n    if (!mightWantToKeepRow) {\n      return REMOVE_ROW;\n    }\n    const rowNodePresent = this.isRowPresent(rowNode);\n    return rowNodePresent ? KEEP_ROW : REMOVE_ROW;\n  }\n  isRowPresent(rowNode) {\n    if (!this.rowModel.isRowPresent(rowNode)) {\n      return false;\n    }\n    return this.beans.pagination?.isRowPresent(rowNode) ?? true;\n  }\n  createRowCon(rowNode, animate, afterScroll) {\n    const rowCtrlFromCache = this.cachedRowCtrls?.getRow(rowNode) ?? null;\n    if (rowCtrlFromCache) {\n      return rowCtrlFromCache;\n    }\n    const suppressAnimationFrame = this.gos.get(\"suppressAnimationFrame\");\n    const useAnimationFrameForCreate = afterScroll && !suppressAnimationFrame && !this.printLayout && !!this.beans.animationFrameSvc;\n    const res = new RowCtrl(rowNode, this.beans, animate, useAnimationFrameForCreate, this.printLayout);\n    return res;\n  }\n  getRenderedNodes() {\n    const viewportRows = Object.values(this.rowCtrlsByRowIndex).map((rowCtrl) => rowCtrl.rowNode);\n    const stickyTopRows = this.getStickyTopRowCtrls().map((rowCtrl) => rowCtrl.rowNode);\n    const stickyBottomRows = this.getStickyBottomRowCtrls().map((rowCtrl) => rowCtrl.rowNode);\n    return [...stickyTopRows, ...viewportRows, ...stickyBottomRows];\n  }\n  getRowByPosition(rowPosition) {\n    let rowCtrl;\n    const { rowIndex } = rowPosition;\n    switch (rowPosition.rowPinned) {\n      case \"top\":\n        rowCtrl = this.topRowCtrls[rowIndex];\n        break;\n      case \"bottom\":\n        rowCtrl = this.bottomRowCtrls[rowIndex];\n        break;\n      default:\n        rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\n        if (!rowCtrl) {\n          rowCtrl = this.getStickyTopRowCtrls().find((ctrl) => ctrl.rowNode.rowIndex === rowIndex) || null;\n          if (!rowCtrl) {\n            rowCtrl = this.getStickyBottomRowCtrls().find((ctrl) => ctrl.rowNode.rowIndex === rowIndex) || null;\n          }\n        }\n        break;\n    }\n    return rowCtrl;\n  }\n  // returns true if any row between startIndex and endIndex is rendered. used by\n  // SSRM or IRM, as they don't want to purge visible blocks from cache.\n  isRangeInRenderedViewport(startIndex, endIndex) {\n    const parentClosed = startIndex == null || endIndex == null;\n    if (parentClosed) {\n      return false;\n    }\n    const blockAfterViewport = startIndex > this.lastRenderedRow;\n    const blockBeforeViewport = endIndex < this.firstRenderedRow;\n    const blockInsideViewport = !blockBeforeViewport && !blockAfterViewport;\n    return blockInsideViewport;\n  }\n};\nvar RowCtrlCache = class {\n  constructor(maxCount) {\n    // map for fast access\n    this.entriesMap = {};\n    // list for keeping order\n    this.entriesList = [];\n    this.maxCount = maxCount;\n  }\n  addRow(rowCtrl) {\n    this.entriesMap[rowCtrl.rowNode.id] = rowCtrl;\n    this.entriesList.push(rowCtrl);\n    rowCtrl.setCached(true);\n    if (this.entriesList.length > this.maxCount) {\n      const rowCtrlToDestroy = this.entriesList[0];\n      rowCtrlToDestroy.destroyFirstPass();\n      rowCtrlToDestroy.destroySecondPass();\n      this.removeFromCache(rowCtrlToDestroy);\n    }\n  }\n  getRow(rowNode) {\n    if (rowNode == null || rowNode.id == null) {\n      return null;\n    }\n    const res = this.entriesMap[rowNode.id];\n    if (!res) {\n      return null;\n    }\n    this.removeFromCache(res);\n    res.setCached(false);\n    const rowNodeMismatch = res.rowNode != rowNode;\n    return rowNodeMismatch ? null : res;\n  }\n  has(rowNode) {\n    return this.entriesMap[rowNode.id] != null;\n  }\n  removeRow(rowNode) {\n    const rowNodeId = rowNode.id;\n    const ctrl = this.entriesMap[rowNodeId];\n    delete this.entriesMap[rowNodeId];\n    _removeFromArray(this.entriesList, ctrl);\n  }\n  removeFromCache(rowCtrl) {\n    const rowNodeId = rowCtrl.rowNode.id;\n    delete this.entriesMap[rowNodeId];\n    _removeFromArray(this.entriesList, rowCtrl);\n  }\n  getEntries() {\n    return this.entriesList;\n  }\n};\nfunction mapRowNodes(rowNodes) {\n  if (!rowNodes) {\n    return;\n  }\n  const res = {\n    top: {},\n    bottom: {},\n    normal: {}\n  };\n  rowNodes.forEach((rowNode) => {\n    const id = rowNode.id;\n    switch (rowNode.rowPinned) {\n      case \"top\":\n        res.top[id] = rowNode;\n        break;\n      case \"bottom\":\n        res.bottom[id] = rowNode;\n        break;\n      default:\n        res.normal[id] = rowNode;\n        break;\n    }\n  });\n  return res;\n}\nfunction isRowInMap(rowNode, rowIdsMap) {\n  const id = rowNode.id;\n  const floating = rowNode.rowPinned;\n  switch (floating) {\n    case \"top\":\n      return rowIdsMap.top[id] != null;\n    case \"bottom\":\n      return rowIdsMap.bottom[id] != null;\n    default:\n      return rowIdsMap.normal[id] != null;\n  }\n}\n\n// packages/ag-grid-community/src/sort/rowNodeSorter.ts\nvar RowNodeSorter = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowNodeSorter\";\n  }\n  postConstruct() {\n    const { gos } = this;\n    this.isAccentedSort = gos.get(\"accentedSort\");\n    this.primaryColumnsSortGroups = _isColumnsSortingCoupledToGroup(gos);\n    this.addManagedPropertyListener(\n      \"accentedSort\",\n      (propChange) => this.isAccentedSort = propChange.currentValue\n    );\n    this.addManagedPropertyListener(\n      \"autoGroupColumnDef\",\n      () => this.primaryColumnsSortGroups = _isColumnsSortingCoupledToGroup(gos)\n    );\n  }\n  doFullSort(rowNodes, sortOptions) {\n    const sortedRowNodes = rowNodes.map((rowNode, currentPos) => ({\n      currentPos,\n      rowNode\n    }));\n    sortedRowNodes.sort(this.compareRowNodes.bind(this, sortOptions));\n    return sortedRowNodes.map((item) => item.rowNode);\n  }\n  compareRowNodes(sortOptions, sortedNodeA, sortedNodeB) {\n    const nodeA = sortedNodeA.rowNode;\n    const nodeB = sortedNodeB.rowNode;\n    for (let i = 0, len = sortOptions.length; i < len; i++) {\n      const sortOption = sortOptions[i];\n      const isDescending = sortOption.sort === \"desc\";\n      const valueA = this.getValue(nodeA, sortOption.column);\n      const valueB = this.getValue(nodeB, sortOption.column);\n      let comparatorResult;\n      const providedComparator = this.getComparator(sortOption, nodeA);\n      if (providedComparator) {\n        comparatorResult = providedComparator(valueA, valueB, nodeA, nodeB, isDescending);\n      } else {\n        comparatorResult = _defaultComparator(valueA, valueB, this.isAccentedSort);\n      }\n      const validResult = !isNaN(comparatorResult);\n      if (validResult && comparatorResult !== 0) {\n        return sortOption.sort === \"asc\" ? comparatorResult : comparatorResult * -1;\n      }\n    }\n    return sortedNodeA.currentPos - sortedNodeB.currentPos;\n  }\n  getComparator(sortOption, rowNode) {\n    const column = sortOption.column;\n    const comparatorOnCol = column.getColDef().comparator;\n    if (comparatorOnCol != null) {\n      return comparatorOnCol;\n    }\n    if (!column.getColDef().showRowGroup) {\n      return;\n    }\n    const groupLeafField = !rowNode.group && column.getColDef().field;\n    if (!groupLeafField) {\n      return;\n    }\n    const primaryColumn = this.beans.colModel.getColDefCol(groupLeafField);\n    if (!primaryColumn) {\n      return;\n    }\n    return primaryColumn.getColDef().comparator;\n  }\n  getValue(node, column) {\n    const { valueSvc, colModel, showRowGroupCols, gos } = this.beans;\n    if (!this.primaryColumnsSortGroups) {\n      return valueSvc.getValue(column, node, false);\n    }\n    const isNodeGroupedAtLevel = node.rowGroupColumn === column;\n    if (isNodeGroupedAtLevel) {\n      const isGroupRows = _isGroupUseEntireRow(gos, colModel.isPivotActive());\n      if (isGroupRows) {\n        const leafChild = node.allLeafChildren?.[0];\n        if (leafChild) {\n          return valueSvc.getValue(column, leafChild, false);\n        }\n        return void 0;\n      }\n      const displayCol = showRowGroupCols?.getShowRowGroupCol(column.getId());\n      if (!displayCol) {\n        return void 0;\n      }\n      return node.groupData?.[displayCol.getId()];\n    }\n    if (node.group && column.getColDef().showRowGroup) {\n      return void 0;\n    }\n    return valueSvc.getValue(column, node, false);\n  }\n};\n\n// packages/ag-grid-community/src/sort/sortApi.ts\nfunction onSortChanged(beans) {\n  beans.sortSvc?.onSortChanged(\"api\");\n}\n\n// packages/ag-grid-community/src/sort/sortIndicatorComp.ts\nfunction makeSpan(dataRefSuffix, classSuffix) {\n  return (\n    /* html */\n    `<span data-ref=\"eSort${dataRefSuffix}\" class=\"ag-sort-indicator-icon ag-sort-${classSuffix} ag-hidden\" aria-hidden=\"true\"></span>`\n  );\n}\nvar SortIndicatorTemplate = (\n  /* html */\n  `<span class=\"ag-sort-indicator-container\">\n        ${makeSpan(\"Order\", \"order\")}\n        ${makeSpan(\"Asc\", \"ascending-icon\")}\n        ${makeSpan(\"Desc\", \"descending-icon\")}\n        ${makeSpan(\"Mixed\", \"mixed-icon\")}\n        ${makeSpan(\"None\", \"none-icon\")}\n    </span>`\n);\nvar SortIndicatorComp = class extends Component {\n  constructor(skipTemplate) {\n    super();\n    this.eSortOrder = RefPlaceholder;\n    this.eSortAsc = RefPlaceholder;\n    this.eSortDesc = RefPlaceholder;\n    this.eSortMixed = RefPlaceholder;\n    this.eSortNone = RefPlaceholder;\n    if (!skipTemplate) {\n      this.setTemplate(SortIndicatorTemplate);\n    }\n  }\n  attachCustomElements(eSortOrder, eSortAsc, eSortDesc, eSortMixed, eSortNone) {\n    this.eSortOrder = eSortOrder;\n    this.eSortAsc = eSortAsc;\n    this.eSortDesc = eSortDesc;\n    this.eSortMixed = eSortMixed;\n    this.eSortNone = eSortNone;\n  }\n  setupSort(column, suppressOrder = false) {\n    this.column = column;\n    this.suppressOrder = suppressOrder;\n    this.setupMultiSortIndicator();\n    if (!column.isSortable() && !column.getColDef().showRowGroup) {\n      return;\n    }\n    this.addInIcon(\"sortAscending\", this.eSortAsc, column);\n    this.addInIcon(\"sortDescending\", this.eSortDesc, column);\n    this.addInIcon(\"sortUnSort\", this.eSortNone, column);\n    const updateIcons = this.updateIcons.bind(this);\n    const sortUpdated = this.onSortChanged.bind(this);\n    this.addManagedPropertyListener(\"unSortIcon\", updateIcons);\n    this.addManagedEventListeners({\n      newColumnsLoaded: updateIcons,\n      // Watch global events, as row group columns can effect their display column.\n      sortChanged: sortUpdated,\n      // when grouping changes so can sort indexes and icons\n      columnRowGroupChanged: sortUpdated\n    });\n    this.onSortChanged();\n  }\n  addInIcon(iconName, eParent, column) {\n    if (eParent == null) {\n      return;\n    }\n    const eIcon = _createIconNoSpan(iconName, this.beans, column);\n    if (eIcon) {\n      eParent.appendChild(eIcon);\n    }\n  }\n  onSortChanged() {\n    this.updateIcons();\n    if (!this.suppressOrder) {\n      this.updateSortOrder();\n    }\n  }\n  updateIcons() {\n    const { eSortAsc, eSortDesc, eSortNone, column, gos, beans } = this;\n    const sortDirection = beans.sortSvc.getDisplaySortForColumn(column);\n    if (eSortAsc) {\n      const isAscending = sortDirection === \"asc\";\n      _setDisplayed(eSortAsc, isAscending, { skipAriaHidden: true });\n    }\n    if (eSortDesc) {\n      const isDescending = sortDirection === \"desc\";\n      _setDisplayed(eSortDesc, isDescending, { skipAriaHidden: true });\n    }\n    if (eSortNone) {\n      const alwaysHideNoSort = !column.getColDef().unSortIcon && !gos.get(\"unSortIcon\");\n      const isNone = sortDirection === null || sortDirection === void 0;\n      _setDisplayed(eSortNone, !alwaysHideNoSort && isNone, { skipAriaHidden: true });\n    }\n  }\n  setupMultiSortIndicator() {\n    const { eSortMixed, column, gos } = this;\n    this.addInIcon(\"sortUnSort\", eSortMixed, column);\n    const isColumnShowingRowGroup = column.getColDef().showRowGroup;\n    const areGroupsCoupled = _isColumnsSortingCoupledToGroup(gos);\n    if (areGroupsCoupled && isColumnShowingRowGroup) {\n      this.addManagedEventListeners({\n        // Watch global events, as row group columns can effect their display column.\n        sortChanged: this.updateMultiSortIndicator.bind(this),\n        // when grouping changes so can sort indexes and icons\n        columnRowGroupChanged: this.updateMultiSortIndicator.bind(this)\n      });\n      this.updateMultiSortIndicator();\n    }\n  }\n  updateMultiSortIndicator() {\n    const { eSortMixed, beans, column } = this;\n    if (eSortMixed) {\n      const isMixedSort = beans.sortSvc.getDisplaySortForColumn(column) === \"mixed\";\n      _setDisplayed(eSortMixed, isMixedSort, { skipAriaHidden: true });\n    }\n  }\n  // we listen here for global sort events, NOT column sort events, as we want to do this\n  // when sorting has been set on all column (if we listened just for our col (where we\n  // set the asc / desc icons) then it's possible other cols are yet to get their sorting state.\n  updateSortOrder() {\n    const {\n      eSortOrder,\n      column,\n      beans: { sortSvc }\n    } = this;\n    if (!eSortOrder) {\n      return;\n    }\n    const allColumnsWithSorting = sortSvc.getColumnsWithSortingOrdered();\n    const indexThisCol = sortSvc.getDisplaySortIndexForColumn(column) ?? -1;\n    const moreThanOneColSorting = allColumnsWithSorting.some(\n      (col) => sortSvc.getDisplaySortIndexForColumn(col) ?? -1 >= 1\n    );\n    const showIndex = indexThisCol >= 0 && moreThanOneColSorting;\n    _setDisplayed(eSortOrder, showIndex, { skipAriaHidden: true });\n    if (indexThisCol >= 0) {\n      eSortOrder.textContent = (indexThisCol + 1).toString();\n    } else {\n      _clearElement(eSortOrder);\n    }\n  }\n};\nvar SortIndicatorSelector = {\n  selector: \"AG-SORT-INDICATOR\",\n  component: SortIndicatorComp\n};\n\n// packages/ag-grid-community/src/sort/sortService.ts\nvar DEFAULT_SORTING_ORDER = [\"asc\", \"desc\", null];\nvar SortService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"sortSvc\";\n  }\n  progressSort(column, multiSort, source) {\n    const nextDirection = this.getNextSortDirection(column);\n    this.setSortForColumn(column, nextDirection, multiSort, source);\n  }\n  progressSortFromEvent(column, event) {\n    const sortUsingCtrl = this.gos.get(\"multiSortKey\") === \"ctrl\";\n    const multiSort = sortUsingCtrl ? event.ctrlKey || event.metaKey : event.shiftKey;\n    this.progressSort(column, multiSort, \"uiColumnSorted\");\n  }\n  setSortForColumn(column, sort, multiSort, source) {\n    if (sort !== \"asc\" && sort !== \"desc\") {\n      sort = null;\n    }\n    const { gos, showRowGroupCols } = this.beans;\n    const isColumnsSortingCoupledToGroup = _isColumnsSortingCoupledToGroup(gos);\n    let columnsToUpdate = [column];\n    if (isColumnsSortingCoupledToGroup) {\n      if (column.getColDef().showRowGroup) {\n        const rowGroupColumns = showRowGroupCols?.getSourceColumnsForGroupColumn?.(column);\n        const sortableRowGroupColumns = rowGroupColumns?.filter((col) => col.isSortable());\n        if (sortableRowGroupColumns) {\n          columnsToUpdate = [column, ...sortableRowGroupColumns];\n        }\n      }\n    }\n    columnsToUpdate.forEach((col) => this.setColSort(col, sort, source));\n    const doingMultiSort = (multiSort || gos.get(\"alwaysMultiSort\")) && !gos.get(\"suppressMultiSort\");\n    const updatedColumns = [];\n    if (!doingMultiSort) {\n      const clearedColumns = this.clearSortBarTheseColumns(columnsToUpdate, source);\n      updatedColumns.push(...clearedColumns);\n    }\n    this.updateSortIndex(column);\n    updatedColumns.push(...columnsToUpdate);\n    this.dispatchSortChangedEvents(source, updatedColumns);\n  }\n  updateSortIndex(lastColToChange) {\n    const { gos, colModel, showRowGroupCols } = this.beans;\n    const isCoupled = _isColumnsSortingCoupledToGroup(gos);\n    const groupParent = showRowGroupCols?.getShowRowGroupCol(lastColToChange.getId());\n    const lastSortIndexCol = isCoupled ? groupParent || lastColToChange : lastColToChange;\n    const allSortedCols = this.getColumnsWithSortingOrdered();\n    colModel.getAllCols().forEach((col) => this.setColSortIndex(col, null));\n    const allSortedColsWithoutChangesOrGroups = allSortedCols.filter((col) => {\n      if (isCoupled && col.getColDef().showRowGroup) {\n        return false;\n      }\n      return col !== lastSortIndexCol;\n    });\n    const sortedColsWithIndices = lastSortIndexCol.getSort() ? [...allSortedColsWithoutChangesOrGroups, lastSortIndexCol] : allSortedColsWithoutChangesOrGroups;\n    sortedColsWithIndices.forEach((col, idx) => this.setColSortIndex(col, idx));\n  }\n  // gets called by API, so if data changes, use can call this, which will end up\n  // working out the sort order again of the rows.\n  onSortChanged(source, columns) {\n    this.dispatchSortChangedEvents(source, columns);\n  }\n  isSortActive() {\n    const allCols = this.beans.colModel.getAllCols();\n    const sortedCols = allCols.filter((column) => !!column.getSort());\n    return sortedCols && sortedCols.length > 0;\n  }\n  dispatchSortChangedEvents(source, columns) {\n    const event = {\n      type: \"sortChanged\",\n      source\n    };\n    if (columns) {\n      event.columns = columns;\n    }\n    this.eventSvc.dispatchEvent(event);\n  }\n  clearSortBarTheseColumns(columnsToSkip, source) {\n    const clearedColumns = [];\n    this.beans.colModel.getAllCols().forEach((columnToClear) => {\n      if (!columnsToSkip.includes(columnToClear)) {\n        if (columnToClear.getSort()) {\n          clearedColumns.push(columnToClear);\n        }\n        this.setColSort(columnToClear, void 0, source);\n      }\n    });\n    return clearedColumns;\n  }\n  getNextSortDirection(column) {\n    const sortingOrder = column.getColDef().sortingOrder ?? this.gos.get(\"sortingOrder\") ?? DEFAULT_SORTING_ORDER;\n    const currentIndex = sortingOrder.indexOf(column.getSort());\n    const notInArray = currentIndex < 0;\n    const lastItemInArray = currentIndex == sortingOrder.length - 1;\n    return notInArray || lastItemInArray ? sortingOrder[0] : sortingOrder[currentIndex + 1];\n  }\n  /**\n   * @returns a map of sort indexes for every sorted column, if groups sort primaries then they will have equivalent indices\n   */\n  getIndexedSortMap() {\n    const { gos, colModel, showRowGroupCols, rowGroupColsSvc } = this.beans;\n    let allSortedCols = colModel.getAllCols().filter((col) => !!col.getSort());\n    if (colModel.isPivotMode()) {\n      const isSortingLinked = _isColumnsSortingCoupledToGroup(gos);\n      allSortedCols = allSortedCols.filter((col) => {\n        const isAggregated = !!col.getAggFunc();\n        const isSecondary = !col.isPrimary();\n        const isGroup = isSortingLinked ? showRowGroupCols?.getShowRowGroupCol(col.getId()) : col.getColDef().showRowGroup;\n        return isAggregated || isSecondary || isGroup;\n      });\n    }\n    const sortedRowGroupCols = rowGroupColsSvc?.columns.filter((col) => !!col.getSort()) ?? [];\n    const allColsIndexes = {};\n    allSortedCols.forEach((col, index) => allColsIndexes[col.getId()] = index);\n    allSortedCols.sort((a, b) => {\n      const iA = a.getSortIndex();\n      const iB = b.getSortIndex();\n      if (iA != null && iB != null) {\n        return iA - iB;\n      } else if (iA == null && iB == null) {\n        const posA = allColsIndexes[a.getId()];\n        const posB = allColsIndexes[b.getId()];\n        return posA > posB ? 1 : -1;\n      } else if (iB == null) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    const isSortLinked = _isColumnsSortingCoupledToGroup(gos) && !!sortedRowGroupCols.length;\n    if (isSortLinked) {\n      allSortedCols = [\n        ...new Set(\n          // if linked sorting, replace all columns with the display group column for index purposes, and ensure uniqueness\n          allSortedCols.map((col) => showRowGroupCols?.getShowRowGroupCol(col.getId()) ?? col)\n        )\n      ];\n    }\n    const indexMap = /* @__PURE__ */ new Map();\n    allSortedCols.forEach((col, idx) => indexMap.set(col, idx));\n    if (isSortLinked) {\n      sortedRowGroupCols.forEach((col) => {\n        const groupDisplayCol = showRowGroupCols.getShowRowGroupCol(col.getId());\n        indexMap.set(col, indexMap.get(groupDisplayCol));\n      });\n    }\n    return indexMap;\n  }\n  getColumnsWithSortingOrdered() {\n    return [...this.getIndexedSortMap().entries()].sort(([col1, idx1], [col2, idx2]) => idx1 - idx2).map(([col]) => col);\n  }\n  // used by server side row models, to sent sort to server\n  getSortModel() {\n    return this.getColumnsWithSortingOrdered().filter((column) => column.getSort()).map((column) => ({\n      sort: column.getSort(),\n      colId: column.getId()\n    }));\n  }\n  getSortOptions() {\n    return this.getColumnsWithSortingOrdered().filter((column) => column.getSort()).map((column) => ({\n      sort: column.getSort(),\n      column\n    }));\n  }\n  canColumnDisplayMixedSort(column) {\n    const isColumnSortCouplingActive = _isColumnsSortingCoupledToGroup(this.gos);\n    const isGroupDisplayColumn = !!column.getColDef().showRowGroup;\n    return isColumnSortCouplingActive && isGroupDisplayColumn;\n  }\n  getDisplaySortForColumn(column) {\n    const linkedColumns = this.beans.showRowGroupCols?.getSourceColumnsForGroupColumn(column);\n    if (!this.canColumnDisplayMixedSort(column) || !linkedColumns?.length) {\n      return column.getSort();\n    }\n    const columnHasUniqueData = column.getColDef().field != null || !!column.getColDef().valueGetter;\n    const sortableColumns = columnHasUniqueData ? [column, ...linkedColumns] : linkedColumns;\n    const firstSort = sortableColumns[0].getSort();\n    const allMatch = sortableColumns.every((col) => col.getSort() == firstSort);\n    if (!allMatch) {\n      return \"mixed\";\n    }\n    return firstSort;\n  }\n  getDisplaySortIndexForColumn(column) {\n    return this.getIndexedSortMap().get(column);\n  }\n  setupHeader(comp, column, clickElement) {\n    let lastMovingChanged = 0;\n    comp.addManagedListeners(column, {\n      movingChanged: () => {\n        lastMovingChanged = (/* @__PURE__ */ new Date()).getTime();\n      }\n    });\n    if (clickElement) {\n      comp.addManagedElementListeners(clickElement, {\n        click: (event) => {\n          const moving = column.isMoving();\n          const nowTime = (/* @__PURE__ */ new Date()).getTime();\n          const movedRecently = nowTime - lastMovingChanged < 50;\n          const columnMoving = moving || movedRecently;\n          if (!columnMoving) {\n            this.progressSortFromEvent(column, event);\n          }\n        }\n      });\n    }\n    const onSortingChanged = () => {\n      const sort = column.getSort();\n      comp.addOrRemoveCssClass(\"ag-header-cell-sorted-asc\", sort === \"asc\");\n      comp.addOrRemoveCssClass(\"ag-header-cell-sorted-desc\", sort === \"desc\");\n      comp.addOrRemoveCssClass(\"ag-header-cell-sorted-none\", !sort);\n      if (column.getColDef().showRowGroup) {\n        const sourceColumns = this.beans.showRowGroupCols?.getSourceColumnsForGroupColumn(column);\n        const sortDirectionsMatch = sourceColumns?.every(\n          (sourceCol) => column.getSort() == sourceCol.getSort()\n        );\n        const isMultiSorting = !sortDirectionsMatch;\n        comp.addOrRemoveCssClass(\"ag-header-cell-sorted-mixed\", isMultiSorting);\n      }\n    };\n    comp.addManagedEventListeners({\n      sortChanged: onSortingChanged,\n      columnRowGroupChanged: onSortingChanged\n    });\n  }\n  initCol(column) {\n    const { sort, initialSort, sortIndex, initialSortIndex } = column.colDef;\n    if (sort !== void 0) {\n      if (sort === \"asc\" || sort === \"desc\") {\n        column.sort = sort;\n      }\n    } else {\n      if (initialSort === \"asc\" || initialSort === \"desc\") {\n        column.sort = initialSort;\n      }\n    }\n    if (sortIndex !== void 0) {\n      if (sortIndex !== null) {\n        column.sortIndex = sortIndex;\n      }\n    } else {\n      if (initialSortIndex !== null) {\n        column.sortIndex = initialSortIndex;\n      }\n    }\n  }\n  updateColSort(column, sort, source) {\n    if (sort !== void 0) {\n      if (sort === \"desc\" || sort === \"asc\") {\n        this.setColSort(column, sort, source);\n      } else {\n        this.setColSort(column, void 0, source);\n      }\n    }\n  }\n  setColSort(column, sort, source) {\n    if (column.sort !== sort) {\n      column.sort = sort;\n      column.dispatchColEvent(\"sortChanged\", source);\n    }\n    column.dispatchStateUpdatedEvent(\"sort\");\n  }\n  setColSortIndex(column, sortOrder) {\n    column.sortIndex = sortOrder;\n    column.dispatchStateUpdatedEvent(\"sortIndex\");\n  }\n  createSortIndicator(skipTemplate) {\n    return new SortIndicatorComp(skipTemplate);\n  }\n  getSortIndicatorSelector() {\n    return SortIndicatorSelector;\n  }\n};\n\n// packages/ag-grid-community/src/sort/sortModule.ts\nvar SortModule = {\n  moduleName: \"Sort\",\n  version: VERSION,\n  beans: [SortService, RowNodeSorter],\n  apiFunctions: {\n    onSortChanged\n  },\n  userComponents: {\n    agSortIndicator: SortIndicatorComp\n  },\n  icons: {\n    // show on column header when column is sorted ascending\n    sortAscending: \"asc\",\n    // show on column header when column is sorted descending\n    sortDescending: \"desc\",\n    // show on column header when column has no sort, only when enabled with gridOptions.unSortIcon=true\n    sortUnSort: \"none\"\n  }\n};\n\n// packages/ag-grid-community/src/syncService.ts\nvar SyncService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"syncSvc\";\n    this.waitingForColumns = false;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"columnDefs\", (event) => this.setColumnDefs(event));\n  }\n  start() {\n    this.beans.ctrlsSvc.whenReady(this, () => {\n      const columnDefs = this.gos.get(\"columnDefs\");\n      if (columnDefs) {\n        this.setColumnsAndData(columnDefs);\n      } else {\n        this.waitingForColumns = true;\n      }\n      this.gridReady();\n    });\n  }\n  setColumnsAndData(columnDefs) {\n    const { colModel, rowModel } = this.beans;\n    colModel.setColumnDefs(columnDefs ?? [], \"gridInitializing\");\n    rowModel.start();\n  }\n  gridReady() {\n    const { eventSvc, gos } = this;\n    eventSvc.dispatchEvent({\n      type: \"gridReady\"\n    });\n    _logIfDebug(gos, `initialised successfully, enterprise = ${gos.isModuleRegistered(\"EnterpriseCore\")}`);\n  }\n  setColumnDefs(event) {\n    const columnDefs = this.gos.get(\"columnDefs\");\n    if (!columnDefs) {\n      return;\n    }\n    if (this.waitingForColumns) {\n      this.waitingForColumns = false;\n      this.setColumnsAndData(columnDefs);\n      return;\n    }\n    this.beans.colModel.setColumnDefs(columnDefs, _convertColumnEventSourceType(event.source));\n  }\n};\n\n// packages/ag-grid-community/src/valueService/cellApi.ts\nfunction expireValueCache(beans) {\n  beans.valueCache?.expire();\n}\nfunction getCellValue(beans, params) {\n  const { colKey, rowNode, useFormatter } = params;\n  const column = beans.colModel.getColDefCol(colKey) ?? beans.colModel.getCol(colKey);\n  if (_missing(column)) {\n    return null;\n  }\n  const value = beans.valueSvc.getValueForDisplay(column, rowNode);\n  if (useFormatter) {\n    const formattedValue = beans.valueSvc.formatValue(column, rowNode, value);\n    return formattedValue ?? _escapeString(value, true);\n  }\n  return value;\n}\n\n// packages/ag-grid-community/src/utils/changedPath.ts\nvar ChangedPath = class {\n  constructor(keepingColumns, rootNode) {\n    // whether changed path is active of not. it is active when a) doing\n    // a transaction update or b) doing change detection. if we are doing\n    // a CSRM refresh for other reasons (after sort or filter, or user calling\n    // setRowData() without delta mode) then we are not active. we are also\n    // marked as not active if secondary columns change in pivot (as this impacts\n    // aggregations).\n    // can be set inactive by:\n    // a) ClientSideRowModel, if no transactions or\n    // b) PivotService, if secondary columns changed\n    this.active = true;\n    // for each node in the change path, we also store which columns need\n    // to be re-aggregated.\n    this.nodeIdsToColumns = {};\n    // for quick lookup, all items in the change path are mapped by nodeId\n    this.mapToItems = {};\n    this.keepingColumns = keepingColumns;\n    this.pathRoot = {\n      rowNode: rootNode,\n      children: null\n    };\n    this.mapToItems[rootNode.id] = this.pathRoot;\n  }\n  depthFirstSearchChangedPath(pathItem, callback) {\n    const { rowNode, children } = pathItem;\n    if (children) {\n      for (let i = 0; i < children.length; ++i) {\n        this.depthFirstSearchChangedPath(children[i], callback);\n      }\n    }\n    callback(rowNode);\n  }\n  depthFirstSearchEverything(rowNode, callback, traverseEverything) {\n    const childrenAfterGroup = rowNode.childrenAfterGroup;\n    if (childrenAfterGroup) {\n      for (let i = 0, len = childrenAfterGroup.length; i < len; ++i) {\n        const childNode = childrenAfterGroup[i];\n        if (childNode.childrenAfterGroup) {\n          this.depthFirstSearchEverything(childNode, callback, traverseEverything);\n        } else if (traverseEverything) {\n          callback(childNode);\n        }\n      }\n    }\n    callback(rowNode);\n  }\n  // traverseLeafNodes -> used when NOT doing changed path, ie traversing everything. the callback\n  // will be called for child nodes in addition to parent nodes.\n  forEachChangedNodeDepthFirst(callback, traverseLeafNodes = false, includeUnchangedNodes = false) {\n    if (this.active && !includeUnchangedNodes) {\n      this.depthFirstSearchChangedPath(this.pathRoot, callback);\n    } else {\n      this.depthFirstSearchEverything(this.pathRoot.rowNode, callback, traverseLeafNodes);\n    }\n  }\n  executeFromRootNode(callback) {\n    callback(this.pathRoot.rowNode);\n  }\n  createPathItems(rowNode) {\n    let pointer = rowNode;\n    let newEntryCount = 0;\n    while (!this.mapToItems[pointer.id]) {\n      const newEntry = {\n        rowNode: pointer,\n        children: null\n      };\n      this.mapToItems[pointer.id] = newEntry;\n      newEntryCount++;\n      pointer = pointer.parent;\n    }\n    return newEntryCount;\n  }\n  populateColumnsMap(rowNode, columns) {\n    if (!this.keepingColumns || !columns) {\n      return;\n    }\n    let pointer = rowNode;\n    while (pointer) {\n      if (!this.nodeIdsToColumns[pointer.id]) {\n        this.nodeIdsToColumns[pointer.id] = {};\n      }\n      columns.forEach((col) => this.nodeIdsToColumns[pointer.id][col.getId()] = true);\n      pointer = pointer.parent;\n    }\n  }\n  linkPathItems(rowNode, newEntryCount) {\n    let pointer = rowNode;\n    for (let i = 0; i < newEntryCount; i++) {\n      const thisItem = this.mapToItems[pointer.id];\n      const parentItem = this.mapToItems[pointer.parent.id];\n      if (!parentItem.children) {\n        parentItem.children = [];\n      }\n      parentItem.children.push(thisItem);\n      pointer = pointer.parent;\n    }\n  }\n  // called by\n  // 1) change detection (provides cols) and\n  // 2) groupStage if doing transaction update (doesn't provide cols)\n  addParentNode(rowNode, columns) {\n    if (!rowNode || rowNode.isRowPinned()) {\n      return;\n    }\n    const newEntryCount = this.createPathItems(rowNode);\n    this.linkPathItems(rowNode, newEntryCount);\n    this.populateColumnsMap(rowNode, columns);\n  }\n  canSkip(rowNode) {\n    return this.active && !this.mapToItems[rowNode.id];\n  }\n  getValueColumnsForNode(rowNode, valueColumns) {\n    if (!this.keepingColumns) {\n      return valueColumns;\n    }\n    const colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n    const result = valueColumns.filter((col) => colsForThisNode[col.getId()]);\n    return result;\n  }\n  getNotValueColumnsForNode(rowNode, valueColumns) {\n    if (!this.keepingColumns) {\n      return null;\n    }\n    const colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n    const result = valueColumns.filter((col) => !colsForThisNode[col.getId()]);\n    return result;\n  }\n};\n\n// packages/ag-grid-community/src/valueService/changeDetectionService.ts\nvar SOURCE_PASTE = \"paste\";\nvar ChangeDetectionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"changeDetectionSvc\";\n    this.clientSideRowModel = null;\n  }\n  postConstruct() {\n    const { gos, rowModel } = this.beans;\n    if (_isClientSideRowModel(gos, rowModel)) {\n      this.clientSideRowModel = rowModel;\n    }\n    this.addManagedEventListeners({ cellValueChanged: this.onCellValueChanged.bind(this) });\n  }\n  onCellValueChanged(event) {\n    const { gos, rowRenderer } = this.beans;\n    if (event.source === SOURCE_PASTE || gos.get(\"suppressChangeDetection\")) {\n      return;\n    }\n    const rowNode = event.node;\n    const nodesToRefresh = [rowNode];\n    const clientSideRowModel = this.clientSideRowModel;\n    const rootNode = clientSideRowModel?.rootNode;\n    if (rootNode && !rowNode.isRowPinned()) {\n      const onlyChangedColumns = gos.get(\"aggregateOnlyChangedColumns\");\n      const changedPath = new ChangedPath(onlyChangedColumns, rootNode);\n      changedPath.addParentNode(rowNode.parent, [event.column]);\n      clientSideRowModel.doAggregate(changedPath);\n      changedPath.forEachChangedNodeDepthFirst((rowNode2) => {\n        nodesToRefresh.push(rowNode2);\n      });\n    }\n    rowRenderer.refreshCells({ rowNodes: nodesToRefresh });\n  }\n};\n\n// packages/ag-grid-community/src/valueService/expressionService.ts\nvar ExpressionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"expressionSvc\";\n    this.cache = {};\n  }\n  evaluate(expression, params) {\n    if (typeof expression === \"string\") {\n      return this.evaluateExpression(expression, params);\n    } else {\n      _error(15, { expression });\n    }\n  }\n  evaluateExpression(expression, params) {\n    try {\n      const javaScriptFunction = this.createExpressionFunction(expression);\n      const result = javaScriptFunction(\n        params.value,\n        params.context,\n        params.oldValue,\n        params.newValue,\n        params.value,\n        params.node,\n        params.data,\n        params.colDef,\n        params.rowIndex,\n        params.api,\n        params.getValue,\n        params.column,\n        params.columnGroup\n      );\n      return result;\n    } catch (e) {\n      _error(16, { expression, params, e });\n      return null;\n    }\n  }\n  createExpressionFunction(expression) {\n    const expressionToFunctionCache = this.cache;\n    if (expressionToFunctionCache[expression]) {\n      return expressionToFunctionCache[expression];\n    }\n    const functionBody = this.createFunctionBody(expression);\n    const theFunction = new Function(\n      \"x, ctx, oldValue, newValue, value, node, data, colDef, rowIndex, api, getValue, column, columnGroup\",\n      functionBody\n    );\n    expressionToFunctionCache[expression] = theFunction;\n    return theFunction;\n  }\n  createFunctionBody(expression) {\n    if (expression.indexOf(\"return\") >= 0) {\n      return expression;\n    } else {\n      return \"return \" + expression + \";\";\n    }\n  }\n};\n\n// packages/ag-grid-community/src/valueService/valueCache.ts\nvar ValueCache = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"valueCache\";\n    this.cacheVersion = 0;\n  }\n  postConstruct() {\n    const gos = this.gos;\n    this.active = gos.get(\"valueCache\");\n    this.neverExpires = gos.get(\"valueCacheNeverExpires\");\n  }\n  onDataChanged() {\n    if (this.neverExpires) {\n      return;\n    }\n    this.expire();\n  }\n  expire() {\n    this.cacheVersion++;\n  }\n  setValue(rowNode, colId, value) {\n    if (this.active) {\n      const cacheVersion = this.cacheVersion;\n      if (rowNode.__cacheVersion !== cacheVersion) {\n        rowNode.__cacheVersion = cacheVersion;\n        rowNode.__cacheData = {};\n      }\n      rowNode.__cacheData[colId] = value;\n    }\n  }\n  getValue(rowNode, colId) {\n    if (!this.active || rowNode.__cacheVersion !== this.cacheVersion) {\n      return void 0;\n    }\n    return rowNode.__cacheData[colId];\n  }\n};\n\n// packages/ag-grid-community/src/valueService/valueModule.ts\nvar ValueCacheModule = {\n  moduleName: \"ValueCache\",\n  version: VERSION,\n  beans: [ValueCache],\n  apiFunctions: {\n    expireValueCache\n  }\n};\nvar ExpressionModule = {\n  moduleName: \"Expression\",\n  version: VERSION,\n  beans: [ExpressionService]\n};\nvar ChangeDetectionModule = {\n  moduleName: \"ChangeDetection\",\n  version: VERSION,\n  beans: [ChangeDetectionService]\n};\nvar CellApiModule = {\n  moduleName: \"CellApi\",\n  version: VERSION,\n  apiFunctions: {\n    getCellValue\n  }\n};\n\n// packages/ag-grid-community/src/valueService/valueService.ts\nvar ValueService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"valueSvc\";\n    this.initialised = false;\n    this.isSsrm = false;\n  }\n  wireBeans(beans) {\n    this.expressionSvc = beans.expressionSvc;\n    this.colModel = beans.colModel;\n    this.valueCache = beans.valueCache;\n    this.dataTypeSvc = beans.dataTypeSvc;\n  }\n  postConstruct() {\n    if (!this.initialised) {\n      this.init();\n    }\n  }\n  init() {\n    this.executeValueGetter = this.valueCache ? this.executeValueGetterWithValueCache.bind(this) : this.executeValueGetterWithoutValueCache.bind(this);\n    this.isSsrm = _isServerSideRowModel(this.gos);\n    this.cellExpressions = this.gos.get(\"enableCellExpressions\");\n    this.isTreeData = this.gos.get(\"treeData\");\n    this.initialised = true;\n    const listener = (event) => this.callColumnCellValueChangedHandler(event);\n    this.eventSvc.addEventListener(\"cellValueChanged\", listener, true);\n    this.addDestroyFunc(() => this.eventSvc.removeEventListener(\"cellValueChanged\", listener, true));\n    this.addManagedPropertyListener(\"treeData\", (propChange) => this.isTreeData = propChange.currentValue);\n  }\n  /**\n   * Use this function to get a displayable cell value.\n   * This hides values in expanded group rows which are instead displayed by the footer row.\n   */\n  getValueForDisplay(column, node) {\n    const lockedClosedGroup = node.leafGroup && this.colModel.isPivotMode();\n    const isOpenGroup = node.group && node.expanded && !node.footer && !lockedClosedGroup;\n    const groupAlwaysShowAggData = this.gos.get(\"groupSuppressBlankHeader\");\n    if (!isOpenGroup || groupAlwaysShowAggData) {\n      return this.getValue(column, node);\n    }\n    let includeFooter = false;\n    const groupIncludeFooterOpt = this.gos.get(\"groupTotalRow\");\n    if (typeof groupIncludeFooterOpt !== \"function\") {\n      includeFooter = !!groupIncludeFooterOpt;\n    } else {\n      const groupIncludeFooterCb = this.gos.getCallback(\"groupTotalRow\");\n      includeFooter = !!groupIncludeFooterCb({ node: this });\n    }\n    const ignoreAggData = isOpenGroup && includeFooter;\n    return this.getValue(column, node, ignoreAggData);\n  }\n  getValue(column, rowNode, ignoreAggData = false) {\n    if (!this.initialised) {\n      this.init();\n    }\n    if (!rowNode) {\n      return;\n    }\n    const colDef = column.getColDef();\n    const field = colDef.field;\n    const colId = column.getColId();\n    const data = rowNode.data;\n    let result;\n    const groupDataExists = rowNode.groupData && rowNode.groupData[colId] !== void 0;\n    const aggDataExists = !ignoreAggData && rowNode.aggData && rowNode.aggData[colId] !== void 0;\n    const ignoreSsrmAggData = this.isSsrm && ignoreAggData && !!column.getColDef().aggFunc;\n    const ssrmFooterGroupCol = this.isSsrm && rowNode.footer && rowNode.field && (column.getColDef().showRowGroup === true || column.getColDef().showRowGroup === rowNode.field);\n    if (this.isTreeData && aggDataExists) {\n      result = rowNode.aggData[colId];\n    } else if (this.isTreeData && colDef.valueGetter) {\n      result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\n    } else if (this.isTreeData && field && data) {\n      result = _getValueUsingField(data, field, column.isFieldContainsDots());\n    } else if (groupDataExists) {\n      result = rowNode.groupData[colId];\n    } else if (aggDataExists) {\n      result = rowNode.aggData[colId];\n    } else if (colDef.valueGetter) {\n      result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\n    } else if (ssrmFooterGroupCol) {\n      result = _getValueUsingField(data, rowNode.field, column.isFieldContainsDots());\n    } else if (field && data && !ignoreSsrmAggData) {\n      result = _getValueUsingField(data, field, column.isFieldContainsDots());\n    }\n    if (this.cellExpressions && typeof result === \"string\" && result.indexOf(\"=\") === 0) {\n      const cellValueGetter = result.substring(1);\n      result = this.executeValueGetter(cellValueGetter, data, column, rowNode);\n    }\n    if (result == null) {\n      const openedGroup = this.getOpenedGroup(rowNode, column);\n      if (openedGroup != null) {\n        return openedGroup;\n      }\n    }\n    return result;\n  }\n  parseValue(column, rowNode, newValue, oldValue) {\n    const colDef = column.getColDef();\n    const valueParser = colDef.valueParser;\n    if (_exists(valueParser)) {\n      const params = _addGridCommonParams(this.gos, {\n        node: rowNode,\n        data: rowNode?.data,\n        oldValue,\n        newValue,\n        colDef,\n        column\n      });\n      if (typeof valueParser === \"function\") {\n        return valueParser(params);\n      }\n      return this.expressionSvc?.evaluate(valueParser, params);\n    }\n    return newValue;\n  }\n  getDeleteValue(column, rowNode) {\n    if (_exists(column.getColDef().valueParser)) {\n      return this.parseValue(column, rowNode, \"\", this.getValueForDisplay(column, rowNode)) ?? null;\n    }\n    return null;\n  }\n  formatValue(column, node, value, suppliedFormatter, useFormatterFromColumn = true) {\n    let result = null;\n    let formatter;\n    const colDef = column.getColDef();\n    if (suppliedFormatter) {\n      formatter = suppliedFormatter;\n    } else if (useFormatterFromColumn) {\n      formatter = colDef.valueFormatter;\n    }\n    if (formatter) {\n      const params = _addGridCommonParams(this.gos, {\n        value,\n        node,\n        data: node ? node.data : null,\n        colDef,\n        column\n      });\n      if (typeof formatter === \"function\") {\n        result = formatter(params);\n      } else {\n        result = this.expressionSvc ? this.expressionSvc.evaluate(formatter, params) : null;\n      }\n    } else if (colDef.refData) {\n      return colDef.refData[value] || \"\";\n    }\n    if (result == null && Array.isArray(value)) {\n      result = value.join(\", \");\n    }\n    return result;\n  }\n  getOpenedGroup(rowNode, column) {\n    if (!this.gos.get(\"showOpenedGroup\")) {\n      return;\n    }\n    const colDef = column.getColDef();\n    if (!colDef.showRowGroup) {\n      return;\n    }\n    const showRowGroup = column.getColDef().showRowGroup;\n    let pointer = rowNode.parent;\n    while (pointer != null) {\n      if (pointer.rowGroupColumn && (showRowGroup === true || showRowGroup === pointer.rowGroupColumn.getColId())) {\n        return pointer.key;\n      }\n      pointer = pointer.parent;\n    }\n    return void 0;\n  }\n  /**\n   * Sets the value of a GridCell\n   * @param rowNode The `RowNode` to be updated\n   * @param colKey The `Column` to be updated\n   * @param newValue The new value to be set\n   * @param eventSource The event source\n   * @returns `True` if the value has been updated, otherwise`False`.\n   */\n  setValue(rowNode, colKey, newValue, eventSource) {\n    const column = this.colModel.getColDefCol(colKey);\n    if (!rowNode || !column) {\n      return false;\n    }\n    if (_missing(rowNode.data)) {\n      rowNode.data = {};\n    }\n    const { field, valueSetter } = column.getColDef();\n    if (_missing(field) && _missing(valueSetter)) {\n      _warn(17);\n      return false;\n    }\n    if (this.dataTypeSvc && !this.dataTypeSvc.checkType(column, newValue)) {\n      _warn(135);\n      return false;\n    }\n    const params = _addGridCommonParams(this.gos, {\n      node: rowNode,\n      data: rowNode.data,\n      oldValue: this.getValue(column, rowNode),\n      newValue,\n      colDef: column.getColDef(),\n      column\n    });\n    params.newValue = newValue;\n    let valueWasDifferent;\n    if (_exists(valueSetter)) {\n      if (typeof valueSetter === \"function\") {\n        valueWasDifferent = valueSetter(params);\n      } else {\n        valueWasDifferent = this.expressionSvc?.evaluate(valueSetter, params);\n      }\n    } else {\n      valueWasDifferent = this.setValueUsingField(rowNode.data, field, newValue, column.isFieldContainsDots());\n    }\n    if (valueWasDifferent === void 0) {\n      valueWasDifferent = true;\n    }\n    if (!valueWasDifferent) {\n      return false;\n    }\n    rowNode.resetQuickFilterAggregateText();\n    this.valueCache?.onDataChanged();\n    const savedValue = this.getValue(column, rowNode);\n    this.eventSvc.dispatchEvent({\n      type: \"cellValueChanged\",\n      event: null,\n      rowIndex: rowNode.rowIndex,\n      rowPinned: rowNode.rowPinned,\n      column: params.column,\n      colDef: params.colDef,\n      data: rowNode.data,\n      node: rowNode,\n      oldValue: params.oldValue,\n      newValue: savedValue,\n      value: savedValue,\n      source: eventSource\n    });\n    return true;\n  }\n  callColumnCellValueChangedHandler(event) {\n    const onCellValueChanged = event.colDef.onCellValueChanged;\n    if (typeof onCellValueChanged === \"function\") {\n      this.beans.frameworkOverrides.wrapOutgoing(() => {\n        onCellValueChanged({\n          node: event.node,\n          data: event.data,\n          oldValue: event.oldValue,\n          newValue: event.newValue,\n          colDef: event.colDef,\n          column: event.column,\n          api: event.api,\n          context: event.context\n        });\n      });\n    }\n  }\n  setValueUsingField(data, field, newValue, isFieldContainsDots) {\n    if (!field) {\n      return false;\n    }\n    let valuesAreSame = false;\n    if (!isFieldContainsDots) {\n      valuesAreSame = data[field] === newValue;\n      if (!valuesAreSame) {\n        data[field] = newValue;\n      }\n    } else {\n      const fieldPieces = field.split(\".\");\n      let currentObject = data;\n      while (fieldPieces.length > 0 && currentObject) {\n        const fieldPiece = fieldPieces.shift();\n        if (fieldPieces.length === 0) {\n          valuesAreSame = currentObject[fieldPiece] === newValue;\n          if (!valuesAreSame) {\n            currentObject[fieldPiece] = newValue;\n          }\n        } else {\n          currentObject = currentObject[fieldPiece];\n        }\n      }\n    }\n    return !valuesAreSame;\n  }\n  executeValueGetterWithValueCache(valueGetter, data, column, rowNode) {\n    const colId = column.getColId();\n    const valueFromCache = this.valueCache.getValue(rowNode, colId);\n    if (valueFromCache !== void 0) {\n      return valueFromCache;\n    }\n    const result = this.executeValueGetterWithoutValueCache(valueGetter, data, column, rowNode);\n    this.valueCache.setValue(rowNode, colId, result);\n    return result;\n  }\n  executeValueGetterWithoutValueCache(valueGetter, data, column, rowNode) {\n    const params = _addGridCommonParams(this.gos, {\n      data,\n      node: rowNode,\n      column,\n      colDef: column.getColDef(),\n      getValue: this.getValueCallback.bind(this, rowNode)\n    });\n    let result;\n    if (typeof valueGetter === \"function\") {\n      result = valueGetter(params);\n    } else {\n      result = this.expressionSvc?.evaluate(valueGetter, params);\n    }\n    return result;\n  }\n  getValueCallback(node, field) {\n    const otherColumn = this.colModel.getColDefCol(field);\n    if (otherColumn) {\n      return this.getValue(otherColumn, node);\n    }\n    return null;\n  }\n  // used by row grouping and pivot, to get key for a row. col can be a pivot col or a row grouping col\n  getKeyForNode(col, rowNode) {\n    const value = this.getValue(col, rowNode);\n    const keyCreator = col.getColDef().keyCreator;\n    let result = value;\n    if (keyCreator) {\n      const keyParams = _addGridCommonParams(this.gos, {\n        value,\n        colDef: col.getColDef(),\n        column: col,\n        node: rowNode,\n        data: rowNode.data\n      });\n      result = keyCreator(keyParams);\n    }\n    if (typeof result === \"string\" || result == null) {\n      return result;\n    }\n    result = String(result);\n    if (result === \"[object Object]\") {\n      _warn(121);\n    }\n    return result;\n  }\n};\n\n// packages/ag-grid-community/src/gridCoreModule.ts\nvar CommunityCoreModule = {\n  moduleName: \"CommunityCore\",\n  version: VERSION,\n  beans: [\n    GridDestroyService,\n    ApiFunctionService,\n    Registry,\n    UserComponentFactory,\n    RowContainerHeightService,\n    VisibleColsService,\n    EventService,\n    GridOptionsService,\n    ColumnModel,\n    PageBoundsService,\n    PageBoundsListener,\n    RowRenderer,\n    ValueService,\n    FocusService,\n    Environment,\n    ScrollVisibleService,\n    CtrlsService,\n    SyncService,\n    ColumnNameService,\n    ColumnViewportService\n  ],\n  icons: {\n    // icon on select dropdowns (select cell editor, charts tool panels)\n    selectOpen: \"small-down\",\n    /** @deprecated v33 */\n    smallDown: \"small-down\",\n    /** @deprecated v33 */\n    colorPicker: \"color-picker\",\n    /** @deprecated v33 */\n    smallUp: \"small-up\",\n    /** @deprecated v33 */\n    checkboxChecked: \"small-up\",\n    /** @deprecated v33 */\n    checkboxIndeterminate: \"checkbox-indeterminate\",\n    /** @deprecated v33 */\n    checkboxUnchecked: \"checkbox-unchecked\",\n    /** @deprecated v33 */\n    radioButtonOn: \"radio-button-on\",\n    /** @deprecated v33 */\n    radioButtonOff: \"radio-button-off\",\n    /** @deprecated v33 */\n    smallLeft: \"small-left\",\n    /** @deprecated v33 */\n    smallRight: \"small-right\"\n  },\n  apiFunctions: {\n    getGridId,\n    destroy,\n    isDestroyed,\n    getGridOption,\n    setGridOption,\n    updateGridOptions\n  },\n  dependsOn: [\n    DataTypeModule,\n    ColumnMoveModule,\n    ColumnResizeModule,\n    SortModule,\n    ColumnHeaderCompModule,\n    ColumnGroupModule,\n    ColumnGroupHeaderCompModule,\n    OverlayModule,\n    ChangeDetectionModule,\n    AnimationFrameModule,\n    KeyboardNavigationModule,\n    PinnedColumnModule,\n    AriaModule,\n    TouchModule,\n    CellRendererFunctionModule,\n    ColumnFlexModule,\n    ExpressionModule\n  ]\n};\n\n// packages/ag-grid-community/src/grid.ts\nvar _GlobalGridOptions = class _GlobalGridOptions {\n  /**\n   * @param providedOptions\n   * @returns Shallow copy of the provided options with global options merged in.\n   */\n  static applyGlobalGridOptions(providedOptions) {\n    if (!_GlobalGridOptions.gridOptions) {\n      return { ...providedOptions };\n    }\n    let mergedGridOps = {};\n    _mergeDeep(mergedGridOps, _GlobalGridOptions.gridOptions, true, true);\n    if (_GlobalGridOptions.mergeStrategy === \"deep\") {\n      _mergeDeep(mergedGridOps, providedOptions, true, true);\n    } else {\n      mergedGridOps = { ...mergedGridOps, ...providedOptions };\n    }\n    if (_GlobalGridOptions.gridOptions.context) {\n      mergedGridOps.context = _GlobalGridOptions.gridOptions.context;\n    }\n    if (providedOptions.context) {\n      if (_GlobalGridOptions.mergeStrategy === \"deep\" && mergedGridOps.context) {\n        _mergeDeep(providedOptions.context, mergedGridOps.context, true, true);\n      }\n      mergedGridOps.context = providedOptions.context;\n    }\n    return mergedGridOps;\n  }\n};\n_GlobalGridOptions.gridOptions = void 0;\n_GlobalGridOptions.mergeStrategy = \"shallow\";\nvar GlobalGridOptions = _GlobalGridOptions;\nfunction provideGlobalGridOptions(gridOptions, mergeStrategy = \"shallow\") {\n  GlobalGridOptions.gridOptions = gridOptions;\n  GlobalGridOptions.mergeStrategy = mergeStrategy;\n}\nfunction _getGlobalGridOption(gridOption) {\n  return GlobalGridOptions.gridOptions?.[gridOption];\n}\nfunction createGrid(eGridDiv, gridOptions, params) {\n  if (!gridOptions) {\n    _error(11);\n    return {};\n  }\n  const gridParams = params;\n  let destroyCallback;\n  if (!gridParams?.setThemeOnGridDiv) {\n    const newGridDiv = document.createElement(\"div\");\n    newGridDiv.style.height = \"100%\";\n    eGridDiv.appendChild(newGridDiv);\n    eGridDiv = newGridDiv;\n    destroyCallback = () => eGridDiv.remove();\n  }\n  const api = new GridCoreCreator().create(\n    eGridDiv,\n    gridOptions,\n    (context) => {\n      const gridComp = new GridComp(eGridDiv);\n      context.createBean(gridComp);\n    },\n    void 0,\n    params,\n    destroyCallback\n  );\n  return api;\n}\nvar nextGridId = 1;\nvar GridCoreCreator = class {\n  create(eGridDiv, providedOptions, createUi, acceptChanges, params, destroyCallback) {\n    const gridOptions = GlobalGridOptions.applyGlobalGridOptions(providedOptions);\n    const gridId = gridOptions.gridId ?? String(nextGridId++);\n    const rowModelType = gridOptions.rowModelType ?? \"clientSide\";\n    const registeredModules = this.getRegisteredModules(params, gridId, rowModelType);\n    const beanClasses = this.createBeansList(rowModelType, registeredModules, gridId);\n    const providedBeanInstances = this.createProvidedBeans(eGridDiv, gridOptions, params);\n    if (!beanClasses) {\n      return void 0;\n    }\n    const contextParams = {\n      providedBeanInstances,\n      beanClasses,\n      gridId,\n      beanInitComparator: gridBeanInitComparator,\n      beanDestroyComparator: gridBeanDestroyComparator,\n      derivedBeans: [createGridApi],\n      destroyCallback\n    };\n    const context = new Context(contextParams);\n    this.registerModuleFeatures(context, registeredModules);\n    createUi(context);\n    context.getBean(\"syncSvc\").start();\n    if (acceptChanges) {\n      acceptChanges(context);\n    }\n    return context.getBean(\"gridApi\");\n  }\n  getRegisteredModules(params, gridId, rowModelType) {\n    _registerModule(CommunityCoreModule, void 0);\n    params?.modules?.forEach((m) => _registerModule(m, gridId));\n    return _getRegisteredModules(gridId, rowModelType);\n  }\n  registerModuleFeatures(context, registeredModules) {\n    const registry = context.getBean(\"registry\");\n    const apiFunctionSvc = context.getBean(\"apiFunctionSvc\");\n    registeredModules.forEach((module) => {\n      registry.registerModule(module);\n      const apiFunctions = module.apiFunctions;\n      if (apiFunctions) {\n        const names = Object.keys(apiFunctions);\n        names.forEach((name) => {\n          apiFunctionSvc?.addFunction(name, apiFunctions[name]);\n        });\n      }\n    });\n  }\n  createProvidedBeans(eGridDiv, gridOptions, params) {\n    let frameworkOverrides = params ? params.frameworkOverrides : null;\n    if (_missing(frameworkOverrides)) {\n      frameworkOverrides = new VanillaFrameworkOverrides();\n    }\n    const seed = {\n      gridOptions,\n      eGridDiv,\n      globalListener: params ? params.globalListener : null,\n      globalSyncListener: params ? params.globalSyncListener : null,\n      frameworkOverrides\n    };\n    if (params && params.providedBeanInstances) {\n      Object.assign(seed, params.providedBeanInstances);\n    }\n    return seed;\n  }\n  createBeansList(rowModelType, registeredModules, gridId) {\n    const rowModelModuleNames = {\n      clientSide: \"ClientSideRowModel\",\n      infinite: \"InfiniteRowModel\",\n      serverSide: \"ServerSideRowModel\",\n      viewport: \"ViewportRowModel\"\n    };\n    const rowModuleModelName = rowModelModuleNames[rowModelType];\n    if (!rowModuleModelName) {\n      _logPreInitErr(201, { rowModelType }, `Unknown rowModelType ${rowModelType}.`);\n      return;\n    }\n    if (!_isModuleRegistered(rowModuleModelName, gridId, rowModelType)) {\n      _logPreInitErr(\n        200,\n        {\n          reasonOrId: `rowModelType = '${rowModelType}'`,\n          moduleName: rowModuleModelName,\n          gridScoped: _areModulesGridScoped(),\n          gridId,\n          rowModelType\n        },\n        `Missing module ${rowModuleModelName}Module for rowModelType ${rowModelType}. \nIf upgrading from before v33, see ${baseDocLink}/upgrading-to-ag-grid-33/#changes-to-modules/`\n      );\n      return;\n    }\n    const beans = /* @__PURE__ */ new Set();\n    registeredModules.forEach((module) => module.beans?.forEach((bean) => beans.add(bean)));\n    return Array.from(beans);\n  }\n};\n\n// packages/ag-grid-community/src/api/rowModelApiUtils.ts\nfunction _getClientSideRowModel(beans) {\n  const rowModel = beans.rowModel;\n  return rowModel.getType() === \"clientSide\" ? rowModel : void 0;\n}\nfunction _getInfiniteRowModel(beans) {\n  const rowModel = beans.rowModel;\n  return rowModel.getType() === \"infinite\" ? rowModel : void 0;\n}\nfunction _getServerSideRowModel(beans) {\n  const rowModel = beans.rowModel;\n  return rowModel.getType() === \"serverSide\" ? rowModel : void 0;\n}\n\n// packages/ag-grid-community/src/eventTypes.ts\nvar _PUBLIC_EVENTS = [\n  \"columnEverythingChanged\",\n  \"newColumnsLoaded\",\n  \"columnPivotModeChanged\",\n  \"pivotMaxColumnsExceeded\",\n  \"columnRowGroupChanged\",\n  \"expandOrCollapseAll\",\n  \"columnPivotChanged\",\n  \"gridColumnsChanged\",\n  \"columnValueChanged\",\n  \"columnMoved\",\n  \"columnVisible\",\n  \"columnPinned\",\n  \"columnGroupOpened\",\n  \"columnResized\",\n  \"displayedColumnsChanged\",\n  \"virtualColumnsChanged\",\n  \"columnHeaderMouseOver\",\n  \"columnHeaderMouseLeave\",\n  \"columnHeaderClicked\",\n  \"columnHeaderContextMenu\",\n  \"asyncTransactionsFlushed\",\n  \"rowGroupOpened\",\n  \"rowDataUpdated\",\n  \"pinnedRowDataChanged\",\n  \"rangeSelectionChanged\",\n  \"cellSelectionChanged\",\n  \"chartCreated\",\n  \"chartRangeSelectionChanged\",\n  \"chartOptionsChanged\",\n  \"chartDestroyed\",\n  \"toolPanelVisibleChanged\",\n  \"toolPanelSizeChanged\",\n  \"modelUpdated\",\n  \"cutStart\",\n  \"cutEnd\",\n  \"pasteStart\",\n  \"pasteEnd\",\n  \"fillStart\",\n  \"fillEnd\",\n  \"cellSelectionDeleteStart\",\n  \"cellSelectionDeleteEnd\",\n  \"rangeDeleteStart\",\n  \"rangeDeleteEnd\",\n  \"undoStarted\",\n  \"undoEnded\",\n  \"redoStarted\",\n  \"redoEnded\",\n  \"cellClicked\",\n  \"cellDoubleClicked\",\n  \"cellMouseDown\",\n  \"cellContextMenu\",\n  \"cellValueChanged\",\n  \"cellEditRequest\",\n  \"rowValueChanged\",\n  \"headerFocused\",\n  \"cellFocused\",\n  \"rowSelected\",\n  \"selectionChanged\",\n  \"tooltipShow\",\n  \"tooltipHide\",\n  \"cellKeyDown\",\n  \"cellMouseOver\",\n  \"cellMouseOut\",\n  \"filterChanged\",\n  \"filterModified\",\n  \"filterOpened\",\n  \"advancedFilterBuilderVisibleChanged\",\n  \"sortChanged\",\n  \"virtualRowRemoved\",\n  \"rowClicked\",\n  \"rowDoubleClicked\",\n  \"gridReady\",\n  \"gridPreDestroyed\",\n  \"gridSizeChanged\",\n  \"viewportChanged\",\n  \"firstDataRendered\",\n  \"dragStarted\",\n  \"dragStopped\",\n  \"dragCancelled\",\n  \"rowEditingStarted\",\n  \"rowEditingStopped\",\n  \"cellEditingStarted\",\n  \"cellEditingStopped\",\n  \"bodyScroll\",\n  \"bodyScrollEnd\",\n  \"paginationChanged\",\n  \"componentStateChanged\",\n  \"storeRefreshed\",\n  \"stateUpdated\",\n  \"columnMenuVisibleChanged\",\n  \"contextMenuVisibleChanged\",\n  \"rowDragEnter\",\n  \"rowDragMove\",\n  \"rowDragLeave\",\n  \"rowDragEnd\",\n  \"rowDragCancel\"\n];\nvar _INTERNAL_EVENTS = [\n  \"scrollbarWidthChanged\",\n  \"keyShortcutChangedCellStart\",\n  \"keyShortcutChangedCellEnd\",\n  \"pinnedHeightChanged\",\n  \"cellFocusCleared\",\n  \"fullWidthRowFocused\",\n  \"checkboxChanged\",\n  \"heightScaleChanged\",\n  \"suppressMovableColumns\",\n  \"suppressMenuHide\",\n  \"suppressFieldDotNotation\",\n  \"columnPanelItemDragStart\",\n  \"columnPanelItemDragEnd\",\n  \"bodyHeightChanged\",\n  \"columnContainerWidthChanged\",\n  \"displayedColumnsWidthChanged\",\n  \"scrollVisibilityChanged\",\n  \"scrollGapChanged\",\n  \"columnHoverChanged\",\n  \"flashCells\",\n  \"paginationPixelOffsetChanged\",\n  \"displayedRowsChanged\",\n  \"leftPinnedWidthChanged\",\n  \"rightPinnedWidthChanged\",\n  \"rowContainerHeightChanged\",\n  \"headerHeightChanged\",\n  \"columnGroupHeaderHeightChanged\",\n  \"columnHeaderHeightChanged\",\n  \"gridStylesChanged\",\n  \"storeUpdated\",\n  \"filterDestroyed\",\n  \"rowDataUpdateStarted\",\n  \"rowCountReady\",\n  \"advancedFilterEnabledChanged\",\n  \"dataTypesInferred\",\n  \"fieldValueChanged\",\n  \"fieldPickerValueSelected\",\n  \"richSelectListRowSelected\",\n  \"sideBarUpdated\",\n  \"alignedGridScroll\",\n  \"alignedGridColumn\",\n  \"gridOptionsChanged\",\n  \"chartTitleEdit\",\n  \"recalculateRowBounds\",\n  \"stickyTopOffsetChanged\",\n  \"overlayExclusiveChanged\",\n  \"beforeRefreshModel\"\n];\nvar _ALL_EVENTS = [..._PUBLIC_EVENTS, ..._INTERNAL_EVENTS];\n\n// packages/ag-grid-community/src/misc/locale/localeService.ts\nvar LocaleService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"localeSvc\";\n  }\n  getLocaleTextFunc() {\n    const gos = this.gos;\n    const getLocaleText = gos.getCallback(\"getLocaleText\");\n    if (getLocaleText) {\n      return (key, defaultValue, variableValues) => {\n        const params = {\n          key,\n          defaultValue,\n          variableValues\n        };\n        return getLocaleText(params);\n      };\n    }\n    const localeText = gos.get(\"localeText\");\n    return (key, defaultValue, variableValues) => {\n      let localisedText = localeText && localeText[key];\n      if (localisedText && variableValues && variableValues.length) {\n        let found = 0;\n        while (true) {\n          if (found >= variableValues.length) {\n            break;\n          }\n          const idx = localisedText.indexOf(\"${variable}\");\n          if (idx === -1) {\n            break;\n          }\n          localisedText = localisedText.replace(\"${variable}\", variableValues[found++]);\n        }\n      }\n      return localisedText ?? defaultValue;\n    };\n  }\n};\n\n// packages/ag-grid-community/src/propertyKeys.ts\nvar STRING_GRID_OPTIONS = [\n  \"overlayLoadingTemplate\",\n  \"overlayNoRowsTemplate\",\n  \"gridId\",\n  \"quickFilterText\",\n  \"rowModelType\",\n  \"editType\",\n  \"domLayout\",\n  \"clipboardDelimiter\",\n  \"rowGroupPanelShow\",\n  \"multiSortKey\",\n  \"pivotColumnGroupTotals\",\n  \"pivotRowTotals\",\n  \"pivotPanelShow\",\n  \"fillHandleDirection\",\n  \"groupDisplayType\",\n  \"treeDataDisplayType\",\n  \"treeDataChildrenField\",\n  \"colResizeDefault\",\n  \"tooltipTrigger\",\n  \"serverSidePivotResultFieldSeparator\",\n  \"columnMenu\",\n  \"tooltipShowMode\",\n  \"grandTotalRow\",\n  \"themeCssLayer\"\n];\nvar OBJECT_GRID_OPTIONS = [\n  \"components\",\n  \"rowStyle\",\n  \"context\",\n  \"autoGroupColumnDef\",\n  \"localeText\",\n  \"icons\",\n  \"datasource\",\n  \"dragAndDropImageComponentParams\",\n  \"serverSideDatasource\",\n  \"viewportDatasource\",\n  \"groupRowRendererParams\",\n  \"aggFuncs\",\n  \"fullWidthCellRendererParams\",\n  \"defaultColGroupDef\",\n  \"defaultColDef\",\n  \"defaultCsvExportParams\",\n  \"defaultExcelExportParams\",\n  \"columnTypes\",\n  \"rowClassRules\",\n  \"detailCellRendererParams\",\n  \"loadingCellRendererParams\",\n  \"loadingOverlayComponentParams\",\n  \"noRowsOverlayComponentParams\",\n  \"popupParent\",\n  \"themeStyleContainer\",\n  \"statusBar\",\n  \"chartThemeOverrides\",\n  \"customChartThemes\",\n  \"chartToolPanelsDef\",\n  \"dataTypeDefinitions\",\n  \"advancedFilterParent\",\n  \"advancedFilterBuilderParams\",\n  \"initialState\",\n  \"autoSizeStrategy\",\n  \"selectionColumnDef\"\n];\nvar ARRAY_GRID_OPTIONS = [\n  \"sortingOrder\",\n  \"alignedGrids\",\n  \"rowData\",\n  \"columnDefs\",\n  \"excelStyles\",\n  \"pinnedTopRowData\",\n  \"pinnedBottomRowData\",\n  \"chartThemes\",\n  \"rowClass\",\n  \"paginationPageSizeSelector\"\n];\nvar _NUMBER_GRID_OPTIONS = [\n  \"rowHeight\",\n  \"detailRowHeight\",\n  \"rowBuffer\",\n  \"headerHeight\",\n  \"groupHeaderHeight\",\n  \"groupLockGroupColumns\",\n  \"floatingFiltersHeight\",\n  \"pivotHeaderHeight\",\n  \"pivotGroupHeaderHeight\",\n  \"groupDefaultExpanded\",\n  \"pivotDefaultExpanded\",\n  \"viewportRowModelPageSize\",\n  \"viewportRowModelBufferSize\",\n  \"autoSizePadding\",\n  \"maxBlocksInCache\",\n  \"maxConcurrentDatasourceRequests\",\n  \"tooltipShowDelay\",\n  \"tooltipHideDelay\",\n  \"cacheOverflowSize\",\n  \"paginationPageSize\",\n  \"cacheBlockSize\",\n  \"infiniteInitialRowCount\",\n  \"serverSideInitialRowCount\",\n  \"scrollbarWidth\",\n  \"asyncTransactionWaitMillis\",\n  \"blockLoadDebounceMillis\",\n  \"keepDetailRowsCount\",\n  \"undoRedoCellEditingLimit\",\n  \"cellFlashDuration\",\n  \"cellFadeDuration\",\n  \"tabIndex\",\n  \"pivotMaxGeneratedColumns\"\n];\nvar OTHER_GRID_OPTIONS = [\"theme\", \"rowSelection\"];\nvar _BOOLEAN_MIXED_GRID_OPTIONS = [\n  \"cellSelection\",\n  \"sideBar\",\n  \"rowNumbers\",\n  \"suppressGroupChangesColumnVisibility\",\n  \"groupAggFiltering\",\n  \"suppressStickyTotalRow\",\n  \"groupHideParentOfSingleChild\"\n];\nvar _BOOLEAN_GRID_OPTIONS = [\n  \"loadThemeGoogleFonts\",\n  \"suppressMakeColumnVisibleAfterUnGroup\",\n  \"suppressRowClickSelection\",\n  \"suppressCellFocus\",\n  \"suppressHeaderFocus\",\n  \"suppressHorizontalScroll\",\n  \"groupSelectsChildren\",\n  \"alwaysShowHorizontalScroll\",\n  \"alwaysShowVerticalScroll\",\n  \"debug\",\n  \"enableBrowserTooltips\",\n  \"enableCellExpressions\",\n  \"groupSuppressBlankHeader\",\n  \"suppressMenuHide\",\n  \"suppressRowDeselection\",\n  \"unSortIcon\",\n  \"suppressMultiSort\",\n  \"alwaysMultiSort\",\n  \"singleClickEdit\",\n  \"suppressLoadingOverlay\",\n  \"suppressNoRowsOverlay\",\n  \"suppressAutoSize\",\n  \"skipHeaderOnAutoSize\",\n  \"suppressColumnMoveAnimation\",\n  \"suppressMoveWhenColumnDragging\",\n  \"suppressMovableColumns\",\n  \"suppressFieldDotNotation\",\n  \"enableRangeSelection\",\n  \"enableRangeHandle\",\n  \"enableFillHandle\",\n  \"suppressClearOnFillReduction\",\n  \"deltaSort\",\n  \"suppressTouch\",\n  \"allowContextMenuWithControlKey\",\n  \"suppressContextMenu\",\n  \"suppressDragLeaveHidesColumns\",\n  \"suppressRowGroupHidesColumns\",\n  \"suppressMiddleClickScrolls\",\n  \"suppressPreventDefaultOnMouseWheel\",\n  \"suppressCopyRowsToClipboard\",\n  \"copyHeadersToClipboard\",\n  \"copyGroupHeadersToClipboard\",\n  \"pivotMode\",\n  \"suppressAggFuncInHeader\",\n  \"suppressColumnVirtualisation\",\n  \"alwaysAggregateAtRootLevel\",\n  \"suppressFocusAfterRefresh\",\n  \"functionsReadOnly\",\n  \"animateRows\",\n  \"groupSelectsFiltered\",\n  \"groupRemoveSingleChildren\",\n  \"groupRemoveLowestSingleChildren\",\n  \"enableRtl\",\n  \"enableCellSpan\",\n  \"suppressClickEdit\",\n  \"rowDragEntireRow\",\n  \"rowDragManaged\",\n  \"suppressRowDrag\",\n  \"suppressMoveWhenRowDragging\",\n  \"rowDragMultiRow\",\n  \"enableGroupEdit\",\n  \"embedFullWidthRows\",\n  \"suppressPaginationPanel\",\n  \"groupHideOpenParents\",\n  \"groupAllowUnbalanced\",\n  \"pagination\",\n  \"paginationAutoPageSize\",\n  \"suppressScrollOnNewData\",\n  \"suppressScrollWhenPopupsAreOpen\",\n  \"purgeClosedRowNodes\",\n  \"cacheQuickFilter\",\n  \"includeHiddenColumnsInQuickFilter\",\n  \"ensureDomOrder\",\n  \"accentedSort\",\n  \"suppressChangeDetection\",\n  \"valueCache\",\n  \"valueCacheNeverExpires\",\n  \"aggregateOnlyChangedColumns\",\n  \"suppressAnimationFrame\",\n  \"suppressExcelExport\",\n  \"suppressCsvExport\",\n  \"includeHiddenColumnsInAdvancedFilter\",\n  \"suppressMultiRangeSelection\",\n  \"enterNavigatesVerticallyAfterEdit\",\n  \"enterNavigatesVertically\",\n  \"suppressPropertyNamesCheck\",\n  \"rowMultiSelectWithClick\",\n  \"suppressRowHoverHighlight\",\n  \"suppressRowTransform\",\n  \"suppressClipboardPaste\",\n  \"suppressLastEmptyLineOnPaste\",\n  \"enableCharts\",\n  \"suppressMaintainUnsortedOrder\",\n  \"enableCellTextSelection\",\n  \"suppressBrowserResizeObserver\",\n  \"suppressMaxRenderedRowRestriction\",\n  \"excludeChildrenWhenTreeDataFiltering\",\n  \"tooltipMouseTrack\",\n  \"tooltipInteraction\",\n  \"keepDetailRows\",\n  \"paginateChildRows\",\n  \"preventDefaultOnContextMenu\",\n  \"undoRedoCellEditing\",\n  \"allowDragFromColumnsToolPanel\",\n  \"pivotSuppressAutoColumn\",\n  \"suppressExpandablePivotGroups\",\n  \"debounceVerticalScrollbar\",\n  \"detailRowAutoHeight\",\n  \"serverSideSortAllLevels\",\n  \"serverSideEnableClientSideSort\",\n  \"serverSideOnlyRefreshFilteredGroups\",\n  \"suppressAggFilteredOnly\",\n  \"showOpenedGroup\",\n  \"suppressClipboardApi\",\n  \"suppressModelUpdateAfterUpdateTransaction\",\n  \"stopEditingWhenCellsLoseFocus\",\n  \"groupMaintainOrder\",\n  \"columnHoverHighlight\",\n  \"readOnlyEdit\",\n  \"suppressRowVirtualisation\",\n  \"enableCellEditingOnBackspace\",\n  \"resetRowDataOnUpdate\",\n  \"removePivotHeaderRowWhenSingleValueColumn\",\n  \"suppressCopySingleCellRanges\",\n  \"suppressGroupRowsSticky\",\n  \"suppressCutToClipboard\",\n  \"rowGroupPanelSuppressSort\",\n  \"allowShowChangeAfterFilter\",\n  \"enableAdvancedFilter\",\n  \"masterDetail\",\n  \"treeData\",\n  \"reactiveCustomComponents\",\n  \"applyQuickFilterBeforePivotOrAgg\",\n  \"suppressServerSideFullWidthLoadingRow\",\n  \"suppressAdvancedFilterEval\",\n  \"loading\",\n  \"maintainColumnOrder\",\n  \"enableStrictPivotColumnOrder\",\n  \"suppressSetFilterByDefault\"\n];\nvar _FUNCTION_GRID_OPTIONS = [\n  \"doesExternalFilterPass\",\n  \"processPivotResultColDef\",\n  \"processPivotResultColGroupDef\",\n  \"getBusinessKeyForNode\",\n  \"isRowSelectable\",\n  \"rowDragText\",\n  \"groupRowRenderer\",\n  \"dragAndDropImageComponent\",\n  \"fullWidthCellRenderer\",\n  \"loadingCellRenderer\",\n  \"loadingOverlayComponent\",\n  \"noRowsOverlayComponent\",\n  \"detailCellRenderer\",\n  \"quickFilterParser\",\n  \"quickFilterMatcher\",\n  \"getLocaleText\",\n  \"isExternalFilterPresent\",\n  \"getRowHeight\",\n  \"getRowClass\",\n  \"getRowStyle\",\n  \"getContextMenuItems\",\n  \"getMainMenuItems\",\n  \"processRowPostCreate\",\n  \"processCellForClipboard\",\n  \"getGroupRowAgg\",\n  \"isFullWidthRow\",\n  \"sendToClipboard\",\n  \"focusGridInnerElement\",\n  \"navigateToNextHeader\",\n  \"tabToNextHeader\",\n  \"navigateToNextCell\",\n  \"tabToNextCell\",\n  \"processCellFromClipboard\",\n  \"getDocument\",\n  \"postProcessPopup\",\n  \"getChildCount\",\n  \"getDataPath\",\n  \"isRowMaster\",\n  \"postSortRows\",\n  \"processHeaderForClipboard\",\n  \"processUnpinnedColumns\",\n  \"processGroupHeaderForClipboard\",\n  \"paginationNumberFormatter\",\n  \"processDataFromClipboard\",\n  \"getServerSideGroupKey\",\n  \"isServerSideGroup\",\n  \"createChartContainer\",\n  \"getChartToolbarItems\",\n  \"fillOperation\",\n  \"isApplyServerSideTransaction\",\n  \"getServerSideGroupLevelParams\",\n  \"isServerSideGroupOpenByDefault\",\n  \"isGroupOpenByDefault\",\n  \"initialGroupOrderComparator\",\n  \"loadingCellRendererSelector\",\n  \"getRowId\",\n  \"chartMenuItems\",\n  \"groupTotalRow\",\n  \"alwaysPassFilter\"\n];\nvar _ALL_GRID_OPTIONS = [\n  ...ARRAY_GRID_OPTIONS,\n  ...OBJECT_GRID_OPTIONS,\n  ...STRING_GRID_OPTIONS,\n  ..._NUMBER_GRID_OPTIONS,\n  ..._FUNCTION_GRID_OPTIONS,\n  ..._BOOLEAN_GRID_OPTIONS,\n  ..._BOOLEAN_MIXED_GRID_OPTIONS,\n  ...OTHER_GRID_OPTIONS\n];\n\n// packages/ag-grid-community/src/components/framework/frameworkComponentWrapper.ts\nvar BaseComponentWrapper = class {\n  wrap(OriginalConstructor, mandatoryMethods, optionalMethods, componentType) {\n    const wrapper = this.createWrapper(OriginalConstructor, componentType);\n    mandatoryMethods?.forEach((methodName) => {\n      this.createMethod(wrapper, methodName, true);\n    });\n    optionalMethods?.forEach((methodName) => {\n      this.createMethod(wrapper, methodName, false);\n    });\n    return wrapper;\n  }\n  createMethod(wrapper, methodName, mandatory) {\n    wrapper.addMethod(methodName, this.createMethodProxy(wrapper, methodName, mandatory));\n  }\n  createMethodProxy(wrapper, methodName, mandatory) {\n    return function() {\n      if (wrapper.hasMethod(methodName)) {\n        return wrapper.callMethod(methodName, arguments);\n      }\n      if (mandatory) {\n        _warn(49, { methodName });\n      }\n      return null;\n    };\n  }\n};\n\n// packages/ag-grid-community/src/tooltip/tooltipComponent.ts\nvar TooltipComponent2 = class extends PopupComponent {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-tooltip\"></div>`\n    );\n  }\n  // will need to type params\n  init(params) {\n    const { value } = params;\n    this.getGui().textContent = _escapeString(value, true);\n  }\n};\n\n// packages/ag-grid-community/src/utils/fuzzyMatch.ts\nfunction _fuzzySuggestions(params) {\n  const { inputValue, allSuggestions, hideIrrelevant, filterByPercentageOfBestMatch, addSequentialWeight } = params;\n  let thisSuggestions = allSuggestions.map((text, idx) => ({\n    value: text,\n    relevance: levenshteinDistance(inputValue.toLowerCase(), text.toLocaleLowerCase(), addSequentialWeight),\n    idx\n  }));\n  thisSuggestions.sort((a, b) => b.relevance - a.relevance);\n  if (hideIrrelevant) {\n    thisSuggestions = thisSuggestions.filter((suggestion) => suggestion.relevance !== 0);\n  }\n  if (thisSuggestions.length > 0 && filterByPercentageOfBestMatch && filterByPercentageOfBestMatch > 0) {\n    const bestMatch = thisSuggestions[0].relevance;\n    const limit = bestMatch * filterByPercentageOfBestMatch;\n    thisSuggestions = thisSuggestions.filter((suggestion) => limit - suggestion.relevance < 0);\n  }\n  const values = [];\n  const indices = [];\n  for (const suggestion of thisSuggestions) {\n    values.push(suggestion.value);\n    indices.push(suggestion.idx);\n  }\n  return { values, indices };\n}\nfunction getAllSubstrings(str) {\n  const result = [];\n  const size = str.length;\n  for (let len = 1; len <= size; len++) {\n    for (let i = 0; i <= size - len; i++) {\n      const j = i + len - 1;\n      result.push(str.slice(i, j + 1));\n    }\n  }\n  return result;\n}\nfunction levenshteinDistance(str1, str2, addSequentialWeight = false) {\n  const a = str1.replace(/\\s/g, \"\");\n  const b = str2.replace(/\\s/g, \"\");\n  const len1 = a.length;\n  const len2 = b.length;\n  const m = new Array(len1 + 1).fill(null).map(() => new Array(len2 + 1).fill(0));\n  for (let i = 0; i <= len1; i += 1) {\n    m[i][0] = i;\n  }\n  for (let j = 0; j <= len2; j += 1) {\n    m[0][j] = j;\n  }\n  for (let i = 1; i <= len1; i++) {\n    for (let j = 1; j <= len2; j++) {\n      if (a[i - 1] === b[j - 1]) {\n        m[i][j] = m[i - 1][j - 1];\n      } else {\n        m[i][j] = 1 + Math.min(m[i][j - 1], Math.min(m[i - 1][j], m[i - 1][j - 1]));\n      }\n    }\n  }\n  const distance = m[len1][len2];\n  const maxDistance = Math.max(len1, len2);\n  let weight = maxDistance - distance;\n  if (addSequentialWeight) {\n    const substrings = getAllSubstrings(a);\n    for (let i = 0; i < substrings.length; i++) {\n      const currentSubstring = substrings[i];\n      if (b.indexOf(currentSubstring) !== -1) {\n        weight += 1;\n        weight *= currentSubstring.length;\n      }\n    }\n  }\n  return weight;\n}\n\n// packages/ag-grid-community/src/utils/number.ts\nfunction _formatNumberCommas(value, getLocaleTextFunc) {\n  if (typeof value !== \"number\") {\n    return \"\";\n  }\n  const localeTextFunc = getLocaleTextFunc();\n  const thousandSeparator = localeTextFunc(\"thousandSeparator\", \",\");\n  const decimalSeparator = localeTextFunc(\"decimalSeparator\", \".\");\n  return value.toString().replace(\".\", decimalSeparator).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, `$1${thousandSeparator}`);\n}\n\n// packages/ag-grid-community/src/export/baseCreator.ts\nvar BaseCreator = class extends BeanStub {\n  getFileName(fileName) {\n    const extension = this.getDefaultFileExtension();\n    if (fileName == null || !fileName.length) {\n      fileName = this.getDefaultFileName();\n    }\n    return fileName.indexOf(\".\") === -1 ? `${fileName}.${extension}` : fileName;\n  }\n  getData(params) {\n    const serializingSession = this.createSerializingSession(params);\n    return this.beans.gridSerializer.serialize(serializingSession, params);\n  }\n  getDefaultFileName() {\n    return `export.${this.getDefaultFileExtension()}`;\n  }\n};\n\n// packages/ag-grid-community/src/export/baseGridSerializingSession.ts\nvar BaseGridSerializingSession = class {\n  constructor(config) {\n    this.groupColumns = [];\n    const {\n      colModel,\n      rowGroupColsSvc,\n      colNames,\n      valueSvc,\n      gos,\n      processCellCallback,\n      processHeaderCallback,\n      processGroupHeaderCallback,\n      processRowGroupCallback\n    } = config;\n    this.colModel = colModel;\n    this.rowGroupColsSvc = rowGroupColsSvc;\n    this.colNames = colNames;\n    this.valueSvc = valueSvc;\n    this.gos = gos;\n    this.processCellCallback = processCellCallback;\n    this.processHeaderCallback = processHeaderCallback;\n    this.processGroupHeaderCallback = processGroupHeaderCallback;\n    this.processRowGroupCallback = processRowGroupCallback;\n  }\n  prepare(columnsToExport) {\n    this.groupColumns = columnsToExport.filter((col) => !!col.getColDef().showRowGroup);\n  }\n  extractHeaderValue(column) {\n    const value = this.getHeaderName(this.processHeaderCallback, column);\n    return value ?? \"\";\n  }\n  extractRowCellValue(column, index, accumulatedRowIndex, type, node) {\n    const hideOpenParents = this.gos.get(\"groupHideOpenParents\");\n    const value = (!hideOpenParents || node.footer) && this.shouldRenderGroupSummaryCell(node, column, index) ? this.createValueForGroupNode(column, node) : this.valueSvc.getValue(column, node);\n    const processedValue = this.processCell({\n      accumulatedRowIndex,\n      rowNode: node,\n      column,\n      value,\n      processCellCallback: this.processCellCallback,\n      type\n    });\n    return processedValue;\n  }\n  shouldRenderGroupSummaryCell(node, column, currentColumnIndex) {\n    const isGroupNode = node.group && !this.gos.get(\"treeData\");\n    if (!isGroupNode) {\n      return false;\n    }\n    const currentColumnGroupIndex = this.groupColumns.indexOf(column);\n    if (currentColumnGroupIndex !== -1) {\n      if (node.groupData?.[column.getId()] !== void 0) {\n        return true;\n      }\n      if (_isServerSideRowModel(this.gos) && node.group) {\n        return true;\n      }\n      if (node.footer && node.level === -1) {\n        const colDef = column.getColDef();\n        const isFullWidth = colDef == null || colDef.showRowGroup === true;\n        return isFullWidth || colDef.showRowGroup === this.rowGroupColsSvc?.columns[0].getId();\n      }\n    }\n    const isGroupUseEntireRow = _isGroupUseEntireRow(this.gos, this.colModel.isPivotMode());\n    return currentColumnIndex === 0 && isGroupUseEntireRow;\n  }\n  getHeaderName(callback, column) {\n    if (callback) {\n      return callback(_addGridCommonParams(this.gos, { column }));\n    }\n    return this.colNames.getDisplayNameForColumn(column, \"csv\", true);\n  }\n  createValueForGroupNode(column, node) {\n    if (this.processRowGroupCallback) {\n      return this.processRowGroupCallback(_addGridCommonParams(this.gos, { column, node }));\n    }\n    const isTreeData = this.gos.get(\"treeData\");\n    const getValueFromNode = (node2) => {\n      if (isTreeData) {\n        return node2.key;\n      }\n      const value = node2.groupData?.[column.getId()];\n      if (!value || !node2.rowGroupColumn || node2.rowGroupColumn.getColDef().useValueFormatterForExport === false) {\n        return value;\n      }\n      return this.valueSvc.formatValue(node2.rowGroupColumn, node2, value) ?? value;\n    };\n    const isFooter = node.footer;\n    const keys = [getValueFromNode(node)];\n    if (!_isGroupMultiAutoColumn(this.gos)) {\n      while (node.parent) {\n        node = node.parent;\n        keys.push(getValueFromNode(node));\n      }\n    }\n    const groupValue = keys.reverse().join(\" -> \");\n    return isFooter ? `Total ${groupValue}` : groupValue;\n  }\n  processCell(params) {\n    const { accumulatedRowIndex, rowNode, column, value, processCellCallback, type } = params;\n    if (processCellCallback) {\n      return {\n        value: processCellCallback(\n          _addGridCommonParams(this.gos, {\n            accumulatedRowIndex,\n            column,\n            node: rowNode,\n            value,\n            type,\n            parseValue: (valueToParse) => this.valueSvc.parseValue(\n              column,\n              rowNode,\n              valueToParse,\n              this.valueSvc.getValue(column, rowNode)\n            ),\n            formatValue: (valueToFormat) => this.valueSvc.formatValue(column, rowNode, valueToFormat) ?? valueToFormat\n          })\n        ) ?? \"\"\n      };\n    }\n    if (column.getColDef().useValueFormatterForExport !== false) {\n      return {\n        value: value ?? \"\",\n        valueFormatted: this.valueSvc.formatValue(column, rowNode, value)\n      };\n    }\n    return { value: value ?? \"\" };\n  }\n};\n\n// packages/ag-grid-community/src/export/downloader.ts\nfunction _downloadFile(fileName, content) {\n  const win = document.defaultView || window;\n  if (!win) {\n    _warn(52);\n    return;\n  }\n  const element = document.createElement(\"a\");\n  const url = win.URL.createObjectURL(content);\n  element.setAttribute(\"href\", url);\n  element.setAttribute(\"download\", fileName);\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n  element.dispatchEvent(\n    new MouseEvent(\"click\", {\n      bubbles: false,\n      cancelable: true,\n      view: win\n    })\n  );\n  document.body.removeChild(element);\n  win.setTimeout(() => {\n    win.URL.revokeObjectURL(url);\n  }, 0);\n}\n\n// packages/ag-grid-community/src/gridOptionsInitial.ts\nvar INITIAL_GRID_OPTION_KEYS = {\n  enableBrowserTooltips: true,\n  tooltipTrigger: true,\n  tooltipMouseTrack: true,\n  tooltipShowMode: true,\n  tooltipInteraction: true,\n  defaultColGroupDef: true,\n  suppressAutoSize: true,\n  skipHeaderOnAutoSize: true,\n  autoSizeStrategy: true,\n  components: true,\n  stopEditingWhenCellsLoseFocus: true,\n  undoRedoCellEditing: true,\n  undoRedoCellEditingLimit: true,\n  excelStyles: true,\n  cacheQuickFilter: true,\n  customChartThemes: true,\n  chartThemeOverrides: true,\n  chartToolPanelsDef: true,\n  loadingCellRendererSelector: true,\n  localeText: true,\n  keepDetailRows: true,\n  keepDetailRowsCount: true,\n  detailRowHeight: true,\n  detailRowAutoHeight: true,\n  tabIndex: true,\n  valueCache: true,\n  valueCacheNeverExpires: true,\n  enableCellExpressions: true,\n  suppressTouch: true,\n  suppressBrowserResizeObserver: true,\n  suppressPropertyNamesCheck: true,\n  debug: true,\n  dragAndDropImageComponent: true,\n  loadingOverlayComponent: true,\n  suppressLoadingOverlay: true,\n  noRowsOverlayComponent: true,\n  paginationPageSizeSelector: true,\n  paginateChildRows: true,\n  pivotPanelShow: true,\n  pivotSuppressAutoColumn: true,\n  suppressExpandablePivotGroups: true,\n  aggFuncs: true,\n  allowShowChangeAfterFilter: true,\n  ensureDomOrder: true,\n  enableRtl: true,\n  suppressColumnVirtualisation: true,\n  suppressMaxRenderedRowRestriction: true,\n  suppressRowVirtualisation: true,\n  rowDragText: true,\n  groupLockGroupColumns: true,\n  suppressGroupRowsSticky: true,\n  rowModelType: true,\n  cacheOverflowSize: true,\n  infiniteInitialRowCount: true,\n  serverSideInitialRowCount: true,\n  maxBlocksInCache: true,\n  maxConcurrentDatasourceRequests: true,\n  blockLoadDebounceMillis: true,\n  serverSideOnlyRefreshFilteredGroups: true,\n  serverSidePivotResultFieldSeparator: true,\n  viewportRowModelPageSize: true,\n  viewportRowModelBufferSize: true,\n  debounceVerticalScrollbar: true,\n  suppressAnimationFrame: true,\n  suppressPreventDefaultOnMouseWheel: true,\n  scrollbarWidth: true,\n  icons: true,\n  suppressRowTransform: true,\n  gridId: true,\n  enableGroupEdit: true,\n  initialState: true,\n  processUnpinnedColumns: true,\n  createChartContainer: true,\n  getLocaleText: true,\n  getRowId: true,\n  reactiveCustomComponents: true,\n  columnMenu: true,\n  suppressSetFilterByDefault: true,\n  getDataPath: true,\n  enableCellSpan: true\n};\n\n// packages/ag-grid-community/src/validation/apiFunctionValidator.ts\nvar clientSide = \"clientSide\";\nvar serverSide = \"serverSide\";\nvar infinite = \"infinite\";\nvar functionRowModels = {\n  onGroupExpandedOrCollapsed: [clientSide],\n  refreshClientSideRowModel: [clientSide],\n  isRowDataEmpty: [clientSide],\n  forEachLeafNode: [clientSide],\n  forEachNodeAfterFilter: [clientSide],\n  forEachNodeAfterFilterAndSort: [clientSide],\n  resetRowHeights: [clientSide],\n  applyTransaction: [clientSide],\n  applyTransactionAsync: [clientSide],\n  flushAsyncTransactions: [clientSide],\n  getBestCostNodeSelection: [clientSide],\n  getServerSideSelectionState: [serverSide],\n  setServerSideSelectionState: [serverSide],\n  applyServerSideTransaction: [serverSide],\n  applyServerSideTransactionAsync: [serverSide],\n  applyServerSideRowData: [serverSide],\n  retryServerSideLoads: [serverSide],\n  flushServerSideAsyncTransactions: [serverSide],\n  refreshServerSide: [serverSide],\n  getServerSideGroupLevelState: [serverSide],\n  refreshInfiniteCache: [infinite],\n  purgeInfiniteCache: [infinite],\n  getInfiniteRowCount: [infinite],\n  isLastRowIndexKnown: [infinite, serverSide],\n  expandAll: [clientSide, serverSide],\n  collapseAll: [clientSide, serverSide],\n  onRowHeightChanged: [clientSide, serverSide],\n  setRowCount: [infinite, serverSide],\n  getCacheBlockState: [infinite, serverSide]\n};\nvar deprecatedFunctions = {\n  showLoadingOverlay: {\n    version: \"v32\",\n    message: '`showLoadingOverlay` is deprecated. Use the grid option \"loading\"=true instead or setGridOption(\"loading\", true).'\n  },\n  clearRangeSelection: {\n    version: \"v32.2\",\n    message: \"Use `clearCellSelection` instead.\"\n  },\n  getInfiniteRowCount: {\n    version: \"v32.2\",\n    old: \"getInfiniteRowCount()\",\n    new: \"getDisplayedRowCount()\"\n  },\n  selectAllFiltered: {\n    version: \"v33\",\n    old: \"selectAllFiltered()\",\n    new: 'selectAll(\"filtered\")'\n  },\n  deselectAllFiltered: {\n    version: \"v33\",\n    old: \"deselectAllFiltered()\",\n    new: 'deselectAll(\"filtered\")'\n  },\n  selectAllOnCurrentPage: {\n    version: \"v33\",\n    old: \"selectAllOnCurrentPage()\",\n    new: 'selectAll(\"currentPage\")'\n  },\n  deselectAllOnCurrentPage: {\n    version: \"v33\",\n    old: \"deselectAllOnCurrentPage()\",\n    new: 'deselectAll(\"currentPage\")'\n  }\n};\nfunction validateApiFunction(functionName, apiFunction, beans) {\n  const deprecation = deprecatedFunctions[functionName];\n  if (deprecation) {\n    const { version, new: replacement, old, message } = deprecation;\n    const apiMethod = old ?? functionName;\n    return (...args) => {\n      const replacementMessage = replacement ? `Please use ${replacement} instead. ` : \"\";\n      _warnOnce(`Since ${version} api.${apiMethod} is deprecated. ${replacementMessage}${message ?? \"\"}`);\n      return apiFunction.apply(apiFunction, args);\n    };\n  }\n  const rowModels = functionRowModels[functionName];\n  if (rowModels) {\n    return (...args) => {\n      const rowModel = beans.rowModel.getType();\n      if (!rowModels.includes(rowModel)) {\n        _errorOnce(\n          `api.${functionName} can only be called when gridOptions.rowModelType is ${rowModels.join(\" or \")}`\n        );\n        return void 0;\n      }\n      return apiFunction.apply(apiFunction, args);\n    };\n  }\n  return apiFunction;\n}\n\n// packages/ag-grid-community/src/validation/enterpriseModuleNames.ts\nvar ENTERPRISE_MODULE_NAMES = {\n  AdvancedFilter: 1,\n  AllEnterprise: 1,\n  CellSelection: 1,\n  Clipboard: 1,\n  ColumnMenu: 1,\n  ColumnsToolPanel: 1,\n  ContextMenu: 1,\n  ExcelExport: 1,\n  FiltersToolPanel: 1,\n  GridCharts: 1,\n  IntegratedCharts: 1,\n  GroupFilter: 1,\n  MasterDetail: 1,\n  Menu: 1,\n  MultiFilter: 1,\n  Pivot: 1,\n  RangeSelection: 1,\n  RichSelect: 1,\n  RowNumbers: 1,\n  RowGrouping: 1,\n  RowGroupingPanel: 1,\n  ServerSideRowModelApi: 1,\n  ServerSideRowModel: 1,\n  SetFilter: 1,\n  SideBar: 1,\n  Sparklines: 1,\n  StatusBar: 1,\n  TreeData: 1,\n  ViewportRowModel: 1\n};\n\n// packages/ag-grid-community/src/validation/resolvableModuleNames.ts\nvar ALL_COLUMN_FILTERS = [\n  \"TextFilter\",\n  \"NumberFilter\",\n  \"DateFilter\",\n  \"SetFilter\",\n  \"MultiFilter\",\n  \"GroupFilter\",\n  \"CustomFilter\"\n];\nvar RESOLVABLE_MODULE_NAMES = {\n  EditCore: [\n    \"TextEditor\",\n    \"NumberEditor\",\n    \"DateEditor\",\n    \"CheckboxEditor\",\n    \"LargeTextEditor\",\n    \"SelectEditor\",\n    \"RichSelect\",\n    \"CustomEditor\"\n  ],\n  CheckboxCellRenderer: [\"AllCommunity\"],\n  ClientSideRowModelHierarchy: [\"RowGrouping\", \"Pivot\", \"TreeData\"],\n  ColumnFilter: ALL_COLUMN_FILTERS,\n  ColumnGroupHeaderComp: [\"AllCommunity\"],\n  ColumnGroup: [\"AllCommunity\"],\n  ColumnHeaderComp: [\"AllCommunity\"],\n  ColumnMove: [\"AllCommunity\"],\n  ColumnResize: [\"AllCommunity\"],\n  CommunityCore: [\"AllCommunity\"],\n  CsrmSsrmSharedApi: [\"ClientSideRowModelApi\", \"ServerSideRowModelApi\"],\n  EnterpriseCore: [\"AllEnterprise\"],\n  FilterCore: [...ALL_COLUMN_FILTERS, \"QuickFilter\", \"ExternalFilter\", \"AdvancedFilter\"],\n  GroupCellRenderer: [\"RowGrouping\", \"Pivot\", \"TreeData\", \"MasterDetail\", \"ServerSideRowModel\"],\n  KeyboardNavigation: [\"AllCommunity\"],\n  LoadingCellRenderer: [\"ServerSideRowModel\"],\n  MenuCore: [\"ColumnMenu\", \"ContextMenu\"],\n  MenuItem: [\"ColumnMenu\", \"ContextMenu\", \"MultiFilter\", \"IntegratedCharts\", \"ColumnsToolPanel\"],\n  Overlay: [\"AllCommunity\"],\n  PinnedColumn: [\"AllCommunity\"],\n  SharedAggregation: [\"RowGrouping\", \"Pivot\", \"TreeData\", \"ServerSideRowModel\"],\n  SharedDragAndDrop: [\"AllCommunity\"],\n  SharedMasterDetail: [\"MasterDetail\", \"ServerSideRowModel\"],\n  SharedMenu: [...ALL_COLUMN_FILTERS, \"ColumnMenu\", \"ContextMenu\"],\n  SharedPivot: [\"Pivot\", \"ServerSideRowModel\"],\n  SharedRowGrouping: [\"RowGrouping\", \"ServerSideRowModel\"],\n  SharedRowSelection: [\"RowSelection\", \"ServerSideRowModel\"],\n  SkeletonCellRenderer: [\"ServerSideRowModel\"],\n  Sort: [\"AllCommunity\"],\n  SsrmInfiniteSharedApi: [\"InfiniteRowModel\", \"ServerSideRowModelApi\"],\n  SharedTreeData: [\"TreeData\", \"ServerSideRowModel\"]\n};\nvar MODULES_FOR_ROW_MODELS = {\n  InfiniteRowModel: \"infinite\",\n  ClientSideRowModelApi: \"clientSide\",\n  ClientSideRowModel: \"clientSide\",\n  ServerSideRowModelApi: \"serverSide\",\n  ServerSideRowModel: \"serverSide\",\n  ViewportRowModel: \"viewport\"\n};\nfunction resolveModuleNames(moduleName, rowModelType) {\n  const resolvedModuleNames = [];\n  (Array.isArray(moduleName) ? moduleName : [moduleName]).forEach((modName) => {\n    const resolved = RESOLVABLE_MODULE_NAMES[modName];\n    if (resolved) {\n      resolved.forEach((resolvedModName) => {\n        const rowModelForModule = MODULES_FOR_ROW_MODELS[resolvedModName];\n        if (!rowModelForModule || rowModelForModule === rowModelType) {\n          resolvedModuleNames.push(resolvedModName);\n        }\n      });\n    } else {\n      resolvedModuleNames.push(modName);\n    }\n  });\n  return resolvedModuleNames;\n}\n\n// packages/ag-grid-community/src/validation/rules/userCompValidations.ts\nvar USER_COMP_MODULES = {\n  agSetColumnFilter: \"SetFilter\",\n  agSetColumnFloatingFilter: \"SetFilter\",\n  agMultiColumnFilter: \"MultiFilter\",\n  agMultiColumnFloatingFilter: \"MultiFilter\",\n  agGroupColumnFilter: \"GroupFilter\",\n  agGroupColumnFloatingFilter: \"GroupFilter\",\n  agGroupCellRenderer: \"GroupCellRenderer\",\n  agGroupRowRenderer: \"GroupCellRenderer\",\n  agRichSelect: \"RichSelect\",\n  agRichSelectCellEditor: \"RichSelect\",\n  agDetailCellRenderer: \"SharedMasterDetail\",\n  agSparklineCellRenderer: \"Sparklines\",\n  agDragAndDropImage: \"SharedDragAndDrop\",\n  agColumnHeader: \"ColumnHeaderComp\",\n  agColumnGroupHeader: \"ColumnGroupHeaderComp\",\n  agSortIndicator: \"Sort\",\n  agAnimateShowChangeCellRenderer: \"HighlightChanges\",\n  agAnimateSlideCellRenderer: \"HighlightChanges\",\n  agLoadingCellRenderer: \"LoadingCellRenderer\",\n  agSkeletonCellRenderer: \"SkeletonCellRenderer\",\n  agCheckboxCellRenderer: \"CheckboxCellRenderer\",\n  agLoadingOverlay: \"Overlay\",\n  agNoRowsOverlay: \"Overlay\",\n  agTooltipComponent: \"Tooltip\",\n  agReadOnlyFloatingFilter: \"CustomFilter\",\n  agTextColumnFilter: \"TextFilter\",\n  agNumberColumnFilter: \"NumberFilter\",\n  agDateColumnFilter: \"DateFilter\",\n  agDateInput: \"DateFilter\",\n  agTextColumnFloatingFilter: \"TextFilter\",\n  agNumberColumnFloatingFilter: \"NumberFilter\",\n  agDateColumnFloatingFilter: \"DateFilter\",\n  agCellEditor: \"TextEditor\",\n  agSelectCellEditor: \"SelectEditor\",\n  agTextCellEditor: \"TextEditor\",\n  agNumberCellEditor: \"NumberEditor\",\n  agDateCellEditor: \"DateEditor\",\n  agDateStringCellEditor: \"DateEditor\",\n  agCheckboxCellEditor: \"CheckboxEditor\",\n  agLargeTextCellEditor: \"LargeTextEditor\",\n  agMenuItem: \"MenuItem\",\n  agColumnsToolPanel: \"ColumnsToolPanel\",\n  agFiltersToolPanel: \"FiltersToolPanel\",\n  agAggregationComponent: \"StatusBar\",\n  agSelectedRowCountComponent: \"StatusBar\",\n  agTotalRowCountComponent: \"StatusBar\",\n  agFilteredRowCountComponent: \"StatusBar\",\n  agTotalAndFilteredRowCountComponent: \"StatusBar\"\n};\n\n// packages/ag-grid-community/src/validation/errorMessages/errorText.ts\nvar moduleImportMsg = (moduleNames) => {\n  const imports = moduleNames.map(\n    (moduleName) => `import { ${convertToUserModuleName(moduleName)} } from '${ENTERPRISE_MODULE_NAMES[moduleName] ? \"ag-grid-enterprise\" : \"ag-grid-community\"}';`\n  );\n  const includeCharts = moduleNames.some((m) => m === \"IntegratedCharts\" || m === \"Sparklines\");\n  if (includeCharts) {\n    const chartImport = `import { AgChartsEnterpriseModule } from 'ag-charts-enterprise';`;\n    imports.push(chartImport);\n  }\n  return `import { ModuleRegistry } from 'ag-grid-community'; \n${imports.join(\" \\n\")} \n\nModuleRegistry.registerModules([ ${moduleNames.map((m) => convertToUserModuleName(m, true)).join(\", \")} ]); \n\nFor more info see: ${baseDocLink}/modules/`;\n};\nfunction convertToUserModuleName(moduleName, inModuleRegistration = false) {\n  if (inModuleRegistration && (moduleName === \"IntegratedCharts\" || moduleName === \"Sparklines\")) {\n    return `${moduleName}Module.with(AgChartsEnterpriseModule)`;\n  }\n  return `${moduleName}Module`;\n}\nfunction umdMissingModule(reasonOrId, moduleNames) {\n  const chartModules = moduleNames.filter((m) => m === \"IntegratedCharts\" || m === \"Sparklines\");\n  let message = \"\";\n  const agChartsDynamic = globalThis?.agCharts;\n  if (!agChartsDynamic && chartModules.length > 0) {\n    message = `Unable to use ${reasonOrId} as either the ag-charts-community or ag-charts-enterprise script needs to be included alongside ag-grid-enterprise.\n`;\n  } else if (moduleNames.some((m) => ENTERPRISE_MODULE_NAMES[m])) {\n    message = message + `Unable to use ${reasonOrId} as that requires the ag-grid-enterprise script to be included.\n`;\n  }\n  return message;\n}\nvar missingModule = ({\n  reasonOrId,\n  moduleName,\n  gridScoped,\n  gridId,\n  rowModelType,\n  additionalText,\n  isUmd: isUmd2\n}) => {\n  const resolvedModuleNames = resolveModuleNames(moduleName, rowModelType);\n  const reason = typeof reasonOrId === \"string\" ? reasonOrId : MISSING_MODULE_REASONS[reasonOrId];\n  if (isUmd2) {\n    return umdMissingModule(reason, resolvedModuleNames);\n  }\n  const chartModules = resolvedModuleNames.filter((m) => m === \"IntegratedCharts\" || m === \"Sparklines\");\n  const chartImportRequired = chartModules.length > 0 ? `${chartModules.map((m) => convertToUserModuleName(m)).join()} must be initialised with an AG Charts module. One of 'AgChartsCommunityModule' / 'AgChartsEnterpriseModule'.` : \"\";\n  const explanation = `Unable to use ${reason} as ${resolvedModuleNames.length > 1 ? \"one of \" + resolvedModuleNames.map((m) => convertToUserModuleName(m)).join(\", \") : convertToUserModuleName(resolvedModuleNames[0])} is not registered${gridScoped ? \" for gridId: \" + gridId : \"\"}. ${chartImportRequired} Check if you have registered the module:\n`;\n  return `${explanation}\n${moduleImportMsg(resolvedModuleNames)}` + (additionalText ? ` \n\n${additionalText}` : \"\");\n};\nvar missingChartsWithModule = (gridModule) => {\n  return `${gridModule} must be initialised with an AG Charts module. One of 'AgChartsCommunityModule' / 'AgChartsEnterpriseModule'.\n\nimport { AgChartsEnterpriseModule } from 'ag-charts-enterprise';\nimport { ModuleRegistry } from 'ag-grid-community';\nimport { ${gridModule} } from 'ag-grid-enterprise';\n    \nModuleRegistry.registerModules([${gridModule}.with(AgChartsEnterpriseModule)]);\n    `;\n};\nvar clipboardApiError = (method) => `AG Grid: Unable to use the Clipboard API (navigator.clipboard.${method}()). The reason why it could not be used has been logged in the previous line. For this reason the grid has defaulted to using a workaround which doesn't perform as well. Either fix why Clipboard API is blocked, OR stop this message from appearing by setting grid property suppressClipboardApi=true (which will default the grid to using the workaround rather than the API.`;\nvar AG_GRID_ERRORS = {\n  1: () => \"`rowData` must be an array\",\n  2: ({ nodeId }) => `Duplicate node id '${nodeId}' detected from getRowId callback, this could cause issues in your grid.`,\n  3: () => \"Calling gridApi.resetRowHeights() makes no sense when using Auto Row Height.\",\n  4: ({ id }) => `Could not find row id=${id}, data item was not found for this id`,\n  5: ({ data }) => [\n    `Could not find data item as object was not found.`,\n    data,\n    \" Consider using getRowId to help the Grid find matching row data\"\n  ],\n  6: () => `'groupHideOpenParents' only works when specifying specific columns for 'colDef.showRowGroup'`,\n  7: () => \"Pivoting is not supported with aligned grids as it may produce different columns in each grid.\",\n  8: ({ key }) => `Unknown key for navigation ${key}`,\n  9: ({ variable }) => `No value for ${variable?.cssName}. This usually means that the grid has been initialised before styles have been loaded. The default value of ${variable?.defaultValue} will be used and updated when styles load.`,\n  10: ({ eventType }) => `As of v33, the '${eventType}' event is deprecated. Use the global 'modelUpdated' event to determine when row children have changed.`,\n  11: () => \"No gridOptions provided to createGrid\",\n  12: ({ colKey }) => [\"column \", colKey, \" not found\"],\n  13: () => \"Could not find rowIndex, this means tasks are being executed on a rowNode that has been removed from the grid.\",\n  14: ({ groupPrefix }) => `Row IDs cannot start with ${groupPrefix}, this is a reserved prefix for AG Grid's row grouping feature.`,\n  15: ({ expression }) => [\"value should be either a string or a function\", expression],\n  16: ({ expression, params, e }) => [\n    \"Processing of the expression failed\",\n    \"Expression = \",\n    expression,\n    \"Params = \",\n    params,\n    \"Exception = \",\n    e\n  ],\n  17: () => \"you need either field or valueSetter set on colDef for editing to work\",\n  18: () => `alignedGrids contains an undefined option.`,\n  19: () => `alignedGrids - No api found on the linked grid.`,\n  20: () => `You may want to configure via a callback to avoid setup race conditions:\n                     \"alignedGrids: () => [linkedGrid]\"`,\n  21: () => \"pivoting is not supported with aligned grids. You can only use one of these features at a time in a grid.\",\n  22: ({ key }) => `${key} is an initial property and cannot be updated.`,\n  23: () => \"The return of `getRowHeight` cannot be zero. If the intention is to hide rows, use a filter instead.\",\n  24: () => \"row height must be a number if not using standard row model\",\n  25: ({ id }) => [`The getRowId callback must return a string. The ID `, id, ` is being cast to a string.`],\n  26: ({ fnName, preDestroyLink }) => {\n    return `Grid API function ${fnName}() cannot be called as the grid has been destroyed.\n Either clear local references to the grid api, when it is destroyed, or check gridApi.isDestroyed() to avoid calling methods against a destroyed grid.\n To run logic when the grid is about to be destroyed use the gridPreDestroy event. See: ${preDestroyLink}`;\n  },\n  27: ({ fnName, module }) => `API function '${fnName}' not registered to module '${module}'`,\n  28: () => \"setRowCount cannot be used while using row grouping.\",\n  29: () => \"tried to call sizeColumnsToFit() but the grid is coming back with zero width, maybe the grid is not visible yet on the screen?\",\n  30: ({ toIndex }) => [\n    \"tried to insert columns in invalid location, toIndex = \",\n    toIndex,\n    \"remember that you should not count the moving columns when calculating the new index\"\n  ],\n  31: () => \"infinite loop in resizeColumnSets\",\n  32: () => \"applyColumnState() - the state attribute should be an array, however an array was not found. Please provide an array of items (one for each col you want to change) for state.\",\n  33: () => \"stateItem.aggFunc must be a string. if using your own aggregation functions, register the functions first before using them in get/set state. This is because it is intended for the column state to be stored and retrieved as simple JSON.\",\n  34: ({ key }) => `the column type '${key}' is a default column type and cannot be overridden.`,\n  35: () => `Column type definitions 'columnTypes' with a 'type' attribute are not supported because a column type cannot refer to another column type. Only column definitions 'columnDefs' can use the 'type' attribute to refer to a column type.`,\n  36: ({ t }) => \"colDef.type '\" + t + \"' does not correspond to defined gridOptions.columnTypes\",\n  37: () => `Changing the column pinning status is not allowed with domLayout='print'`,\n  38: ({ iconName }) => `provided icon '${iconName}' needs to be a string or a function`,\n  39: () => \"Applying column order broke a group where columns should be married together. Applying new order has been discarded.\",\n  40: ({ e, method }) => `${e}\n${clipboardApiError(method)}`,\n  41: () => \"Browser did not allow document.execCommand('copy'). Ensure 'api.copySelectedRowsToClipboard() is invoked via a user event, i.e. button click, otherwise the browser will prevent it for security reasons.\",\n  42: () => \"Browser does not support document.execCommand('copy') for clipboard operations\",\n  43: ({ iconName }) => `As of v33, icon '${iconName}' is deprecated. Use the icon CSS name instead.`,\n  44: () => 'Data type definition hierarchies (via the \"extendsDataType\" property) cannot contain circular references.',\n  45: ({ parentCellDataType }) => `The data type definition ${parentCellDataType} does not exist.`,\n  46: () => 'The \"baseDataType\" property of a data type definition must match that of its parent.',\n  47: ({ cellDataType }) => `Missing data type definition - \"${cellDataType}\"`,\n  48: ({ property }) => `Cell data type is \"object\" but no Value ${property} has been provided. Please either provide an object data type definition with a Value ${property}, or set \"colDef.value${property}\"`,\n  49: ({ methodName }) => `Framework component is missing the method ${methodName}()`,\n  50: ({ compName }) => `Could not find component ${compName}, did you forget to configure this component?`,\n  51: () => `Export cancelled. Export is not allowed as per your configuration.`,\n  52: () => \"There is no `window` associated with the current `document`\",\n  53: () => `unknown value type during csv conversion`,\n  54: () => \"Could not find document body, it is needed for drag and drop and context menu.\",\n  55: () => \"addRowDropZone - A container target needs to be provided\",\n  56: () => \"addRowDropZone - target already exists in the list of DropZones. Use `removeRowDropZone` before adding it again.\",\n  57: () => \"unable to show popup filter, filter instantiation failed\",\n  58: () => \"no values found for select cellEditor\",\n  59: () => \"cannot select pinned rows\",\n  60: () => \"cannot select node until it has finished loading\",\n  61: () => \"since version v32.2.0, rowNode.isFullWidthCell() has been deprecated. Instead check `rowNode.detail` followed by the user provided `isFullWidthRow` grid option.\",\n  62: ({ colId }) => `setFilterModel() - no column found for colId: ${colId}`,\n  63: ({ colId }) => `setFilterModel() - unable to fully apply model, filtering disabled for colId: ${colId}`,\n  64: ({ colId }) => `setFilterModel() - unable to fully apply model, unable to create filter for colId: ${colId}`,\n  65: () => \"filter missing setModel method, which is needed for setFilterModel\",\n  66: () => \"filter API missing getModel method, which is needed for getFilterModel\",\n  67: () => \"Filter is missing isFilterActive() method\",\n  68: () => \"Column Filter API methods have been disabled as Advanced Filters are enabled.\",\n  69: ({ guiFromFilter }) => `getGui method from filter returned ${guiFromFilter}; it should be a DOM element.`,\n  70: ({ newFilter }) => `Grid option quickFilterText only supports string inputs, received: ${typeof newFilter}`,\n  71: () => \"debounceMs is ignored when apply button is present\",\n  72: ({ keys }) => [`ignoring FilterOptionDef as it doesn't contain one of `, keys],\n  73: () => `invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'`,\n  74: () => \"no filter options for filter\",\n  75: () => \"Unknown button type specified\",\n  76: ({ filterModelType }) => [\n    'Unexpected type of filter \"',\n    filterModelType,\n    '\", it looks like the filter was configured with incorrect Filter Options'\n  ],\n  77: () => `Filter model is missing 'conditions'`,\n  78: () => 'Filter Model contains more conditions than \"filterParams.maxNumConditions\". Additional conditions have been ignored.',\n  79: () => '\"filterParams.maxNumConditions\" must be greater than or equal to zero.',\n  80: () => '\"filterParams.numAlwaysVisibleConditions\" must be greater than or equal to zero.',\n  81: () => '\"filterParams.numAlwaysVisibleConditions\" cannot be greater than \"filterParams.maxNumConditions\".',\n  82: ({ param }) => `DateFilter ${param} is not a number`,\n  83: () => `DateFilter minValidYear should be <= maxValidYear`,\n  84: () => `DateFilter minValidDate should be <= maxValidDate`,\n  85: () => \"DateFilter should not have both minValidDate and minValidYear parameters set at the same time! minValidYear will be ignored.\",\n  86: () => \"DateFilter should not have both maxValidDate and maxValidYear parameters set at the same time! maxValidYear will be ignored.\",\n  87: () => \"DateFilter parameter minValidDate should always be lower than or equal to parameter maxValidDate.\",\n  88: ({ index }) => `Invalid row index for ensureIndexVisible: ${index}`,\n  89: () => `A template was provided for Header Group Comp - templates are only supported for Header Comps (not groups)`,\n  90: () => `datasource is missing getRows method`,\n  91: () => \"Filter is missing method doesFilterPass\",\n  92: ({ methodName }) => `AnimationFrameService.${methodName} called but animation frames are off`,\n  93: () => \"cannot add multiple ranges when `cellSelection.suppressMultiRanges = true`\",\n  94: ({\n    paginationPageSizeOption,\n    pageSizeSet,\n    pageSizesSet,\n    pageSizeOptions\n  }) => `'paginationPageSize=${paginationPageSizeOption}'${pageSizeSet ? \"\" : \" (default value)\"}, but ${paginationPageSizeOption} is not included in${pageSizesSet ? \"\" : \" the default\"} paginationPageSizeSelector=[${pageSizeOptions?.join(\", \")}].`,\n  95: ({\n    paginationPageSizeOption,\n    paginationPageSizeSelector: paginationPageSizeSelector2\n  }) => `Either set '${paginationPageSizeSelector2}' to an array that includes ${paginationPageSizeOption} or to 'false' to disable the page size selector.`,\n  96: ({ id, data }) => [\n    \"Duplicate ID\",\n    id,\n    \"found for pinned row with data\",\n    data,\n    \"When `getRowId` is defined, it must return unique IDs for all pinned rows. Use the `rowPinned` parameter.\"\n  ],\n  97: ({ colId }) => `cellEditor for column ${colId} is missing getGui() method`,\n  98: () => \"popup cellEditor does not work with fullRowEdit - you cannot use them both - either turn off fullRowEdit, or stop using popup editors.\",\n  99: () => \"Since v32, `api.hideOverlay()` does not hide the loading overlay when `loading=true`. Set `loading=false` instead.\",\n  100: ({ rowModelType }) => `selectAll only available when rowModelType='clientSide', ie not ${rowModelType}`,\n  101: ({\n    propertyName,\n    componentName,\n    agGridDefaults,\n    jsComps\n  }) => {\n    const textOutput = [];\n    const validComponents = [\n      // Don't include the old names / internals in potential suggestions\n      ...Object.keys(agGridDefaults ?? []).filter(\n        (k) => ![\"agCellEditor\", \"agGroupRowRenderer\", \"agSortIndicator\"].includes(k)\n      ),\n      ...Object.keys(jsComps ?? [])\n    ];\n    const suggestions = _fuzzySuggestions({\n      inputValue: componentName,\n      allSuggestions: validComponents,\n      hideIrrelevant: true,\n      filterByPercentageOfBestMatch: 0.8\n    }).values;\n    textOutput.push(\n      `Could not find '${componentName}' component. It was configured as \"${propertyName}: '${componentName}'\" but it wasn't found in the list of registered components.\n`\n    );\n    if (suggestions.length > 0) {\n      textOutput.push(`         Did you mean: [${suggestions.slice(0, 3)}]?\n`);\n    }\n    textOutput.push(`If using a custom component check it has been registered correctly.`);\n    return textOutput;\n  },\n  102: () => \"selectAll: 'filtered' only works when gridOptions.rowModelType='clientSide'\",\n  103: () => \"Invalid selection state. When using client-side row model, the state must conform to `string[]`.\",\n  104: ({ value, param }) => `Numeric value ${value} passed to ${param} param will be interpreted as ${value} seconds. If this is intentional use \"${value}s\" to silence this warning.`,\n  105: ({ e }) => [`chart rendering failed`, e],\n  106: () => `Theming API and Legacy Themes are both used in the same page. A Theming API theme has been provided to the 'theme' grid option, but the file (ag-grid.css) is also included and will cause styling issues. Remove ag-grid.css from the page. See the migration guide: ${baseDocLink}/theming-migration/`,\n  107: ({ key, value }) => `Invalid value for theme param ${key} - ${value}`,\n  108: ({ e }) => [\"chart update failed\", e],\n  109: ({ aggFuncOrString }) => `unrecognised aggregation function ${aggFuncOrString}`,\n  110: () => \"groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup\",\n  111: () => \"Invalid selection state. When `groupSelects` is enabled, the state must conform to `IServerSideGroupSelectionState`.\",\n  113: () => \"Set Filter cannot initialise because you are using a row model that does not contain all rows in the browser. Either use a different filter type, or configure Set Filter such that you provide it with values\",\n  114: ({ component }) => `Could not find component with name of ${component}. Is it in Vue.components?`,\n  // 115: () => 'The provided selection state should be an object.' as const,\n  116: () => \"Invalid selection state. The state must conform to `IServerSideSelectionState`.\",\n  117: () => \"selectAll must be of boolean type.\",\n  118: () => \"Infinite scrolling must be enabled in order to set the row count.\",\n  119: () => \"Unable to instantiate filter\",\n  120: () => \"MultiFloatingFilterComp expects MultiFilter as its parent\",\n  121: () => \"a column you are grouping or pivoting by has objects as values. If you want to group by complex objects then either a) use a colDef.keyCreator (see AG Grid docs) or b) to toString() on the object to return a key\",\n  122: () => \"could not find the document, document is empty\",\n  123: () => \"Advanced Filter is only supported with the Client-Side Row Model or Server-Side Row Model.\",\n  124: () => \"No active charts to update.\",\n  125: ({ chartId }) => `Unable to update chart. No active chart found with ID: ${chartId}.`,\n  126: () => \"unable to restore chart as no chart model is provided\",\n  127: ({ allRange }) => `unable to create chart as ${allRange ? \"there are no columns in the grid\" : \"no range is selected\"}.`,\n  128: ({ feature }) => `${feature} is only available if using 'multiRow' selection mode.`,\n  129: ({ feature, rowModel }) => `${feature} is only available if using 'clientSide' or 'serverSide' rowModelType, you are using ${rowModel}.`,\n  130: () => 'cannot multi select unless selection mode is \"multiRow\"',\n  // 131: () => 'cannot range select while selecting multiple rows' as const,\n  132: () => \"Row selection features are not available unless `rowSelection` is enabled.\",\n  133: ({ iconName }) => `icon '${iconName}' function should return back a string or a dom object`,\n  134: ({ iconName }) => `Did not find icon '${iconName}'`,\n  135: () => `Data type of the new value does not match the cell data type of the column`,\n  136: () => `Unable to update chart as the 'type' is missing. It must be either 'rangeChartUpdate', 'pivotChartUpdate', or 'crossFilterChartUpdate'.`,\n  137: ({ type, currentChartType }) => `Unable to update chart as a '${type}' update type is not permitted on a ${currentChartType}.`,\n  138: ({ chartType }) => `invalid chart type supplied: ${chartType}`,\n  139: ({ customThemeName }) => `a custom chart theme with the name ${customThemeName} has been supplied but not added to the 'chartThemes' list`,\n  140: ({ name }) => `no stock theme exists with the name '${name}' and no custom chart theme with that name was supplied to 'customChartThemes'`,\n  141: () => \"cross filtering with row grouping is not supported.\",\n  142: () => \"cross filtering is only supported in the client side row model.\",\n  143: ({ panel }) => `'${panel}' is not a valid Chart Tool Panel name`,\n  144: ({ type }) => `Invalid charts data panel group name supplied: '${type}'`,\n  145: ({ group }) => `As of v32, only one charts customize panel group can be expanded at a time. '${group}' will not be expanded.`,\n  146: ({ comp }) => `Unable to instantiate component '${comp}' as its module hasn't been loaded. Add 'ValidationModule' to see which module is required.`,\n  147: ({ group }) => `Invalid charts customize panel group name supplied: '${group}'`,\n  148: ({ group }) => `invalid chartGroupsDef config '${group}'`,\n  149: ({ group, chartType }) => `invalid chartGroupsDef config '${group}.${chartType}'`,\n  150: () => `'seriesChartTypes' are required when the 'customCombo' chart type is specified.`,\n  151: ({ chartType }) => `invalid chartType '${chartType}' supplied in 'seriesChartTypes', converting to 'line' instead.`,\n  152: ({ colId }) => `no 'seriesChartType' found for colId = '${colId}', defaulting to 'line'.`,\n  153: ({ chartDataType }) => `unexpected chartDataType value '${chartDataType}' supplied, instead use 'category', 'series' or 'excluded'`,\n  154: ({ colId }) => `cross filtering requires a 'agSetColumnFilter' or 'agMultiColumnFilter' to be defined on the column with id: ${colId}`,\n  155: ({ option }) => `'${option}' is not a valid Chart Toolbar Option`,\n  156: ({ panel }) => `Invalid panel in chartToolPanelsDef.panels: '${panel}'`,\n  157: ({ unrecognisedGroupIds }) => [\"unable to find group(s) for supplied groupIds:\", unrecognisedGroupIds],\n  158: () => \"can not expand a column item that does not represent a column group header\",\n  159: () => \"Invalid params supplied to createExcelFileForExcel() - `ExcelExportParams.data` is empty.\",\n  160: () => `Export cancelled. Export is not allowed as per your configuration.`,\n  161: () => \"The Excel Exporter is currently on Multi Sheet mode. End that operation by calling 'api.getMultipleSheetAsExcel()' or 'api.exportMultipleSheetsAsExcel()'\",\n  162: ({ id, dataType }) => `Unrecognized data type for excel export [${id}.dataType=${dataType}]`,\n  163: ({ featureName }) => `Excel table export does not work with ${featureName}. The exported Excel file will not contain any Excel tables.\n Please turn off ${featureName} to enable Excel table exports.`,\n  164: () => \"Unable to add data table to Excel sheet: A table already exists.\",\n  165: () => \"Unable to add data table to Excel sheet: Missing required parameters.\",\n  166: ({ unrecognisedGroupIds }) => [\"unable to find groups for these supplied groupIds:\", unrecognisedGroupIds],\n  167: ({ unrecognisedColIds }) => [\"unable to find columns for these supplied colIds:\", unrecognisedColIds],\n  168: () => \"detailCellRendererParams.template should be function or string\",\n  169: () => 'Reference to eDetailGrid was missing from the details template. Please add data-ref=\"eDetailGrid\" to the template.',\n  170: ({ providedStrategy }) => `invalid cellRendererParams.refreshStrategy = ${providedStrategy} supplied, defaulting to refreshStrategy = 'rows'.`,\n  171: () => \"could not find detail grid options for master detail, please set gridOptions.detailCellRendererParams.detailGridOptions\",\n  172: () => \"could not find getDetailRowData for master / detail, please set gridOptions.detailCellRendererParams.getDetailRowData\",\n  173: ({ group }) => `invalid chartGroupsDef config '${group}'`,\n  174: ({ group, chartType }) => `invalid chartGroupsDef config '${group}.${chartType}'`,\n  175: ({ menuTabName, itemsToConsider }) => [\n    `Trying to render an invalid menu item '${menuTabName}'. Check that your 'menuTabs' contains one of `,\n    itemsToConsider\n  ],\n  176: ({ key }) => `unknown menu item type ${key}`,\n  177: () => `valid values for cellSelection.handle.direction are 'x', 'y' and 'xy'. Default to 'xy'.`,\n  178: ({ colId }) => `column ${colId} is not visible`,\n  179: () => \"totalValueGetter should be either a function or a string (expression)\",\n  180: () => \"agRichSelectCellEditor requires cellEditorParams.values to be set\",\n  181: () => \"agRichSelectCellEditor cannot have `multiSelect` and `allowTyping` set to `true`. AllowTyping has been turned off.\",\n  182: () => 'you cannot mix groupDisplayType = \"multipleColumns\" with treeData, only one column can be used to display groups when doing tree data',\n  183: () => \"Group Column Filter only works on group columns. Please use a different filter.\",\n  184: ({ parentGroupData, childNodeData }) => [`duplicate group keys for row data, keys should be unique`, [parentGroupData, childNodeData]],\n  185: ({ data }) => [`getDataPath() should not return an empty path`, [data]],\n  186: ({\n    rowId,\n    rowData,\n    duplicateRowsData\n  }) => [\n    `duplicate group keys for row data, keys should be unique`,\n    rowId,\n    rowData,\n    ...duplicateRowsData ?? []\n  ],\n  187: ({ rowId, firstData, secondData }) => [\n    `Duplicate node id ${rowId}. Row IDs are provided via the getRowId() callback. Please modify the getRowId() callback code to provide unique row id values.`,\n    \"first instance\",\n    firstData,\n    \"second instance\",\n    secondData\n  ],\n  188: () => `getRowId callback must be provided for Server Side Row Model selection to work correctly.`,\n  189: ({ startRow }) => `invalid value ${startRow} for startRow, the value should be >= 0`,\n  190: ({ rowGroupId, data }) => [\n    `null and undefined values are not allowed for server side row model keys`,\n    rowGroupId ? `column = ${rowGroupId}` : ``,\n    `data is `,\n    data\n  ],\n  // 191: () => `cannot multi select unless selection mode is 'multiRow'` as const,\n  // 192: () => `cannot use range selection when multi selecting rows` as const,\n  // 193: () => \"cannot multi select unless selection mode is 'multiRow'\" as const,\n  194: ({ method }) => `calling gridApi.${method}() is only possible when using rowModelType=\\`clientSide\\`.`,\n  195: ({ justCurrentPage }) => `selecting just ${justCurrentPage ? \"current page\" : \"filtered\"} only works when gridOptions.rowModelType='clientSide'`,\n  196: ({ key }) => `Provided ids must be of string type. Invalid id provided: ${key}`,\n  197: () => \"`toggledNodes` must be an array of string ids.\",\n  // 198: () => `cannot multi select unless selection mode is 'multiRow'` as const,\n  199: () => `getSelectedNodes and getSelectedRows functions cannot be used with select all functionality with the server-side row model. Use \\`api.getServerSideSelectionState()\\` instead.`,\n  200: missingModule,\n  201: ({ rowModelType }) => `Could not find row model for rowModelType = ${rowModelType}`,\n  202: () => `\\`getSelectedNodes\\` and \\`getSelectedRows\\` functions cannot be used with \\`groupSelectsChildren\\` and the server-side row model. Use \\`api.getServerSideSelectionState()\\` instead.`,\n  203: () => \"Server Side Row Model does not support Dynamic Row Height and Cache Purging. Either a) remove getRowHeight() callback or b) remove maxBlocksInCache property. Purging has been disabled.\",\n  204: () => \"Server Side Row Model does not support Auto Row Height and Cache Purging. Either a) remove colDef.autoHeight or b) remove maxBlocksInCache property. Purging has been disabled.\",\n  205: ({ duplicateIdText }) => `Unable to display rows as duplicate row ids (${duplicateIdText}) were returned by the getRowId callback. Please modify the getRowId callback to provide unique ids.`,\n  206: () => \"getRowId callback must be implemented for transactions to work. Transaction was ignored.\",\n  207: () => 'The Set Filter Parameter \"defaultToNothingSelected\" value was ignored because it does not work when \"excelMode\" is used.',\n  208: () => `Set Filter Value Formatter must return string values. Please ensure the Set Filter Value Formatter returns string values for complex objects.`,\n  209: () => `Set Filter Key Creator is returning null for provided values and provided values are primitives. Please provide complex objects. See ${baseDocLink}/filter-set-filter-list/#filter-value-types`,\n  210: () => \"Set Filter has a Key Creator, but provided values are primitives. Did you mean to provide complex objects?\",\n  211: () => \"property treeList=true for Set Filter params, but you did not provide a treeListPathGetter or values of type Date.\",\n  212: () => `please review all your toolPanel components, it seems like at least one of them doesn't have an id`,\n  213: () => \"Advanced Filter does not work with Filters Tool Panel. Filters Tool Panel has been disabled.\",\n  214: ({ key }) => `unable to lookup Tool Panel as invalid key supplied: ${key}`,\n  215: ({ key, defaultByKey }) => `the key ${key} is not a valid key for specifying a tool panel, valid keys are: ${Object.keys(defaultByKey ?? {}).join(\",\")}`,\n  216: ({ name }) => `Missing component for '${name}'`,\n  217: ({ invalidColIds }) => [\"unable to find grid columns for the supplied colDef(s):\", invalidColIds],\n  218: ({ property, defaultOffset }) => `${property} must be a number, the value you provided is not a valid number. Using the default of ${defaultOffset}px.`,\n  219: ({ property }) => `Property ${property} does not exist on the target object.`,\n  220: ({ lineDash }) => `'${lineDash}' is not a valid 'lineDash' option.`,\n  221: () => `agAggregationComponent should only be used with the client and server side row model.`,\n  222: () => `agFilteredRowCountComponent should only be used with the client side row model.`,\n  223: () => `agSelectedRowCountComponent should only be used with the client and server side row model.`,\n  224: () => `agTotalAndFilteredRowCountComponent should only be used with the client side row model.`,\n  225: () => \"agTotalRowCountComponent should only be used with the client side row model.\",\n  226: () => \"viewport is missing init method.\",\n  227: () => \"menu item icon must be DOM node or string\",\n  228: ({ menuItemOrString }) => `unrecognised menu item ${menuItemOrString}`,\n  229: ({ index }) => [\"invalid row index for ensureIndexVisible: \", index],\n  230: () => \"detailCellRendererParams.template is not supported by AG Grid React. To change the template, provide a Custom Detail Cell Renderer. See https://www.ag-grid.com/react-data-grid/master-detail-custom-detail/\",\n  // @deprecated v32 mark for removal as part of v32 deprecated features\n  231: () => \"As of v32, using custom components with `reactiveCustomComponents = false` is deprecated.\",\n  232: () => \"Using both rowData and v-model. rowData will be ignored.\",\n  233: ({ methodName }) => `Framework component is missing the method ${methodName}()`,\n  234: () => 'Group Column Filter does not work with the colDef property \"field\". This property will be ignored.',\n  235: () => 'Group Column Filter does not work with the colDef property \"filterValueGetter\". This property will be ignored.',\n  236: () => 'Group Column Filter does not work with the colDef property \"filterParams\". This property will be ignored.',\n  237: () => \"Group Column Filter does not work with Tree Data enabled. Please disable Tree Data, or use a different filter.\",\n  238: () => \"setRowCount can only accept a positive row count.\",\n  239: () => 'Theming API and CSS File Themes are both used in the same page. In v33 we released the Theming API as the new default method of styling the grid. See the migration docs https://www.ag-grid.com/react-data-grid/theming-migration/. Because no value was provided to the `theme` grid option it defaulted to themeQuartz. But the file (ag-grid.css) is also included and will cause styling issues. Either pass the string \"legacy\" to the theme grid option to use v32 style themes, or remove ag-grid.css from the page to use Theming API.',\n  240: ({ theme }) => `theme grid option must be a Theming API theme object or the string \"legacy\", received: ${theme}`,\n  // 241: () => `cannot select multiple rows when rowSelection.mode is set to 'singleRow'` as const,\n  // 242: () => 'cannot select multiple rows when using rangeSelect' as const,\n  243: () => \"Failed to deserialize state - each provided state object must be an object.\",\n  244: () => \"Failed to deserialize state - `selectAllChildren` must be a boolean value or undefined.\",\n  245: () => \"Failed to deserialize state - `toggledNodes` must be an array.\",\n  246: () => \"Failed to deserialize state - Every `toggledNode` requires an associated string id.\",\n  247: () => `Row selection state could not be parsed due to invalid data. Ensure all child state has toggledNodes or does not conform with the parent rule. \nPlease rebuild the selection state and reapply it.`,\n  248: () => \"SetFloatingFilter expects SetFilter as its parent\",\n  249: () => \"Must supply a Value Formatter in Set Filter params when using a Key Creator\",\n  250: () => \"Must supply a Key Creator in Set Filter params when `treeList = true` on a group column, and Tree Data or Row Grouping is enabled.\",\n  251: ({ chartType }) => `AG Grid: Unable to create chart as an invalid chartType = '${chartType}' was supplied.`,\n  252: () => \"cannot get grid to draw rows when it is in the middle of drawing rows. \\nYour code probably called a grid API method while the grid was in the render stage. \\nTo overcome this, put the API call into a timeout, e.g. instead of api.redrawRows(), call setTimeout(function() { api.redrawRows(); }, 0). \\nTo see what part of your code that caused the refresh check this stacktrace.\",\n  253: ({ version }) => [\"Illegal version string: \", version],\n  254: () => \"Cannot create chart: no chart themes available.\",\n  255: ({ point }) => `Lone surrogate U+${point?.toString(16).toUpperCase()} is not a scalar value`,\n  256: () => \"Unable to initialise. See validation error, or load ValidationModule if missing.\",\n  257: () => missingChartsWithModule(\"IntegratedChartsModule\"),\n  258: () => missingChartsWithModule(\"SparklinesModule\"),\n  259: ({ part }) => `the argument to theme.withPart must be a Theming API part object, received: ${part}`,\n  260: ({\n    propName,\n    compName,\n    gridScoped,\n    gridId,\n    rowModelType\n  }) => missingModule({\n    reasonOrId: `AG Grid '${propName}' component: ${compName}`,\n    moduleName: USER_COMP_MODULES[compName],\n    gridId,\n    gridScoped,\n    rowModelType\n  }),\n  261: () => \"As of v33, `column.isHovered()` is deprecated. Use `api.isColumnHovered(column)` instead.\",\n  262: () => 'As of v33, icon key \"smallDown\" is deprecated. Use \"advancedFilterBuilderSelect\" for Advanced Filter Builder dropdown, \"selectOpen\" for Select cell editor and dropdowns (e.g. Integrated Charts menu), \"richSelectOpen\" for Rich Select cell editor.',\n  263: () => 'As of v33, icon key \"smallLeft\" is deprecated. Use \"panelDelimiterRtl\" for Row Group Panel / Pivot Panel, \"subMenuOpenRtl\" for sub-menus.',\n  264: () => 'As of v33, icon key \"smallRight\" is deprecated. Use \"panelDelimiter\" for Row Group Panel / Pivot Panel, \"subMenuOpen\" for sub-menus.',\n  265: ({ colId }) => `Unable to infer chart data type for column '${colId}' if first data entry is null. Please specify \"chartDataType\", or a \"cellDataType\" in the column definition. For more information, see ${baseDocLink}/integrated-charts-range-chart#coldefchartdatatype .`,\n  266: () => 'As of v33.1, using \"keyCreator\" with the Rich Select Editor has been deprecated. It now requires the \"formatValue\" callback to convert complex data to strings.',\n  267: () => \"Detail grids can not use a different theme to the master grid, the `theme` detail grid option will be ignored.\",\n  268: () => \"Transactions aren't supported with tree data when using treeDataChildrenField\",\n  269: () => \"When `masterSelects: 'detail'`, detail grids must be configured with multi-row selection\"\n};\nfunction getError(errorId, args) {\n  const msgOrFunc = AG_GRID_ERRORS[errorId];\n  if (!msgOrFunc) {\n    return [`Missing error text for error id ${errorId}!`];\n  }\n  const errorBody = msgOrFunc(args);\n  const errorLink = getErrorLink(errorId, args);\n  const errorSuffix = `\nSee ${errorLink}`;\n  return Array.isArray(errorBody) ? errorBody.concat(errorSuffix) : [errorBody, errorSuffix];\n}\nvar MISSING_MODULE_REASONS = {\n  1: \"Charting Aggregation\",\n  2: \"pivotResultFields\",\n  3: \"setTooltip\"\n};\n\n// packages/ag-grid-community/src/validation/rules/colDefValidations.ts\nvar COLUMN_DEFINITION_DEPRECATIONS = () => ({\n  checkboxSelection: { version: \"32.2\", message: \"Use `rowSelection.checkboxes` in `GridOptions` instead.\" },\n  headerCheckboxSelection: {\n    version: \"32.2\",\n    message: \"Use `rowSelection.headerCheckbox = true` in `GridOptions` instead.\"\n  },\n  headerCheckboxSelectionFilteredOnly: {\n    version: \"32.2\",\n    message: 'Use `rowSelection.selectAll = \"filtered\"` in `GridOptions` instead.'\n  },\n  headerCheckboxSelectionCurrentPageOnly: {\n    version: \"32.2\",\n    message: 'Use `rowSelection.selectAll = \"currentPage\"` in `GridOptions` instead.'\n  },\n  showDisabledCheckboxes: {\n    version: \"32.2\",\n    message: \"Use `rowSelection.hideDisabledCheckboxes = true` in `GridOptions` instead.\"\n  }\n});\nvar COLUMN_DEFINITION_VALIDATIONS = () => ({\n  aggFunc: { module: \"SharedAggregation\" },\n  autoHeight: {\n    supportedRowModels: [\"clientSide\", \"serverSide\"],\n    module: \"RowAutoHeight\"\n  },\n  cellClass: { module: \"CellStyle\" },\n  cellClassRules: { module: \"CellStyle\" },\n  cellEditor: ({ cellEditor, editable }) => {\n    if (!editable) {\n      return null;\n    }\n    if (typeof cellEditor === \"string\") {\n      const module = USER_COMP_MODULES[cellEditor];\n      if (module) {\n        return { module };\n      }\n    }\n    return { module: \"CustomEditor\" };\n  },\n  cellRenderer: ({ cellRenderer }) => {\n    if (typeof cellRenderer !== \"string\") {\n      return null;\n    }\n    const module = USER_COMP_MODULES[cellRenderer];\n    if (module) {\n      return { module };\n    }\n    return null;\n  },\n  cellRendererParams: {\n    validate: (colDef) => {\n      const groupColumn = colDef.rowGroup != null || colDef.rowGroupIndex != null || colDef.cellRenderer === \"agGroupCellRenderer\";\n      if (groupColumn && \"checkbox\" in colDef.cellRendererParams) {\n        return 'Since v33.0, `cellRendererParams.checkbox` has been deprecated. Use `rowSelection.checkboxLocation = \"autoGroupColumn\"` instead.';\n      }\n      return null;\n    }\n  },\n  cellStyle: { module: \"CellStyle\" },\n  children: () => COL_DEF_VALIDATORS(),\n  columnChooserParams: {\n    module: \"ColumnMenu\"\n  },\n  contextMenuItems: { module: \"ContextMenu\" },\n  dndSource: { module: \"DragAndDrop\" },\n  dndSourceOnRowDrag: { module: \"DragAndDrop\" },\n  editable: ({ editable, cellEditor }) => {\n    if (editable && !cellEditor) {\n      return {\n        module: \"TextEditor\"\n      };\n    }\n    return null;\n  },\n  enableCellChangeFlash: { module: \"HighlightChanges\" },\n  enablePivot: { module: \"SharedPivot\" },\n  enableRowGroup: { module: \"SharedRowGrouping\" },\n  enableValue: { module: \"SharedAggregation\" },\n  filter: ({ filter }) => {\n    if (filter && typeof filter !== \"string\" && typeof filter !== \"boolean\") {\n      return { module: \"CustomFilter\" };\n    }\n    if (typeof filter === \"string\") {\n      const module = USER_COMP_MODULES[filter];\n      if (module) {\n        return { module };\n      }\n    }\n    return { module: \"ColumnFilter\" };\n  },\n  floatingFilter: { module: \"ColumnFilter\" },\n  headerCheckboxSelection: {\n    supportedRowModels: [\"clientSide\", \"serverSide\"],\n    validate: (_options, { rowSelection }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelection is only supported with rowSelection=multiple\"\n  },\n  headerCheckboxSelectionCurrentPageOnly: {\n    supportedRowModels: [\"clientSide\"],\n    validate: (_options, { rowSelection }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelectionCurrentPageOnly is only supported with rowSelection=multiple\"\n  },\n  headerCheckboxSelectionFilteredOnly: {\n    supportedRowModels: [\"clientSide\"],\n    validate: (_options, { rowSelection }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelectionFilteredOnly is only supported with rowSelection=multiple\"\n  },\n  headerTooltip: { module: \"Tooltip\" },\n  headerValueGetter: {\n    validate: (_options) => {\n      const headerValueGetter = _options.headerValueGetter;\n      if (typeof headerValueGetter === \"function\" || typeof headerValueGetter === \"string\") {\n        return null;\n      }\n      return \"headerValueGetter must be a function or a valid string expression\";\n    }\n  },\n  icons: {\n    validate: ({ icons }) => {\n      if (icons) {\n        if (icons[\"smallDown\"]) {\n          return _errMsg(262);\n        }\n        if (icons[\"smallLeft\"]) {\n          return _errMsg(263);\n        }\n        if (icons[\"smallRight\"]) {\n          return _errMsg(264);\n        }\n      }\n      return null;\n    }\n  },\n  mainMenuItems: { module: \"ColumnMenu\" },\n  menuTabs: (options) => {\n    const enterpriseMenuTabs = [\"columnsMenuTab\", \"generalMenuTab\"];\n    if (options.menuTabs?.some((tab) => enterpriseMenuTabs.includes(tab))) {\n      return {\n        module: \"ColumnMenu\"\n      };\n    }\n    return null;\n  },\n  pivot: { module: \"SharedPivot\" },\n  pivotIndex: { module: \"SharedPivot\" },\n  rowDrag: { module: \"RowDrag\" },\n  rowGroup: { module: \"SharedRowGrouping\" },\n  rowGroupIndex: { module: \"SharedRowGrouping\" },\n  sortingOrder: {\n    validate: (_options) => {\n      const sortingOrder = _options.sortingOrder;\n      if (Array.isArray(sortingOrder) && sortingOrder.length > 0) {\n        const invalidItems = sortingOrder.filter((a) => !DEFAULT_SORTING_ORDER.includes(a));\n        if (invalidItems.length > 0) {\n          return `sortingOrder must be an array with elements from [${DEFAULT_SORTING_ORDER.map(toStringWithNullUndefined).join()}], currently it includes [${invalidItems.map(toStringWithNullUndefined).join()}]`;\n        }\n      } else if (!Array.isArray(sortingOrder) || sortingOrder.length <= 0) {\n        return `sortingOrder must be an array with at least one element, currently it's ${sortingOrder}`;\n      }\n      return null;\n    }\n  },\n  tooltipField: { module: \"Tooltip\" },\n  tooltipValueGetter: { module: \"Tooltip\" },\n  type: {\n    validate: (_options) => {\n      const type = _options.type;\n      if (type instanceof Array) {\n        const invalidArray = type.some((a) => typeof a !== \"string\");\n        if (invalidArray) {\n          return \"if colDef.type is supplied an array it should be of type 'string[]'\";\n        }\n        return null;\n      }\n      if (typeof type === \"string\") {\n        return null;\n      }\n      return \"colDef.type should be of type 'string' | 'string[]'\";\n    }\n  },\n  rowSpan: {\n    validate: (_options, { suppressRowTransform }) => {\n      if (!suppressRowTransform) {\n        return \"colDef.rowSpan requires suppressRowTransform to be enabled.\";\n      }\n      return null;\n    }\n  },\n  spanRows: {\n    module: \"CellSpan\",\n    dependencies: {\n      editable: { required: [false, void 0] },\n      rowDrag: { required: [false, void 0] },\n      colSpan: { required: [false, void 0] },\n      rowSpan: { required: [false, void 0] }\n    },\n    validate: (_options, {\n      rowSelection,\n      cellSelection,\n      suppressRowTransform,\n      enableCellSpan,\n      pagination,\n      rowDragEntireRow,\n      enableCellTextSelection\n    }) => {\n      if (typeof rowSelection === \"object\") {\n        if (rowSelection?.mode === \"singleRow\" && rowSelection?.enableClickSelection) {\n          return \"colDef.spanRows is not supported with rowSelection.clickSelection\";\n        }\n      }\n      if (cellSelection) {\n        return \"colDef.spanRows is not supported with cellSelection.\";\n      }\n      if (suppressRowTransform) {\n        return \"colDef.spanRows is not supported with suppressRowTransform.\";\n      }\n      if (!enableCellSpan) {\n        return \"colDef.spanRows requires enableCellSpan to be enabled.\";\n      }\n      if (pagination) {\n        return \"colDef.spanRows is not supported with pagination.\";\n      }\n      if (rowDragEntireRow) {\n        return \"colDef.spanRows is not supported with rowDragEntireRow.\";\n      }\n      if (enableCellTextSelection) {\n        return \"colDef.spanRows is not supported with enableCellTextSelection.\";\n      }\n      return null;\n    }\n  }\n});\nvar colDefPropertyMap = {\n  headerName: void 0,\n  columnGroupShow: void 0,\n  headerStyle: void 0,\n  headerClass: void 0,\n  toolPanelClass: void 0,\n  headerValueGetter: void 0,\n  pivotKeys: void 0,\n  groupId: void 0,\n  colId: void 0,\n  sort: void 0,\n  initialSort: void 0,\n  field: void 0,\n  type: void 0,\n  cellDataType: void 0,\n  tooltipComponent: void 0,\n  tooltipField: void 0,\n  headerTooltip: void 0,\n  cellClass: void 0,\n  showRowGroup: void 0,\n  filter: void 0,\n  initialAggFunc: void 0,\n  defaultAggFunc: void 0,\n  aggFunc: void 0,\n  pinned: void 0,\n  initialPinned: void 0,\n  chartDataType: void 0,\n  cellAriaRole: void 0,\n  cellEditorPopupPosition: void 0,\n  headerGroupComponent: void 0,\n  headerGroupComponentParams: void 0,\n  cellStyle: void 0,\n  cellRenderer: void 0,\n  cellRendererParams: void 0,\n  cellEditor: void 0,\n  cellEditorParams: void 0,\n  filterParams: void 0,\n  pivotValueColumn: void 0,\n  headerComponent: void 0,\n  headerComponentParams: void 0,\n  floatingFilterComponent: void 0,\n  floatingFilterComponentParams: void 0,\n  tooltipComponentParams: void 0,\n  refData: void 0,\n  columnChooserParams: void 0,\n  children: void 0,\n  sortingOrder: void 0,\n  allowedAggFuncs: void 0,\n  menuTabs: void 0,\n  pivotTotalColumnIds: void 0,\n  cellClassRules: void 0,\n  icons: void 0,\n  sortIndex: void 0,\n  initialSortIndex: void 0,\n  flex: void 0,\n  initialFlex: void 0,\n  width: void 0,\n  initialWidth: void 0,\n  minWidth: void 0,\n  maxWidth: void 0,\n  rowGroupIndex: void 0,\n  initialRowGroupIndex: void 0,\n  pivotIndex: void 0,\n  initialPivotIndex: void 0,\n  suppressColumnsToolPanel: void 0,\n  suppressFiltersToolPanel: void 0,\n  openByDefault: void 0,\n  marryChildren: void 0,\n  suppressStickyLabel: void 0,\n  hide: void 0,\n  initialHide: void 0,\n  rowGroup: void 0,\n  initialRowGroup: void 0,\n  pivot: void 0,\n  initialPivot: void 0,\n  checkboxSelection: void 0,\n  showDisabledCheckboxes: void 0,\n  headerCheckboxSelection: void 0,\n  headerCheckboxSelectionFilteredOnly: void 0,\n  headerCheckboxSelectionCurrentPageOnly: void 0,\n  suppressHeaderMenuButton: void 0,\n  suppressMovable: void 0,\n  lockPosition: void 0,\n  lockVisible: void 0,\n  lockPinned: void 0,\n  unSortIcon: void 0,\n  suppressSizeToFit: void 0,\n  suppressAutoSize: void 0,\n  enableRowGroup: void 0,\n  enablePivot: void 0,\n  enableValue: void 0,\n  editable: void 0,\n  suppressPaste: void 0,\n  suppressNavigable: void 0,\n  enableCellChangeFlash: void 0,\n  rowDrag: void 0,\n  dndSource: void 0,\n  autoHeight: void 0,\n  wrapText: void 0,\n  sortable: void 0,\n  resizable: void 0,\n  singleClickEdit: void 0,\n  floatingFilter: void 0,\n  cellEditorPopup: void 0,\n  suppressFillHandle: void 0,\n  wrapHeaderText: void 0,\n  autoHeaderHeight: void 0,\n  dndSourceOnRowDrag: void 0,\n  valueGetter: void 0,\n  valueSetter: void 0,\n  filterValueGetter: void 0,\n  keyCreator: void 0,\n  valueFormatter: void 0,\n  valueParser: void 0,\n  comparator: void 0,\n  equals: void 0,\n  pivotComparator: void 0,\n  suppressKeyboardEvent: void 0,\n  suppressHeaderKeyboardEvent: void 0,\n  colSpan: void 0,\n  rowSpan: void 0,\n  spanRows: void 0,\n  getQuickFilterText: void 0,\n  onCellValueChanged: void 0,\n  onCellClicked: void 0,\n  onCellDoubleClicked: void 0,\n  onCellContextMenu: void 0,\n  rowDragText: void 0,\n  tooltipValueGetter: void 0,\n  cellRendererSelector: void 0,\n  cellEditorSelector: void 0,\n  suppressSpanHeaderHeight: void 0,\n  useValueFormatterForExport: void 0,\n  useValueParserForImport: void 0,\n  mainMenuItems: void 0,\n  contextMenuItems: void 0,\n  suppressFloatingFilterButton: void 0,\n  suppressHeaderFilterButton: void 0,\n  suppressHeaderContextMenu: void 0,\n  loadingCellRenderer: void 0,\n  loadingCellRendererParams: void 0,\n  loadingCellRendererSelector: void 0,\n  context: void 0\n};\nvar ALL_PROPERTIES = () => Object.keys(colDefPropertyMap);\nvar COL_DEF_VALIDATORS = () => ({\n  objectName: \"colDef\",\n  allProperties: ALL_PROPERTIES(),\n  docsUrl: \"column-properties/\",\n  deprecations: COLUMN_DEFINITION_DEPRECATIONS(),\n  validations: COLUMN_DEFINITION_VALIDATIONS()\n});\n\n// packages/ag-grid-community/src/validation/rules/gridOptionsValidations.ts\nvar GRID_OPTION_DEPRECATIONS = () => ({\n  suppressLoadingOverlay: { version: \"32\", message: \"Use `loading`=false instead.\" },\n  enableFillHandle: { version: \"32.2\", message: \"Use `cellSelection.handle` instead.\" },\n  enableRangeHandle: { version: \"32.2\", message: \"Use `cellSelection.handle` instead.\" },\n  enableRangeSelection: { version: \"32.2\", message: \"Use `cellSelection = true` instead.\" },\n  suppressMultiRangeSelection: {\n    version: \"32.2\",\n    message: \"Use `cellSelection.suppressMultiRanges` instead.\"\n  },\n  suppressClearOnFillReduction: {\n    version: \"32.2\",\n    message: \"Use `cellSelection.handle.suppressClearOnFillReduction` instead.\"\n  },\n  fillHandleDirection: { version: \"32.2\", message: \"Use `cellSelection.handle.direction` instead.\" },\n  fillOperation: { version: \"32.2\", message: \"Use `cellSelection.handle.setFillValue` instead.\" },\n  suppressRowClickSelection: {\n    version: \"32.2\",\n    message: \"Use `rowSelection.enableClickSelection` instead.\"\n  },\n  suppressRowDeselection: { version: \"32.2\", message: \"Use `rowSelection.enableClickSelection` instead.\" },\n  rowMultiSelectWithClick: {\n    version: \"32.2\",\n    message: \"Use `rowSelection.enableSelectionWithoutKeys` instead.\"\n  },\n  groupSelectsChildren: {\n    version: \"32.2\",\n    message: 'Use `rowSelection.groupSelects = \"descendants\"` instead.'\n  },\n  groupSelectsFiltered: {\n    version: \"32.2\",\n    message: 'Use `rowSelection.groupSelects = \"filteredDescendants\"` instead.'\n  },\n  isRowSelectable: { version: \"32.2\", message: \"Use `selectionOptions.isRowSelectable` instead.\" },\n  suppressCopySingleCellRanges: { version: \"32.2\", message: \"Use `rowSelection.copySelectedRows` instead.\" },\n  suppressCopyRowsToClipboard: { version: \"32.2\", message: \"Use `rowSelection.copySelectedRows` instead.\" },\n  onRangeSelectionChanged: { version: \"32.2\", message: \"Use `onCellSelectionChanged` instead.\" },\n  onRangeDeleteStart: { version: \"32.2\", message: \"Use `onCellSelectionDeleteStart` instead.\" },\n  onRangeDeleteEnd: { version: \"32.2\", message: \"Use `onCellSelectionDeleteEnd` instead.\" },\n  suppressBrowserResizeObserver: {\n    version: \"32.2\",\n    message: \"The grid always uses the browser's ResizeObserver, this grid option has no effect.\"\n  },\n  onColumnEverythingChanged: {\n    version: \"32.2\",\n    message: \"Either use `onDisplayedColumnsChanged` which is fired at the same time, or use one of the more specific column events.\"\n  },\n  groupRemoveSingleChildren: {\n    version: \"33\",\n    message: \"Use `groupHideParentOfSingleChild` instead.\"\n  },\n  groupRemoveLowestSingleChildren: {\n    version: \"33\",\n    message: 'Use `groupHideParentOfSingleChild: \"leafGroupsOnly\"` instead.'\n  },\n  suppressRowGroupHidesColumns: {\n    version: \"33\",\n    message: 'Use `suppressGroupChangesColumnVisibility: \"suppressHideOnGroup\"` instead.'\n  },\n  suppressMakeColumnVisibleAfterUnGroup: {\n    version: \"33\",\n    message: 'Use `suppressGroupChangesColumnVisibility: \"suppressShowOnUngroup\"` instead.'\n  },\n  unSortIcon: { version: \"33\", message: \"Use `defaultColDef.unSortIcon` instead.\" },\n  sortingOrder: { version: \"33\", message: \"Use `defaultColDef.sortingOrder` instead.\" },\n  suppressPropertyNamesCheck: {\n    version: \"33\",\n    message: \"`gridOptions` and `columnDefs` both have a `context` property that should be used for arbitrary user data. This means that column definitions and gridOptions should only contain valid properties making this property redundant.\"\n  }\n});\nfunction toConstrainedNum(key, value, min, max = Number.MAX_VALUE) {\n  if (typeof value === \"number\" || value == null) {\n    if (value == null) {\n      return null;\n    }\n    if (value >= min && value <= max) {\n      return null;\n    }\n    if (max === Number.MAX_VALUE) {\n      return `${key}: value should be greater than or equal to ${min}`;\n    }\n    return `${key}: value should be between ${min} and ${max}`;\n  }\n  return `${key}: value should be a number`;\n}\nvar GRID_OPTION_VALIDATIONS = () => {\n  const definedValidations = {\n    alignedGrids: { module: \"AlignedGrids\" },\n    allowContextMenuWithControlKey: { module: \"ContextMenu\" },\n    autoSizePadding: {\n      validate({ autoSizePadding }) {\n        return toConstrainedNum(\"autoSizePadding\", autoSizePadding, 0);\n      }\n    },\n    autoSizeStrategy: { module: \"ColumnAutoSize\" },\n    cacheBlockSize: {\n      supportedRowModels: [\"serverSide\", \"infinite\"],\n      validate({ cacheBlockSize }) {\n        return toConstrainedNum(\"cacheBlockSize\", cacheBlockSize, 1);\n      }\n    },\n    cacheOverflowSize: {\n      validate({ cacheOverflowSize }) {\n        return toConstrainedNum(\"cacheOverflowSize\", cacheOverflowSize, 1);\n      }\n    },\n    cellSelection: {\n      module: \"CellSelection\"\n    },\n    columnHoverHighlight: { module: \"ColumnHover\" },\n    datasource: {\n      supportedRowModels: [\"infinite\"],\n      module: \"InfiniteRowModel\"\n    },\n    doesExternalFilterPass: { module: \"ExternalFilter\" },\n    domLayout: {\n      validate: (options) => {\n        const domLayout = options.domLayout;\n        const validLayouts = [\"autoHeight\", \"normal\", \"print\"];\n        if (domLayout && !validLayouts.includes(domLayout)) {\n          return `domLayout must be one of [${validLayouts.join()}], currently it's ${domLayout}`;\n        }\n        return null;\n      }\n    },\n    editType: {\n      module: \"EditCore\"\n    },\n    enableAdvancedFilter: { module: \"AdvancedFilter\" },\n    enableCharts: { module: \"IntegratedCharts\" },\n    enableFillHandle: {\n      dependencies: {\n        enableRangeSelection: { required: [true] }\n      }\n    },\n    enableRangeHandle: {\n      dependencies: {\n        enableRangeSelection: { required: [true] }\n      }\n    },\n    enableRangeSelection: {\n      module: \"CellSelection\",\n      dependencies: {\n        rowDragEntireRow: { required: [false, void 0] }\n      }\n    },\n    rowNumbers: {\n      module: \"RowNumbers\"\n    },\n    getContextMenuItems: { module: \"ContextMenu\" },\n    getLocaleText: { module: \"Locale\" },\n    getMainMenuItems: { module: \"ColumnMenu\" },\n    getRowClass: { module: \"RowStyle\" },\n    getRowStyle: { module: \"RowStyle\" },\n    grandTotalRow: { module: \"SharedRowGrouping\" },\n    groupDefaultExpanded: {\n      supportedRowModels: [\"clientSide\"]\n    },\n    groupHideOpenParents: {\n      supportedRowModels: [\"clientSide\", \"serverSide\"],\n      dependencies: {\n        groupTotalRow: { required: [void 0, \"bottom\"] },\n        treeData: {\n          required: [void 0, false],\n          reason: \"Tree Data has values at the group level so it doesn't make sense to hide them.\"\n        }\n      }\n    },\n    groupHideParentOfSingleChild: {\n      dependencies: {\n        groupHideOpenParents: { required: [void 0, false] }\n      }\n    },\n    groupRemoveLowestSingleChildren: {\n      dependencies: {\n        groupHideOpenParents: { required: [void 0, false] },\n        groupRemoveSingleChildren: { required: [void 0, false] }\n      }\n    },\n    groupRemoveSingleChildren: {\n      dependencies: {\n        groupHideOpenParents: { required: [void 0, false] },\n        groupRemoveLowestSingleChildren: { required: [void 0, false] }\n      }\n    },\n    groupSelectsChildren: {\n      dependencies: {\n        rowSelection: { required: [\"multiple\"] }\n      }\n    },\n    icons: {\n      validate: ({ icons }) => {\n        if (icons) {\n          if (icons[\"smallDown\"]) {\n            return _errMsg(262);\n          }\n          if (icons[\"smallLeft\"]) {\n            return _errMsg(263);\n          }\n          if (icons[\"smallRight\"]) {\n            return _errMsg(264);\n          }\n        }\n        return null;\n      }\n    },\n    infiniteInitialRowCount: {\n      validate({ infiniteInitialRowCount }) {\n        return toConstrainedNum(\"infiniteInitialRowCount\", infiniteInitialRowCount, 1);\n      }\n    },\n    initialGroupOrderComparator: {\n      supportedRowModels: [\"clientSide\"]\n    },\n    initialState: { module: \"GridState\" },\n    isExternalFilterPresent: { module: \"ExternalFilter\" },\n    keepDetailRowsCount: {\n      validate({ keepDetailRowsCount }) {\n        return toConstrainedNum(\"keepDetailRowsCount\", keepDetailRowsCount, 1);\n      }\n    },\n    localeText: {\n      module: \"Locale\"\n    },\n    masterDetail: { module: \"SharedMasterDetail\" },\n    pagination: { module: \"Pagination\" },\n    paginationPageSize: {\n      validate({ paginationPageSize }) {\n        return toConstrainedNum(\"paginationPageSize\", paginationPageSize, 1);\n      }\n    },\n    paginationPageSizeSelector: {\n      validate: (options) => {\n        const values = options.paginationPageSizeSelector;\n        if (typeof values === \"boolean\" || values == null) {\n          return null;\n        }\n        if (!values.length) {\n          return `'paginationPageSizeSelector' cannot be an empty array.\n                    If you want to hide the page size selector, set paginationPageSizeSelector to false.`;\n        }\n        return null;\n      }\n    },\n    pinnedTopRowData: {\n      module: \"PinnedRow\"\n    },\n    pinnedBottomRowData: {\n      module: \"PinnedRow\"\n    },\n    pivotMode: {\n      dependencies: {\n        treeData: {\n          required: [false, void 0],\n          reason: \"Pivot Mode is not supported with Tree Data.\"\n        }\n      },\n      module: \"SharedPivot\"\n    },\n    pivotPanelShow: { module: \"RowGroupingPanel\" },\n    quickFilterText: {\n      supportedRowModels: [\"clientSide\"],\n      module: \"QuickFilter\"\n    },\n    rowBuffer: {\n      validate({ rowBuffer }) {\n        return toConstrainedNum(\"rowBuffer\", rowBuffer, 0);\n      }\n    },\n    rowClass: {\n      validate: (options) => {\n        const rowClass = options.rowClass;\n        if (typeof rowClass === \"function\") {\n          return \"rowClass should not be a function, please use getRowClass instead\";\n        }\n        return null;\n      },\n      module: \"RowStyle\"\n    },\n    rowClassRules: { module: \"RowStyle\" },\n    rowData: {\n      supportedRowModels: [\"clientSide\"],\n      module: \"ClientSideRowModel\"\n    },\n    rowDragManaged: {\n      supportedRowModels: [\"clientSide\"],\n      dependencies: {\n        treeData: {\n          required: [false, void 0]\n        },\n        pagination: {\n          required: [false, void 0]\n        }\n      },\n      module: \"RowDrag\"\n    },\n    rowGroupPanelShow: { module: \"RowGroupingPanel\" },\n    rowSelection: {\n      validate({ rowSelection }) {\n        if (rowSelection && typeof rowSelection === \"string\") {\n          return 'As of version 32.2.1, using `rowSelection` with the values \"single\" or \"multiple\" has been deprecated. Use the object value instead.';\n        }\n        if (rowSelection && typeof rowSelection !== \"object\") {\n          return \"Expected `RowSelectionOptions` object for the `rowSelection` property.\";\n        }\n        if (rowSelection && rowSelection.mode !== \"multiRow\" && rowSelection.mode !== \"singleRow\") {\n          return `Selection mode \"${rowSelection.mode}\" is invalid. Use one of 'singleRow' or 'multiRow'.`;\n        }\n        return null;\n      },\n      module: \"SharedRowSelection\"\n    },\n    rowStyle: {\n      validate: (options) => {\n        const rowStyle = options.rowStyle;\n        if (rowStyle && typeof rowStyle === \"function\") {\n          return \"rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead\";\n        }\n        return null;\n      },\n      module: \"RowStyle\"\n    },\n    serverSideDatasource: {\n      supportedRowModels: [\"serverSide\"],\n      module: \"ServerSideRowModel\"\n    },\n    serverSideInitialRowCount: {\n      supportedRowModels: [\"serverSide\"],\n      validate({ serverSideInitialRowCount }) {\n        return toConstrainedNum(\"serverSideInitialRowCount\", serverSideInitialRowCount, 1);\n      }\n    },\n    serverSideOnlyRefreshFilteredGroups: {\n      supportedRowModels: [\"serverSide\"]\n    },\n    serverSideSortAllLevels: {\n      supportedRowModels: [\"serverSide\"]\n    },\n    sideBar: { module: \"SideBar\" },\n    sortingOrder: {\n      validate: (_options) => {\n        const sortingOrder = _options.sortingOrder;\n        if (Array.isArray(sortingOrder) && sortingOrder.length > 0) {\n          const invalidItems = sortingOrder.filter((a) => !DEFAULT_SORTING_ORDER.includes(a));\n          if (invalidItems.length > 0) {\n            return `sortingOrder must be an array with elements from [${DEFAULT_SORTING_ORDER.map(toStringWithNullUndefined).join()}], currently it includes [${invalidItems.map(toStringWithNullUndefined).join()}]`;\n          }\n        } else if (!Array.isArray(sortingOrder) || sortingOrder.length <= 0) {\n          return `sortingOrder must be an array with at least one element, currently it's ${sortingOrder}`;\n        }\n        return null;\n      }\n    },\n    statusBar: { module: \"StatusBar\" },\n    tooltipHideDelay: {\n      validate: (options) => {\n        if (options.tooltipHideDelay && options.tooltipHideDelay < 0) {\n          return \"tooltipHideDelay should not be lower than 0\";\n        }\n        return null;\n      }\n    },\n    tooltipShowDelay: {\n      validate: (options) => {\n        if (options.tooltipShowDelay && options.tooltipShowDelay < 0) {\n          return \"tooltipShowDelay should not be lower than 0\";\n        }\n        return null;\n      }\n    },\n    treeData: {\n      supportedRowModels: [\"clientSide\", \"serverSide\"],\n      module: \"SharedTreeData\",\n      validate: (options) => {\n        const rowModel = options.rowModelType ?? \"clientSide\";\n        switch (rowModel) {\n          case \"clientSide\": {\n            const { treeDataChildrenField, getDataPath } = options;\n            if (!treeDataChildrenField && !getDataPath) {\n              return \"treeData requires either 'treeDataChildrenField' or 'getDataPath' in the clientSide row model.\";\n            }\n            if (treeDataChildrenField && getDataPath) {\n              return \"Cannot use both 'treeDataChildrenField' and 'getDataPath' at the same time.\";\n            }\n            return null;\n          }\n          case \"serverSide\": {\n            const ssrmWarning = `treeData requires 'isServerSideGroup' and 'getServerSideGroupKey' in the ${rowModel} row model.`;\n            return options.isServerSideGroup && options.getServerSideGroupKey ? null : ssrmWarning;\n          }\n        }\n        return null;\n      }\n    },\n    treeDataChildrenField: {\n      module: \"SharedTreeData\"\n    },\n    undoRedoCellEditing: { module: \"UndoRedoEdit\" },\n    valueCache: { module: \"ValueCache\" },\n    viewportDatasource: {\n      supportedRowModels: [\"viewport\"],\n      module: \"ViewportRowModel\"\n    },\n    viewportRowModelBufferSize: {\n      validate({ viewportRowModelBufferSize }) {\n        return toConstrainedNum(\"viewportRowModelBufferSize\", viewportRowModelBufferSize, 0);\n      }\n    },\n    viewportRowModelPageSize: {\n      validate({ viewportRowModelPageSize }) {\n        return toConstrainedNum(\"viewportRowModelPageSize\", viewportRowModelPageSize, 1);\n      }\n    },\n    rowDragEntireRow: {\n      dependencies: {\n        cellSelection: { required: [void 0] }\n      }\n    },\n    enableCellSpan: {\n      module: \"CellSpan\"\n    }\n  };\n  const validations = {};\n  _BOOLEAN_GRID_OPTIONS.forEach((key) => {\n    validations[key] = { expectedType: \"boolean\" };\n  });\n  _NUMBER_GRID_OPTIONS.forEach((key) => {\n    validations[key] = { expectedType: \"number\" };\n  });\n  _mergeDeep(validations, definedValidations);\n  return validations;\n};\nvar GRID_OPTIONS_VALIDATORS = () => ({\n  objectName: \"gridOptions\",\n  allProperties: [..._ALL_GRID_OPTIONS, ..._ALL_EVENTS.map((event) => _getCallbackForEvent(event))],\n  propertyExceptions: [\"api\"],\n  docsUrl: \"grid-options/\",\n  deprecations: GRID_OPTION_DEPRECATIONS(),\n  validations: GRID_OPTION_VALIDATIONS()\n});\n\n// packages/ag-grid-community/src/validation/rules/iconValidations.ts\nvar ICON_VALUES = {\n  expanded: 1,\n  contracted: 1,\n  \"tree-closed\": 1,\n  \"tree-open\": 1,\n  \"tree-indeterminate\": 1,\n  pin: 1,\n  \"eye-slash\": 1,\n  arrows: 1,\n  left: 1,\n  right: 1,\n  group: 1,\n  aggregation: 1,\n  pivot: 1,\n  \"not-allowed\": 1,\n  chart: 1,\n  cross: 1,\n  cancel: 1,\n  tick: 1,\n  first: 1,\n  previous: 1,\n  next: 1,\n  last: 1,\n  linked: 1,\n  unlinked: 1,\n  \"color-picker\": 1,\n  loading: 1,\n  menu: 1,\n  \"menu-alt\": 1,\n  filter: 1,\n  columns: 1,\n  maximize: 1,\n  minimize: 1,\n  copy: 1,\n  cut: 1,\n  paste: 1,\n  grip: 1,\n  save: 1,\n  csv: 1,\n  excel: 1,\n  \"small-down\": 1,\n  \"small-left\": 1,\n  \"small-right\": 1,\n  \"small-up\": 1,\n  asc: 1,\n  desc: 1,\n  none: 1,\n  up: 1,\n  down: 1,\n  plus: 1,\n  minus: 1,\n  settings: 1,\n  \"checkbox-checked\": 1,\n  \"checkbox-indeterminate\": 1,\n  \"checkbox-unchecked\": 1,\n  \"radio-button-on\": 1,\n  \"radio-button-off\": 1,\n  eye: 1\n};\nvar ICON_MODULES = {\n  chart: \"MenuCore\",\n  cancel: \"EnterpriseCore\",\n  first: \"Pagination\",\n  previous: \"Pagination\",\n  next: \"Pagination\",\n  last: \"Pagination\",\n  linked: \"IntegratedCharts\",\n  loadingMenuItems: \"MenuCore\",\n  unlinked: \"IntegratedCharts\",\n  menu: \"ColumnHeaderComp\",\n  legacyMenu: \"ColumnMenu\",\n  filter: \"ColumnFilter\",\n  filterActive: \"ColumnFilter\",\n  filterTab: \"ColumnMenu\",\n  filtersToolPanel: \"FiltersToolPanel\",\n  columns: [\"MenuCore\"],\n  columnsToolPanel: [\"ColumnsToolPanel\"],\n  maximize: \"EnterpriseCore\",\n  minimize: \"EnterpriseCore\",\n  save: \"MenuCore\",\n  columnGroupOpened: \"ColumnGroupHeaderComp\",\n  columnGroupClosed: \"ColumnGroupHeaderComp\",\n  accordionOpen: \"EnterpriseCore\",\n  accordionClosed: \"EnterpriseCore\",\n  accordionIndeterminate: \"EnterpriseCore\",\n  columnSelectClosed: [\"ColumnsToolPanel\", \"ColumnMenu\"],\n  columnSelectOpen: [\"ColumnsToolPanel\", \"ColumnMenu\"],\n  columnSelectIndeterminate: [\"ColumnsToolPanel\", \"ColumnMenu\"],\n  columnMovePin: \"SharedDragAndDrop\",\n  columnMoveHide: \"SharedDragAndDrop\",\n  columnMoveMove: \"SharedDragAndDrop\",\n  columnMoveLeft: \"SharedDragAndDrop\",\n  columnMoveRight: \"SharedDragAndDrop\",\n  columnMoveGroup: \"SharedDragAndDrop\",\n  columnMoveValue: \"SharedDragAndDrop\",\n  columnMovePivot: \"SharedDragAndDrop\",\n  dropNotAllowed: \"SharedDragAndDrop\",\n  groupContracted: \"GroupCellRenderer\",\n  groupExpanded: \"GroupCellRenderer\",\n  setFilterGroupClosed: \"SetFilter\",\n  setFilterGroupOpen: \"SetFilter\",\n  setFilterGroupIndeterminate: \"SetFilter\",\n  setFilterLoading: \"SetFilter\",\n  close: \"EnterpriseCore\",\n  check: \"MenuItem\",\n  colorPicker: \"CommunityCore\",\n  groupLoading: \"LoadingCellRenderer\",\n  menuAlt: \"ColumnHeaderComp\",\n  menuPin: \"MenuCore\",\n  menuValue: \"MenuCore\",\n  menuAddRowGroup: [\"MenuCore\", \"ColumnsToolPanel\"],\n  menuRemoveRowGroup: [\"MenuCore\", \"ColumnsToolPanel\"],\n  clipboardCopy: \"MenuCore\",\n  clipboardCut: \"MenuCore\",\n  clipboardPaste: \"MenuCore\",\n  pivotPanel: [\"ColumnsToolPanel\", \"RowGroupingPanel\"],\n  rowGroupPanel: [\"ColumnsToolPanel\", \"RowGroupingPanel\"],\n  valuePanel: \"ColumnsToolPanel\",\n  columnDrag: \"EnterpriseCore\",\n  rowDrag: [\"RowDrag\", \"DragAndDrop\"],\n  csvExport: \"MenuCore\",\n  excelExport: \"MenuCore\",\n  smallDown: \"CommunityCore\",\n  selectOpen: \"CommunityCore\",\n  richSelectOpen: \"RichSelect\",\n  richSelectRemove: \"RichSelect\",\n  smallLeft: \"CommunityCore\",\n  smallRight: \"CommunityCore\",\n  subMenuOpen: \"MenuItem\",\n  subMenuOpenRtl: \"MenuItem\",\n  panelDelimiter: \"RowGroupingPanel\",\n  panelDelimiterRtl: \"RowGroupingPanel\",\n  smallUp: \"CommunityCore\",\n  sortAscending: [\"MenuCore\", \"Sort\"],\n  sortDescending: [\"MenuCore\", \"Sort\"],\n  sortUnSort: [\"MenuCore\", \"Sort\"],\n  advancedFilterBuilder: \"AdvancedFilter\",\n  advancedFilterBuilderDrag: \"AdvancedFilter\",\n  advancedFilterBuilderInvalid: \"AdvancedFilter\",\n  advancedFilterBuilderMoveUp: \"AdvancedFilter\",\n  advancedFilterBuilderMoveDown: \"AdvancedFilter\",\n  advancedFilterBuilderAdd: \"AdvancedFilter\",\n  advancedFilterBuilderRemove: \"AdvancedFilter\",\n  advancedFilterBuilderSelectOpen: \"AdvancedFilter\",\n  chartsMenu: \"IntegratedCharts\",\n  chartsMenuEdit: \"IntegratedCharts\",\n  chartsMenuAdvancedSettings: \"IntegratedCharts\",\n  chartsMenuAdd: \"IntegratedCharts\",\n  chartsColorPicker: \"IntegratedCharts\",\n  chartsThemePrevious: \"IntegratedCharts\",\n  chartsThemeNext: \"IntegratedCharts\",\n  chartsDownload: \"IntegratedCharts\",\n  checkboxChecked: \"CommunityCore\",\n  checkboxIndeterminate: \"CommunityCore\",\n  checkboxUnchecked: \"CommunityCore\",\n  radioButtonOn: \"CommunityCore\",\n  radioButtonOff: \"CommunityCore\"\n};\nvar DEPRECATED_ICONS_V33 = /* @__PURE__ */ new Set([\n  \"colorPicker\",\n  \"smallUp\",\n  \"checkboxChecked\",\n  \"checkboxIndeterminate\",\n  \"checkboxUnchecked\",\n  \"radioButtonOn\",\n  \"radioButtonOff\",\n  \"smallDown\",\n  \"smallLeft\",\n  \"smallRight\"\n]);\n\n// packages/ag-grid-community/src/validation/rules/menuItemValidations.ts\nvar MENU_ITEM_MODULES = {\n  pinSubMenu: \"PinnedColumn\",\n  pinLeft: \"PinnedColumn\",\n  pinRight: \"PinnedColumn\",\n  clearPinned: \"PinnedColumn\",\n  valueAggSubMenu: \"SharedAggregation\",\n  autoSizeThis: \"ColumnAutoSize\",\n  autoSizeAll: \"ColumnAutoSize\",\n  rowGroup: \"SharedRowGrouping\",\n  rowUnGroup: \"SharedRowGrouping\",\n  resetColumns: \"CommunityCore\",\n  expandAll: [\"ClientSideRowModelHierarchy\", \"ServerSideRowModel\"],\n  contractAll: [\"ClientSideRowModelHierarchy\", \"ServerSideRowModel\"],\n  copy: \"Clipboard\",\n  copyWithHeaders: \"Clipboard\",\n  copyWithGroupHeaders: \"Clipboard\",\n  cut: \"Clipboard\",\n  paste: \"Clipboard\",\n  export: [\"CsvExport\", \"ExcelExport\"],\n  csvExport: \"CsvExport\",\n  excelExport: \"ExcelExport\",\n  separator: \"CommunityCore\",\n  pivotChart: \"IntegratedCharts\",\n  chartRange: \"IntegratedCharts\",\n  columnFilter: \"ColumnFilter\",\n  columnChooser: \"ColumnMenu\",\n  sortAscending: \"Sort\",\n  sortDescending: \"Sort\",\n  sortUnSort: \"Sort\"\n};\n\n// packages/ag-grid-community/src/validation/validationService.ts\nvar ValidationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"validation\";\n  }\n  wireBeans(beans) {\n    this.gridOptions = beans.gridOptions;\n    provideValidationServiceLogger(this);\n  }\n  postConstruct() {\n    this.processGridOptions(this.gridOptions);\n  }\n  warnOnInitialPropertyUpdate(source, key) {\n    if (source === \"api\" && INITIAL_GRID_OPTION_KEYS[key]) {\n      _warn(22, { key });\n    }\n  }\n  processGridOptions(options) {\n    this.processOptions(options, GRID_OPTIONS_VALIDATORS());\n  }\n  validateApiFunction(functionName, apiFunction) {\n    return validateApiFunction(functionName, apiFunction, this.beans);\n  }\n  missingUserComponent(propertyName, componentName, agGridDefaults, jsComps) {\n    const moduleForComponent = USER_COMP_MODULES[componentName];\n    if (moduleForComponent) {\n      this.gos.assertModuleRegistered(\n        moduleForComponent,\n        `AG Grid '${propertyName}' component: ${componentName}`\n      );\n    } else {\n      _warn(101, {\n        propertyName,\n        componentName,\n        agGridDefaults,\n        jsComps\n      });\n    }\n  }\n  checkRowEvents(eventType) {\n    if (DEPRECATED_ROW_NODE_EVENTS.has(eventType)) {\n      _warn(10, { eventType });\n    }\n  }\n  validateIcon(iconName) {\n    if (DEPRECATED_ICONS_V33.has(iconName)) {\n      _warn(43, { iconName });\n    }\n    if (ICON_VALUES[iconName]) {\n      return;\n    }\n    const moduleName = ICON_MODULES[iconName];\n    if (moduleName) {\n      _error(200, {\n        reasonOrId: `icon '${iconName}'`,\n        moduleName,\n        gridScoped: _areModulesGridScoped(),\n        gridId: this.beans.context.getGridId(),\n        rowModelType: this.gos.get(\"rowModelType\"),\n        additionalText: \"Alternatively, use the CSS icon name directly.\"\n      });\n      return;\n    }\n    _warn(134, { iconName });\n  }\n  validateMenuItem(key) {\n    const moduleName = MENU_ITEM_MODULES[key];\n    if (moduleName) {\n      this.gos.assertModuleRegistered(moduleName, `menu item '${key}'`);\n    }\n  }\n  isProvidedUserComp(compName) {\n    return !!USER_COMP_MODULES[compName];\n  }\n  validateColDef(colDef, colId, skipInferenceCheck) {\n    if (skipInferenceCheck || !this.beans.dataTypeSvc?.isColPendingInference(colId)) {\n      this.processOptions(colDef, COL_DEF_VALIDATORS());\n    }\n  }\n  processOptions(options, validator) {\n    const { validations, deprecations, allProperties, propertyExceptions, objectName, docsUrl } = validator;\n    if (allProperties && this.gridOptions.suppressPropertyNamesCheck !== true) {\n      this.checkProperties(\n        options,\n        [...propertyExceptions ?? [], ...Object.keys(deprecations)],\n        allProperties,\n        objectName,\n        docsUrl\n      );\n    }\n    const warnings = /* @__PURE__ */ new Set();\n    const getRules = (key) => {\n      const rulesOrGetter = validations[key];\n      if (!rulesOrGetter) {\n        return;\n      } else if (typeof rulesOrGetter === \"function\") {\n        const fromGetter = rulesOrGetter(options, this.gridOptions, this.beans);\n        if (!fromGetter) {\n          return;\n        }\n        if (\"objectName\" in fromGetter) {\n          const value = options[key];\n          if (Array.isArray(value)) {\n            value.forEach((item) => {\n              this.processOptions(item, fromGetter);\n            });\n            return;\n          }\n          this.processOptions(options[key], fromGetter);\n          return;\n        }\n        return fromGetter;\n      } else {\n        return rulesOrGetter;\n      }\n    };\n    const optionKeys = Object.keys(options);\n    optionKeys.forEach((key) => {\n      const deprecation = deprecations[key];\n      if (deprecation) {\n        const { message, version } = deprecation;\n        warnings.add(`As of v${version}, ${String(key)} is deprecated. ${message ?? \"\"}`);\n      }\n      const value = options[key];\n      if (value == null || value === false) {\n        return;\n      }\n      const rules = getRules(key);\n      if (!rules) {\n        return;\n      }\n      const { module, dependencies, validate, supportedRowModels, expectedType } = rules;\n      if (expectedType) {\n        const actualType = typeof value;\n        if (actualType !== expectedType) {\n          warnings.add(\n            `${String(key)} should be of type '${expectedType}' but received '${actualType}' (${value}).`\n          );\n          return;\n        }\n      }\n      if (supportedRowModels) {\n        const rowModel = this.gridOptions.rowModelType ?? \"clientSide\";\n        if (!supportedRowModels.includes(rowModel)) {\n          warnings.add(\n            `${String(key)} is not supported with the '${rowModel}' row model. It is only valid with: ${supportedRowModels.join(\", \")}.`\n          );\n          return;\n        }\n      }\n      if (module) {\n        const modules = Array.isArray(module) ? module : [module];\n        let allRegistered = true;\n        modules.forEach((m) => {\n          if (!this.gos.assertModuleRegistered(m, String(key))) {\n            allRegistered = false;\n          }\n        });\n        if (!allRegistered) {\n          return;\n        }\n      }\n      if (dependencies) {\n        const warning = this.checkForRequiredDependencies(key, dependencies, options);\n        if (warning) {\n          warnings.add(warning);\n          return;\n        }\n      }\n      if (validate) {\n        const warning = validate(options, this.gridOptions, this.beans);\n        if (warning) {\n          warnings.add(warning);\n          return;\n        }\n      }\n    });\n    if (warnings.size > 0) {\n      warnings.forEach((warning) => {\n        _warnOnce(warning);\n      });\n    }\n  }\n  checkForRequiredDependencies(key, validator, options) {\n    const optionEntries = Object.entries(validator);\n    const failedOptions = optionEntries.filter(([key2, value]) => {\n      const gridOptionValue = options[key2];\n      return !value.required.includes(gridOptionValue);\n    });\n    if (failedOptions.length === 0) {\n      return null;\n    }\n    return failedOptions.map(\n      ([failedKey, possibleOptions]) => `'${String(key)}' requires '${failedKey}' to be one of [${possibleOptions.required.map((o) => {\n        if (o === null) {\n          return \"null\";\n        } else if (o === void 0) {\n          return \"undefined\";\n        }\n        return o;\n      }).join(\", \")}]. ${possibleOptions.reason ?? \"\"}`\n    ).join(\"\\n           \");\n  }\n  checkProperties(object, exceptions, validProperties, containerName, docsUrl) {\n    const VUE_FRAMEWORK_PROPS = [\"__ob__\", \"__v_skip\", \"__metadata__\"];\n    const invalidProperties = _fuzzyCheckStrings(\n      Object.getOwnPropertyNames(object),\n      [...VUE_FRAMEWORK_PROPS, ...exceptions, ...validProperties],\n      validProperties\n    );\n    const invalidPropertiesKeys = Object.keys(invalidProperties);\n    for (const key of invalidPropertiesKeys) {\n      const value = invalidProperties[key];\n      let message = `invalid ${containerName} property '${key}' did you mean any of these: ${value.slice(0, 8).join(\", \")}.`;\n      if (validProperties.includes(\"context\")) {\n        message += `\nIf you are trying to annotate ${containerName} with application data, use the '${containerName}.context' property instead.`;\n      }\n      _warnOnce(message);\n    }\n    if (invalidPropertiesKeys.length > 0 && docsUrl) {\n      const url = this.beans.frameworkOverrides.getDocLink(docsUrl);\n      _warnOnce(`to see all the valid ${containerName} properties please check: ${url}`);\n    }\n  }\n  getConsoleMessage(id, args) {\n    return getError(id, args);\n  }\n};\nfunction _fuzzyCheckStrings(inputValues, validValues, allSuggestions) {\n  const fuzzyMatches = {};\n  const invalidInputs = inputValues.filter(\n    (inputValue) => !validValues.some((validValue) => validValue === inputValue)\n  );\n  if (invalidInputs.length > 0) {\n    invalidInputs.forEach(\n      (invalidInput) => fuzzyMatches[invalidInput] = _fuzzySuggestions({ inputValue: invalidInput, allSuggestions }).values\n    );\n  }\n  return fuzzyMatches;\n}\nvar DEPRECATED_ROW_NODE_EVENTS = /* @__PURE__ */ new Set([\n  \"firstChildChanged\",\n  \"lastChildChanged\",\n  \"childIndexChanged\"\n]);\n\n// packages/ag-grid-community/src/validation/validationModule.ts\nvar ValidationModule = {\n  moduleName: \"Validation\",\n  version: VERSION,\n  beans: [ValidationService]\n};\n\n// packages/ag-grid-community/src/clientSideRowModel/filterStage.ts\nfunction updateRowNodeAfterFilter(rowNode) {\n  if (rowNode.sibling) {\n    rowNode.sibling.childrenAfterFilter = rowNode.childrenAfterFilter;\n  }\n}\nvar FilterStage = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterStage\";\n    this.refreshProps = /* @__PURE__ */ new Set([\"excludeChildrenWhenTreeDataFiltering\"]);\n    this.step = \"filter\";\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n  }\n  execute(params) {\n    const { changedPath } = params;\n    this.filter(changedPath);\n  }\n  filter(changedPath) {\n    const filterActive = !!this.filterManager?.isChildFilterPresent();\n    this.filterNodes(filterActive, changedPath);\n  }\n  filterNodes(filterActive, changedPath) {\n    const filterCallback = (rowNode, includeChildNodes) => {\n      if (rowNode.hasChildren()) {\n        if (filterActive && !includeChildNodes) {\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup.filter((childNode) => {\n            const passBecauseChildren = childNode.childrenAfterFilter && childNode.childrenAfterFilter.length > 0;\n            const passBecauseDataPasses = childNode.data && this.filterManager.doesRowPassFilter({ rowNode: childNode });\n            return passBecauseChildren || passBecauseDataPasses;\n          });\n        } else {\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n        }\n      } else {\n        rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n      }\n      updateRowNodeAfterFilter(rowNode);\n    };\n    if (this.doingTreeDataFiltering()) {\n      const treeDataDepthFirstFilter = (rowNode, alreadyFoundInParent) => {\n        if (rowNode.childrenAfterGroup) {\n          for (let i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n            const childNode = rowNode.childrenAfterGroup[i];\n            const foundInParent = alreadyFoundInParent || this.filterManager.doesRowPassFilter({ rowNode: childNode });\n            if (childNode.childrenAfterGroup) {\n              treeDataDepthFirstFilter(rowNode.childrenAfterGroup[i], foundInParent);\n            } else {\n              filterCallback(childNode, foundInParent);\n            }\n          }\n        }\n        filterCallback(rowNode, alreadyFoundInParent);\n      };\n      const treeDataFilterCallback = (rowNode) => treeDataDepthFirstFilter(rowNode, false);\n      changedPath.executeFromRootNode(treeDataFilterCallback);\n    } else {\n      const defaultFilterCallback = (rowNode) => filterCallback(rowNode, false);\n      changedPath.forEachChangedNodeDepthFirst(defaultFilterCallback, true);\n    }\n  }\n  doingTreeDataFiltering() {\n    return this.gos.get(\"treeData\") && !this.gos.get(\"excludeChildrenWhenTreeDataFiltering\");\n  }\n};\n\n// packages/ag-grid-community/src/headerRendering/cells/floatingFilter/headerFilterCellCtrl.ts\nvar HeaderFilterCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor() {\n    super(...arguments);\n    this.iconCreated = false;\n  }\n  setComp(comp, eGui, eButtonShowMainFilter, eFloatingFilterBody, compBeanInput) {\n    this.comp = comp;\n    const compBean = setupCompBean(this, this.beans.context, compBeanInput);\n    this.eButtonShowMainFilter = eButtonShowMainFilter;\n    this.eFloatingFilterBody = eFloatingFilterBody;\n    this.setGui(eGui, compBean);\n    this.setupActive();\n    this.refreshHeaderStyles();\n    this.setupWidth(compBean);\n    this.setupLeft(compBean);\n    this.setupHover(compBean);\n    this.setupFocus(compBean);\n    this.setupAria();\n    this.setupFilterButton();\n    this.setupUserComp();\n    this.setupSyncWithFilter(compBean);\n    this.setupUi();\n    compBean.addManagedElementListeners(this.eButtonShowMainFilter, { click: this.showParentFilter.bind(this) });\n    this.setupFilterChangedListener(compBean);\n    compBean.addManagedListeners(this.column, { colDefChanged: () => this.onColDefChanged(compBean) });\n    compBean.addDestroyFunc(() => {\n      this.eButtonShowMainFilter = null;\n      this.eFloatingFilterBody = null;\n      this.userCompDetails = null;\n      this.clearComponent();\n    });\n  }\n  // empty abstract method\n  resizeHeader() {\n  }\n  moveHeader() {\n  }\n  getHeaderClassParams() {\n    const { column, beans } = this;\n    const colDef = column.colDef;\n    return _addGridCommonParams(beans.gos, {\n      colDef,\n      column,\n      floatingFilter: true\n    });\n  }\n  setupActive() {\n    const colDef = this.column.getColDef();\n    const filterExists = !!colDef.filter;\n    const floatingFilterExists = !!colDef.floatingFilter;\n    this.active = filterExists && floatingFilterExists;\n  }\n  setupUi() {\n    this.comp.setButtonWrapperDisplayed(!this.suppressFilterButton && this.active);\n    this.comp.addOrRemoveBodyCssClass(\"ag-floating-filter-full-body\", this.suppressFilterButton);\n    this.comp.addOrRemoveBodyCssClass(\"ag-floating-filter-body\", !this.suppressFilterButton);\n    if (!this.active || this.iconCreated) {\n      return;\n    }\n    const eMenuIcon = _createIconNoSpan(\"filter\", this.beans, this.column);\n    if (eMenuIcon) {\n      this.iconCreated = true;\n      this.eButtonShowMainFilter.appendChild(eMenuIcon);\n    }\n  }\n  setupFocus(compBean) {\n    compBean.createManagedBean(\n      new ManagedFocusFeature(this.eGui, {\n        shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\n        onTabKeyDown: this.onTabKeyDown.bind(this),\n        handleKeyDown: this.handleKeyDown.bind(this),\n        onFocusIn: this.onFocusIn.bind(this)\n      })\n    );\n  }\n  setupAria() {\n    const localeTextFunc = this.getLocaleTextFunc();\n    _setAriaLabel(this.eButtonShowMainFilter, localeTextFunc(\"ariaFilterMenuOpen\", \"Open Filter Menu\"));\n  }\n  onTabKeyDown(e) {\n    const { beans } = this;\n    const activeEl = _getActiveDomElement(beans);\n    const wrapperHasFocus = activeEl === this.eGui;\n    if (wrapperHasFocus) {\n      return;\n    }\n    const nextFocusableEl = _findNextFocusableElement(beans, this.eGui, null, e.shiftKey);\n    if (nextFocusableEl) {\n      beans.headerNavigation?.scrollToColumn(this.column);\n      e.preventDefault();\n      nextFocusableEl.focus();\n      return;\n    }\n    const nextFocusableColumn = this.findNextColumnWithFloatingFilter(e.shiftKey);\n    if (!nextFocusableColumn) {\n      return;\n    }\n    if (beans.focusSvc.focusHeaderPosition({\n      headerPosition: {\n        headerRowIndex: this.rowCtrl.rowIndex,\n        column: nextFocusableColumn\n      },\n      event: e\n    })) {\n      e.preventDefault();\n    }\n  }\n  findNextColumnWithFloatingFilter(backwards) {\n    const presentedColsService = this.beans.visibleCols;\n    let nextCol = this.column;\n    do {\n      nextCol = backwards ? presentedColsService.getColBefore(nextCol) : presentedColsService.getColAfter(nextCol);\n      if (!nextCol) {\n        break;\n      }\n    } while (!nextCol.getColDef().filter || !nextCol.getColDef().floatingFilter);\n    return nextCol;\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    switch (e.key) {\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n        if (!wrapperHasFocus) {\n          e.preventDefault();\n        }\n      case KeyCode.LEFT:\n      case KeyCode.RIGHT:\n        if (wrapperHasFocus) {\n          return;\n        }\n        e.stopPropagation();\n      case KeyCode.ENTER:\n        if (wrapperHasFocus) {\n          if (_focusInto(this.eGui)) {\n            e.preventDefault();\n          }\n        }\n        break;\n      case KeyCode.ESCAPE:\n        if (!wrapperHasFocus) {\n          this.eGui.focus();\n        }\n    }\n  }\n  onFocusIn(e) {\n    const isRelatedWithin = this.eGui.contains(e.relatedTarget);\n    if (isRelatedWithin) {\n      return;\n    }\n    const notFromHeaderWrapper = !!e.relatedTarget && !e.relatedTarget.classList.contains(\"ag-floating-filter\");\n    const fromWithinHeader = !!e.relatedTarget && _isElementChildOfClass(e.relatedTarget, \"ag-floating-filter\");\n    if (notFromHeaderWrapper && fromWithinHeader && e.target === this.eGui) {\n      const lastFocusEvent = this.lastFocusEvent;\n      const fromTab = !!(lastFocusEvent && lastFocusEvent.key === KeyCode.TAB);\n      if (lastFocusEvent && fromTab) {\n        const shouldFocusLast = lastFocusEvent.shiftKey;\n        _focusInto(this.eGui, shouldFocusLast);\n      }\n    }\n    this.focusThis();\n  }\n  setupHover(compBean) {\n    this.beans.colHover?.addHeaderFilterColumnHoverListener(compBean, this.comp, this.column, this.eGui);\n  }\n  setupLeft(compBean) {\n    const setLeftFeature = new SetLeftFeature(this.column, this.eGui, this.beans);\n    compBean.createManagedBean(setLeftFeature);\n  }\n  setupFilterButton() {\n    this.suppressFilterButton = !this.beans.menuSvc?.isFloatingFilterButtonEnabled(this.column);\n    this.highlightFilterButtonWhenActive = !_isLegacyMenuEnabled(this.gos);\n  }\n  setupUserComp() {\n    if (!this.active) {\n      return;\n    }\n    const compDetails = this.beans.filterManager?.getFloatingFilterCompDetails(\n      this.column,\n      () => this.showParentFilter()\n    );\n    if (compDetails) {\n      this.setCompDetails(compDetails);\n    }\n  }\n  setCompDetails(compDetails) {\n    this.userCompDetails = compDetails;\n    this.comp.setCompDetails(compDetails);\n  }\n  showParentFilter() {\n    const eventSource = this.suppressFilterButton ? this.eFloatingFilterBody : this.eButtonShowMainFilter;\n    this.beans.menuSvc?.showFilterMenu({\n      column: this.column,\n      buttonElement: eventSource,\n      containerType: \"floatingFilter\",\n      positionBy: \"button\"\n    });\n  }\n  setupSyncWithFilter(compBean) {\n    if (!this.active) {\n      return;\n    }\n    const { filterManager } = this.beans;\n    const syncWithFilter = (event) => {\n      if (event?.source === \"filterDestroyed\" && !this.isAlive()) {\n        return;\n      }\n      const compPromise = this.comp.getFloatingFilterComp();\n      if (!compPromise) {\n        return;\n      }\n      compPromise.then((comp) => {\n        if (comp) {\n          const parentModel = filterManager?.getCurrentFloatingFilterParentModel(this.column);\n          const filterChangedEvent = event ? {\n            // event can have additional params like `afterDataChange` which need to be passed through\n            ...event,\n            columns: event.columns ?? [],\n            source: event.source === \"api\" ? \"api\" : \"columnFilter\"\n          } : null;\n          comp.onParentModelChanged(parentModel, filterChangedEvent);\n        }\n      });\n    };\n    [this.destroySyncListener] = compBean.addManagedListeners(this.column, { filterChanged: syncWithFilter });\n    if (filterManager?.isFilterActive(this.column)) {\n      syncWithFilter(null);\n    }\n  }\n  setupWidth(compBean) {\n    const listener = () => {\n      const width = `${this.column.getActualWidth()}px`;\n      this.comp.setWidth(width);\n    };\n    compBean.addManagedListeners(this.column, { widthChanged: listener });\n    listener();\n  }\n  setupFilterChangedListener(compBean) {\n    if (this.active) {\n      [this.destroyFilterChangedListener] = compBean.addManagedListeners(this.column, {\n        filterChanged: this.updateFilterButton.bind(this)\n      });\n      this.updateFilterButton();\n    }\n  }\n  updateFilterButton() {\n    if (!this.suppressFilterButton && this.comp) {\n      const isFilterAllowed = !!this.beans.filterManager?.isFilterAllowed(this.column);\n      this.comp.setButtonWrapperDisplayed(isFilterAllowed);\n      if (this.highlightFilterButtonWhenActive && isFilterAllowed) {\n        this.eButtonShowMainFilter.classList.toggle(\"ag-filter-active\", this.column.isFilterActive());\n      }\n    }\n  }\n  onColDefChanged(compBean) {\n    const wasActive = this.active;\n    this.setupActive();\n    const becomeActive = !wasActive && this.active;\n    if (wasActive && !this.active) {\n      this.destroySyncListener();\n      this.destroyFilterChangedListener();\n    }\n    const newCompDetails = this.active ? this.beans.filterManager?.getFloatingFilterCompDetails(this.column, () => this.showParentFilter()) : null;\n    const compPromise = this.comp.getFloatingFilterComp();\n    if (!compPromise || !newCompDetails) {\n      this.updateCompDetails(compBean, newCompDetails, becomeActive);\n    } else {\n      compPromise.then((compInstance) => {\n        if (!compInstance || this.beans.filterManager?.areFilterCompsDifferent(this.userCompDetails ?? null, newCompDetails)) {\n          this.updateCompDetails(compBean, newCompDetails, becomeActive);\n        } else {\n          this.updateFloatingFilterParams(newCompDetails);\n        }\n      });\n    }\n  }\n  updateCompDetails(compBean, compDetails, becomeActive) {\n    if (!this.isAlive()) {\n      return;\n    }\n    this.setCompDetails(compDetails);\n    this.setupFilterButton();\n    this.setupUi();\n    if (becomeActive) {\n      this.setupSyncWithFilter(compBean);\n      this.setupFilterChangedListener(compBean);\n    }\n  }\n  updateFloatingFilterParams(userCompDetails) {\n    if (!userCompDetails) {\n      return;\n    }\n    const params = userCompDetails.params;\n    this.comp.getFloatingFilterComp()?.then((floatingFilter) => {\n      if (floatingFilter?.refresh && typeof floatingFilter.refresh === \"function\") {\n        floatingFilter.refresh(params);\n      }\n    });\n  }\n  addResizeAndMoveKeyboardListeners() {\n  }\n  destroy() {\n    super.destroy();\n    this.destroySyncListener = null;\n    this.destroyFilterChangedListener = null;\n  }\n};\n\n// packages/ag-grid-community/src/misc/menu/menuApi.ts\nfunction showColumnMenu(beans, colKey) {\n  const column = beans.colModel.getCol(colKey);\n  if (!column) {\n    _error(12, { colKey });\n    return;\n  }\n  beans.menuSvc?.showColumnMenu({\n    column,\n    positionBy: \"auto\"\n  });\n}\nfunction hidePopupMenu(beans) {\n  beans.menuSvc?.hidePopupMenu();\n}\n\n// packages/ag-grid-community/src/misc/menu/sharedMenuModule.ts\nvar SharedMenuModule = {\n  moduleName: \"SharedMenu\",\n  version: VERSION,\n  beans: [MenuService],\n  apiFunctions: {\n    showColumnMenu,\n    hidePopupMenu\n  }\n};\n\n// packages/ag-grid-community/src/widgets/popupService.ts\nvar instanceIdSeq = 0;\nvar WAIT_FOR_POPUP_CONTENT_RESIZE = 200;\nvar PopupService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"popupSvc\";\n    this.popupList = [];\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\n      this.gridCtrl = p.gridCtrl;\n    });\n    this.addManagedEventListeners({ gridStylesChanged: this.handleThemeChange.bind(this) });\n  }\n  getPopupParent() {\n    const ePopupParent = this.gos.get(\"popupParent\");\n    if (ePopupParent) {\n      return ePopupParent;\n    }\n    return this.gridCtrl.getGui();\n  }\n  positionPopupForMenu(params) {\n    const { eventSource, ePopup, column, node, event } = params;\n    const sourceRect = eventSource.getBoundingClientRect();\n    const parentRect = this.getParentRect();\n    this.setAlignedTo(eventSource, ePopup);\n    let minWidthSet = false;\n    const updatePosition = () => {\n      const y = this.keepXYWithinBounds(ePopup, sourceRect.top - parentRect.top, 0 /* vertical */);\n      const minWidth = ePopup.clientWidth > 0 ? ePopup.clientWidth : 200;\n      if (!minWidthSet) {\n        ePopup.style.minWidth = `${minWidth}px`;\n        minWidthSet = true;\n      }\n      const widthOfParent = parentRect.right - parentRect.left;\n      const maxX = widthOfParent - minWidth;\n      let x;\n      if (this.gos.get(\"enableRtl\")) {\n        x = xLeftPosition();\n        if (x < 0) {\n          x = xRightPosition();\n          this.setAlignedStyles(ePopup, \"left\");\n        }\n        if (x > maxX) {\n          x = 0;\n          this.setAlignedStyles(ePopup, \"right\");\n        }\n      } else {\n        x = xRightPosition();\n        if (x > maxX) {\n          x = xLeftPosition();\n          this.setAlignedStyles(ePopup, \"right\");\n        }\n        if (x < 0) {\n          x = 0;\n          this.setAlignedStyles(ePopup, \"left\");\n        }\n      }\n      return { x, y };\n      function xRightPosition() {\n        return sourceRect.right - parentRect.left - 2;\n      }\n      function xLeftPosition() {\n        return sourceRect.left - parentRect.left - minWidth;\n      }\n    };\n    this.positionPopup({\n      ePopup,\n      keepWithinBounds: true,\n      updatePosition,\n      postProcessCallback: () => this.callPostProcessPopup(\n        \"subMenu\",\n        ePopup,\n        eventSource,\n        event instanceof MouseEvent ? event : void 0,\n        column,\n        node\n      )\n    });\n  }\n  positionPopupUnderMouseEvent(params) {\n    const { ePopup, nudgeX, nudgeY, skipObserver } = params;\n    this.positionPopup({\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds: true,\n      skipObserver,\n      updatePosition: () => this.calculatePointerAlign(params.mouseEvent),\n      postProcessCallback: () => this.callPostProcessPopup(\n        params.type,\n        params.ePopup,\n        null,\n        params.mouseEvent,\n        params.column,\n        params.rowNode\n      )\n    });\n  }\n  calculatePointerAlign(e) {\n    const parentRect = this.getParentRect();\n    return {\n      x: e.clientX - parentRect.left,\n      y: e.clientY - parentRect.top\n    };\n  }\n  positionPopupByComponent(params) {\n    const {\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds,\n      eventSource,\n      alignSide = \"left\",\n      position = \"over\",\n      column,\n      rowNode,\n      type\n    } = params;\n    const sourceRect = eventSource.getBoundingClientRect();\n    const parentRect = this.getParentRect();\n    this.setAlignedTo(eventSource, ePopup);\n    const updatePosition = () => {\n      let x = sourceRect.left - parentRect.left;\n      if (alignSide === \"right\") {\n        x -= ePopup.offsetWidth - sourceRect.width;\n      }\n      let y;\n      if (position === \"over\") {\n        y = sourceRect.top - parentRect.top;\n        this.setAlignedStyles(ePopup, \"over\");\n      } else {\n        this.setAlignedStyles(ePopup, \"under\");\n        const alignSide2 = this.shouldRenderUnderOrAbove(ePopup, sourceRect, parentRect, params.nudgeY || 0);\n        if (alignSide2 === \"under\") {\n          y = sourceRect.top - parentRect.top + sourceRect.height;\n        } else {\n          y = sourceRect.top - ePopup.offsetHeight - (nudgeY || 0) * 2 - parentRect.top;\n        }\n      }\n      return { x, y };\n    };\n    this.positionPopup({\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds,\n      updatePosition,\n      postProcessCallback: () => this.callPostProcessPopup(type, ePopup, eventSource, null, column, rowNode)\n    });\n  }\n  shouldRenderUnderOrAbove(ePopup, targetCompRect, parentRect, nudgeY) {\n    const spaceAvailableUnder = parentRect.bottom - targetCompRect.bottom;\n    const spaceAvailableAbove = targetCompRect.top - parentRect.top;\n    const spaceRequired = ePopup.offsetHeight + nudgeY;\n    if (spaceAvailableUnder > spaceRequired) {\n      return \"under\";\n    }\n    if (spaceAvailableAbove > spaceRequired || spaceAvailableAbove > spaceAvailableUnder) {\n      return \"above\";\n    }\n    return \"under\";\n  }\n  setAlignedStyles(ePopup, positioned) {\n    const popupIdx = this.getPopupIndex(ePopup);\n    if (popupIdx === -1) {\n      return;\n    }\n    const popup = this.popupList[popupIdx];\n    const { alignedToElement } = popup;\n    if (!alignedToElement) {\n      return;\n    }\n    const positions = [\"right\", \"left\", \"over\", \"above\", \"under\"];\n    positions.forEach((position) => {\n      alignedToElement.classList.remove(`ag-has-popup-positioned-${position}`);\n      ePopup.classList.remove(`ag-popup-positioned-${position}`);\n    });\n    if (!positioned) {\n      return;\n    }\n    alignedToElement.classList.add(`ag-has-popup-positioned-${positioned}`);\n    ePopup.classList.add(`ag-popup-positioned-${positioned}`);\n  }\n  setAlignedTo(eventSource, ePopup) {\n    const popupIdx = this.getPopupIndex(ePopup);\n    if (popupIdx !== -1) {\n      const popup = this.popupList[popupIdx];\n      popup.alignedToElement = eventSource;\n    }\n  }\n  callPostProcessPopup(type, ePopup, eventSource, mouseEvent, column, rowNode) {\n    const callback = this.gos.getCallback(\"postProcessPopup\");\n    if (callback) {\n      const params = {\n        column,\n        rowNode,\n        ePopup,\n        type,\n        eventSource,\n        mouseEvent\n      };\n      callback(params);\n    }\n  }\n  positionPopup(params) {\n    const { ePopup, keepWithinBounds, nudgeX, nudgeY, skipObserver, updatePosition } = params;\n    const lastSize = { width: 0, height: 0 };\n    const updatePopupPosition = (fromResizeObserver = false) => {\n      let { x, y } = updatePosition();\n      if (fromResizeObserver && ePopup.clientWidth === lastSize.width && ePopup.clientHeight === lastSize.height) {\n        return;\n      }\n      lastSize.width = ePopup.clientWidth;\n      lastSize.height = ePopup.clientHeight;\n      if (nudgeX) {\n        x += nudgeX;\n      }\n      if (nudgeY) {\n        y += nudgeY;\n      }\n      if (keepWithinBounds) {\n        x = this.keepXYWithinBounds(ePopup, x, 1 /* horizontal */);\n        y = this.keepXYWithinBounds(ePopup, y, 0 /* vertical */);\n      }\n      ePopup.style.left = `${x}px`;\n      ePopup.style.top = `${y}px`;\n      if (params.postProcessCallback) {\n        params.postProcessCallback();\n      }\n    };\n    updatePopupPosition();\n    if (!skipObserver) {\n      const resizeObserverDestroyFunc = _observeResize(this.beans, ePopup, () => updatePopupPosition(true));\n      setTimeout(() => resizeObserverDestroyFunc(), WAIT_FOR_POPUP_CONTENT_RESIZE);\n    }\n  }\n  getActivePopups() {\n    return this.popupList.map((popup) => popup.element);\n  }\n  getParentRect() {\n    const eDocument = _getDocument(this.beans);\n    let popupParent = this.getPopupParent();\n    if (popupParent === eDocument.body) {\n      popupParent = eDocument.documentElement;\n    } else if (getComputedStyle(popupParent).position === \"static\") {\n      popupParent = popupParent.offsetParent;\n    }\n    return _getElementRectWithOffset(popupParent);\n  }\n  keepXYWithinBounds(ePopup, position, direction) {\n    const isVertical = direction === 0 /* vertical */;\n    const sizeProperty = isVertical ? \"clientHeight\" : \"clientWidth\";\n    const anchorProperty = isVertical ? \"top\" : \"left\";\n    const offsetProperty = isVertical ? \"height\" : \"width\";\n    const scrollPositionProperty = isVertical ? \"scrollTop\" : \"scrollLeft\";\n    const eDocument = _getDocument(this.beans);\n    const docElement = eDocument.documentElement;\n    const popupParent = this.getPopupParent();\n    const popupRect = ePopup.getBoundingClientRect();\n    const parentRect = popupParent.getBoundingClientRect();\n    const documentRect = eDocument.documentElement.getBoundingClientRect();\n    const isBody = popupParent === eDocument.body;\n    const offsetSize = Math.ceil(popupRect[offsetProperty]);\n    const getSize2 = isVertical ? _getAbsoluteHeight : _getAbsoluteWidth;\n    let sizeOfParent = isBody ? getSize2(docElement) + docElement[scrollPositionProperty] : popupParent[sizeProperty];\n    if (isBody) {\n      sizeOfParent -= Math.abs(documentRect[anchorProperty] - parentRect[anchorProperty]);\n    }\n    const max = sizeOfParent - offsetSize;\n    return Math.min(Math.max(position, 0), Math.abs(max));\n  }\n  addPopup(params) {\n    const eDocument = _getDocument(this.beans);\n    const { eChild, ariaLabel, alwaysOnTop, positionCallback, anchorToElement } = params;\n    if (!eDocument) {\n      _warn(122);\n      return { hideFunc: () => {\n      } };\n    }\n    const pos = this.getPopupIndex(eChild);\n    if (pos !== -1) {\n      const popup = this.popupList[pos];\n      return { hideFunc: popup.hideFunc };\n    }\n    this.initialisePopupPosition(eChild);\n    const wrapperEl = this.createPopupWrapper(eChild, ariaLabel, !!alwaysOnTop);\n    const removeListeners = this.addEventListenersToPopup({ ...params, wrapperEl });\n    if (positionCallback) {\n      positionCallback();\n    }\n    this.addPopupToPopupList(eChild, wrapperEl, removeListeners, anchorToElement);\n    return {\n      hideFunc: removeListeners\n    };\n  }\n  initialisePopupPosition(element) {\n    const ePopupParent = this.getPopupParent();\n    const ePopupParentRect = ePopupParent.getBoundingClientRect();\n    if (!_exists(element.style.top)) {\n      element.style.top = `${ePopupParentRect.top * -1}px`;\n    }\n    if (!_exists(element.style.left)) {\n      element.style.left = `${ePopupParentRect.left * -1}px`;\n    }\n  }\n  createPopupWrapper(element, ariaLabel, alwaysOnTop) {\n    const ePopupParent = this.getPopupParent();\n    const eWrapper = document.createElement(\"div\");\n    const { environment, gos } = this.beans;\n    environment.applyThemeClasses(eWrapper);\n    eWrapper.classList.add(\"ag-popup\");\n    element.classList.add(gos.get(\"enableRtl\") ? \"ag-rtl\" : \"ag-ltr\", \"ag-popup-child\");\n    if (!element.hasAttribute(\"role\")) {\n      _setAriaRole(element, \"dialog\");\n    }\n    _setAriaLabel(element, ariaLabel);\n    eWrapper.appendChild(element);\n    ePopupParent.appendChild(eWrapper);\n    if (alwaysOnTop) {\n      this.setAlwaysOnTop(element, true);\n    } else {\n      this.bringPopupToFront(element);\n    }\n    return eWrapper;\n  }\n  handleThemeChange(e) {\n    if (e.themeChanged) {\n      const environment = this.beans.environment;\n      for (const popup of this.popupList) {\n        environment.applyThemeClasses(popup.wrapper);\n      }\n    }\n  }\n  addEventListenersToPopup(params) {\n    const beans = this.beans;\n    const eDocument = _getDocument(beans);\n    const ePopupParent = this.getPopupParent();\n    const { wrapperEl, eChild: popupEl, closedCallback, afterGuiAttached, closeOnEsc, modal } = params;\n    let popupHidden = false;\n    const hidePopupOnKeyboardEvent = (event) => {\n      if (!wrapperEl.contains(_getActiveDomElement(beans))) {\n        return;\n      }\n      const key = event.key;\n      if (key === KeyCode.ESCAPE && !_isStopPropagationForAgGrid(event)) {\n        removeListeners({ keyboardEvent: event });\n      }\n    };\n    const hidePopupOnMouseEvent = (event) => removeListeners({ mouseEvent: event });\n    const hidePopupOnTouchEvent = (event) => removeListeners({ touchEvent: event });\n    const removeListeners = (popupParams = {}) => {\n      const { mouseEvent, touchEvent, keyboardEvent, forceHide } = popupParams;\n      if (!forceHide && // we don't hide popup if the event was on the child, or any\n      // children of this child\n      (this.isEventFromCurrentPopup({ mouseEvent, touchEvent }, popupEl) || // this method should only be called once. the client can have different\n      // paths, each one wanting to close, so this method may be called multiple times.\n      popupHidden)) {\n        return;\n      }\n      popupHidden = true;\n      ePopupParent.removeChild(wrapperEl);\n      eDocument.removeEventListener(\"keydown\", hidePopupOnKeyboardEvent);\n      eDocument.removeEventListener(\"mousedown\", hidePopupOnMouseEvent);\n      eDocument.removeEventListener(\"touchstart\", hidePopupOnTouchEvent);\n      eDocument.removeEventListener(\"contextmenu\", hidePopupOnMouseEvent);\n      this.eventSvc.removeEventListener(\"dragStarted\", hidePopupOnMouseEvent);\n      if (closedCallback) {\n        closedCallback(mouseEvent || touchEvent || keyboardEvent);\n      }\n      this.removePopupFromPopupList(popupEl);\n    };\n    if (afterGuiAttached) {\n      afterGuiAttached({ hidePopup: removeListeners });\n    }\n    window.setTimeout(() => {\n      if (closeOnEsc) {\n        eDocument.addEventListener(\"keydown\", hidePopupOnKeyboardEvent);\n      }\n      if (modal) {\n        eDocument.addEventListener(\"mousedown\", hidePopupOnMouseEvent);\n        this.eventSvc.addEventListener(\"dragStarted\", hidePopupOnMouseEvent);\n        eDocument.addEventListener(\"touchstart\", hidePopupOnTouchEvent);\n        eDocument.addEventListener(\"contextmenu\", hidePopupOnMouseEvent);\n      }\n    }, 0);\n    return removeListeners;\n  }\n  addPopupToPopupList(element, wrapperEl, removeListeners, anchorToElement) {\n    this.popupList.push({\n      element,\n      wrapper: wrapperEl,\n      hideFunc: removeListeners,\n      instanceId: instanceIdSeq++,\n      isAnchored: !!anchorToElement\n    });\n    if (anchorToElement) {\n      this.setPopupPositionRelatedToElement(element, anchorToElement);\n    }\n  }\n  getPopupIndex(el) {\n    return this.popupList.findIndex((p) => p.element === el);\n  }\n  setPopupPositionRelatedToElement(popupEl, relativeElement) {\n    const popupIndex = this.getPopupIndex(popupEl);\n    if (popupIndex === -1) {\n      return;\n    }\n    const popup = this.popupList[popupIndex];\n    if (popup.stopAnchoringPromise) {\n      popup.stopAnchoringPromise.then((destroyFunc) => destroyFunc && destroyFunc());\n    }\n    popup.stopAnchoringPromise = void 0;\n    popup.isAnchored = false;\n    if (!relativeElement) {\n      return;\n    }\n    const destroyPositionTracker = this.keepPopupPositionedRelativeTo({\n      element: relativeElement,\n      ePopup: popupEl,\n      hidePopup: popup.hideFunc\n    });\n    popup.stopAnchoringPromise = destroyPositionTracker;\n    popup.isAnchored = true;\n    return destroyPositionTracker;\n  }\n  removePopupFromPopupList(element) {\n    this.setAlignedStyles(element, null);\n    this.setPopupPositionRelatedToElement(element, null);\n    this.popupList = this.popupList.filter((p) => p.element !== element);\n  }\n  keepPopupPositionedRelativeTo(params) {\n    const eParent = this.getPopupParent();\n    const parentRect = eParent.getBoundingClientRect();\n    const { element, ePopup } = params;\n    const sourceRect = element.getBoundingClientRect();\n    const extractFromPixelValue = (pxSize) => parseInt(pxSize.substring(0, pxSize.length - 1), 10);\n    const createPosition = (prop, direction) => {\n      const initialDiff = parentRect[prop] - sourceRect[prop];\n      const initial = extractFromPixelValue(ePopup.style[prop]);\n      return {\n        initialDiff,\n        lastDiff: initialDiff,\n        initial,\n        last: initial,\n        direction\n      };\n    };\n    const topPosition = createPosition(\"top\", 0 /* vertical */);\n    const leftPosition = createPosition(\"left\", 1 /* horizontal */);\n    const fwOverrides = this.beans.frameworkOverrides;\n    return new AgPromise((resolve) => {\n      fwOverrides.wrapIncoming(() => {\n        fwOverrides.setInterval(() => {\n          const pRect = eParent.getBoundingClientRect();\n          const sRect = element.getBoundingClientRect();\n          const elementNotInDom = sRect.top == 0 && sRect.left == 0 && sRect.height == 0 && sRect.width == 0;\n          if (elementNotInDom) {\n            params.hidePopup();\n            return;\n          }\n          const calculateNewPosition = (position, prop) => {\n            const current = extractFromPixelValue(ePopup.style[prop]);\n            if (position.last !== current) {\n              position.initial = current;\n              position.last = current;\n            }\n            const currentDiff = pRect[prop] - sRect[prop];\n            if (currentDiff != position.lastDiff) {\n              const newValue = this.keepXYWithinBounds(\n                ePopup,\n                position.initial + position.initialDiff - currentDiff,\n                position.direction\n              );\n              ePopup.style[prop] = `${newValue}px`;\n              position.last = newValue;\n            }\n            position.lastDiff = currentDiff;\n          };\n          calculateNewPosition(topPosition, \"top\");\n          calculateNewPosition(leftPosition, \"left\");\n        }, 200).then((intervalId) => {\n          const result = () => {\n            if (intervalId != null) {\n              window.clearInterval(intervalId);\n            }\n          };\n          resolve(result);\n        });\n      }, \"popupPositioning\");\n    });\n  }\n  hasAnchoredPopup() {\n    return this.popupList.some((popup) => popup.isAnchored);\n  }\n  isEventFromCurrentPopup(params, target) {\n    const { mouseEvent, touchEvent } = params;\n    const event = mouseEvent ? mouseEvent : touchEvent;\n    if (!event) {\n      return false;\n    }\n    const indexOfThisChild = this.getPopupIndex(target);\n    if (indexOfThisChild === -1) {\n      return false;\n    }\n    for (let i = indexOfThisChild; i < this.popupList.length; i++) {\n      const popup = this.popupList[i];\n      if (_isElementInEventPath(popup.element, event)) {\n        return true;\n      }\n    }\n    return this.isElementWithinCustomPopup(event.target);\n  }\n  isElementWithinCustomPopup(el) {\n    const eDocument = _getDocument(this.beans);\n    while (el && el !== eDocument.body) {\n      if (el.classList.contains(\"ag-custom-component-popup\") || el.parentElement === null) {\n        return true;\n      }\n      el = el.parentElement;\n    }\n    return false;\n  }\n  getWrapper(ePopup) {\n    while (!ePopup.classList.contains(\"ag-popup\") && ePopup.parentElement) {\n      ePopup = ePopup.parentElement;\n    }\n    return ePopup.classList.contains(\"ag-popup\") ? ePopup : null;\n  }\n  setAlwaysOnTop(ePopup, alwaysOnTop) {\n    const eWrapper = this.getWrapper(ePopup);\n    if (!eWrapper) {\n      return;\n    }\n    eWrapper.classList.toggle(\"ag-always-on-top\", !!alwaysOnTop);\n    if (alwaysOnTop) {\n      this.bringPopupToFront(eWrapper);\n    }\n  }\n  /** @return true if moved */\n  bringPopupToFront(ePopup) {\n    const parent = this.getPopupParent();\n    const popupList = Array.prototype.slice.call(parent.querySelectorAll(\".ag-popup\"));\n    const popupLen = popupList.length;\n    const eWrapper = this.getWrapper(ePopup);\n    if (!eWrapper || popupLen <= 1 || !parent.contains(ePopup)) {\n      return;\n    }\n    const standardPopupList = [];\n    const alwaysOnTopList = [];\n    for (const popup of popupList) {\n      if (popup === eWrapper) {\n        continue;\n      }\n      if (popup.classList.contains(\"ag-always-on-top\")) {\n        alwaysOnTopList.push(popup);\n      } else {\n        standardPopupList.push(popup);\n      }\n    }\n    const innerElsScrollMap = [];\n    const onTopLength = alwaysOnTopList.length;\n    const isPopupAlwaysOnTop = eWrapper.classList.contains(\"ag-always-on-top\");\n    const shouldBeLast = isPopupAlwaysOnTop || !onTopLength;\n    const targetList = shouldBeLast ? [...standardPopupList, ...alwaysOnTopList, eWrapper] : [...standardPopupList, eWrapper, ...alwaysOnTopList];\n    for (let i = 0; i <= popupLen; i++) {\n      const currentPopup = targetList[i];\n      if (popupList[i] === targetList[i] || currentPopup === eWrapper) {\n        continue;\n      }\n      const innerEls = currentPopup.querySelectorAll(\"div\");\n      innerEls.forEach((el) => {\n        if (el.scrollTop !== 0) {\n          innerElsScrollMap.push([el, el.scrollTop]);\n        }\n      });\n      if (i === 0) {\n        parent.insertAdjacentElement(\"afterbegin\", currentPopup);\n      } else {\n        targetList[i - 1].insertAdjacentElement(\"afterend\", currentPopup);\n      }\n    }\n    while (innerElsScrollMap.length) {\n      const currentEl = innerElsScrollMap.pop();\n      currentEl[0].scrollTop = currentEl[1];\n    }\n  }\n};\n\n// packages/ag-grid-community/src/widgets/popupModule.ts\nvar PopupModule = {\n  moduleName: \"Popup\",\n  version: VERSION,\n  beans: [PopupService]\n};\n\n// packages/ag-grid-community/src/filter/column-filters.css-GENERATED.ts\nvar columnFiltersCSS = (\n  /*css*/\n  `.ag-set-filter{--ag-indentation-level:0}.ag-set-filter-item{align-items:center;display:flex;height:100%}:where(.ag-ltr) .ag-set-filter-item{padding-left:calc(var(--ag-widget-container-horizontal-padding) + var(--ag-indentation-level)*var(--ag-set-filter-indent-size))}:where(.ag-rtl) .ag-set-filter-item{padding-right:calc(var(--ag-widget-container-horizontal-padding) + var(--ag-indentation-level)*var(--ag-set-filter-indent-size))}.ag-set-filter-item-checkbox{display:flex;height:100%;width:100%}.ag-set-filter-group-icons{display:block;>*{cursor:pointer}}:where(.ag-ltr) .ag-set-filter-group-icons{margin-right:var(--ag-widget-container-horizontal-padding)}:where(.ag-rtl) .ag-set-filter-group-icons{margin-left:var(--ag-widget-container-horizontal-padding)}.ag-filter-body-wrapper{display:flex;flex-direction:column}:where(.ag-menu:not(.ag-tabs) .ag-filter) .ag-filter-body-wrapper,:where(.ag-menu:not(.ag-tabs) .ag-filter)>:not(.ag-filter-wrapper){min-width:180px}.ag-filter-filter{flex:1 1 0px}.ag-filter-condition{display:flex;justify-content:center}.ag-floating-filter-body{display:flex;flex:1 1 auto;height:100%;position:relative}.ag-floating-filter-full-body{align-items:center;display:flex;flex:1 1 auto;height:100%;overflow:hidden;width:100%}:where(.ag-floating-filter-full-body)>div{flex:1 1 auto}.ag-floating-filter-input{align-items:center;display:flex;width:100%;>*{flex:1 1 auto}:where(.ag-input-field-input[type=date]){width:1px}}.ag-floating-filter-button{display:flex;flex:none}.ag-set-floating-filter-input [disabled]{pointer-events:none}.ag-floating-filter-button-button{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;height:var(--ag-icon-size);width:var(--ag-icon-size)}.ag-filter-loading{align-items:unset;background-color:var(--ag-chrome-background-color);height:100%;padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding);position:absolute;width:100%;z-index:1;:where(.ag-menu) &{background-color:var(--ag-menu-background-color)}}.ag-filter-separator{border-top:1px solid var(--menu-separator-color)}:where(.ag-filter-select) .ag-picker-field-wrapper{width:0}.ag-filter-condition-operator{height:17px}:where(.ag-ltr) .ag-filter-condition-operator-or{margin-left:calc(var(--ag-spacing)*2)}:where(.ag-rtl) .ag-filter-condition-operator-or{margin-right:calc(var(--ag-spacing)*2)}.ag-set-filter-select-all{padding-top:var(--ag-widget-container-vertical-padding)}.ag-filter-no-matches,.ag-set-filter-list{height:calc(var(--ag-list-item-height)*6)}.ag-filter-no-matches{padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding)}.ag-set-filter-tree-list{height:calc(var(--ag-list-item-height)*10)}.ag-set-filter-filter{margin-left:var(--ag-widget-container-horizontal-padding);margin-right:var(--ag-widget-container-horizontal-padding);margin-top:var(--ag-widget-container-vertical-padding)}.ag-filter-to{margin-top:var(--ag-widget-vertical-spacing)}.ag-mini-filter{margin:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding)}:where(.ag-ltr) .ag-set-filter-add-group-indent{margin-left:calc(var(--ag-icon-size) + var(--ag-widget-container-horizontal-padding))}:where(.ag-rtl) .ag-set-filter-add-group-indent{margin-right:calc(var(--ag-icon-size) + var(--ag-widget-container-horizontal-padding))}:where(.ag-filter-menu) .ag-set-filter-list{min-width:200px}.ag-filter-virtual-list-item:focus-visible{box-shadow:inset var(--ag-focus-shadow)}.ag-filter-apply-panel{display:flex;justify-content:flex-end;overflow:hidden;padding:var(--ag-widget-vertical-spacing) var(--ag-widget-container-horizontal-padding) var(--ag-widget-container-vertical-padding)}.ag-filter-apply-panel-button{line-height:1.5}:where(.ag-ltr) .ag-filter-apply-panel-button{margin-left:calc(var(--ag-spacing)*2)}:where(.ag-rtl) .ag-filter-apply-panel-button{margin-right:calc(var(--ag-spacing)*2)}.ag-simple-filter-body-wrapper{display:flex;flex-direction:column;min-height:calc(var(--ag-list-item-height) + var(--ag-widget-container-vertical-padding) + var(--ag-widget-vertical-spacing));overflow-y:auto;padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding);padding-bottom:calc(var(--ag-widget-container-vertical-padding) - var(--ag-widget-vertical-spacing));&>*{margin-bottom:var(--ag-widget-vertical-spacing)}:where(.ag-resizer-wrapper){margin:0}}.ag-multi-filter-menu-item{margin:var(--ag-spacing) 0}.ag-multi-filter-group-title-bar{background-color:transparent;color:var(--ag-header-text-color);font-weight:500;padding:calc(var(--ag-spacing)*1.5) var(--ag-spacing)}.ag-group-filter-field-select-wrapper{display:flex;flex-direction:column;gap:var(--ag-widget-vertical-spacing);padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding)}`\n);\n\n// packages/ag-grid-community/src/filter/columnFilterApi.ts\nfunction isColumnFilterPresent(beans) {\n  const filterManager = beans.filterManager;\n  return !!filterManager?.isColumnFilterPresent() || !!filterManager?.isAggregateFilterPresent();\n}\nfunction getColumnFilterInstance(beans, key) {\n  return beans.filterManager?.getColumnFilterInstance(key) ?? Promise.resolve(void 0);\n}\nfunction destroyFilter(beans, key) {\n  const column = beans.colModel.getColDefCol(key);\n  if (column) {\n    return beans.filterManager?.destroyFilter(column, \"api\");\n  }\n}\nfunction setFilterModel(beans, model) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.filterManager?.setFilterModel(model));\n}\nfunction getFilterModel(beans) {\n  return beans.filterManager?.getFilterModel() ?? {};\n}\nfunction getColumnFilterModel(beans, column) {\n  return beans.filterManager?.getColumnFilterModel(column) ?? null;\n}\nfunction setColumnFilterModel(beans, column, model) {\n  return beans.filterManager?.setColumnFilterModel(column, model) ?? Promise.resolve();\n}\nfunction showColumnFilter(beans, colKey) {\n  const column = beans.colModel.getCol(colKey);\n  if (!column) {\n    _error(12, { colKey });\n    return;\n  }\n  beans.menuSvc?.showFilterMenu({\n    column,\n    containerType: \"columnFilter\",\n    positionBy: \"auto\"\n  });\n}\n\n// packages/ag-grid-community/src/filter/columnFilterService.ts\nvar MONTH_LOCALE_TEXT = {\n  january: \"January\",\n  february: \"February\",\n  march: \"March\",\n  april: \"April\",\n  may: \"May\",\n  june: \"June\",\n  july: \"July\",\n  august: \"August\",\n  september: \"September\",\n  october: \"October\",\n  november: \"November\",\n  december: \"December\"\n};\nvar MONTH_KEYS = [\n  \"january\",\n  \"february\",\n  \"march\",\n  \"april\",\n  \"may\",\n  \"june\",\n  \"july\",\n  \"august\",\n  \"september\",\n  \"october\",\n  \"november\",\n  \"december\"\n];\nfunction setFilterNumberComparator(a, b) {\n  if (a == null) {\n    return -1;\n  }\n  if (b == null) {\n    return 1;\n  }\n  return parseFloat(a) - parseFloat(b);\n}\nvar ColumnFilterService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colFilter\";\n    this.allColumnFilters = /* @__PURE__ */ new Map();\n    this.allColumnListeners = /* @__PURE__ */ new Map();\n    this.activeAggregateFilters = [];\n    this.activeColumnFilters = [];\n    // this is true when the grid is processing the filter change. this is used by the cell comps, so that they\n    // don't flash when data changes due to filter changes. there is no need to flash when filter changes as the\n    // user is in control, so doesn't make sense to show flashing changes. for example, go to main demo where\n    // this feature is turned off (hack code to always return false for isSuppressFlashingCellsBecauseFiltering(), put in)\n    // 100,000 rows and group by country. then do some filtering. all the cells flash, which is silly.\n    this.processingFilterChange = false;\n    // when we're waiting for cell data types to be inferred, we need to defer filter model updates\n    this.filterModelUpdateQueue = [];\n    this.columnFilterModelUpdateQueue = [];\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.onColumnsChanged.bind(this),\n      beforeRefreshModel: ({ params }) => {\n        if (params.rowDataUpdated || params.changedProps?.has(\"treeData\")) {\n          this.onNewRowsLoaded(\"rowDataUpdated\");\n        }\n      },\n      dataTypesInferred: this.processFilterModelUpdateQueue.bind(this)\n    });\n    this.initialFilterModel = {\n      ...this.gos.get(\"initialState\")?.filter?.filterModel ?? {}\n    };\n  }\n  setFilterModel(model, source = \"api\") {\n    const { colModel, dataTypeSvc, filterManager } = this.beans;\n    if (dataTypeSvc?.isPendingInference) {\n      this.filterModelUpdateQueue.push({ model, source });\n      return;\n    }\n    const allPromises = [];\n    const previousModel = this.getFilterModel(true);\n    if (model) {\n      const modelKeys = new Set(Object.keys(model));\n      this.allColumnFilters.forEach((filterWrapper, colId) => {\n        const newModel = model[colId];\n        allPromises.push(setModelOnFilterWrapper(filterWrapper.filterPromise, newModel));\n        modelKeys.delete(colId);\n      });\n      modelKeys.forEach((colId) => {\n        const column = colModel.getColDefCol(colId) || colModel.getCol(colId);\n        if (!column) {\n          _warn(62, { colId });\n          return;\n        }\n        if (!column.isFilterAllowed()) {\n          _warn(63, { colId });\n          return;\n        }\n        const filterWrapper = this.getOrCreateFilterWrapper(column);\n        if (!filterWrapper) {\n          _warn(64, { colId });\n          return;\n        }\n        allPromises.push(setModelOnFilterWrapper(filterWrapper.filterPromise, model[colId]));\n      });\n    } else {\n      this.allColumnFilters.forEach((filterWrapper) => {\n        allPromises.push(setModelOnFilterWrapper(filterWrapper.filterPromise, null));\n      });\n    }\n    AgPromise.all(allPromises).then(() => {\n      const currentModel = this.getFilterModel(true);\n      const columns = [];\n      this.allColumnFilters.forEach((filterWrapper, colId) => {\n        const before = previousModel ? previousModel[colId] : null;\n        const after = currentModel ? currentModel[colId] : null;\n        if (!_jsonEquals(before, after)) {\n          columns.push(filterWrapper.column);\n        }\n      });\n      if (columns.length > 0) {\n        filterManager?.onFilterChanged({ columns, source });\n      }\n    });\n  }\n  getFilterModel(excludeInitialState) {\n    const result = {};\n    const {\n      allColumnFilters,\n      initialFilterModel,\n      beans: { colModel }\n    } = this;\n    allColumnFilters.forEach((filterWrapper, key) => {\n      const model = this.getModelFromFilterWrapper(filterWrapper);\n      if (_exists(model)) {\n        result[key] = model;\n      }\n    });\n    if (!excludeInitialState) {\n      for (const colId of Object.keys(initialFilterModel)) {\n        const model = initialFilterModel[colId];\n        if (_exists(model) && !allColumnFilters.has(colId) && colModel.getCol(colId)?.isFilterAllowed()) {\n          result[colId] = model;\n        }\n      }\n    }\n    return result;\n  }\n  getModelFromFilterWrapper(filterWrapper) {\n    const { filter } = filterWrapper;\n    if (filter) {\n      if (typeof filter.getModel !== \"function\") {\n        _warn(66);\n        return null;\n      }\n      return filter.getModel();\n    } else {\n      return this.getModelFromInitialState(filterWrapper.column);\n    }\n  }\n  getModelFromInitialState(column) {\n    return this.initialFilterModel[column.getColId()] ?? null;\n  }\n  isColumnFilterPresent() {\n    return this.activeColumnFilters.length > 0;\n  }\n  isAggregateFilterPresent() {\n    return !!this.activeAggregateFilters.length;\n  }\n  disableColumnFilters() {\n    const { allColumnFilters } = this;\n    if (allColumnFilters.size) {\n      allColumnFilters.forEach(\n        (filterWrapper) => this.disposeFilterWrapper(filterWrapper, \"advancedFilterEnabled\")\n      );\n      return true;\n    }\n    return false;\n  }\n  doAggregateFiltersPass(node, filterToSkip) {\n    return this.doColumnFiltersPass(node, filterToSkip, true);\n  }\n  updateActiveFilters() {\n    const isFilterActive = (filter) => {\n      if (!filter) {\n        return false;\n      }\n      if (!filter.isFilterActive) {\n        _warn(67);\n        return false;\n      }\n      return filter.isFilterActive();\n    };\n    const { colModel, gos } = this.beans;\n    const groupFilterEnabled = !!_getGroupAggFiltering(gos);\n    const isAggFilter = (column) => {\n      const isSecondary = !column.isPrimary();\n      if (isSecondary) {\n        return true;\n      }\n      const isShowingPrimaryColumns = !colModel.isPivotActive();\n      const isValueActive = column.isValueActive();\n      if (!isValueActive || !isShowingPrimaryColumns) {\n        return false;\n      }\n      if (colModel.isPivotMode()) {\n        return true;\n      }\n      return groupFilterEnabled;\n    };\n    const activeAggregateFilters = [];\n    const activeColumnFilters = [];\n    return this.forEachColumnFilter((filter, filterWrapper) => {\n      const filterActive = isFilterActive(filter);\n      if (filterActive) {\n        if (isAggFilter(filterWrapper.column)) {\n          activeAggregateFilters.push(filter);\n        } else {\n          activeColumnFilters.push(filter);\n        }\n      }\n    }).then(() => {\n      this.activeAggregateFilters = activeAggregateFilters;\n      this.activeColumnFilters = activeColumnFilters;\n    });\n  }\n  updateFilterFlagInColumns(source, additionalEventAttributes) {\n    return this.forEachColumnFilter(\n      (filter, filterWrapper) => this.setColFilterActive(filterWrapper.column, filter.isFilterActive(), source, additionalEventAttributes)\n    );\n  }\n  forEachColumnFilter(callback) {\n    const promises = [];\n    this.allColumnFilters.forEach((filterWrapper) => {\n      const filterPromise = filterWrapper.filterPromise;\n      if (filterPromise) {\n        promises.push(filterPromise.then((filter) => callback(filter, filterWrapper)));\n      }\n    });\n    return AgPromise.all(promises);\n  }\n  doColumnFiltersPass(node, filterToSkip, targetAggregates) {\n    const { data, aggData } = node;\n    const targetedFilters = targetAggregates ? this.activeAggregateFilters : this.activeColumnFilters;\n    const targetedData = targetAggregates ? aggData : data;\n    for (let i = 0; i < targetedFilters.length; i++) {\n      const filter = targetedFilters[i];\n      if (filter == null || filter === filterToSkip) {\n        continue;\n      }\n      if (typeof filter.doesFilterPass !== \"function\") {\n        _error(91);\n        continue;\n      }\n      if (!filter.doesFilterPass({ node, data: targetedData })) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // sometimes (especially in React) the filter can call onFilterChanged when we are in the middle\n  // of a render cycle. this would be bad, so we wait for render cycle to complete when this happens.\n  // this happens in react when we change React State in the grid (eg setting RowCtrl's in RowContainer)\n  // which results in React State getting applied in the main application, triggering a useEffect() to\n  // be kicked off adn then the application calling the grid's API. in AG-6554, the custom filter was\n  // getting it's useEffect() triggered in this way.\n  callOnFilterChangedOutsideRenderCycle(params) {\n    const { rowRenderer, filterManager } = this.beans;\n    const action = () => {\n      if (this.isAlive()) {\n        filterManager?.onFilterChanged(params);\n      }\n    };\n    if (rowRenderer.isRefreshInProgress()) {\n      setTimeout(action, 0);\n    } else {\n      action();\n    }\n  }\n  updateBeforeFilterChanged(params = {}) {\n    const { filterInstance, additionalEventAttributes } = params;\n    this.updateDependentFilters();\n    return this.updateActiveFilters().then(\n      () => this.updateFilterFlagInColumns(\"filterChanged\", additionalEventAttributes).then(() => {\n        this.allColumnFilters.forEach((filterWrapper) => {\n          if (!filterWrapper.filterPromise) {\n            return;\n          }\n          filterWrapper.filterPromise.then((filter) => {\n            if (filter && filter !== filterInstance && filter.onAnyFilterChanged) {\n              filter.onAnyFilterChanged();\n            }\n          });\n        });\n        this.processingFilterChange = true;\n      })\n    );\n  }\n  updateAfterFilterChanged() {\n    this.processingFilterChange = false;\n  }\n  isSuppressFlashingCellsBecauseFiltering() {\n    const allowShowChangeAfterFilter = this.gos.get(\"allowShowChangeAfterFilter\") ?? false;\n    return !allowShowChangeAfterFilter && this.processingFilterChange;\n  }\n  onNewRowsLoaded(source) {\n    this.forEachColumnFilter((filter) => {\n      filter.onNewRowsLoaded?.();\n    }).then(() => this.updateFilterFlagInColumns(source, { afterDataChange: true })).then(() => this.updateActiveFilters());\n  }\n  createGetValue(filterColumn) {\n    const { filterValueSvc, colModel } = this.beans;\n    return (rowNode, column) => {\n      const columnToUse = column ? colModel.getCol(column) : filterColumn;\n      return columnToUse ? filterValueSvc.getValue(columnToUse, rowNode) : void 0;\n    };\n  }\n  isFilterActive(column) {\n    const { filter } = this.cachedFilter(column) ?? {};\n    if (filter) {\n      return filter.isFilterActive();\n    }\n    return this.getModelFromInitialState(column) != null;\n  }\n  getOrCreateFilterWrapper(column) {\n    if (!column.isFilterAllowed()) {\n      return null;\n    }\n    let filterWrapper = this.cachedFilter(column);\n    if (!filterWrapper) {\n      filterWrapper = this.createFilterWrapper(column);\n      this.setColumnFilterWrapper(column, filterWrapper);\n    }\n    return filterWrapper;\n  }\n  cachedFilter(column) {\n    return this.allColumnFilters.get(column.getColId());\n  }\n  getDefaultFilter(column) {\n    let defaultFilter;\n    const { gos, dataTypeSvc } = this.beans;\n    if (_isSetFilterByDefault(gos)) {\n      defaultFilter = \"agSetColumnFilter\";\n    } else {\n      const cellDataType = dataTypeSvc?.getBaseDataType(column);\n      if (cellDataType === \"number\") {\n        defaultFilter = \"agNumberColumnFilter\";\n      } else if (cellDataType === \"date\" || cellDataType === \"dateString\") {\n        defaultFilter = \"agDateColumnFilter\";\n      } else {\n        defaultFilter = \"agTextColumnFilter\";\n      }\n    }\n    return defaultFilter;\n  }\n  getDefaultFloatingFilter(column) {\n    let defaultFloatingFilterType;\n    const { gos, dataTypeSvc } = this.beans;\n    if (_isSetFilterByDefault(gos)) {\n      defaultFloatingFilterType = \"agSetColumnFloatingFilter\";\n    } else {\n      const cellDataType = dataTypeSvc?.getBaseDataType(column);\n      if (cellDataType === \"number\") {\n        defaultFloatingFilterType = \"agNumberColumnFloatingFilter\";\n      } else if (cellDataType === \"date\" || cellDataType === \"dateString\") {\n        defaultFloatingFilterType = \"agDateColumnFloatingFilter\";\n      } else {\n        defaultFloatingFilterType = \"agTextColumnFloatingFilter\";\n      }\n    }\n    return defaultFloatingFilterType;\n  }\n  createFilterInstance(column, filterWrapper) {\n    const defaultFilter = this.getDefaultFilter(column);\n    const colDef = column.getColDef();\n    let filterInstance;\n    const params = {\n      ...this.createFilterParams(column, colDef),\n      filterModifiedCallback: () => this.filterModifiedCallbackFactory(filterInstance, column)(),\n      filterChangedCallback: (additionalEventAttributes) => this.filterChangedCallbackFactory(filterInstance, column)(additionalEventAttributes),\n      doesRowPassOtherFilter: (node) => this.beans.filterManager?.doesRowPassOtherFilters(filterInstance, node) ?? true\n    };\n    const compDetails = _getFilterDetails(this.beans.userCompFactory, colDef, params, defaultFilter);\n    if (!compDetails) {\n      return { filterPromise: null, compDetails: null };\n    }\n    return {\n      filterPromise: () => {\n        const filterPromise = compDetails.newAgStackInstance();\n        filterPromise.then((r) => {\n          filterInstance = r;\n          if (filterWrapper) {\n            filterWrapper.filter = r ?? void 0;\n          }\n        });\n        return filterPromise;\n      },\n      compDetails\n    };\n  }\n  createFilterParams(column, colDef) {\n    const params = _addGridCommonParams(this.gos, {\n      column,\n      colDef,\n      rowModel: this.beans.rowModel,\n      // @deprecated v33.1\n      filterChangedCallback: () => {\n      },\n      filterModifiedCallback: () => {\n      },\n      getValue: this.createGetValue(column),\n      doesRowPassOtherFilter: () => true\n    });\n    return params;\n  }\n  createFilterWrapper(column) {\n    const filterWrapper = {\n      column,\n      filterPromise: null,\n      compDetails: null\n    };\n    const { filterPromise, compDetails } = this.createFilterInstance(column, filterWrapper);\n    filterWrapper.filterPromise = filterPromise?.() ?? null;\n    filterWrapper.compDetails = compDetails;\n    return filterWrapper;\n  }\n  onColumnsChanged() {\n    const columns = [];\n    const { colModel, filterManager } = this.beans;\n    this.allColumnFilters.forEach((wrapper, colId) => {\n      let currentColumn;\n      if (wrapper.column.isPrimary()) {\n        currentColumn = colModel.getColDefCol(colId);\n      } else {\n        currentColumn = colModel.getCol(colId);\n      }\n      if (currentColumn && currentColumn === wrapper.column) {\n        return;\n      }\n      columns.push(wrapper.column);\n      this.disposeFilterWrapper(wrapper, \"columnChanged\");\n      this.disposeColumnListener(colId);\n    });\n    const allFiltersAreGroupFilters = columns.every(isGroupFilter);\n    if (columns.length > 0 && !allFiltersAreGroupFilters) {\n      filterManager?.onFilterChanged({ columns, source: \"api\" });\n    } else {\n      this.updateDependentFilters();\n    }\n  }\n  updateDependentFilters() {\n    this.beans.autoColSvc?.getColumns()?.forEach((groupColumn) => {\n      if (isGroupFilter(groupColumn)) {\n        this.getOrCreateFilterWrapper(groupColumn);\n      }\n    });\n  }\n  // for group filters, can change dynamically whether they are allowed or not\n  isFilterAllowed(column) {\n    const isFilterAllowed = column.isFilterAllowed();\n    if (!isFilterAllowed) {\n      return false;\n    }\n    const { filter } = this.allColumnFilters.get(column.getColId()) ?? {};\n    if (filter) {\n      return typeof filter?.isFilterAllowed === \"function\" ? filter.isFilterAllowed() : true;\n    }\n    return true;\n  }\n  getFloatingFilterCompDetails(column, showParentFilter) {\n    const parentFilterInstance = (callback) => {\n      const filterComponent = this.getOrCreateFilterWrapper(column)?.filterPromise;\n      if (filterComponent == null) {\n        return;\n      }\n      filterComponent.then((instance) => {\n        callback(_unwrapUserComp(instance));\n      });\n    };\n    const colDef = column.getColDef();\n    const filterParams = {\n      ...this.createFilterParams(column, colDef),\n      filterChangedCallback: () => parentFilterInstance(\n        (filterInstance) => this.filterChangedCallbackFactory(filterInstance, column)()\n      )\n    };\n    const { userCompFactory, frameworkOverrides } = this.beans;\n    const finalFilterParams = _mergeFilterParamsWithApplicationProvidedParams(\n      userCompFactory,\n      colDef,\n      filterParams\n    );\n    let defaultFloatingFilterType = _getDefaultFloatingFilterType(\n      frameworkOverrides,\n      colDef,\n      () => this.getDefaultFloatingFilter(column)\n    );\n    if (defaultFloatingFilterType == null) {\n      defaultFloatingFilterType = \"agReadOnlyFloatingFilter\";\n    }\n    const params = _addGridCommonParams(this.gos, {\n      column,\n      filterParams: finalFilterParams,\n      currentParentModel: () => this.getCurrentFloatingFilterParentModel(column),\n      parentFilterInstance,\n      showParentFilter\n    });\n    return _getFloatingFilterCompDetails(userCompFactory, colDef, params, defaultFloatingFilterType);\n  }\n  getCurrentFloatingFilterParentModel(column) {\n    return this.getModelFromFilterWrapper(this.cachedFilter(column) ?? { column });\n  }\n  // destroys the filter, so it no longer takes part\n  destroyFilter(column, source = \"api\") {\n    const colId = column.getColId();\n    const filterWrapper = this.allColumnFilters.get(colId);\n    this.disposeColumnListener(colId);\n    delete this.initialFilterModel[colId];\n    if (filterWrapper) {\n      this.disposeFilterWrapper(filterWrapper, source).then((wasActive) => {\n        if (wasActive && this.isAlive()) {\n          this.beans.filterManager?.onFilterChanged({\n            columns: [column],\n            source: \"api\"\n          });\n        }\n      });\n    }\n  }\n  disposeColumnListener(colId) {\n    const columnListener = this.allColumnListeners.get(colId);\n    if (columnListener) {\n      this.allColumnListeners.delete(colId);\n      columnListener();\n    }\n  }\n  disposeFilterWrapper(filterWrapper, source) {\n    return filterWrapper.filterPromise?.then((filter) => {\n      const isActive = !!filter?.isFilterActive();\n      this.destroyBean(filter);\n      this.setColFilterActive(filterWrapper.column, false, \"filterDestroyed\");\n      this.allColumnFilters.delete(filterWrapper.column.getColId());\n      this.eventSvc.dispatchEvent({\n        type: \"filterDestroyed\",\n        source,\n        column: filterWrapper.column\n      });\n      return isActive;\n    }) ?? AgPromise.resolve(false);\n  }\n  filterModifiedCallbackFactory(filter, column) {\n    return () => {\n      this.eventSvc.dispatchEvent({\n        type: \"filterModified\",\n        column,\n        filterInstance: filter\n      });\n    };\n  }\n  filterChangedCallbackFactory(filter, column) {\n    return (additionalEventAttributes) => {\n      const source = additionalEventAttributes?.source ?? \"columnFilter\";\n      const params = {\n        filter,\n        additionalEventAttributes,\n        columns: [column],\n        source\n      };\n      this.callOnFilterChangedOutsideRenderCycle(params);\n    };\n  }\n  checkDestroyFilter(colId) {\n    const filterWrapper = this.allColumnFilters.get(colId);\n    if (!filterWrapper) {\n      return;\n    }\n    const column = filterWrapper.column;\n    const { compDetails } = column.isFilterAllowed() ? this.createFilterInstance(column) : { compDetails: null };\n    if (this.areFilterCompsDifferent(filterWrapper.compDetails, compDetails)) {\n      this.destroyFilter(column, \"paramsUpdated\");\n      return;\n    }\n    const newFilterParams = column.getColDef().filterParams;\n    if (!filterWrapper.filterPromise) {\n      this.destroyFilter(column, \"paramsUpdated\");\n      return;\n    }\n    filterWrapper.filterPromise.then((filter) => {\n      const shouldRefreshFilter = filter?.refresh ? filter.refresh({\n        ...this.createFilterParams(column, column.getColDef()),\n        filterModifiedCallback: this.filterModifiedCallbackFactory(filter, column),\n        filterChangedCallback: this.filterChangedCallbackFactory(filter, column),\n        doesRowPassOtherFilter: (node) => this.beans.filterManager?.doesRowPassOtherFilters(filter, node) ?? true,\n        ...newFilterParams\n      }) : true;\n      if (shouldRefreshFilter === false) {\n        this.destroyFilter(column, \"paramsUpdated\");\n      }\n    });\n  }\n  setColumnFilterWrapper(column, filterWrapper) {\n    const colId = column.getColId();\n    this.allColumnFilters.set(colId, filterWrapper);\n    this.allColumnListeners.set(\n      colId,\n      this.addManagedListeners(column, { colDefChanged: () => this.checkDestroyFilter(colId) })[0]\n    );\n  }\n  areFilterCompsDifferent(oldCompDetails, newCompDetails) {\n    if (!newCompDetails || !oldCompDetails) {\n      return true;\n    }\n    const { componentClass: oldComponentClass } = oldCompDetails;\n    const { componentClass: newComponentClass } = newCompDetails;\n    const isSameComponentClass = oldComponentClass === newComponentClass || // react hooks returns new wrappers, so check nested render method\n    oldComponentClass?.render && newComponentClass?.render && oldComponentClass.render === newComponentClass.render;\n    return !isSameComponentClass;\n  }\n  hasFloatingFilters() {\n    const gridColumns = this.beans.colModel.getCols();\n    return gridColumns.some((col) => col.getColDef().floatingFilter);\n  }\n  getColumnFilterInstance(key) {\n    return new Promise((resolve) => {\n      this.getFilterInstanceImpl(key).then((filter) => {\n        resolve(_unwrapUserComp(filter));\n      });\n    });\n  }\n  getFilterInstanceImpl(key) {\n    const column = this.beans.colModel.getColDefCol(key);\n    if (!column) {\n      return AgPromise.resolve(void 0);\n    }\n    const filterPromise = this.getOrCreateFilterWrapper(column)?.filterPromise;\n    return filterPromise ?? AgPromise.resolve(null);\n  }\n  processFilterModelUpdateQueue() {\n    this.filterModelUpdateQueue.forEach(({ model, source }) => this.setFilterModel(model, source));\n    this.filterModelUpdateQueue = [];\n    this.columnFilterModelUpdateQueue.forEach(({ key, model, resolve }) => {\n      this.setColumnFilterModel(key, model).then(() => resolve());\n    });\n    this.columnFilterModelUpdateQueue = [];\n  }\n  getColumnFilterModel(key) {\n    const filterWrapper = this.getFilterWrapper(key);\n    return filterWrapper ? this.getModelFromFilterWrapper(filterWrapper) : null;\n  }\n  setColumnFilterModel(key, model) {\n    const { colModel, dataTypeSvc } = this.beans;\n    if (dataTypeSvc?.isPendingInference) {\n      let resolve = () => {\n      };\n      const promise = new Promise((res) => {\n        resolve = res;\n      });\n      this.columnFilterModelUpdateQueue.push({ key, model, resolve });\n      return promise;\n    }\n    const column = colModel.getColDefCol(key);\n    const filterWrapper = column ? this.getOrCreateFilterWrapper(column) : null;\n    const convertPromise = (promise) => {\n      return new Promise((resolve) => {\n        promise.then((result) => resolve(result));\n      });\n    };\n    return filterWrapper ? convertPromise(setModelOnFilterWrapper(filterWrapper.filterPromise, model)) : Promise.resolve();\n  }\n  getFilterWrapper(key) {\n    const column = this.beans.colModel.getColDefCol(key);\n    return column ? this.cachedFilter(column) ?? null : null;\n  }\n  setColDefPropertiesForDataType(colDef, dataTypeDefinition, formatValue) {\n    const usingSetFilter = _isSetFilterByDefault(this.gos);\n    const translate = this.getLocaleTextFunc();\n    const mergeFilterParams = (params) => {\n      const { filterParams } = colDef;\n      colDef.filterParams = typeof filterParams === \"object\" ? {\n        ...filterParams,\n        ...params\n      } : params;\n    };\n    switch (dataTypeDefinition.baseDataType) {\n      case \"number\": {\n        if (usingSetFilter) {\n          mergeFilterParams({\n            comparator: setFilterNumberComparator\n          });\n        }\n        break;\n      }\n      case \"boolean\": {\n        if (usingSetFilter) {\n          mergeFilterParams({\n            valueFormatter: (params) => {\n              if (!_exists(params.value)) {\n                return translate(\"blanks\", \"(Blanks)\");\n              }\n              return translate(String(params.value), params.value ? \"True\" : \"False\");\n            }\n          });\n        } else {\n          mergeFilterParams({\n            maxNumConditions: 1,\n            debounceMs: 0,\n            filterOptions: [\n              \"empty\",\n              {\n                displayKey: \"true\",\n                displayName: \"True\",\n                predicate: (_filterValues, cellValue) => cellValue,\n                numberOfInputs: 0\n              },\n              {\n                displayKey: \"false\",\n                displayName: \"False\",\n                predicate: (_filterValues, cellValue) => cellValue === false,\n                numberOfInputs: 0\n              }\n            ]\n          });\n        }\n        break;\n      }\n      case \"date\": {\n        if (usingSetFilter) {\n          mergeFilterParams({\n            valueFormatter: (params) => {\n              const valueFormatted = formatValue(params);\n              return _exists(valueFormatted) ? valueFormatted : translate(\"blanks\", \"(Blanks)\");\n            },\n            treeList: true,\n            treeListFormatter: (pathKey, level) => {\n              if (pathKey === \"NaN\") {\n                return translate(\"invalidDate\", \"Invalid Date\");\n              }\n              if (level === 1 && pathKey != null) {\n                const monthKey = MONTH_KEYS[Number(pathKey) - 1];\n                return translate(monthKey, MONTH_LOCALE_TEXT[monthKey]);\n              }\n              return pathKey ?? translate(\"blanks\", \"(Blanks)\");\n            }\n          });\n        } else {\n          mergeFilterParams({\n            isValidDate\n          });\n        }\n        break;\n      }\n      case \"dateString\": {\n        const convertToDate = dataTypeDefinition.dateParser;\n        if (usingSetFilter) {\n          mergeFilterParams({\n            valueFormatter: (params) => {\n              const valueFormatted = formatValue(params);\n              return _exists(valueFormatted) ? valueFormatted : translate(\"blanks\", \"(Blanks)\");\n            },\n            treeList: true,\n            treeListPathGetter: (value) => {\n              const date = convertToDate(value ?? void 0);\n              return date ? [String(date.getFullYear()), String(date.getMonth() + 1), String(date.getDate())] : null;\n            },\n            treeListFormatter: (pathKey, level) => {\n              if (level === 1 && pathKey != null) {\n                const monthKey = MONTH_KEYS[Number(pathKey) - 1];\n                return translate(monthKey, MONTH_LOCALE_TEXT[monthKey]);\n              }\n              return pathKey ?? translate(\"blanks\", \"(Blanks)\");\n            }\n          });\n        } else {\n          mergeFilterParams({\n            comparator: (filterDate, cellValue) => {\n              const cellAsDate = convertToDate(cellValue);\n              if (cellValue == null || cellAsDate < filterDate) {\n                return -1;\n              }\n              if (cellAsDate > filterDate) {\n                return 1;\n              }\n              return 0;\n            },\n            isValidDate: (value) => typeof value === \"string\" && isValidDate(convertToDate(value))\n          });\n        }\n        break;\n      }\n      case \"object\": {\n        if (usingSetFilter) {\n          mergeFilterParams({\n            valueFormatter: (params) => {\n              const valueFormatted = formatValue(params);\n              return _exists(valueFormatted) ? valueFormatted : translate(\"blanks\", \"(Blanks)\");\n            }\n          });\n        } else {\n          colDef.filterValueGetter = (params) => formatValue({\n            column: params.column,\n            node: params.node,\n            value: this.beans.valueSvc.getValue(params.column, params.node)\n          });\n        }\n        break;\n      }\n    }\n  }\n  // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\n  setColFilterActive(column, active, source, additionalEventAttributes) {\n    if (column.filterActive !== active) {\n      column.filterActive = active;\n      column.dispatchColEvent(\"filterActiveChanged\", source);\n    }\n    column.dispatchColEvent(\"filterChanged\", source, additionalEventAttributes);\n  }\n  destroy() {\n    super.destroy();\n    this.allColumnFilters.forEach((filterWrapper) => this.disposeFilterWrapper(filterWrapper, \"gridDestroyed\"));\n    this.allColumnListeners.clear();\n  }\n};\nfunction setModelOnFilterWrapper(filterPromise, newModel) {\n  if (!filterPromise) {\n    return AgPromise.resolve();\n  }\n  return new AgPromise((resolve) => {\n    filterPromise.then((filter) => {\n      if (typeof filter.setModel !== \"function\") {\n        _warn(65);\n        resolve();\n      }\n      (filter.setModel(newModel) || AgPromise.resolve()).then(() => resolve());\n    });\n  });\n}\nfunction isGroupFilter(column) {\n  return column.getColDef().filter === \"agGroupColumnFilter\";\n}\nfunction isValidDate(value) {\n  return value instanceof Date && !isNaN(value.getTime());\n}\n\n// packages/ag-grid-community/src/filter/filterApi.ts\nfunction isAnyFilterPresent(beans) {\n  return !!beans.filterManager?.isAnyFilterPresent();\n}\nfunction onFilterChanged(beans, source = \"api\") {\n  beans.filterManager?.onFilterChanged({ source });\n}\n\n// packages/ag-grid-community/src/filter/filterManager.ts\nvar FilterManager = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterManager\";\n    // when we're waiting for cell data types to be inferred, we need to defer filter model updates\n    this.advFilterModelUpdateQueue = [];\n  }\n  wireBeans(beans) {\n    this.quickFilter = beans.quickFilter;\n    this.advancedFilter = beans.advancedFilter;\n    this.colFilter = beans.colFilter;\n  }\n  postConstruct() {\n    const refreshFiltersForAggregations = this.refreshFiltersForAggregations.bind(this);\n    const updateAdvFilterColumns = this.updateAdvFilterColumns.bind(this);\n    this.addManagedEventListeners({\n      columnValueChanged: refreshFiltersForAggregations,\n      columnPivotChanged: refreshFiltersForAggregations,\n      columnPivotModeChanged: refreshFiltersForAggregations,\n      newColumnsLoaded: updateAdvFilterColumns,\n      columnVisible: updateAdvFilterColumns,\n      advancedFilterEnabledChanged: ({ enabled }) => this.onAdvFilterEnabledChanged(enabled),\n      dataTypesInferred: this.processFilterModelUpdateQueue.bind(this)\n    });\n    this.externalFilterPresent = this.isExternalFilterPresentCallback();\n    this.addManagedPropertyListeners([\"isExternalFilterPresent\", \"doesExternalFilterPass\"], () => {\n      this.onFilterChanged({ source: \"api\" });\n    });\n    this.updateAggFiltering();\n    this.addManagedPropertyListener(\"groupAggFiltering\", () => {\n      this.updateAggFiltering();\n      this.onFilterChanged();\n    });\n    if (this.quickFilter) {\n      this.addManagedListeners(this.quickFilter, {\n        quickFilterChanged: () => this.onFilterChanged({ source: \"quickFilter\" })\n      });\n    }\n    const { gos } = this;\n    this.alwaysPassFilter = gos.get(\"alwaysPassFilter\");\n    this.addManagedPropertyListener(\"alwaysPassFilter\", () => {\n      this.alwaysPassFilter = gos.get(\"alwaysPassFilter\");\n      this.onFilterChanged({ source: \"api\" });\n    });\n  }\n  isExternalFilterPresentCallback() {\n    const isFilterPresent = this.gos.getCallback(\"isExternalFilterPresent\");\n    return typeof isFilterPresent === \"function\" && isFilterPresent({});\n  }\n  doesExternalFilterPass(node) {\n    const doesFilterPass = this.gos.get(\"doesExternalFilterPass\");\n    return typeof doesFilterPass === \"function\" && doesFilterPass(node);\n  }\n  setFilterModel(model, source = \"api\") {\n    if (this.isAdvFilterEnabled()) {\n      this.warnAdvFilters();\n      return;\n    }\n    this.colFilter?.setFilterModel(model, source);\n  }\n  getFilterModel() {\n    return this.colFilter?.getFilterModel() ?? {};\n  }\n  isColumnFilterPresent() {\n    return !!this.colFilter?.isColumnFilterPresent();\n  }\n  isAggregateFilterPresent() {\n    return !!this.colFilter?.isAggregateFilterPresent();\n  }\n  isChildFilterPresent() {\n    return this.isColumnFilterPresent() || this.isQuickFilterPresent() || this.externalFilterPresent || this.isAdvFilterPresent();\n  }\n  isAnyFilterPresent() {\n    return this.isChildFilterPresent() || this.isAggregateFilterPresent();\n  }\n  isAdvFilterPresent() {\n    return this.isAdvFilterEnabled() && this.advancedFilter.isFilterPresent();\n  }\n  onAdvFilterEnabledChanged(enabled) {\n    if (enabled) {\n      if (this.colFilter?.disableColumnFilters()) {\n        this.onFilterChanged({ source: \"advancedFilter\" });\n      }\n    } else {\n      if (this.advancedFilter?.isFilterPresent()) {\n        this.advancedFilter.setModel(null);\n        this.onFilterChanged({ source: \"advancedFilter\" });\n      }\n    }\n  }\n  isAdvFilterEnabled() {\n    return !!this.advancedFilter?.isEnabled();\n  }\n  isAdvFilterHeaderActive() {\n    return this.isAdvFilterEnabled() && this.advancedFilter.isHeaderActive();\n  }\n  refreshFiltersForAggregations() {\n    const isAggFiltering = _getGroupAggFiltering(this.gos);\n    if (isAggFiltering) {\n      this.onFilterChanged();\n    }\n  }\n  onFilterChanged(params = {}) {\n    const { source, additionalEventAttributes, columns = [] } = params;\n    this.externalFilterPresent = this.isExternalFilterPresentCallback();\n    (this.colFilter ? this.colFilter.updateBeforeFilterChanged(params) : AgPromise.resolve()).then(() => {\n      const filterChangedEvent = {\n        source,\n        type: \"filterChanged\",\n        columns\n      };\n      if (additionalEventAttributes) {\n        _mergeDeep(filterChangedEvent, additionalEventAttributes);\n      }\n      this.eventSvc.dispatchEvent(filterChangedEvent);\n      this.colFilter?.updateAfterFilterChanged();\n    });\n  }\n  isSuppressFlashingCellsBecauseFiltering() {\n    return !!this.colFilter?.isSuppressFlashingCellsBecauseFiltering();\n  }\n  isQuickFilterPresent() {\n    return !!this.quickFilter?.isFilterPresent();\n  }\n  updateAggFiltering() {\n    this.aggFiltering = !!_getGroupAggFiltering(this.gos);\n  }\n  isAggregateQuickFilterPresent() {\n    return this.isQuickFilterPresent() && this.shouldApplyQuickFilterAfterAgg();\n  }\n  isNonAggregateQuickFilterPresent() {\n    return this.isQuickFilterPresent() && !this.shouldApplyQuickFilterAfterAgg();\n  }\n  shouldApplyQuickFilterAfterAgg() {\n    return (this.aggFiltering || this.beans.colModel.isPivotMode()) && !this.gos.get(\"applyQuickFilterBeforePivotOrAgg\");\n  }\n  doesRowPassOtherFilters(filterToSkip, node) {\n    return this.doesRowPassFilter({ rowNode: node, filterInstanceToSkip: filterToSkip });\n  }\n  doesRowPassAggregateFilters(params) {\n    const { rowNode } = params;\n    if (this.alwaysPassFilter?.(rowNode)) {\n      return true;\n    }\n    if (this.isAggregateQuickFilterPresent() && !this.quickFilter.doesRowPass(rowNode)) {\n      return false;\n    }\n    if (this.isAggregateFilterPresent() && !this.colFilter.doAggregateFiltersPass(rowNode, params.filterInstanceToSkip)) {\n      return false;\n    }\n    return true;\n  }\n  doesRowPassFilter(params) {\n    const { rowNode } = params;\n    if (this.alwaysPassFilter?.(rowNode)) {\n      return true;\n    }\n    if (this.isNonAggregateQuickFilterPresent() && !this.quickFilter.doesRowPass(rowNode)) {\n      return false;\n    }\n    if (this.externalFilterPresent && !this.doesExternalFilterPass(rowNode)) {\n      return false;\n    }\n    if (this.isColumnFilterPresent() && !this.colFilter.doColumnFiltersPass(rowNode, params.filterInstanceToSkip)) {\n      return false;\n    }\n    if (this.isAdvFilterPresent() && !this.advancedFilter.doesFilterPass(rowNode)) {\n      return false;\n    }\n    return true;\n  }\n  isFilterActive(column) {\n    return !!this.colFilter?.isFilterActive(column);\n  }\n  getOrCreateFilterWrapper(column) {\n    return this.colFilter?.getOrCreateFilterWrapper(column) ?? null;\n  }\n  getDefaultFloatingFilter(column) {\n    return this.colFilter.getDefaultFloatingFilter(column);\n  }\n  createFilterParams(column, colDef) {\n    return this.colFilter.createFilterParams(column, colDef);\n  }\n  // for group filters, can change dynamically whether they are allowed or not\n  isFilterAllowed(column) {\n    if (this.isAdvFilterEnabled()) {\n      return false;\n    }\n    return !!this.colFilter?.isFilterAllowed(column);\n  }\n  getFloatingFilterCompDetails(column, showParentFilter) {\n    return this.colFilter?.getFloatingFilterCompDetails(column, showParentFilter);\n  }\n  getCurrentFloatingFilterParentModel(column) {\n    return this.colFilter?.getCurrentFloatingFilterParentModel(column);\n  }\n  // destroys the filter, so it no longer takes part\n  destroyFilter(column, source = \"api\") {\n    this.colFilter?.destroyFilter(column, source);\n  }\n  areFilterCompsDifferent(oldCompDetails, newCompDetails) {\n    return !!this.colFilter?.areFilterCompsDifferent(oldCompDetails, newCompDetails);\n  }\n  getAdvFilterModel() {\n    return this.isAdvFilterEnabled() ? this.advancedFilter.getModel() : null;\n  }\n  setAdvFilterModel(expression, source = \"api\") {\n    if (!this.isAdvFilterEnabled()) {\n      return;\n    }\n    if (this.beans.dataTypeSvc?.isPendingInference) {\n      this.advFilterModelUpdateQueue.push(expression);\n      return;\n    }\n    this.advancedFilter.setModel(expression ?? null);\n    this.onFilterChanged({ source });\n  }\n  toggleAdvFilterBuilder(show, source) {\n    if (!this.isAdvFilterEnabled()) {\n      return;\n    }\n    this.advancedFilter.getCtrl().toggleFilterBuilder({ source, force: show });\n  }\n  updateAdvFilterColumns() {\n    if (!this.isAdvFilterEnabled()) {\n      return;\n    }\n    if (this.advancedFilter.updateValidity()) {\n      this.onFilterChanged({ source: \"advancedFilter\" });\n    }\n  }\n  hasFloatingFilters() {\n    if (this.isAdvFilterEnabled()) {\n      return false;\n    }\n    return !!this.colFilter?.hasFloatingFilters();\n  }\n  getColumnFilterInstance(key) {\n    if (this.isAdvFilterEnabled()) {\n      this.warnAdvFilters();\n      return Promise.resolve(void 0);\n    }\n    return this.colFilter?.getColumnFilterInstance(key) ?? Promise.resolve(void 0);\n  }\n  warnAdvFilters() {\n    _warn(68);\n  }\n  setupAdvFilterHeaderComp(eCompToInsertBefore) {\n    this.advancedFilter?.getCtrl().setupHeaderComp(eCompToInsertBefore);\n  }\n  getHeaderRowCount() {\n    return this.isAdvFilterHeaderActive() ? 1 : 0;\n  }\n  getHeaderHeight() {\n    return this.isAdvFilterHeaderActive() ? this.advancedFilter.getCtrl().getHeaderHeight() : 0;\n  }\n  processFilterModelUpdateQueue() {\n    this.advFilterModelUpdateQueue.forEach((model) => this.setAdvFilterModel(model));\n    this.advFilterModelUpdateQueue = [];\n  }\n  getColumnFilterModel(key) {\n    return this.colFilter?.getColumnFilterModel(key);\n  }\n  setColumnFilterModel(key, model) {\n    if (this.isAdvFilterEnabled()) {\n      this.warnAdvFilters();\n      return Promise.resolve();\n    }\n    return this.colFilter?.setColumnFilterModel(key, model) ?? Promise.resolve();\n  }\n  setColDefPropertiesForDataType(colDef, dataTypeDefinition, formatValue) {\n    this.colFilter?.setColDefPropertiesForDataType(colDef, dataTypeDefinition, formatValue);\n  }\n};\n\n// packages/ag-grid-community/src/filter/filterMenuFactory.ts\nvar FilterMenuFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterMenuFactory\";\n  }\n  wireBeans(beans) {\n    this.popupSvc = beans.popupSvc;\n  }\n  hideActiveMenu() {\n    this.hidePopup?.();\n  }\n  showMenuAfterMouseEvent(column, mouseEvent, containerType, onClosedCallback) {\n    this.showPopup(\n      column,\n      (eMenu) => {\n        this.popupSvc?.positionPopupUnderMouseEvent({\n          column,\n          type: containerType,\n          mouseEvent,\n          ePopup: eMenu\n        });\n      },\n      containerType,\n      mouseEvent.target,\n      _isLegacyMenuEnabled(this.gos),\n      onClosedCallback\n    );\n  }\n  showMenuAfterButtonClick(column, eventSource, containerType, onClosedCallback) {\n    let multiplier = -1;\n    let alignSide = \"left\";\n    const isLegacyMenuEnabled = _isLegacyMenuEnabled(this.gos);\n    if (!isLegacyMenuEnabled && this.gos.get(\"enableRtl\")) {\n      multiplier = 1;\n      alignSide = \"right\";\n    }\n    const nudgeX = isLegacyMenuEnabled ? void 0 : 4 * multiplier;\n    const nudgeY = isLegacyMenuEnabled ? void 0 : 4;\n    this.showPopup(\n      column,\n      (eMenu) => {\n        this.popupSvc?.positionPopupByComponent({\n          type: containerType,\n          eventSource,\n          ePopup: eMenu,\n          nudgeX,\n          nudgeY,\n          alignSide,\n          keepWithinBounds: true,\n          position: \"under\",\n          column\n        });\n      },\n      containerType,\n      eventSource,\n      isLegacyMenuEnabled,\n      onClosedCallback\n    );\n  }\n  showPopup(column, positionCallback, containerType, eventSource, isLegacyMenuEnabled, onClosedCallback) {\n    const comp = column ? this.createBean(new FilterWrapperComp(column, \"COLUMN_MENU\")) : void 0;\n    this.activeMenu = comp;\n    if (!comp?.hasFilter() || !column) {\n      _error(57);\n      return;\n    }\n    const eMenu = document.createElement(\"div\");\n    _setAriaRole(eMenu, \"presentation\");\n    eMenu.classList.add(\"ag-menu\");\n    if (!isLegacyMenuEnabled) {\n      eMenu.classList.add(\"ag-filter-menu\");\n    }\n    [this.tabListener] = this.addManagedElementListeners(eMenu, {\n      keydown: (e) => this.trapFocusWithin(e, eMenu)\n    });\n    eMenu.appendChild(comp?.getGui());\n    let hidePopup;\n    const afterGuiDetached = () => comp?.afterGuiDetached();\n    const anchorToElement = _isColumnMenuAnchoringEnabled(this.gos) ? eventSource ?? this.beans.ctrlsSvc.getGridBodyCtrl().eGridBody : void 0;\n    const closedCallback = (e) => {\n      _setColMenuVisible(column, false, \"contextMenu\");\n      const isKeyboardEvent = e instanceof KeyboardEvent;\n      if (this.tabListener) {\n        this.tabListener = this.tabListener();\n      }\n      if (isKeyboardEvent && eventSource && _isVisible(eventSource)) {\n        const focusableEl = _findTabbableParent(eventSource);\n        focusableEl?.focus({ preventScroll: true });\n      }\n      afterGuiDetached();\n      this.destroyBean(this.activeMenu);\n      this.dispatchVisibleChangedEvent(false, containerType, column);\n      onClosedCallback?.();\n    };\n    const translate = this.getLocaleTextFunc();\n    const ariaLabel = isLegacyMenuEnabled && containerType !== \"columnFilter\" ? translate(\"ariaLabelColumnMenu\", \"Column Menu\") : translate(\"ariaLabelColumnFilter\", \"Column Filter\");\n    const addPopupRes = this.popupSvc?.addPopup({\n      modal: true,\n      eChild: eMenu,\n      closeOnEsc: true,\n      closedCallback,\n      positionCallback: () => positionCallback(eMenu),\n      anchorToElement,\n      ariaLabel\n    });\n    if (addPopupRes) {\n      this.hidePopup = hidePopup = addPopupRes.hideFunc;\n    }\n    comp.afterInit().then(() => {\n      positionCallback(eMenu);\n      comp.afterGuiAttached({ container: containerType, hidePopup });\n    });\n    _setColMenuVisible(column, true, \"contextMenu\");\n    this.dispatchVisibleChangedEvent(true, containerType, column);\n  }\n  trapFocusWithin(e, menu) {\n    if (e.key !== KeyCode.TAB || e.defaultPrevented || _findNextFocusableElement(this.beans, menu, false, e.shiftKey)) {\n      return;\n    }\n    e.preventDefault();\n    _focusInto(menu, e.shiftKey);\n  }\n  dispatchVisibleChangedEvent(visible, containerType, column) {\n    this.eventSvc.dispatchEvent({\n      type: \"columnMenuVisibleChanged\",\n      visible,\n      switchingTab: false,\n      key: containerType,\n      column: column ?? null,\n      columnGroup: null\n    });\n  }\n  isMenuEnabled(column) {\n    return column.isFilterAllowed() && (column.getColDef().menuTabs ?? [\"filterMenuTab\"]).includes(\"filterMenuTab\");\n  }\n  showMenuAfterContextMenuEvent() {\n  }\n  destroy() {\n    this.destroyBean(this.activeMenu);\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/filter/filterValueService.ts\nvar FilterValueService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterValueSvc\";\n  }\n  getValue(column, rowNode) {\n    if (!rowNode) {\n      return;\n    }\n    const colDef = column.getColDef();\n    const { filterValueGetter } = colDef;\n    if (filterValueGetter) {\n      return this.executeFilterValueGetter(filterValueGetter, rowNode.data, column, rowNode, colDef);\n    }\n    return this.beans.valueSvc.getValue(column, rowNode);\n  }\n  executeFilterValueGetter(valueGetter, data, column, node, colDef) {\n    const { expressionSvc, valueSvc } = this.beans;\n    const params = _addGridCommonParams(this.gos, {\n      data,\n      node,\n      column,\n      colDef,\n      getValue: valueSvc.getValueCallback.bind(valueSvc, node)\n    });\n    if (typeof valueGetter === \"function\") {\n      return valueGetter(params);\n    }\n    return expressionSvc?.evaluate(valueGetter, params);\n  }\n};\n\n// packages/ag-grid-community/src/filter/floating/provided/readOnlyFloatingFilter.ts\nvar ReadOnlyFloatingFilter = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-floating-filter-input\" role=\"presentation\">\n                <ag-input-text-field data-ref=\"eFloatingFilterText\"></ag-input-text-field>\n            </div>`,\n      [AgInputTextFieldSelector]\n    );\n    this.eFloatingFilterText = RefPlaceholder;\n  }\n  init(params) {\n    this.params = params;\n    const displayName = this.beans.colNames.getDisplayNameForColumn(params.column, \"header\", true);\n    this.eFloatingFilterText.setDisabled(true).setInputAriaLabel(`${displayName} ${this.getLocaleTextFunc()(\"ariaFilterInput\", \"Filter Input\")}`);\n  }\n  onParentModelChanged(parentModel) {\n    if (parentModel == null) {\n      this.eFloatingFilterText.setValue(\"\");\n      return;\n    }\n    this.params.parentFilterInstance((filterInstance) => {\n      if (filterInstance.getModelAsString) {\n        const modelAsString = filterInstance.getModelAsString(parentModel);\n        this.eFloatingFilterText.setValue(modelAsString);\n      }\n    });\n  }\n  refresh(params) {\n    this.init(params);\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/optionsFactory.ts\nvar OptionsFactory = class {\n  constructor() {\n    this.customFilterOptions = {};\n  }\n  init(params, defaultOptions) {\n    this.filterOptions = params.filterOptions || defaultOptions;\n    this.mapCustomOptions();\n    this.selectDefaultItem(params);\n  }\n  mapCustomOptions() {\n    const { filterOptions } = this;\n    if (!filterOptions) {\n      return;\n    }\n    filterOptions.forEach((filterOption) => {\n      if (typeof filterOption === \"string\") {\n        return;\n      }\n      const requiredProperties = [[\"displayKey\"], [\"displayName\"], [\"predicate\", \"test\"]];\n      const propertyCheck = (keys) => {\n        if (!keys.some((key) => filterOption[key] != null)) {\n          _warn(72, { keys });\n          return false;\n        }\n        return true;\n      };\n      if (!requiredProperties.every(propertyCheck)) {\n        this.filterOptions = filterOptions.filter((v) => v === filterOption) || [];\n        return;\n      }\n      this.customFilterOptions[filterOption.displayKey] = filterOption;\n    });\n  }\n  selectDefaultItem(params) {\n    const { filterOptions } = this;\n    if (params.defaultOption) {\n      this.defaultOption = params.defaultOption;\n    } else if (filterOptions.length >= 1) {\n      const firstFilterOption = filterOptions[0];\n      if (typeof firstFilterOption === \"string\") {\n        this.defaultOption = firstFilterOption;\n      } else if (firstFilterOption.displayKey) {\n        this.defaultOption = firstFilterOption.displayKey;\n      } else {\n        _warn(73);\n      }\n    } else {\n      _warn(74);\n    }\n  }\n  getCustomOption(name) {\n    return this.customFilterOptions[name];\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/simpleFilterUtils.ts\nfunction removeItems(items, startPosition, deleteCount) {\n  return deleteCount == null ? items.splice(startPosition) : items.splice(startPosition, deleteCount);\n}\nfunction isBlank(cellValue) {\n  return cellValue == null || typeof cellValue === \"string\" && cellValue.trim().length === 0;\n}\nfunction getDefaultJoinOperator(defaultJoinOperator) {\n  return defaultJoinOperator === \"AND\" || defaultJoinOperator === \"OR\" ? defaultJoinOperator : \"AND\";\n}\nfunction evaluateCustomFilter(customFilterOption, values, cellValue) {\n  if (customFilterOption == null) {\n    return;\n  }\n  const { predicate } = customFilterOption;\n  if (predicate != null && !values.some((v) => v == null)) {\n    return predicate(values, cellValue);\n  }\n  return;\n}\nfunction validateAndUpdateConditions(conditions, maxNumConditions) {\n  let numConditions = conditions.length;\n  if (numConditions > maxNumConditions) {\n    conditions.splice(maxNumConditions);\n    _warn(78);\n    numConditions = maxNumConditions;\n  }\n  return numConditions;\n}\n\n// packages/ag-grid-community/src/filter/provided/simpleFilter.ts\nvar SimpleFilter = class extends ProvidedFilter {\n  constructor() {\n    super(...arguments);\n    this.eTypes = [];\n    this.eJoinOperatorPanels = [];\n    this.eJoinOperatorsAnd = [];\n    this.eJoinOperatorsOr = [];\n    this.eConditionBodies = [];\n    this.listener = () => this.onUiChanged();\n    this.lastUiCompletePosition = null;\n    this.joinOperatorId = 0;\n  }\n  getNumberOfInputs(type) {\n    const customOpts = this.optionsFactory.getCustomOption(type);\n    if (customOpts) {\n      const { numberOfInputs } = customOpts;\n      return numberOfInputs != null ? numberOfInputs : 1;\n    }\n    const zeroInputTypes = [\"empty\", \"notBlank\", \"blank\"];\n    if (type && zeroInputTypes.indexOf(type) >= 0) {\n      return 0;\n    } else if (type === \"inRange\") {\n      return 2;\n    }\n    return 1;\n  }\n  // floating filter calls this when user applies filter from floating filter\n  onFloatingFilterChanged(type, value) {\n    this.setTypeFromFloatingFilter(type);\n    this.setValueFromFloatingFilter(value);\n    this.onUiChanged(true);\n  }\n  setTypeFromFloatingFilter(type) {\n    this.eTypes.forEach((eType, position) => {\n      const value = position === 0 ? type : this.optionsFactory.defaultOption;\n      eType.setValue(value, true);\n    });\n  }\n  getModelFromUi() {\n    const conditions = this.getUiCompleteConditions();\n    if (conditions.length === 0) {\n      return null;\n    }\n    if (this.maxNumConditions > 1 && conditions.length > 1) {\n      return {\n        filterType: this.filterType,\n        operator: this.getJoinOperator(),\n        conditions\n      };\n    }\n    return conditions[0];\n  }\n  getConditionTypes() {\n    return this.eTypes.map((eType) => eType.getValue());\n  }\n  getConditionType(position) {\n    return this.eTypes[position].getValue();\n  }\n  getJoinOperator() {\n    const { eJoinOperatorsOr, defaultJoinOperator } = this;\n    return eJoinOperatorsOr.length === 0 ? defaultJoinOperator : eJoinOperatorsOr[0].getValue() === true ? \"OR\" : \"AND\";\n  }\n  areModelsEqual(a, b) {\n    if (!a && !b) {\n      return true;\n    }\n    if (!a && b || a && !b) {\n      return false;\n    }\n    const aIsSimple = !a.operator;\n    const bIsSimple = !b.operator;\n    const oneSimpleOneCombined = !aIsSimple && bIsSimple || aIsSimple && !bIsSimple;\n    if (oneSimpleOneCombined) {\n      return false;\n    }\n    let res;\n    if (aIsSimple) {\n      const aSimple = a;\n      const bSimple = b;\n      res = this.areSimpleModelsEqual(aSimple, bSimple);\n    } else {\n      const aCombined = a;\n      const bCombined = b;\n      res = aCombined.operator === bCombined.operator && _areEqual(\n        aCombined.conditions,\n        bCombined.conditions,\n        (aModel, bModel) => this.areSimpleModelsEqual(aModel, bModel)\n      );\n    }\n    return res;\n  }\n  shouldRefresh(newParams) {\n    const model = this.getModel();\n    const conditions = model ? model.conditions ?? [model] : null;\n    const newOptionsList = newParams.filterOptions?.map((option) => typeof option === \"string\" ? option : option.displayKey) ?? this.getDefaultFilterOptions();\n    const allConditionsExistInNewOptionsList = !conditions || conditions.every((condition) => newOptionsList.find((option) => option === condition.type) !== void 0);\n    if (!allConditionsExistInNewOptionsList) {\n      return false;\n    }\n    if (typeof newParams.maxNumConditions === \"number\" && conditions && conditions.length > newParams.maxNumConditions) {\n      return false;\n    }\n    return true;\n  }\n  refresh(newParams) {\n    if (!this.shouldRefresh(newParams)) {\n      return false;\n    }\n    const parentRefreshed = super.refresh(newParams);\n    if (!parentRefreshed) {\n      return false;\n    }\n    this.setParams(newParams);\n    this.removeConditionsAndOperators(0);\n    this.createOption();\n    this.setModel(this.getModel());\n    return true;\n  }\n  setModelIntoUi(model) {\n    const isCombined = model.operator;\n    if (isCombined) {\n      const combinedModel = model;\n      let conditions = combinedModel.conditions;\n      if (conditions == null) {\n        conditions = [];\n        _warn(77);\n      }\n      const numConditions = validateAndUpdateConditions(conditions, this.maxNumConditions);\n      const numPrevConditions = this.getNumConditions();\n      if (numConditions < numPrevConditions) {\n        this.removeConditionsAndOperators(numConditions);\n      } else if (numConditions > numPrevConditions) {\n        for (let i = numPrevConditions; i < numConditions; i++) {\n          this.createJoinOperatorPanel();\n          this.createOption();\n        }\n      }\n      const orChecked = combinedModel.operator === \"OR\";\n      this.eJoinOperatorsAnd.forEach((eJoinOperatorAnd) => eJoinOperatorAnd.setValue(!orChecked, true));\n      this.eJoinOperatorsOr.forEach((eJoinOperatorOr) => eJoinOperatorOr.setValue(orChecked, true));\n      conditions.forEach((condition, position) => {\n        this.eTypes[position].setValue(condition.type, true);\n        this.setConditionIntoUi(condition, position);\n      });\n    } else {\n      const simpleModel = model;\n      if (this.getNumConditions() > 1) {\n        this.removeConditionsAndOperators(1);\n      }\n      this.eTypes[0].setValue(simpleModel.type, true);\n      this.setConditionIntoUi(simpleModel, 0);\n    }\n    this.lastUiCompletePosition = this.getNumConditions() - 1;\n    this.createMissingConditionsAndOperators();\n    this.onUiChanged();\n    return AgPromise.resolve();\n  }\n  doesFilterPass(params) {\n    const model = this.getModel();\n    if (model == null) {\n      return true;\n    }\n    const { operator } = model;\n    const models = [];\n    if (operator) {\n      const combinedModel = model;\n      models.push(...combinedModel.conditions ?? []);\n    } else {\n      models.push(model);\n    }\n    const combineFunction = operator && operator === \"OR\" ? \"some\" : \"every\";\n    return models[combineFunction]((m) => this.individualConditionPasses(params, m));\n  }\n  setParams(params) {\n    super.setParams(params);\n    this.setNumConditions(params);\n    this.defaultJoinOperator = getDefaultJoinOperator(params.defaultJoinOperator);\n    this.filterPlaceholder = params.filterPlaceholder;\n    this.optionsFactory = new OptionsFactory();\n    this.optionsFactory.init(params, this.getDefaultFilterOptions());\n    this.createFilterListOptions();\n    this.createOption();\n    this.createMissingConditionsAndOperators();\n    if (this.isReadOnly()) {\n      this.eFilterBody.setAttribute(\"tabindex\", \"-1\");\n    }\n  }\n  setNumConditions(params) {\n    let maxNumConditions = params.maxNumConditions ?? 2;\n    if (maxNumConditions < 1) {\n      _warn(79);\n      maxNumConditions = 1;\n    }\n    this.maxNumConditions = maxNumConditions;\n    let numAlwaysVisibleConditions = params.numAlwaysVisibleConditions ?? 1;\n    if (numAlwaysVisibleConditions < 1) {\n      _warn(80);\n      numAlwaysVisibleConditions = 1;\n    }\n    if (numAlwaysVisibleConditions > maxNumConditions) {\n      _warn(81);\n      numAlwaysVisibleConditions = maxNumConditions;\n    }\n    this.numAlwaysVisibleConditions = numAlwaysVisibleConditions;\n  }\n  createOption() {\n    const eType = this.createManagedBean(new AgSelect());\n    this.eTypes.push(eType);\n    eType.addCssClass(\"ag-filter-select\");\n    this.eFilterBody.appendChild(eType.getGui());\n    const eConditionBody = this.createValueElement();\n    this.eConditionBodies.push(eConditionBody);\n    this.eFilterBody.appendChild(eConditionBody);\n    this.putOptionsIntoDropdown(eType);\n    this.resetType(eType);\n    const position = this.getNumConditions() - 1;\n    this.forEachPositionInput(position, (element) => this.resetInput(element));\n    this.addChangedListeners(eType, position);\n  }\n  createJoinOperatorPanel() {\n    const eJoinOperatorPanel = document.createElement(\"div\");\n    this.eJoinOperatorPanels.push(eJoinOperatorPanel);\n    eJoinOperatorPanel.classList.add(\"ag-filter-condition\");\n    const eJoinOperatorAnd = this.createJoinOperator(this.eJoinOperatorsAnd, eJoinOperatorPanel, \"and\");\n    const eJoinOperatorOr = this.createJoinOperator(this.eJoinOperatorsOr, eJoinOperatorPanel, \"or\");\n    this.eFilterBody.appendChild(eJoinOperatorPanel);\n    const index = this.eJoinOperatorPanels.length - 1;\n    const uniqueGroupId = this.joinOperatorId++;\n    this.resetJoinOperatorAnd(eJoinOperatorAnd, index, uniqueGroupId);\n    this.resetJoinOperatorOr(eJoinOperatorOr, index, uniqueGroupId);\n    if (!this.isReadOnly()) {\n      eJoinOperatorAnd.onValueChange(this.listener);\n      eJoinOperatorOr.onValueChange(this.listener);\n    }\n  }\n  createJoinOperator(eJoinOperators, eJoinOperatorPanel, andOr) {\n    const eJoinOperator = this.createManagedBean(new AgRadioButton());\n    eJoinOperators.push(eJoinOperator);\n    const baseClass = \"ag-filter-condition-operator\";\n    eJoinOperator.addCssClass(baseClass);\n    eJoinOperator.addCssClass(`${baseClass}-${andOr}`);\n    eJoinOperatorPanel.appendChild(eJoinOperator.getGui());\n    return eJoinOperator;\n  }\n  createFilterListOptions() {\n    this.filterListOptions = this.optionsFactory.filterOptions.map(\n      (option) => typeof option === \"string\" ? this.createBoilerplateListOption(option) : this.createCustomListOption(option)\n    );\n  }\n  putOptionsIntoDropdown(eType) {\n    const { filterListOptions } = this;\n    filterListOptions.forEach((listOption) => {\n      eType.addOption(listOption);\n    });\n    eType.setDisabled(filterListOptions.length <= 1);\n  }\n  createBoilerplateListOption(option) {\n    return { value: option, text: this.translate(option) };\n  }\n  createCustomListOption(option) {\n    const { displayKey } = option;\n    const customOption = this.optionsFactory.getCustomOption(option.displayKey);\n    return {\n      value: displayKey,\n      text: customOption ? this.getLocaleTextFunc()(customOption.displayKey, customOption.displayName) : this.translate(displayKey)\n    };\n  }\n  createBodyTemplate() {\n    return \"\";\n  }\n  getAgComponents() {\n    return [];\n  }\n  getCssIdentifier() {\n    return \"simple-filter\";\n  }\n  updateUiVisibility() {\n    const joinOperator = this.getJoinOperator();\n    this.updateNumConditions();\n    this.updateConditionStatusesAndValues(this.lastUiCompletePosition, joinOperator);\n  }\n  updateNumConditions() {\n    let lastUiCompletePosition = -1;\n    let areAllConditionsUiComplete = true;\n    for (let position = 0; position < this.getNumConditions(); position++) {\n      if (this.isConditionUiComplete(position)) {\n        lastUiCompletePosition = position;\n      } else {\n        areAllConditionsUiComplete = false;\n      }\n    }\n    if (this.shouldAddNewConditionAtEnd(areAllConditionsUiComplete)) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n    } else {\n      const activePosition = this.lastUiCompletePosition ?? this.getNumConditions() - 2;\n      if (lastUiCompletePosition < activePosition) {\n        this.removeConditionsAndOperators(activePosition + 1);\n        const removeStartPosition = lastUiCompletePosition + 1;\n        const numConditionsToRemove = activePosition - removeStartPosition;\n        if (numConditionsToRemove > 0) {\n          this.removeConditionsAndOperators(removeStartPosition, numConditionsToRemove);\n        }\n        this.createMissingConditionsAndOperators();\n      }\n    }\n    this.lastUiCompletePosition = lastUiCompletePosition;\n  }\n  updateConditionStatusesAndValues(lastUiCompletePosition, joinOperator) {\n    this.eTypes.forEach((eType, position) => {\n      const disabled = this.isConditionDisabled(position, lastUiCompletePosition);\n      eType.setDisabled(disabled || this.filterListOptions.length <= 1);\n      if (position === 1) {\n        _setDisabled(this.eJoinOperatorPanels[0], disabled);\n        this.eJoinOperatorsAnd[0].setDisabled(disabled);\n        this.eJoinOperatorsOr[0].setDisabled(disabled);\n      }\n    });\n    this.eConditionBodies.forEach((element, index) => {\n      _setDisplayed(element, this.isConditionBodyVisible(index));\n    });\n    const orChecked = (joinOperator ?? this.getJoinOperator()) === \"OR\";\n    this.eJoinOperatorsAnd.forEach((eJoinOperatorAnd) => {\n      eJoinOperatorAnd.setValue(!orChecked, true);\n    });\n    this.eJoinOperatorsOr.forEach((eJoinOperatorOr) => {\n      eJoinOperatorOr.setValue(orChecked, true);\n    });\n    this.forEachInput((element, index, position, numberOfInputs) => {\n      this.setElementDisplayed(element, index < numberOfInputs);\n      this.setElementDisabled(element, this.isConditionDisabled(position, lastUiCompletePosition));\n    });\n    this.resetPlaceholder();\n  }\n  shouldAddNewConditionAtEnd(areAllConditionsUiComplete) {\n    return areAllConditionsUiComplete && this.getNumConditions() < this.maxNumConditions && !this.isReadOnly();\n  }\n  removeConditionsAndOperators(startPosition, deleteCount) {\n    if (startPosition >= this.getNumConditions()) {\n      return;\n    }\n    const { eTypes, eConditionBodies, eJoinOperatorPanels, eJoinOperatorsAnd, eJoinOperatorsOr } = this;\n    this.removeComponents(eTypes, startPosition, deleteCount);\n    this.removeElements(eConditionBodies, startPosition, deleteCount);\n    this.removeValueElements(startPosition, deleteCount);\n    const joinOperatorIndex = Math.max(startPosition - 1, 0);\n    this.removeElements(eJoinOperatorPanels, joinOperatorIndex, deleteCount);\n    this.removeComponents(eJoinOperatorsAnd, joinOperatorIndex, deleteCount);\n    this.removeComponents(eJoinOperatorsOr, joinOperatorIndex, deleteCount);\n  }\n  removeElements(elements, startPosition, deleteCount) {\n    const removedElements = removeItems(elements, startPosition, deleteCount);\n    removedElements.forEach((element) => _removeFromParent(element));\n  }\n  removeComponents(components, startPosition, deleteCount) {\n    const removedComponents = removeItems(components, startPosition, deleteCount);\n    removedComponents.forEach((comp) => {\n      _removeFromParent(comp.getGui());\n      this.destroyBean(comp);\n    });\n  }\n  afterGuiAttached(params) {\n    super.afterGuiAttached(params);\n    this.resetPlaceholder();\n    if (!params?.suppressFocus) {\n      const { eFilterBody, eTypes } = this;\n      let elementToFocus;\n      if (!this.isReadOnly()) {\n        const firstInput = this.getInputs(0)[0];\n        if (firstInput instanceof AgAbstractInputField && this.isConditionBodyVisible(0)) {\n          elementToFocus = firstInput.getInputElement();\n        } else {\n          elementToFocus = eTypes[0]?.getFocusableElement();\n        }\n      }\n      (elementToFocus ?? eFilterBody).focus({ preventScroll: true });\n    }\n  }\n  afterGuiDetached() {\n    super.afterGuiDetached();\n    const appliedModel = this.getModel();\n    this.resetUiToActiveModel(appliedModel);\n    let lastUiCompletePosition = -1;\n    let updatedLastUiCompletePosition = -1;\n    let conditionsRemoved = false;\n    const joinOperator = this.getJoinOperator();\n    for (let position = this.getNumConditions() - 1; position >= 0; position--) {\n      if (this.isConditionUiComplete(position)) {\n        if (lastUiCompletePosition === -1) {\n          lastUiCompletePosition = position;\n          updatedLastUiCompletePosition = position;\n        }\n      } else {\n        const shouldRemovePositionAtEnd = position >= this.numAlwaysVisibleConditions && !this.isConditionUiComplete(position - 1);\n        const positionBeforeLastUiCompletePosition = position < lastUiCompletePosition;\n        if (shouldRemovePositionAtEnd || positionBeforeLastUiCompletePosition) {\n          this.removeConditionsAndOperators(position, 1);\n          conditionsRemoved = true;\n          if (positionBeforeLastUiCompletePosition) {\n            updatedLastUiCompletePosition--;\n          }\n        }\n      }\n    }\n    let shouldUpdateConditionStatusesAndValues = false;\n    if (this.getNumConditions() < this.numAlwaysVisibleConditions) {\n      this.createMissingConditionsAndOperators();\n      shouldUpdateConditionStatusesAndValues = true;\n    }\n    if (this.shouldAddNewConditionAtEnd(updatedLastUiCompletePosition === this.getNumConditions() - 1)) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n      shouldUpdateConditionStatusesAndValues = true;\n    }\n    if (shouldUpdateConditionStatusesAndValues) {\n      this.updateConditionStatusesAndValues(updatedLastUiCompletePosition, joinOperator);\n    }\n    if (conditionsRemoved) {\n      this.updateJoinOperatorsDisabled();\n    }\n    this.lastUiCompletePosition = updatedLastUiCompletePosition;\n  }\n  getPlaceholderText(defaultPlaceholder, position) {\n    let placeholder = this.translate(defaultPlaceholder);\n    if (typeof this.filterPlaceholder === \"function\") {\n      const filterOptionKey = this.eTypes[position].getValue();\n      const filterOption = this.translate(filterOptionKey);\n      placeholder = this.filterPlaceholder({\n        filterOptionKey,\n        filterOption,\n        placeholder\n      });\n    } else if (typeof this.filterPlaceholder === \"string\") {\n      placeholder = this.filterPlaceholder;\n    }\n    return placeholder;\n  }\n  // allow sub-classes to reset HTML placeholders after UI update.\n  resetPlaceholder() {\n    const globalTranslate = this.getLocaleTextFunc();\n    this.forEachInput((element, index, position, numberOfInputs) => {\n      if (!(element instanceof AgAbstractInputField)) {\n        return;\n      }\n      const placeholder = index === 0 && numberOfInputs > 1 ? \"inRangeStart\" : index === 0 ? \"filterOoo\" : \"inRangeEnd\";\n      const ariaLabel = index === 0 && numberOfInputs > 1 ? globalTranslate(\"ariaFilterFromValue\", \"Filter from value\") : index === 0 ? globalTranslate(\"ariaFilterValue\", \"Filter Value\") : globalTranslate(\"ariaFilterToValue\", \"Filter to Value\");\n      element.setInputPlaceholder(this.getPlaceholderText(placeholder, position));\n      element.setInputAriaLabel(ariaLabel);\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setElementValue(element, value, fromFloatingFilter) {\n    if (element instanceof AgAbstractInputField) {\n      element.setValue(value != null ? String(value) : null, true);\n    }\n  }\n  setElementDisplayed(element, displayed) {\n    if (element instanceof Component) {\n      _setDisplayed(element.getGui(), displayed);\n    }\n  }\n  setElementDisabled(element, disabled) {\n    if (element instanceof Component) {\n      _setDisabled(element.getGui(), disabled);\n    }\n  }\n  attachElementOnChange(element, listener) {\n    if (element instanceof AgAbstractInputField) {\n      element.onValueChange(listener);\n    }\n  }\n  forEachInput(cb) {\n    this.getConditionTypes().forEach((type, position) => {\n      this.forEachPositionTypeInput(position, type, cb);\n    });\n  }\n  forEachPositionInput(position, cb) {\n    const type = this.getConditionType(position);\n    this.forEachPositionTypeInput(position, type, cb);\n  }\n  forEachPositionTypeInput(position, type, cb) {\n    const numberOfInputs = this.getNumberOfInputs(type);\n    const inputs = this.getInputs(position);\n    for (let index = 0; index < inputs.length; index++) {\n      const input = inputs[index];\n      if (input != null) {\n        cb(input, index, position, numberOfInputs);\n      }\n    }\n  }\n  isConditionDisabled(position, lastUiCompletePosition) {\n    if (this.isReadOnly()) {\n      return true;\n    }\n    if (position === 0) {\n      return false;\n    }\n    return position > lastUiCompletePosition + 1;\n  }\n  isConditionBodyVisible(position) {\n    const type = this.getConditionType(position);\n    const numberOfInputs = this.getNumberOfInputs(type);\n    return numberOfInputs > 0;\n  }\n  // returns true if the UI represents a working filter, eg all parts are filled out.\n  // eg if text filter and textfield blank then returns false.\n  isConditionUiComplete(position) {\n    if (position >= this.getNumConditions()) {\n      return false;\n    }\n    const type = this.getConditionType(position);\n    if (type === \"empty\") {\n      return false;\n    }\n    if (this.getValues(position).some((v) => v == null)) {\n      return false;\n    }\n    return true;\n  }\n  getNumConditions() {\n    return this.eTypes.length;\n  }\n  getUiCompleteConditions() {\n    const conditions = [];\n    for (let position = 0; position < this.getNumConditions(); position++) {\n      if (this.isConditionUiComplete(position)) {\n        conditions.push(this.createCondition(position));\n      }\n    }\n    return conditions;\n  }\n  createMissingConditionsAndOperators() {\n    if (this.isReadOnly()) {\n      return;\n    }\n    for (let i = this.getNumConditions(); i < this.numAlwaysVisibleConditions; i++) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n    }\n  }\n  resetUiToDefaults(silent) {\n    this.removeConditionsAndOperators(this.isReadOnly() ? 1 : this.numAlwaysVisibleConditions);\n    this.eTypes.forEach((eType) => this.resetType(eType));\n    this.eJoinOperatorsAnd.forEach(\n      (eJoinOperatorAnd, index) => this.resetJoinOperatorAnd(eJoinOperatorAnd, index, this.joinOperatorId + index)\n    );\n    this.eJoinOperatorsOr.forEach(\n      (eJoinOperatorOr, index) => this.resetJoinOperatorOr(eJoinOperatorOr, index, this.joinOperatorId + index)\n    );\n    this.joinOperatorId++;\n    this.forEachInput((element) => this.resetInput(element));\n    this.resetPlaceholder();\n    this.createMissingConditionsAndOperators();\n    this.lastUiCompletePosition = null;\n    if (!silent) {\n      this.onUiChanged();\n    }\n    return AgPromise.resolve();\n  }\n  resetType(eType) {\n    const translate = this.getLocaleTextFunc();\n    const filteringLabel = translate(\"ariaFilteringOperator\", \"Filtering operator\");\n    eType.setValue(this.optionsFactory.defaultOption, true).setAriaLabel(filteringLabel).setDisabled(this.isReadOnly() || this.filterListOptions.length <= 1);\n  }\n  resetJoinOperatorAnd(eJoinOperatorAnd, index, uniqueGroupId) {\n    this.resetJoinOperator(\n      eJoinOperatorAnd,\n      index,\n      this.defaultJoinOperator === \"AND\",\n      this.translate(\"andCondition\"),\n      uniqueGroupId\n    );\n  }\n  resetJoinOperatorOr(eJoinOperatorOr, index, uniqueGroupId) {\n    this.resetJoinOperator(\n      eJoinOperatorOr,\n      index,\n      this.defaultJoinOperator === \"OR\",\n      this.translate(\"orCondition\"),\n      uniqueGroupId\n    );\n  }\n  resetJoinOperator(eJoinOperator, index, value, label, uniqueGroupId) {\n    this.updateJoinOperatorDisabled(\n      eJoinOperator.setValue(value, true).setName(`ag-simple-filter-and-or-${this.getCompId()}-${uniqueGroupId}`).setLabel(label),\n      index\n    );\n  }\n  updateJoinOperatorsDisabled() {\n    const updater = (eJoinOperator, index) => this.updateJoinOperatorDisabled(eJoinOperator, index);\n    this.eJoinOperatorsAnd.forEach(updater);\n    this.eJoinOperatorsOr.forEach(updater);\n  }\n  updateJoinOperatorDisabled(eJoinOperator, index) {\n    eJoinOperator.setDisabled(this.isReadOnly() || index > 0);\n  }\n  resetInput(element) {\n    this.setElementValue(element, null);\n    this.setElementDisabled(element, this.isReadOnly());\n  }\n  // puts model values into the UI\n  setConditionIntoUi(model, position) {\n    const values = this.mapValuesFromModel(model);\n    this.forEachInput((element, index, elPosition) => {\n      if (elPosition !== position) {\n        return;\n      }\n      this.setElementValue(element, values[index] != null ? values[index] : null);\n    });\n  }\n  // after floating filter changes, this sets the 'value' section. this is implemented by the base class\n  // (as that's where value is controlled), the 'type' part from the floating filter is dealt with in this class.\n  setValueFromFloatingFilter(value) {\n    this.forEachInput((element, index, position) => {\n      this.setElementValue(element, index === 0 && position === 0 ? value : null, true);\n    });\n  }\n  addChangedListeners(eType, position) {\n    if (this.isReadOnly()) {\n      return;\n    }\n    eType.onValueChange(this.listener);\n    this.forEachPositionInput(position, (element) => {\n      this.attachElementOnChange(element, this.listener);\n    });\n  }\n  /** returns true if the row passes the said condition */\n  individualConditionPasses(params, filterModel) {\n    const cellValue = this.getCellValue(params.node);\n    const values = this.mapValuesFromModel(filterModel);\n    const customFilterOption = this.optionsFactory.getCustomOption(filterModel.type);\n    const customFilterResult = evaluateCustomFilter(customFilterOption, values, cellValue);\n    if (customFilterResult != null) {\n      return customFilterResult;\n    }\n    if (cellValue == null) {\n      return this.evaluateNullValue(filterModel.type);\n    }\n    return this.evaluateNonNullValue(values, cellValue, filterModel, params);\n  }\n  hasInvalidInputs() {\n    return false;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/scalarFilter.ts\nvar ScalarFilter = class extends SimpleFilter {\n  setParams(params) {\n    super.setParams(params);\n    this.scalarFilterParams = params;\n  }\n  evaluateNullValue(filterType) {\n    const {\n      includeBlanksInEquals,\n      includeBlanksInNotEqual,\n      includeBlanksInGreaterThan,\n      includeBlanksInLessThan,\n      includeBlanksInRange\n    } = this.scalarFilterParams;\n    switch (filterType) {\n      case \"equals\":\n        if (includeBlanksInEquals) {\n          return true;\n        }\n        break;\n      case \"notEqual\":\n        if (includeBlanksInNotEqual) {\n          return true;\n        }\n        break;\n      case \"greaterThan\":\n      case \"greaterThanOrEqual\":\n        if (includeBlanksInGreaterThan) {\n          return true;\n        }\n        break;\n      case \"lessThan\":\n      case \"lessThanOrEqual\":\n        if (includeBlanksInLessThan) {\n          return true;\n        }\n        break;\n      case \"inRange\":\n        if (includeBlanksInRange) {\n          return true;\n        }\n        break;\n      case \"blank\":\n        return true;\n      case \"notBlank\":\n        return false;\n    }\n    return false;\n  }\n  evaluateNonNullValue(values, cellValue, filterModel) {\n    const type = filterModel.type;\n    if (!this.isValid(cellValue)) {\n      return type === \"notEqual\" || type === \"notBlank\";\n    }\n    const comparator = this.comparator();\n    const compareResult = values[0] != null ? comparator(values[0], cellValue) : 0;\n    switch (type) {\n      case \"equals\":\n        return compareResult === 0;\n      case \"notEqual\":\n        return compareResult !== 0;\n      case \"greaterThan\":\n        return compareResult > 0;\n      case \"greaterThanOrEqual\":\n        return compareResult >= 0;\n      case \"lessThan\":\n        return compareResult < 0;\n      case \"lessThanOrEqual\":\n        return compareResult <= 0;\n      case \"inRange\": {\n        const compareToResult = comparator(values[1], cellValue);\n        return this.scalarFilterParams.inRangeInclusive ? compareResult >= 0 && compareToResult <= 0 : compareResult > 0 && compareToResult < 0;\n      }\n      case \"blank\":\n        return isBlank(cellValue);\n      case \"notBlank\":\n        return !isBlank(cellValue);\n      default:\n        _warn(76, { filterModelType: type });\n        return true;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/date/dateCompWrapper.ts\nvar DateCompWrapper = class {\n  constructor(context, userCompFactory, dateComponentParams, eParent, onReady) {\n    this.alive = true;\n    this.context = context;\n    this.eParent = eParent;\n    const compDetails = _getDateCompDetails(userCompFactory, dateComponentParams);\n    if (!compDetails) {\n      return;\n    }\n    compDetails.newAgStackInstance().then((dateComp) => {\n      if (!this.alive) {\n        context.destroyBean(dateComp);\n        return;\n      }\n      this.dateComp = dateComp;\n      if (!dateComp) {\n        return;\n      }\n      eParent.appendChild(dateComp.getGui());\n      dateComp?.afterGuiAttached?.();\n      const { tempValue, disabled } = this;\n      if (tempValue) {\n        dateComp.setDate(tempValue);\n      }\n      if (disabled != null) {\n        dateComp.setDisabled?.(disabled);\n      }\n      onReady?.(this);\n    });\n  }\n  destroy() {\n    this.alive = false;\n    this.dateComp = this.context.destroyBean(this.dateComp);\n  }\n  getDate() {\n    return this.dateComp ? this.dateComp.getDate() : this.tempValue;\n  }\n  setDate(value) {\n    const dateComp = this.dateComp;\n    if (dateComp) {\n      dateComp.setDate(value);\n    } else {\n      this.tempValue = value;\n    }\n  }\n  setDisabled(disabled) {\n    const dateComp = this.dateComp;\n    if (dateComp) {\n      dateComp.setDisabled?.(disabled);\n    } else {\n      this.disabled = disabled;\n    }\n  }\n  setDisplayed(displayed) {\n    _setDisplayed(this.eParent, displayed);\n  }\n  setInputPlaceholder(placeholder) {\n    this.dateComp?.setInputPlaceholder?.(placeholder);\n  }\n  setInputAriaLabel(label) {\n    this.dateComp?.setInputAriaLabel?.(label);\n  }\n  afterGuiAttached(params) {\n    this.dateComp?.afterGuiAttached?.(params);\n  }\n  updateParams(params) {\n    this.dateComp?.refresh?.(params);\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/date/dateFilterConstants.ts\nvar DEFAULT_DATE_FILTER_OPTIONS = [\n  \"equals\",\n  \"notEqual\",\n  \"lessThan\",\n  \"greaterThan\",\n  \"inRange\",\n  \"blank\",\n  \"notBlank\"\n];\n\n// packages/ag-grid-community/src/filter/provided/simpleFilterModelFormatter.ts\nvar SimpleFilterModelFormatter = class {\n  constructor(getLocaleTextFunc, optionsFactory, valueFormatter) {\n    this.getLocaleTextFunc = getLocaleTextFunc;\n    this.optionsFactory = optionsFactory;\n    this.valueFormatter = valueFormatter;\n  }\n  // used by:\n  // 1) NumberFloatingFilter & TextFloatingFilter: Always, for both when editable and read only.\n  // 2) DateFloatingFilter: Only when read only (as we show text rather than a date picker when read only)\n  getModelAsString(model) {\n    if (!model) {\n      return null;\n    }\n    const isCombined = model.operator != null;\n    const translate = this.getLocaleTextFunc();\n    if (isCombined) {\n      const combinedModel = model;\n      const conditions = combinedModel.conditions ?? [];\n      const customOptions = conditions.map((condition) => this.getModelAsString(condition));\n      const joinOperatorTranslateKey = combinedModel.operator === \"AND\" ? \"andCondition\" : \"orCondition\";\n      return customOptions.join(\n        ` ${translate(joinOperatorTranslateKey, FILTER_LOCALE_TEXT[joinOperatorTranslateKey])} `\n      );\n    } else if (model.type === \"blank\" || model.type === \"notBlank\") {\n      return translate(model.type, model.type);\n    } else {\n      const condition = model;\n      const customOption = this.optionsFactory.getCustomOption(condition.type);\n      const { displayKey, displayName, numberOfInputs } = customOption || {};\n      if (displayKey && displayName && numberOfInputs === 0) {\n        translate(displayKey, displayName);\n        return displayName;\n      }\n      return this.conditionToString(condition, customOption);\n    }\n  }\n  updateParams(params) {\n    this.optionsFactory = params.optionsFactory;\n  }\n  formatValue(value) {\n    const valueFormatter = this.valueFormatter;\n    return valueFormatter ? valueFormatter(value ?? null) ?? \"\" : String(value);\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/date/dateFilterModelFormatter.ts\nvar DateFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  constructor(dateFilterParams, getLocaleTextFunc, optionsFactory) {\n    super(getLocaleTextFunc, optionsFactory);\n    this.dateFilterParams = dateFilterParams;\n  }\n  conditionToString(condition, options) {\n    const { type } = condition;\n    const { numberOfInputs } = options || {};\n    const isRange = type == \"inRange\" || numberOfInputs === 2;\n    const dateFrom = _parseDateTimeFromString(condition.dateFrom);\n    const dateTo = _parseDateTimeFromString(condition.dateTo);\n    const format = this.dateFilterParams.inRangeFloatingFilterDateFormat;\n    if (isRange) {\n      const formattedFrom = dateFrom !== null ? _dateToFormattedString(dateFrom, format) : \"null\";\n      const formattedTo = dateTo !== null ? _dateToFormattedString(dateTo, format) : \"null\";\n      return `${formattedFrom}-${formattedTo}`;\n    }\n    if (dateFrom != null) {\n      return _dateToFormattedString(dateFrom, format);\n    }\n    return `${type}`;\n  }\n  updateParams(params) {\n    super.updateParams(params);\n    this.dateFilterParams = params.dateFilterParams;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/date/dateFilter.ts\nvar DEFAULT_MIN_YEAR = 1e3;\nvar DEFAULT_MAX_YEAR = Infinity;\nvar DateFilter = class extends ScalarFilter {\n  constructor() {\n    super(\"dateFilter\");\n    this.eConditionPanelsFrom = [];\n    this.eConditionPanelsTo = [];\n    this.dateConditionFromComps = [];\n    this.dateConditionToComps = [];\n    this.minValidYear = DEFAULT_MIN_YEAR;\n    this.maxValidYear = DEFAULT_MAX_YEAR;\n    this.minValidDate = null;\n    this.maxValidDate = null;\n    this.filterType = \"date\";\n  }\n  afterGuiAttached(params) {\n    super.afterGuiAttached(params);\n    this.dateConditionFromComps[0].afterGuiAttached(params);\n  }\n  mapValuesFromModel(filterModel) {\n    const { dateFrom, dateTo, type } = filterModel || {};\n    return [\n      dateFrom && _parseDateTimeFromString(dateFrom) || null,\n      dateTo && _parseDateTimeFromString(dateTo) || null\n    ].slice(0, this.getNumberOfInputs(type));\n  }\n  comparator() {\n    return this.dateFilterParams.comparator ?? defaultDateComparator;\n  }\n  isValid(value) {\n    const isValidDate2 = this.dateFilterParams.isValidDate;\n    return !isValidDate2 || isValidDate2(value);\n  }\n  setParams(params) {\n    this.dateFilterParams = params;\n    super.setParams(params);\n    const yearParser = (param, fallback) => {\n      if (params[param] != null) {\n        if (!isNaN(params[param])) {\n          return params[param] == null ? fallback : Number(params[param]);\n        } else {\n          _warn(82, { param });\n        }\n      }\n      return fallback;\n    };\n    this.minValidYear = yearParser(\"minValidYear\", DEFAULT_MIN_YEAR);\n    this.maxValidYear = yearParser(\"maxValidYear\", DEFAULT_MAX_YEAR);\n    if (this.minValidYear > this.maxValidYear) {\n      _warn(83);\n    }\n    this.minValidDate = params.minValidDate ? params.minValidDate instanceof Date ? params.minValidDate : _parseDateTimeFromString(params.minValidDate) : null;\n    this.maxValidDate = params.maxValidDate ? params.maxValidDate instanceof Date ? params.maxValidDate : _parseDateTimeFromString(params.maxValidDate) : null;\n    if (this.minValidDate && this.maxValidDate && this.minValidDate > this.maxValidDate) {\n      _warn(84);\n    }\n    this.filterModelFormatter = new DateFilterModelFormatter(\n      this.dateFilterParams,\n      this.getLocaleTextFunc.bind(this),\n      this.optionsFactory\n    );\n  }\n  createDateCompWrapper(element) {\n    const { userCompFactory, context, gos } = this.beans;\n    const dateCompWrapper = new DateCompWrapper(\n      context,\n      userCompFactory,\n      _addGridCommonParams(gos, {\n        onDateChanged: () => this.onUiChanged(),\n        filterParams: this.dateFilterParams,\n        location: \"filter\"\n      }),\n      element\n    );\n    this.addDestroyFunc(() => dateCompWrapper.destroy());\n    return dateCompWrapper;\n  }\n  setElementValue(element, value) {\n    element.setDate(value);\n  }\n  setElementDisplayed(element, displayed) {\n    element.setDisplayed(displayed);\n  }\n  setElementDisabled(element, disabled) {\n    element.setDisabled(disabled);\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_DATE_FILTER_OPTIONS;\n  }\n  createValueElement() {\n    const eDocument = _getDocument(this.beans);\n    const eCondition = eDocument.createElement(\"div\");\n    eCondition.classList.add(\"ag-filter-body\");\n    this.createFromToElement(eCondition, this.eConditionPanelsFrom, this.dateConditionFromComps, \"from\");\n    this.createFromToElement(eCondition, this.eConditionPanelsTo, this.dateConditionToComps, \"to\");\n    return eCondition;\n  }\n  createFromToElement(eCondition, eConditionPanels, dateConditionComps, fromTo) {\n    const eDocument = _getDocument(this.beans);\n    const eConditionPanel = eDocument.createElement(\"div\");\n    eConditionPanel.classList.add(`ag-filter-${fromTo}`);\n    eConditionPanel.classList.add(`ag-filter-date-${fromTo}`);\n    eConditionPanels.push(eConditionPanel);\n    eCondition.appendChild(eConditionPanel);\n    dateConditionComps.push(this.createDateCompWrapper(eConditionPanel));\n  }\n  removeValueElements(startPosition, deleteCount) {\n    this.removeDateComps(this.dateConditionFromComps, startPosition, deleteCount);\n    this.removeDateComps(this.dateConditionToComps, startPosition, deleteCount);\n    removeItems(this.eConditionPanelsFrom, startPosition, deleteCount);\n    removeItems(this.eConditionPanelsTo, startPosition, deleteCount);\n  }\n  removeDateComps(components, startPosition, deleteCount) {\n    const removedComponents = removeItems(components, startPosition, deleteCount);\n    removedComponents.forEach((comp) => comp.destroy());\n  }\n  isValidDateValue(value) {\n    if (value === null) {\n      return false;\n    }\n    const { minValidDate, maxValidDate, minValidYear, maxValidYear } = this;\n    if (minValidDate) {\n      if (value < minValidDate) {\n        return false;\n      }\n    } else {\n      if (value.getUTCFullYear() < minValidYear) {\n        return false;\n      }\n    }\n    if (maxValidDate) {\n      if (value > maxValidDate) {\n        return false;\n      }\n    } else {\n      if (value.getUTCFullYear() > maxValidYear) {\n        return false;\n      }\n    }\n    return true;\n  }\n  isConditionUiComplete(position) {\n    if (!super.isConditionUiComplete(position)) {\n      return false;\n    }\n    let valid = true;\n    this.forEachInput((element, index, elPosition, numberOfInputs) => {\n      if (elPosition !== position || !valid || index >= numberOfInputs) {\n        return;\n      }\n      valid = valid && this.isValidDateValue(element.getDate());\n    });\n    return valid;\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.dateFrom === bSimple.dateFrom && aSimple.dateTo === bSimple.dateTo && aSimple.type === bSimple.type;\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {};\n    const values = this.getValues(position);\n    if (values.length > 0) {\n      model.dateFrom = _serialiseDate(values[0]);\n    }\n    if (values.length > 1) {\n      model.dateTo = _serialiseDate(values[1]);\n    }\n    return {\n      dateFrom: null,\n      dateTo: null,\n      filterType: this.filterType,\n      type,\n      ...model\n    };\n  }\n  resetPlaceholder() {\n    const globalTranslate = this.getLocaleTextFunc();\n    const placeholder = this.translate(\"dateFormatOoo\");\n    const ariaLabel = globalTranslate(\"ariaFilterValue\", \"Filter Value\");\n    this.forEachInput((element) => {\n      element.setInputPlaceholder(placeholder);\n      element.setInputAriaLabel(ariaLabel);\n    });\n  }\n  getInputs(position) {\n    const { dateConditionFromComps, dateConditionToComps } = this;\n    if (position >= dateConditionFromComps.length) {\n      return [null, null];\n    }\n    return [dateConditionFromComps[position], dateConditionToComps[position]];\n  }\n  getValues(position) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        result.push(element.getDate());\n      }\n    });\n    return result;\n  }\n  translate(key) {\n    if (key === \"lessThan\") {\n      return super.translate(\"before\");\n    }\n    if (key === \"greaterThan\") {\n      return super.translate(\"after\");\n    }\n    return super.translate(key);\n  }\n  getModelAsString(model) {\n    return this.filterModelFormatter.getModelAsString(model) ?? \"\";\n  }\n};\nfunction defaultDateComparator(filterDate, cellValue) {\n  const cellAsDate = cellValue;\n  if (cellAsDate < filterDate) {\n    return -1;\n  }\n  if (cellAsDate > filterDate) {\n    return 1;\n  }\n  return 0;\n}\n\n// packages/ag-grid-community/src/filter/floating/provided/simpleFloatingFilter.ts\nvar SimpleFloatingFilter = class extends Component {\n  constructor() {\n    super(...arguments);\n    this.defaultDebounceMs = 0;\n  }\n  setLastTypeFromModel(model) {\n    if (!model) {\n      this.lastType = this.optionsFactory.defaultOption;\n      return;\n    }\n    const isCombined = model.operator;\n    let condition;\n    if (isCombined) {\n      const combinedModel = model;\n      condition = combinedModel.conditions[0];\n    } else {\n      condition = model;\n    }\n    this.lastType = condition.type;\n  }\n  canWeEditAfterModelFromParentFilter(model) {\n    if (!model) {\n      return this.isTypeEditable(this.lastType);\n    }\n    const isCombined = model.operator;\n    if (isCombined) {\n      return false;\n    }\n    const simpleModel = model;\n    return this.isTypeEditable(simpleModel.type);\n  }\n  init(params) {\n    this.setSimpleParams(params, false);\n  }\n  setSimpleParams(params, update = true) {\n    const optionsFactory = new OptionsFactory();\n    this.optionsFactory = optionsFactory;\n    optionsFactory.init(params.filterParams, this.getDefaultOptions());\n    const defaultOption = optionsFactory.defaultOption;\n    if (!update) {\n      this.lastType = defaultOption;\n    }\n    this.readOnly = !!params.filterParams.readOnly;\n    const editable = this.isTypeEditable(defaultOption);\n    this.setEditable(editable);\n  }\n  refresh(params) {\n    this.setSimpleParams(params);\n  }\n  hasSingleInput(filterType) {\n    const numberOfInputs = this.optionsFactory.getCustomOption(filterType)?.numberOfInputs;\n    return numberOfInputs == null || numberOfInputs == 1;\n  }\n  isTypeEditable(type) {\n    const uneditableTypes = [\"inRange\", \"empty\", \"blank\", \"notBlank\"];\n    return !!type && !this.readOnly && this.hasSingleInput(type) && uneditableTypes.indexOf(type) < 0;\n  }\n  getAriaLabel(params) {\n    const displayName = this.beans.colNames.getDisplayNameForColumn(params.column, \"header\", true);\n    return `${displayName} ${this.getLocaleTextFunc()(\"ariaFilterInput\", \"Filter Input\")}`;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/date/dateFloatingFilter.ts\nvar DateFloatingFilter = class extends SimpleFloatingFilter {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-floating-filter-input\" role=\"presentation\">\n                <ag-input-text-field data-ref=\"eReadOnlyText\"></ag-input-text-field>\n                <div data-ref=\"eDateWrapper\" style=\"display: flex;\"></div>\n            </div>`,\n      [AgInputTextFieldSelector]\n    );\n    this.eReadOnlyText = RefPlaceholder;\n    this.eDateWrapper = RefPlaceholder;\n  }\n  getDefaultOptions() {\n    return DEFAULT_DATE_FILTER_OPTIONS;\n  }\n  init(params) {\n    super.init(params);\n    this.params = params;\n    this.filterParams = params.filterParams;\n    this.createDateComponent();\n    this.filterModelFormatter = new DateFilterModelFormatter(\n      this.filterParams,\n      this.getLocaleTextFunc.bind(this),\n      this.optionsFactory\n    );\n    const translate = this.getLocaleTextFunc();\n    this.eReadOnlyText.setDisabled(true).setInputAriaLabel(translate(\"ariaDateFilterInput\", \"Date Filter Input\"));\n  }\n  refresh(params) {\n    super.refresh(params);\n    this.params = params;\n    this.filterParams = params.filterParams;\n    this.dateComp.updateParams(this.getDateComponentParams());\n    this.filterModelFormatter.updateParams({\n      optionsFactory: this.optionsFactory,\n      dateFilterParams: this.filterParams\n    });\n    this.updateCompOnModelChange(params.currentParentModel());\n  }\n  updateCompOnModelChange(model) {\n    const allowEditing = !this.readOnly && this.canWeEditAfterModelFromParentFilter(model);\n    this.setEditable(allowEditing);\n    if (allowEditing) {\n      const dateModel = model ? _parseDateTimeFromString(model.dateFrom) : null;\n      this.dateComp.setDate(dateModel);\n      this.eReadOnlyText.setValue(\"\");\n    } else {\n      this.eReadOnlyText.setValue(this.filterModelFormatter.getModelAsString(model));\n      this.dateComp.setDate(null);\n    }\n  }\n  setEditable(editable) {\n    _setDisplayed(this.eDateWrapper, editable);\n    _setDisplayed(this.eReadOnlyText.getGui(), !editable);\n  }\n  onParentModelChanged(model, event) {\n    if (event?.afterFloatingFilter || event?.afterDataChange) {\n      return;\n    }\n    super.setLastTypeFromModel(model);\n    this.updateCompOnModelChange(model);\n  }\n  onDateChanged() {\n    const filterValueDate = this.dateComp.getDate();\n    const filterValueText = _serialiseDate(filterValueDate);\n    this.params.parentFilterInstance((filterInstance) => {\n      if (filterInstance) {\n        const date = _parseDateTimeFromString(filterValueText);\n        filterInstance.onFloatingFilterChanged(this.lastType || null, date);\n      }\n    });\n  }\n  getDateComponentParams() {\n    const { filterParams, column } = this.params;\n    const debounceMs = getDebounceMs(filterParams, this.defaultDebounceMs);\n    return _addGridCommonParams(this.gos, {\n      onDateChanged: _debounce(this, this.onDateChanged.bind(this), debounceMs),\n      filterParams: column.getColDef().filterParams,\n      location: \"floatingFilter\"\n    });\n  }\n  createDateComponent() {\n    const {\n      beans: { context, userCompFactory },\n      eDateWrapper\n    } = this;\n    this.dateComp = new DateCompWrapper(\n      context,\n      userCompFactory,\n      this.getDateComponentParams(),\n      eDateWrapper,\n      (dateComp) => {\n        dateComp.setInputAriaLabel(this.getAriaLabel(this.params));\n      }\n    );\n    this.addDestroyFunc(() => this.dateComp.destroy());\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/date/defaultDateComponent.ts\nvar DefaultDateComponent = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-filter-filter\">\n                <ag-input-text-field class=\"ag-date-filter\" data-ref=\"eDateInput\"></ag-input-text-field>\n            </div>`,\n      [AgInputTextFieldSelector]\n    );\n    this.eDateInput = RefPlaceholder;\n    this.isApply = false;\n    this.applyOnFocusOut = false;\n  }\n  init(params) {\n    this.params = params;\n    this.setParams(params);\n    const inputElement = this.eDateInput.getInputElement();\n    this.addManagedListeners(inputElement, {\n      // ensures that the input element is focussed when a clear button is clicked,\n      // unless using safari as there is no clear button and focus does not work properly\n      mouseDown: () => {\n        if (this.eDateInput.isDisabled() || this.usingSafariDatePicker) {\n          return;\n        }\n        inputElement.focus({ preventScroll: true });\n      },\n      input: this.handleInput.bind(this, false),\n      change: this.handleInput.bind(this, true),\n      focusout: this.handleFocusOut.bind(this)\n    });\n  }\n  handleInput(isChange, e) {\n    if (e.target !== _getActiveDomElement(this.beans)) {\n      return;\n    }\n    if (this.eDateInput.isDisabled()) {\n      return;\n    }\n    if (this.isApply) {\n      this.applyOnFocusOut = !isChange;\n      if (isChange) {\n        this.params.onDateChanged();\n      }\n      return;\n    }\n    if (!isChange) {\n      this.params.onDateChanged();\n    }\n  }\n  handleFocusOut() {\n    if (this.applyOnFocusOut) {\n      this.applyOnFocusOut = false;\n      this.params.onDateChanged();\n    }\n  }\n  setParams(params) {\n    const inputElement = this.eDateInput.getInputElement();\n    const shouldUseBrowserDatePicker = this.shouldUseBrowserDatePicker(params);\n    this.usingSafariDatePicker = shouldUseBrowserDatePicker && _isBrowserSafari();\n    inputElement.type = shouldUseBrowserDatePicker ? \"date\" : \"text\";\n    const { minValidYear, maxValidYear, minValidDate, maxValidDate, buttons } = params.filterParams || {};\n    if (minValidDate && minValidYear) {\n      _warn(85);\n    }\n    if (maxValidDate && maxValidYear) {\n      _warn(86);\n    }\n    if (minValidDate && maxValidDate) {\n      const [parsedMinValidDate, parsedMaxValidDate] = [minValidDate, maxValidDate].map(\n        (v) => v instanceof Date ? v : _parseDateTimeFromString(v)\n      );\n      if (parsedMinValidDate && parsedMaxValidDate && parsedMinValidDate.getTime() > parsedMaxValidDate.getTime()) {\n        _warn(87);\n      }\n    }\n    if (minValidDate) {\n      if (minValidDate instanceof Date) {\n        inputElement.min = _dateToFormattedString(minValidDate);\n      } else {\n        inputElement.min = minValidDate;\n      }\n    } else {\n      if (minValidYear) {\n        inputElement.min = `${minValidYear}-01-01`;\n      }\n    }\n    if (maxValidDate) {\n      if (maxValidDate instanceof Date) {\n        inputElement.max = _dateToFormattedString(maxValidDate);\n      } else {\n        inputElement.max = maxValidDate;\n      }\n    } else {\n      if (maxValidYear) {\n        inputElement.max = `${maxValidYear}-12-31`;\n      }\n    }\n    this.isApply = params.location === \"floatingFilter\" && !!buttons?.includes(\"apply\");\n  }\n  refresh(params) {\n    this.params = params;\n    this.setParams(params);\n  }\n  getDate() {\n    return _parseDateTimeFromString(this.eDateInput.getValue());\n  }\n  setDate(date) {\n    this.eDateInput.setValue(_serialiseDate(date, false));\n  }\n  setInputPlaceholder(placeholder) {\n    this.eDateInput.setInputPlaceholder(placeholder);\n  }\n  setInputAriaLabel(ariaLabel) {\n    this.eDateInput.setAriaLabel(ariaLabel);\n  }\n  setDisabled(disabled) {\n    this.eDateInput.setDisabled(disabled);\n  }\n  afterGuiAttached(params) {\n    if (!params || !params.suppressFocus) {\n      this.eDateInput.getInputElement().focus({ preventScroll: true });\n    }\n  }\n  shouldUseBrowserDatePicker(params) {\n    return params?.filterParams?.browserDatePicker ?? true;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/number/numberFilterConstants.ts\nvar DEFAULT_NUMBER_FILTER_OPTIONS = [\n  \"equals\",\n  \"notEqual\",\n  \"greaterThan\",\n  \"greaterThanOrEqual\",\n  \"lessThan\",\n  \"lessThanOrEqual\",\n  \"inRange\",\n  \"blank\",\n  \"notBlank\"\n];\n\n// packages/ag-grid-community/src/filter/provided/number/numberFilterModelFormatter.ts\nvar NumberFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  conditionToString(condition, options) {\n    const { numberOfInputs } = options || {};\n    const { filter, filterTo, type } = condition;\n    const isRange = type == \"inRange\" || numberOfInputs === 2;\n    const formatValue = this.formatValue.bind(this);\n    if (isRange) {\n      return `${formatValue(filter)}-${formatValue(filterTo)}`;\n    }\n    if (filter != null) {\n      return formatValue(filter);\n    }\n    return `${type}`;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/number/numberFilterUtils.ts\nfunction getAllowedCharPattern(filterParams) {\n  const { allowedCharPattern } = filterParams ?? {};\n  return allowedCharPattern ?? null;\n}\n\n// packages/ag-grid-community/src/filter/provided/number/numberFilter.ts\nvar NumberFilter = class extends ScalarFilter {\n  constructor() {\n    super(\"numberFilter\");\n    this.eValuesFrom = [];\n    this.eValuesTo = [];\n    this.filterType = \"number\";\n    this.defaultDebounceMs = 500;\n  }\n  refresh(params) {\n    if (this.numberFilterParams.allowedCharPattern !== params.allowedCharPattern) {\n      return false;\n    }\n    return super.refresh(params);\n  }\n  mapValuesFromModel(filterModel) {\n    const { filter, filterTo, type } = filterModel || {};\n    return [this.processValue(filter), this.processValue(filterTo)].slice(0, this.getNumberOfInputs(type));\n  }\n  comparator() {\n    return (left, right) => {\n      if (left === right) {\n        return 0;\n      }\n      return left < right ? 1 : -1;\n    };\n  }\n  isValid(value) {\n    return !isNaN(value);\n  }\n  setParams(params) {\n    this.numberFilterParams = params;\n    super.setParams(params);\n    this.filterModelFormatter = new NumberFilterModelFormatter(\n      this.getLocaleTextFunc.bind(this),\n      this.optionsFactory,\n      this.numberFilterParams.numberFormatter\n    );\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_NUMBER_FILTER_OPTIONS;\n  }\n  setElementValue(element, value, fromFloatingFilter) {\n    const { numberFormatter } = this.numberFilterParams;\n    const valueToSet = !fromFloatingFilter && numberFormatter ? numberFormatter(value ?? null) : value;\n    super.setElementValue(element, valueToSet);\n  }\n  createValueElement() {\n    const allowedCharPattern = getAllowedCharPattern(this.numberFilterParams);\n    const eCondition = document.createElement(\"div\");\n    eCondition.classList.add(\"ag-filter-body\");\n    _setAriaRole(eCondition, \"presentation\");\n    this.createFromToElement(eCondition, this.eValuesFrom, \"from\", allowedCharPattern);\n    this.createFromToElement(eCondition, this.eValuesTo, \"to\", allowedCharPattern);\n    return eCondition;\n  }\n  createFromToElement(eCondition, eValues, fromTo, allowedCharPattern) {\n    const eValue = this.createManagedBean(\n      allowedCharPattern ? new AgInputTextField({ allowedCharPattern }) : new AgInputNumberField()\n    );\n    eValue.addCssClass(`ag-filter-${fromTo}`);\n    eValue.addCssClass(\"ag-filter-filter\");\n    eValues.push(eValue);\n    eCondition.appendChild(eValue.getGui());\n  }\n  removeValueElements(startPosition, deleteCount) {\n    const removeComps = (eGui) => this.removeComponents(eGui, startPosition, deleteCount);\n    removeComps(this.eValuesFrom);\n    removeComps(this.eValuesTo);\n  }\n  getValues(position) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        result.push(this.processValue(this.stringToFloat(element.getValue())));\n      }\n    });\n    return result;\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.filter === bSimple.filter && aSimple.filterTo === bSimple.filterTo && aSimple.type === bSimple.type;\n  }\n  processValue(value) {\n    if (value == null) {\n      return null;\n    }\n    return isNaN(value) ? null : value;\n  }\n  stringToFloat(value) {\n    if (typeof value === \"number\") {\n      return value;\n    }\n    let filterText = _makeNull(value);\n    if (filterText != null && filterText.trim() === \"\") {\n      filterText = null;\n    }\n    const numberParser = this.numberFilterParams.numberParser;\n    if (numberParser) {\n      return numberParser(filterText);\n    }\n    return filterText == null || filterText.trim() === \"-\" ? null : parseFloat(filterText);\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {\n      filterType: this.filterType,\n      type\n    };\n    const values = this.getValues(position);\n    if (values.length > 0) {\n      model.filter = values[0];\n    }\n    if (values.length > 1) {\n      model.filterTo = values[1];\n    }\n    return model;\n  }\n  getInputs(position) {\n    const { eValuesFrom, eValuesTo } = this;\n    if (position >= eValuesFrom.length) {\n      return [null, null];\n    }\n    return [eValuesFrom[position], eValuesTo[position]];\n  }\n  getModelAsString(model) {\n    return this.filterModelFormatter.getModelAsString(model) ?? \"\";\n  }\n  hasInvalidInputs() {\n    let invalidInputs = false;\n    this.forEachInput((element) => {\n      if (!element.getInputElement().validity.valid) {\n        invalidInputs = true;\n        return;\n      }\n    });\n    return invalidInputs;\n  }\n};\n\n// packages/ag-grid-community/src/filter/floating/provided/floatingFilterTextInputService.ts\nvar FloatingFilterTextInputService = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.params = params;\n    this.eInput = RefPlaceholder;\n    this.onValueChanged = () => {\n    };\n  }\n  setupGui(parentElement) {\n    this.eInput = this.createManagedBean(new AgInputTextField(this.params?.config));\n    const eInput = this.eInput.getGui();\n    parentElement.appendChild(eInput);\n    const listener = (e) => this.onValueChanged(e);\n    this.addManagedListeners(eInput, {\n      input: listener,\n      keydown: listener\n    });\n  }\n  setEditable(editable) {\n    this.eInput.setDisabled(!editable);\n  }\n  getValue() {\n    return this.eInput.getValue();\n  }\n  setValue(value, silent) {\n    this.eInput.setValue(value, silent);\n  }\n  setValueChangedListener(listener) {\n    this.onValueChanged = listener;\n  }\n  setParams({ ariaLabel, autoComplete }) {\n    const { eInput } = this;\n    eInput.setInputAriaLabel(ariaLabel);\n    if (autoComplete !== void 0) {\n      eInput.setAutoComplete(autoComplete);\n    }\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/text/textFilterUtils.ts\nfunction trimInputForFilter(value) {\n  const trimmedInput = value?.trim();\n  return trimmedInput === \"\" ? value : trimmedInput;\n}\n\n// packages/ag-grid-community/src/filter/floating/provided/textInputFloatingFilter.ts\nvar TextInputFloatingFilter = class extends SimpleFloatingFilter {\n  constructor() {\n    super(...arguments);\n    this.eFloatingFilterInputContainer = RefPlaceholder;\n    this.defaultDebounceMs = 500;\n  }\n  postConstruct() {\n    this.setTemplate(\n      /* html */\n      `\n            <div class=\"ag-floating-filter-input\" role=\"presentation\" data-ref=\"eFloatingFilterInputContainer\"></div>\n        `\n    );\n  }\n  onParentModelChanged(model, event) {\n    if (event?.afterFloatingFilter || event?.afterDataChange) {\n      return;\n    }\n    this.setLastTypeFromModel(model);\n    this.setEditable(this.canWeEditAfterModelFromParentFilter(model));\n    this.inputSvc.setValue(this.filterModelFormatter.getModelAsString(model));\n  }\n  init(params) {\n    this.setupFloatingFilterInputService(params);\n    super.init(params);\n    this.setTextInputParams(params);\n  }\n  setupFloatingFilterInputService(params) {\n    this.inputSvc = this.createFloatingFilterInputService(params);\n    this.inputSvc.setupGui(this.eFloatingFilterInputContainer);\n  }\n  setTextInputParams(params) {\n    this.params = params;\n    const autoComplete = params.browserAutoComplete ?? false;\n    const { inputSvc, defaultDebounceMs, readOnly } = this;\n    inputSvc.setParams({\n      ariaLabel: this.getAriaLabel(params),\n      autoComplete\n    });\n    this.applyActive = isUseApplyButton(params.filterParams);\n    if (!readOnly) {\n      const debounceMs = getDebounceMs(params.filterParams, defaultDebounceMs);\n      const toDebounce = _debounce(\n        this,\n        this.syncUpWithParentFilter.bind(this),\n        debounceMs\n      );\n      inputSvc.setValueChangedListener(toDebounce);\n    }\n  }\n  refresh(params) {\n    super.refresh(params);\n    this.setTextInputParams(params);\n  }\n  recreateFloatingFilterInputService(params) {\n    const { inputSvc } = this;\n    const value = inputSvc.getValue();\n    _clearElement(this.eFloatingFilterInputContainer);\n    this.destroyBean(inputSvc);\n    this.setupFloatingFilterInputService(params);\n    inputSvc.setValue(value, true);\n  }\n  syncUpWithParentFilter(e) {\n    const isEnterKey = e.key === KeyCode.ENTER;\n    if (this.applyActive && !isEnterKey) {\n      return;\n    }\n    const { inputSvc, params } = this;\n    let value = inputSvc.getValue();\n    if (params.filterParams.trimInput) {\n      value = trimInputForFilter(value);\n      inputSvc.setValue(value, true);\n    }\n    params.parentFilterInstance((filterInstance) => {\n      filterInstance?.onFloatingFilterChanged(this.lastType || null, value || null);\n    });\n  }\n  setEditable(editable) {\n    this.inputSvc.setEditable(editable);\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/number/numberFloatingFilter.ts\nvar FloatingFilterNumberInputService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.onValueChanged = () => {\n    };\n    this.numberInputActive = true;\n  }\n  setupGui(parentElement) {\n    this.eNumberInput = this.createManagedBean(new AgInputNumberField());\n    this.eTextInput = this.createManagedBean(new AgInputTextField());\n    this.eTextInput.setDisabled(true);\n    const eNumberInput = this.eNumberInput.getGui();\n    const eTextInput = this.eTextInput.getGui();\n    parentElement.appendChild(eNumberInput);\n    parentElement.appendChild(eTextInput);\n    this.setupListeners(eNumberInput, (e) => this.onValueChanged(e));\n    this.setupListeners(eTextInput, (e) => this.onValueChanged(e));\n  }\n  setEditable(editable) {\n    this.numberInputActive = editable;\n    this.eNumberInput.setDisplayed(this.numberInputActive);\n    this.eTextInput.setDisplayed(!this.numberInputActive);\n  }\n  setAutoComplete(autoComplete) {\n    this.eNumberInput.setAutoComplete(autoComplete);\n    this.eTextInput.setAutoComplete(autoComplete);\n  }\n  getValue() {\n    return this.getActiveInputElement().getValue();\n  }\n  setValue(value, silent) {\n    this.getActiveInputElement().setValue(value, silent);\n  }\n  getActiveInputElement() {\n    return this.numberInputActive ? this.eNumberInput : this.eTextInput;\n  }\n  setValueChangedListener(listener) {\n    this.onValueChanged = listener;\n  }\n  setupListeners(element, listener) {\n    this.addManagedListeners(element, {\n      input: listener,\n      keydown: listener\n    });\n  }\n  setParams(params) {\n    this.setAriaLabel(params.ariaLabel);\n    if (params.autoComplete !== void 0) {\n      this.setAutoComplete(params.autoComplete);\n    }\n  }\n  setAriaLabel(ariaLabel) {\n    this.eNumberInput.setInputAriaLabel(ariaLabel);\n    this.eTextInput.setInputAriaLabel(ariaLabel);\n  }\n};\nvar NumberFloatingFilter = class extends TextInputFloatingFilter {\n  init(params) {\n    super.init(params);\n    this.filterModelFormatter = new NumberFilterModelFormatter(\n      this.getLocaleTextFunc.bind(this),\n      this.optionsFactory,\n      params.filterParams?.numberFormatter\n    );\n  }\n  refresh(params) {\n    const allowedCharPattern = getAllowedCharPattern(params.filterParams);\n    if (allowedCharPattern !== this.allowedCharPattern) {\n      this.recreateFloatingFilterInputService(params);\n    }\n    super.refresh(params);\n    this.filterModelFormatter.updateParams({ optionsFactory: this.optionsFactory });\n  }\n  getDefaultOptions() {\n    return DEFAULT_NUMBER_FILTER_OPTIONS;\n  }\n  createFloatingFilterInputService(params) {\n    this.allowedCharPattern = getAllowedCharPattern(params.filterParams);\n    if (this.allowedCharPattern) {\n      return this.createManagedBean(\n        new FloatingFilterTextInputService({\n          config: { allowedCharPattern: this.allowedCharPattern }\n        })\n      );\n    }\n    return this.createManagedBean(new FloatingFilterNumberInputService());\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/text/textFilterConstants.ts\nvar DEFAULT_TEXT_FILTER_OPTIONS = [\n  \"contains\",\n  \"notContains\",\n  \"equals\",\n  \"notEqual\",\n  \"startsWith\",\n  \"endsWith\",\n  \"blank\",\n  \"notBlank\"\n];\n\n// packages/ag-grid-community/src/filter/provided/text/textFilterModelFormatter.ts\nvar TextFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  conditionToString(condition, options) {\n    const { numberOfInputs } = options || {};\n    const { filter, filterTo, type } = condition;\n    const isRange = type == \"inRange\" || numberOfInputs === 2;\n    if (isRange) {\n      return `${filter}-${filterTo}`;\n    }\n    if (filter != null) {\n      return `${filter}`;\n    }\n    return `${type}`;\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/text/textFilter.ts\nvar TextFilter = class extends SimpleFilter {\n  constructor() {\n    super(\"textFilter\");\n    this.filterType = \"text\";\n    this.defaultFormatter = (from) => from;\n    this.defaultLowercaseFormatter = (from) => from == null ? null : from.toString().toLowerCase();\n    this.defaultMatcher = ({ filterOption, value, filterText }) => {\n      if (filterText == null) {\n        return false;\n      }\n      switch (filterOption) {\n        case \"contains\":\n          return value.indexOf(filterText) >= 0;\n        case \"notContains\":\n          return value.indexOf(filterText) < 0;\n        case \"equals\":\n          return value === filterText;\n        case \"notEqual\":\n          return value != filterText;\n        case \"startsWith\":\n          return value.indexOf(filterText) === 0;\n        case \"endsWith\": {\n          const index = value.lastIndexOf(filterText);\n          return index >= 0 && index === value.length - filterText.length;\n        }\n        default:\n          return false;\n      }\n    };\n    this.eValuesFrom = [];\n    this.eValuesTo = [];\n    this.defaultDebounceMs = 500;\n  }\n  setParams(params) {\n    this.textFilterParams = params;\n    super.setParams(params);\n    this.matcher = params.textMatcher || this.defaultMatcher;\n    this.formatter = params.textFormatter || (params.caseSensitive ? this.defaultFormatter : this.defaultLowercaseFormatter);\n    this.filterModelFormatter = new TextFilterModelFormatter(\n      this.getLocaleTextFunc.bind(this),\n      this.optionsFactory\n    );\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {\n      filterType: this.filterType,\n      type\n    };\n    const values = this.getValuesWithSideEffects(position, true);\n    if (values.length > 0) {\n      model.filter = values[0];\n    }\n    if (values.length > 1) {\n      model.filterTo = values[1];\n    }\n    return model;\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.filter === bSimple.filter && aSimple.filterTo === bSimple.filterTo && aSimple.type === bSimple.type;\n  }\n  getInputs(position) {\n    const { eValuesFrom, eValuesTo } = this;\n    if (position >= eValuesFrom.length) {\n      return [null, null];\n    }\n    return [eValuesFrom[position], eValuesTo[position]];\n  }\n  getValues(position) {\n    return this.getValuesWithSideEffects(position, false);\n  }\n  getValuesWithSideEffects(position, applySideEffects) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        let value = _makeNull(element.getValue());\n        if (applySideEffects && this.textFilterParams.trimInput) {\n          value = trimInputForFilter(value) ?? null;\n          element.setValue(value, true);\n        }\n        result.push(value);\n      }\n    });\n    return result;\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_TEXT_FILTER_OPTIONS;\n  }\n  createValueElement() {\n    const eCondition = document.createElement(\"div\");\n    eCondition.classList.add(\"ag-filter-body\");\n    _setAriaRole(eCondition, \"presentation\");\n    this.createFromToElement(eCondition, this.eValuesFrom, \"from\");\n    this.createFromToElement(eCondition, this.eValuesTo, \"to\");\n    return eCondition;\n  }\n  createFromToElement(eCondition, eValues, fromTo) {\n    const eValue = this.createManagedBean(new AgInputTextField());\n    eValue.addCssClass(`ag-filter-${fromTo}`);\n    eValue.addCssClass(\"ag-filter-filter\");\n    eValues.push(eValue);\n    eCondition.appendChild(eValue.getGui());\n  }\n  removeValueElements(startPosition, deleteCount) {\n    const removeComps = (eGui) => this.removeComponents(eGui, startPosition, deleteCount);\n    removeComps(this.eValuesFrom);\n    removeComps(this.eValuesTo);\n  }\n  mapValuesFromModel(filterModel) {\n    const { filter, filterTo, type } = filterModel || {};\n    return [filter || null, filterTo || null].slice(0, this.getNumberOfInputs(type));\n  }\n  evaluateNullValue(filterType) {\n    const filterTypesAllowNulls = [\"notEqual\", \"notContains\", \"blank\"];\n    return filterType ? filterTypesAllowNulls.indexOf(filterType) >= 0 : false;\n  }\n  evaluateNonNullValue(values, cellValue, filterModel, params) {\n    const formattedValues = values.map((v) => this.formatter(v)) || [];\n    const cellValueFormatted = this.formatter(cellValue);\n    const { api, colDef, column, context, textFormatter } = this.textFilterParams;\n    if (filterModel.type === \"blank\") {\n      return isBlank(cellValue);\n    } else if (filterModel.type === \"notBlank\") {\n      return !isBlank(cellValue);\n    }\n    const matcherParams = {\n      api,\n      colDef,\n      column,\n      context,\n      node: params.node,\n      data: params.data,\n      filterOption: filterModel.type,\n      value: cellValueFormatted,\n      textFormatter\n    };\n    return formattedValues.some((v) => this.matcher({ ...matcherParams, filterText: v }));\n  }\n  getModelAsString(model) {\n    return this.filterModelFormatter.getModelAsString(model) ?? \"\";\n  }\n};\n\n// packages/ag-grid-community/src/filter/provided/text/textFloatingFilter.ts\nvar TextFloatingFilter = class extends TextInputFloatingFilter {\n  init(params) {\n    super.init(params);\n    this.filterModelFormatter = new TextFilterModelFormatter(\n      this.getLocaleTextFunc.bind(this),\n      this.optionsFactory\n    );\n  }\n  refresh(params) {\n    super.refresh(params);\n    this.filterModelFormatter.updateParams({ optionsFactory: this.optionsFactory });\n  }\n  getDefaultOptions() {\n    return DEFAULT_TEXT_FILTER_OPTIONS;\n  }\n  createFloatingFilterInputService() {\n    return this.createManagedBean(new FloatingFilterTextInputService());\n  }\n};\n\n// packages/ag-grid-community/src/filter/quickFilterApi.ts\nfunction isQuickFilterPresent(beans) {\n  return !!beans.quickFilter?.isFilterPresent();\n}\nfunction getQuickFilter(beans) {\n  return beans.quickFilter?.getText();\n}\nfunction resetQuickFilter(beans) {\n  beans.quickFilter?.resetCache();\n}\n\n// packages/ag-grid-community/src/filter/quickFilterService.ts\nvar QuickFilterService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"quickFilter\";\n    this.quickFilter = null;\n    this.quickFilterParts = null;\n  }\n  postConstruct() {\n    const resetListener = this.resetCache.bind(this);\n    const gos = this.gos;\n    this.addManagedEventListeners({\n      columnPivotModeChanged: resetListener,\n      newColumnsLoaded: resetListener,\n      columnRowGroupChanged: resetListener,\n      columnVisible: () => {\n        if (!gos.get(\"includeHiddenColumnsInQuickFilter\")) {\n          this.resetCache();\n        }\n      }\n    });\n    this.addManagedPropertyListener(\"quickFilterText\", (e) => this.setFilter(e.currentValue));\n    this.addManagedPropertyListeners(\n      [\"includeHiddenColumnsInQuickFilter\", \"applyQuickFilterBeforePivotOrAgg\"],\n      () => this.onColumnConfigChanged()\n    );\n    this.quickFilter = this.parseFilter(gos.get(\"quickFilterText\"));\n    this.parser = gos.get(\"quickFilterParser\");\n    this.matcher = gos.get(\"quickFilterMatcher\");\n    this.setFilterParts();\n    this.addManagedPropertyListeners([\"quickFilterMatcher\", \"quickFilterParser\"], () => this.setParserAndMatcher());\n  }\n  // if we are using autoGroupCols, then they should be included for quick filter. this covers the\n  // following scenarios:\n  // a) user provides 'field' into autoGroupCol of normal grid, so now because a valid col to filter leafs on\n  // b) using tree data and user depends on autoGroupCol for first col, and we also want to filter on this\n  //    (tree data is a bit different, as parent rows can be filtered on, unlike row grouping)\n  refreshCols() {\n    const { autoColSvc, colModel, gos, pivotResultCols } = this.beans;\n    const pivotMode = colModel.isPivotMode();\n    const groupAutoCols = autoColSvc?.getColumns();\n    const providedCols = colModel.getColDefCols();\n    let columnsForQuickFilter = (pivotMode && !gos.get(\"applyQuickFilterBeforePivotOrAgg\") ? pivotResultCols?.getPivotResultCols()?.list : providedCols) ?? [];\n    if (groupAutoCols) {\n      columnsForQuickFilter = columnsForQuickFilter.concat(groupAutoCols);\n    }\n    this.colsToUse = gos.get(\"includeHiddenColumnsInQuickFilter\") ? columnsForQuickFilter : columnsForQuickFilter.filter((col) => col.isVisible() || col.isRowGroupActive());\n  }\n  isFilterPresent() {\n    return this.quickFilter !== null;\n  }\n  doesRowPass(node) {\n    const usingCache = this.gos.get(\"cacheQuickFilter\");\n    if (this.matcher) {\n      return this.doesRowPassMatcher(usingCache, node);\n    }\n    return this.quickFilterParts.every(\n      (part) => usingCache ? this.doesRowPassCache(node, part) : this.doesRowPassNoCache(node, part)\n    );\n  }\n  resetCache() {\n    this.beans.rowModel.forEachNode((node) => node.quickFilterAggregateText = null);\n  }\n  getText() {\n    return this.gos.get(\"quickFilterText\");\n  }\n  setFilterParts() {\n    const { quickFilter, parser } = this;\n    if (quickFilter) {\n      this.quickFilterParts = parser ? parser(quickFilter) : quickFilter.split(\" \");\n    } else {\n      this.quickFilterParts = null;\n    }\n  }\n  parseFilter(newFilter) {\n    if (!_exists(newFilter)) {\n      return null;\n    }\n    return newFilter.toUpperCase();\n  }\n  setFilter(newFilter) {\n    if (newFilter != null && typeof newFilter !== \"string\") {\n      _warn(70, { newFilter });\n      return;\n    }\n    const parsedFilter = this.parseFilter(newFilter);\n    if (this.quickFilter !== parsedFilter) {\n      this.quickFilter = parsedFilter;\n      this.setFilterParts();\n      this.dispatchLocalEvent({ type: \"quickFilterChanged\" });\n    }\n  }\n  setParserAndMatcher() {\n    const parser = this.gos.get(\"quickFilterParser\");\n    const matcher = this.gos.get(\"quickFilterMatcher\");\n    const hasChanged = parser !== this.parser || matcher !== this.matcher;\n    this.parser = parser;\n    this.matcher = matcher;\n    if (hasChanged) {\n      this.setFilterParts();\n      this.dispatchLocalEvent({ type: \"quickFilterChanged\" });\n    }\n  }\n  onColumnConfigChanged() {\n    this.refreshCols();\n    this.resetCache();\n    if (this.isFilterPresent()) {\n      this.dispatchLocalEvent({ type: \"quickFilterChanged\" });\n    }\n  }\n  doesRowPassNoCache(node, filterPart) {\n    return this.colsToUse.some((column) => {\n      const part = this.getTextForColumn(column, node);\n      return _exists(part) && part.indexOf(filterPart) >= 0;\n    });\n  }\n  doesRowPassCache(node, filterPart) {\n    this.checkGenerateAggText(node);\n    return node.quickFilterAggregateText.indexOf(filterPart) >= 0;\n  }\n  doesRowPassMatcher(usingCache, node) {\n    let quickFilterAggregateText;\n    if (usingCache) {\n      this.checkGenerateAggText(node);\n      quickFilterAggregateText = node.quickFilterAggregateText;\n    } else {\n      quickFilterAggregateText = this.getAggText(node);\n    }\n    const { quickFilterParts, matcher } = this;\n    return matcher(quickFilterParts, quickFilterAggregateText);\n  }\n  checkGenerateAggText(node) {\n    if (!node.quickFilterAggregateText) {\n      node.quickFilterAggregateText = this.getAggText(node);\n    }\n  }\n  getTextForColumn(column, node) {\n    let value = this.beans.filterValueSvc.getValue(column, node);\n    const colDef = column.getColDef();\n    if (colDef.getQuickFilterText) {\n      const params = _addGridCommonParams(this.gos, {\n        value,\n        node,\n        data: node.data,\n        column,\n        colDef\n      });\n      value = colDef.getQuickFilterText(params);\n    }\n    return _exists(value) ? value.toString().toUpperCase() : null;\n  }\n  getAggText(node) {\n    const stringParts = [];\n    this.colsToUse.forEach((column) => {\n      const part = this.getTextForColumn(column, node);\n      if (_exists(part)) {\n        stringParts.push(part);\n      }\n    });\n    return stringParts.join(\"\\n\");\n  }\n};\n\n// packages/ag-grid-community/src/filter/filterModule.ts\nvar ClientSideRowModelFilterModule = {\n  moduleName: \"ClientSideRowModelFilter\",\n  version: VERSION,\n  rowModels: [\"clientSide\"],\n  beans: [FilterStage]\n};\nvar FilterCoreModule = {\n  moduleName: \"FilterCore\",\n  version: VERSION,\n  beans: [FilterManager],\n  apiFunctions: {\n    isAnyFilterPresent,\n    onFilterChanged\n  },\n  css: [columnFiltersCSS],\n  dependsOn: [ClientSideRowModelFilterModule]\n};\nvar FilterValueModule = {\n  moduleName: \"FilterValue\",\n  version: VERSION,\n  beans: [FilterValueService]\n};\nvar ColumnFilterModule = {\n  moduleName: \"ColumnFilter\",\n  version: VERSION,\n  beans: [ColumnFilterService, FilterMenuFactory],\n  dynamicBeans: { headerFilterCellCtrl: HeaderFilterCellCtrl },\n  icons: {\n    // open filter button - header, floating filter, menu\n    filter: \"filter\",\n    // filter is applied - header (legacy column menu), filter tool panel\n    filterActive: \"filter\"\n  },\n  apiFunctions: {\n    isColumnFilterPresent,\n    getColumnFilterInstance,\n    destroyFilter,\n    setFilterModel,\n    getFilterModel,\n    getColumnFilterModel,\n    setColumnFilterModel,\n    showColumnFilter\n  },\n  dependsOn: [FilterCoreModule, PopupModule, FilterValueModule, SharedMenuModule]\n};\nvar CustomFilterModule = {\n  moduleName: \"CustomFilter\",\n  version: VERSION,\n  userComponents: { agReadOnlyFloatingFilter: ReadOnlyFloatingFilter },\n  dependsOn: [ColumnFilterModule]\n};\nvar TextFilterModule = {\n  moduleName: \"TextFilter\",\n  version: VERSION,\n  dependsOn: [ColumnFilterModule],\n  userComponents: {\n    agTextColumnFilter: TextFilter,\n    agTextColumnFloatingFilter: TextFloatingFilter\n  }\n};\nvar NumberFilterModule = {\n  moduleName: \"NumberFilter\",\n  version: VERSION,\n  dependsOn: [ColumnFilterModule],\n  userComponents: {\n    agNumberColumnFilter: NumberFilter,\n    agNumberColumnFloatingFilter: NumberFloatingFilter\n  }\n};\nvar DateFilterModule = {\n  moduleName: \"DateFilter\",\n  version: VERSION,\n  dependsOn: [ColumnFilterModule],\n  userComponents: {\n    agDateColumnFilter: DateFilter,\n    agDateInput: DefaultDateComponent,\n    agDateColumnFloatingFilter: DateFloatingFilter\n  }\n};\nvar QuickFilterCoreModule = {\n  moduleName: \"QuickFilterCore\",\n  version: VERSION,\n  rowModels: [\"clientSide\"],\n  beans: [QuickFilterService],\n  dependsOn: [FilterCoreModule, FilterValueModule]\n};\nvar QuickFilterModule = {\n  moduleName: \"QuickFilter\",\n  version: VERSION,\n  apiFunctions: {\n    isQuickFilterPresent,\n    getQuickFilter,\n    resetQuickFilter\n  },\n  dependsOn: [QuickFilterCoreModule]\n};\nvar ExternalFilterModule = {\n  moduleName: \"ExternalFilter\",\n  version: VERSION,\n  dependsOn: [FilterCoreModule]\n};\n\n// packages/ag-grid-community/src/undoRedo/undoRedoStack.ts\nvar UndoRedoAction = class {\n  constructor(cellValueChanges) {\n    this.cellValueChanges = cellValueChanges;\n  }\n};\nvar RangeUndoRedoAction = class extends UndoRedoAction {\n  constructor(cellValueChanges, initialRange, finalRange, ranges) {\n    super(cellValueChanges);\n    this.initialRange = initialRange;\n    this.finalRange = finalRange;\n    this.ranges = ranges;\n  }\n};\nvar DEFAULT_STACK_SIZE = 10;\nvar UndoRedoStack = class {\n  constructor(maxStackSize) {\n    this.actionStack = [];\n    this.maxStackSize = maxStackSize ? maxStackSize : DEFAULT_STACK_SIZE;\n    this.actionStack = new Array(this.maxStackSize);\n  }\n  pop() {\n    return this.actionStack.pop();\n  }\n  push(item) {\n    const shouldAddActions = item.cellValueChanges && item.cellValueChanges.length > 0;\n    if (!shouldAddActions) {\n      return;\n    }\n    if (this.actionStack.length === this.maxStackSize) {\n      this.actionStack.shift();\n    }\n    this.actionStack.push(item);\n  }\n  clear() {\n    this.actionStack = [];\n  }\n  getCurrentStackSize() {\n    return this.actionStack.length;\n  }\n};\n\n// packages/ag-grid-community/src/undoRedo/undoRedoService.ts\nvar UndoRedoService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"undoRedo\";\n    this.cellValueChanges = [];\n    this.activeCellEdit = null;\n    this.activeRowEdit = null;\n    this.isPasting = false;\n    this.isRangeInAction = false;\n    this.onCellValueChanged = (event) => {\n      const eventCell = { column: event.column, rowIndex: event.rowIndex, rowPinned: event.rowPinned };\n      const isCellEditing = this.activeCellEdit !== null && _areCellsEqual(this.activeCellEdit, eventCell);\n      const isRowEditing = this.activeRowEdit !== null && _isSameRow(this.activeRowEdit, eventCell);\n      const shouldCaptureAction = isCellEditing || isRowEditing || this.isPasting || this.isRangeInAction;\n      if (!shouldCaptureAction) {\n        return;\n      }\n      const { rowPinned, rowIndex, column, oldValue, value } = event;\n      const cellValueChange = {\n        rowPinned,\n        rowIndex,\n        columnId: column.getColId(),\n        newValue: value,\n        oldValue\n      };\n      this.cellValueChanges.push(cellValueChange);\n    };\n    this.clearStacks = () => {\n      this.undoStack.clear();\n      this.redoStack.clear();\n    };\n  }\n  postConstruct() {\n    const { gos, ctrlsSvc } = this.beans;\n    if (!gos.get(\"undoRedoCellEditing\")) {\n      return;\n    }\n    const undoRedoLimit = gos.get(\"undoRedoCellEditingLimit\");\n    if (undoRedoLimit <= 0) {\n      return;\n    }\n    this.undoStack = new UndoRedoStack(undoRedoLimit);\n    this.redoStack = new UndoRedoStack(undoRedoLimit);\n    this.addListeners();\n    const listener = this.clearStacks.bind(this);\n    this.addManagedEventListeners({\n      cellValueChanged: this.onCellValueChanged.bind(this),\n      // undo / redo is restricted to actual editing so we clear the stacks when other operations are\n      // performed that change the order of the row / cols.\n      modelUpdated: (e) => {\n        if (!e.keepUndoRedoStack) {\n          this.clearStacks();\n        }\n      },\n      columnPivotModeChanged: listener,\n      newColumnsLoaded: listener,\n      columnGroupOpened: listener,\n      columnRowGroupChanged: listener,\n      columnMoved: listener,\n      columnPinned: listener,\n      columnVisible: listener,\n      rowDragEnd: listener\n    });\n    ctrlsSvc.whenReady(this, (p) => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n    });\n  }\n  getCurrentUndoStackSize() {\n    return this.undoStack?.getCurrentStackSize() ?? 0;\n  }\n  getCurrentRedoStackSize() {\n    return this.redoStack?.getCurrentStackSize() ?? 0;\n  }\n  undo(source) {\n    const { eventSvc, undoStack, redoStack } = this;\n    eventSvc.dispatchEvent({\n      type: \"undoStarted\",\n      source\n    });\n    const operationPerformed = this.undoRedo(undoStack, redoStack, \"initialRange\", \"oldValue\", \"undo\");\n    eventSvc.dispatchEvent({\n      type: \"undoEnded\",\n      source,\n      operationPerformed\n    });\n  }\n  redo(source) {\n    const { eventSvc, undoStack, redoStack } = this;\n    eventSvc.dispatchEvent({\n      type: \"redoStarted\",\n      source\n    });\n    const operationPerformed = this.undoRedo(redoStack, undoStack, \"finalRange\", \"newValue\", \"redo\");\n    eventSvc.dispatchEvent({\n      type: \"redoEnded\",\n      source,\n      operationPerformed\n    });\n  }\n  undoRedo(undoRedoStack, opposingUndoRedoStack, rangeProperty, cellValueChangeProperty, source) {\n    if (!undoRedoStack) {\n      return false;\n    }\n    const undoRedoAction = undoRedoStack.pop();\n    if (!undoRedoAction || !undoRedoAction.cellValueChanges) {\n      return false;\n    }\n    this.processAction(\n      undoRedoAction,\n      (cellValueChange) => cellValueChange[cellValueChangeProperty],\n      source\n    );\n    if (undoRedoAction instanceof RangeUndoRedoAction) {\n      this.processRange(undoRedoAction.ranges || [undoRedoAction[rangeProperty]]);\n    } else {\n      this.processCell(undoRedoAction.cellValueChanges);\n    }\n    opposingUndoRedoStack.push(undoRedoAction);\n    return true;\n  }\n  processAction(action, valueExtractor, source) {\n    action.cellValueChanges.forEach((cellValueChange) => {\n      const { rowIndex, rowPinned, columnId } = cellValueChange;\n      const rowPosition = { rowIndex, rowPinned };\n      const currentRow = _getRowNode(this.beans, rowPosition);\n      if (!currentRow.displayed) {\n        return;\n      }\n      currentRow.setDataValue(columnId, valueExtractor(cellValueChange), source);\n    });\n  }\n  processRange(ranges) {\n    let lastFocusedCell;\n    const rangeSvc = this.beans.rangeSvc;\n    rangeSvc.removeAllCellRanges(true);\n    ranges.forEach((range, idx) => {\n      if (!range) {\n        return;\n      }\n      const startRow = range.startRow;\n      const endRow = range.endRow;\n      if (idx === ranges.length - 1) {\n        lastFocusedCell = {\n          rowPinned: startRow.rowPinned,\n          rowIndex: startRow.rowIndex,\n          columnId: range.startColumn.getColId()\n        };\n        this.setLastFocusedCell(lastFocusedCell);\n      }\n      const cellRangeParams = {\n        rowStartIndex: startRow.rowIndex,\n        rowStartPinned: startRow.rowPinned,\n        rowEndIndex: endRow.rowIndex,\n        rowEndPinned: endRow.rowPinned,\n        columnStart: range.startColumn,\n        columns: range.columns\n      };\n      rangeSvc.addCellRange(cellRangeParams);\n    });\n  }\n  processCell(cellValueChanges) {\n    const cellValueChange = cellValueChanges[0];\n    const { rowIndex, rowPinned } = cellValueChange;\n    const rowPosition = { rowIndex, rowPinned };\n    const row = _getRowNode(this.beans, rowPosition);\n    const lastFocusedCell = {\n      rowPinned: cellValueChange.rowPinned,\n      rowIndex: row.rowIndex,\n      columnId: cellValueChange.columnId\n    };\n    this.setLastFocusedCell(lastFocusedCell);\n  }\n  setLastFocusedCell(lastFocusedCell) {\n    const { rowIndex, columnId, rowPinned } = lastFocusedCell;\n    const { colModel, focusSvc, rangeSvc } = this.beans;\n    const column = colModel.getCol(columnId);\n    if (!column) {\n      return;\n    }\n    const { scrollFeature } = this.gridBodyCtrl;\n    scrollFeature.ensureIndexVisible(rowIndex);\n    scrollFeature.ensureColumnVisible(column);\n    const cellPosition = { rowIndex, column, rowPinned };\n    focusSvc.setFocusedCell({ ...cellPosition, forceBrowserFocus: true });\n    rangeSvc?.setRangeToCell(cellPosition);\n  }\n  addListeners() {\n    this.addManagedEventListeners({\n      rowEditingStarted: (e) => {\n        this.activeRowEdit = { rowIndex: e.rowIndex, rowPinned: e.rowPinned };\n      },\n      rowEditingStopped: () => {\n        const action = new UndoRedoAction(this.cellValueChanges);\n        this.pushActionsToUndoStack(action);\n        this.activeRowEdit = null;\n      },\n      cellEditingStarted: (e) => {\n        this.activeCellEdit = { column: e.column, rowIndex: e.rowIndex, rowPinned: e.rowPinned };\n      },\n      cellEditingStopped: (e) => {\n        this.activeCellEdit = null;\n        const shouldPushAction = e.valueChanged && !this.activeRowEdit && !this.isPasting && !this.isRangeInAction;\n        if (shouldPushAction) {\n          const action = new UndoRedoAction(this.cellValueChanges);\n          this.pushActionsToUndoStack(action);\n        }\n      },\n      pasteStart: () => {\n        this.isPasting = true;\n      },\n      pasteEnd: () => {\n        const action = new UndoRedoAction(this.cellValueChanges);\n        this.pushActionsToUndoStack(action);\n        this.isPasting = false;\n      },\n      fillStart: () => {\n        this.isRangeInAction = true;\n      },\n      fillEnd: (event) => {\n        const action = new RangeUndoRedoAction(this.cellValueChanges, event.initialRange, event.finalRange);\n        this.pushActionsToUndoStack(action);\n        this.isRangeInAction = false;\n      },\n      keyShortcutChangedCellStart: () => {\n        this.isRangeInAction = true;\n      },\n      keyShortcutChangedCellEnd: () => {\n        let action;\n        const { rangeSvc, gos } = this.beans;\n        if (rangeSvc && _isCellSelectionEnabled(gos)) {\n          action = new RangeUndoRedoAction(this.cellValueChanges, void 0, void 0, [\n            ...rangeSvc.getCellRanges()\n          ]);\n        } else {\n          action = new UndoRedoAction(this.cellValueChanges);\n        }\n        this.pushActionsToUndoStack(action);\n        this.isRangeInAction = false;\n      }\n    });\n  }\n  pushActionsToUndoStack(action) {\n    this.undoStack.push(action);\n    this.cellValueChanges = [];\n    this.redoStack.clear();\n  }\n};\n\n// packages/ag-grid-community/src/edit/cell-editing.css-GENERATED.ts\nvar cellEditingCSS = (\n  /*css*/\n  `.ag-cell-inline-editing{border:var(--ag-cell-editing-border)!important;border-radius:var(--ag-border-radius);box-shadow:var(--ag-cell-editing-shadow);padding:0;z-index:1;.ag-cell-edit-wrapper,.ag-cell-editor,.ag-cell-wrapper,:where(.ag-cell-editor) .ag-input-field-input,:where(.ag-cell-editor) .ag-wrapper{height:100%;line-height:normal;width:100%}}:where(.ag-popup-editor) .ag-large-text{background-color:var(--ag-background-color);border-radius:var(--ag-border-radius);box-shadow:var(--ag-dropdown-shadow);padding:0}.ag-large-text-input{height:auto;padding:var(--ag-cell-horizontal-padding)}:where(.ag-rtl .ag-large-text-input) textarea{resize:none}:where(.ag-ltr) .ag-checkbox-edit{padding-left:var(--ag-cell-horizontal-padding)}:where(.ag-rtl) .ag-checkbox-edit{padding-right:var(--ag-cell-horizontal-padding)}`\n);\n\n// packages/ag-grid-community/src/edit/cellEditors/checkboxCellEditor.ts\nvar CheckboxCellEditor = class extends PopupComponent {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-cell-wrapper ag-cell-edit-wrapper ag-checkbox-edit\">\n                <ag-checkbox role=\"presentation\" data-ref=\"eCheckbox\"></ag-checkbox>\n            </div>`,\n      [AgCheckboxSelector]\n    );\n    this.eCheckbox = RefPlaceholder;\n  }\n  init(params) {\n    this.params = params;\n    const isSelected = params.value ?? void 0;\n    const eCheckbox = this.eCheckbox;\n    eCheckbox.setValue(isSelected);\n    const inputEl = eCheckbox.getInputElement();\n    inputEl.setAttribute(\"tabindex\", \"-1\");\n    this.setAriaLabel(isSelected);\n    this.addManagedListeners(eCheckbox, {\n      fieldValueChanged: (event) => this.setAriaLabel(event.selected)\n    });\n  }\n  getValue() {\n    return this.eCheckbox.getValue();\n  }\n  focusIn() {\n    this.eCheckbox.getFocusableElement().focus();\n  }\n  afterGuiAttached() {\n    if (this.params.cellStartedEdit) {\n      this.focusIn();\n    }\n  }\n  isPopup() {\n    return false;\n  }\n  setAriaLabel(isSelected) {\n    const translate = this.getLocaleTextFunc();\n    const stateName = _getAriaCheckboxStateName(translate, isSelected);\n    const ariaLabel = translate(\"ariaToggleCellValue\", \"Press SPACE to toggle cell value\");\n    this.eCheckbox.setInputAriaLabel(`${ariaLabel} (${stateName})`);\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/simpleCellEditor.ts\nvar SimpleCellEditor = class extends PopupComponent {\n  constructor(cellEditorInput) {\n    super(\n      /* html */\n      `\n            <div class=\"ag-cell-edit-wrapper\">\n                ${cellEditorInput.getTemplate()}\n            </div>`,\n      cellEditorInput.getAgComponents()\n    );\n    this.cellEditorInput = cellEditorInput;\n    this.eInput = RefPlaceholder;\n  }\n  init(params) {\n    this.params = params;\n    const { cellStartedEdit, eventKey, suppressPreventDefault } = params;\n    const eInput = this.eInput;\n    this.cellEditorInput.init(eInput, params);\n    let startValue;\n    let shouldSetStartValue = true;\n    if (cellStartedEdit) {\n      this.focusAfterAttached = true;\n      if (eventKey === KeyCode.BACKSPACE || eventKey === KeyCode.DELETE) {\n        startValue = \"\";\n      } else if (eventKey && eventKey.length === 1) {\n        if (suppressPreventDefault) {\n          shouldSetStartValue = false;\n        } else {\n          startValue = eventKey;\n        }\n      } else {\n        startValue = this.cellEditorInput.getStartValue();\n        if (eventKey !== KeyCode.F2) {\n          this.highlightAllOnFocus = true;\n        }\n      }\n    } else {\n      this.focusAfterAttached = false;\n      startValue = this.cellEditorInput.getStartValue();\n    }\n    if (shouldSetStartValue && startValue != null) {\n      eInput.setStartValue(startValue);\n    }\n    this.addManagedElementListeners(eInput.getGui(), {\n      keydown: (event) => {\n        const { key } = event;\n        if (key === KeyCode.PAGE_UP || key === KeyCode.PAGE_DOWN) {\n          event.preventDefault();\n        }\n      }\n    });\n  }\n  afterGuiAttached() {\n    const translate = this.getLocaleTextFunc();\n    const eInput = this.eInput;\n    eInput.setInputAriaLabel(translate(\"ariaInputEditor\", \"Input Editor\"));\n    if (!this.focusAfterAttached) {\n      return;\n    }\n    if (!_isBrowserSafari()) {\n      eInput.getFocusableElement().focus();\n    }\n    const inputEl = eInput.getInputElement();\n    if (this.highlightAllOnFocus) {\n      inputEl.select();\n    } else {\n      this.cellEditorInput.setCaret?.();\n    }\n  }\n  // gets called when tabbing through cells and in full row edit mode\n  focusIn() {\n    const eInput = this.eInput;\n    const focusEl = eInput.getFocusableElement();\n    const inputEl = eInput.getInputElement();\n    focusEl.focus();\n    inputEl.select();\n  }\n  getValue() {\n    return this.cellEditorInput.getValue();\n  }\n  isPopup() {\n    return false;\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/dateCellEditor.ts\nvar DateCellEditorInput = class {\n  getTemplate() {\n    return (\n      /* html */\n      `<ag-input-date-field class=\"ag-cell-editor\" data-ref=\"eInput\"></ag-input-date-field>`\n    );\n  }\n  getAgComponents() {\n    return [AgInputDateFieldSelector];\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    const { min, max, step } = params;\n    if (min != null) {\n      eInput.setMin(min);\n    }\n    if (max != null) {\n      eInput.setMax(max);\n    }\n    if (step != null) {\n      eInput.setStep(step);\n    }\n  }\n  getValue() {\n    const { eInput, params } = this;\n    const value = eInput.getDate();\n    if (!_exists(value) && !_exists(params.value)) {\n      return params.value;\n    }\n    return value ?? null;\n  }\n  getStartValue() {\n    const { value } = this.params;\n    if (!(value instanceof Date)) {\n      return void 0;\n    }\n    return _serialiseDate(value, false);\n  }\n};\nvar DateCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new DateCellEditorInput());\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/dateStringCellEditor.ts\nvar DateStringCellEditorInput = class {\n  constructor(getDataTypeService) {\n    this.getDataTypeService = getDataTypeService;\n  }\n  getTemplate() {\n    return (\n      /* html */\n      `<ag-input-date-field class=\"ag-cell-editor\" data-ref=\"eInput\"></ag-input-date-field>`\n    );\n  }\n  getAgComponents() {\n    return [AgInputDateFieldSelector];\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    const { min, max, step } = params;\n    if (min != null) {\n      eInput.setMin(min);\n    }\n    if (max != null) {\n      eInput.setMax(max);\n    }\n    if (step != null) {\n      eInput.setStep(step);\n    }\n  }\n  getValue() {\n    const { params, eInput } = this;\n    const value = this.formatDate(eInput.getDate());\n    if (!_exists(value) && !_exists(params.value)) {\n      return params.value;\n    }\n    return params.parseValue(value ?? \"\");\n  }\n  getStartValue() {\n    return _serialiseDate(this.parseDate(this.params.value ?? void 0) ?? null, false);\n  }\n  parseDate(value) {\n    const dataTypeSvc = this.getDataTypeService();\n    return dataTypeSvc ? dataTypeSvc.getDateParserFunction(this.params.column)(value) : _parseDateTimeFromString(value) ?? void 0;\n  }\n  formatDate(value) {\n    const dataTypeSvc = this.getDataTypeService();\n    return dataTypeSvc ? dataTypeSvc.getDateFormatterFunction(this.params.column)(value) : _serialiseDate(value ?? null, false) ?? void 0;\n  }\n};\nvar DateStringCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new DateStringCellEditorInput(() => this.beans.dataTypeSvc));\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/largeTextCellEditor.ts\nvar LargeTextCellEditor = class extends PopupComponent {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-large-text\">\n        <ag-input-text-area data-ref=\"eTextArea\" class=\"ag-large-text-input\"></ag-input-text-area>\n        </div>`,\n      [AgInputTextAreaSelector]\n    );\n    this.eTextArea = RefPlaceholder;\n  }\n  init(params) {\n    this.params = params;\n    this.focusAfterAttached = params.cellStartedEdit;\n    this.eTextArea.setMaxLength(params.maxLength || 200).setCols(params.cols || 60).setRows(params.rows || 10);\n    if (params.value != null) {\n      this.eTextArea.setValue(params.value.toString(), true);\n    }\n    this.addGuiEventListener(\"keydown\", this.onKeyDown.bind(this));\n    this.activateTabIndex();\n  }\n  onKeyDown(event) {\n    const key = event.key;\n    if (key === KeyCode.LEFT || key === KeyCode.UP || key === KeyCode.RIGHT || key === KeyCode.DOWN || event.shiftKey && key === KeyCode.ENTER) {\n      event.stopPropagation();\n    }\n  }\n  afterGuiAttached() {\n    const translate = this.getLocaleTextFunc();\n    this.eTextArea.setInputAriaLabel(translate(\"ariaInputEditor\", \"Input Editor\"));\n    if (this.focusAfterAttached) {\n      this.eTextArea.getFocusableElement().focus();\n    }\n  }\n  getValue() {\n    const value = this.eTextArea.getValue();\n    const params = this.params;\n    if (!_exists(value) && !_exists(params.value)) {\n      return params.value;\n    }\n    return params.parseValue(value);\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/numberCellEditor.ts\nvar NumberCellEditorInput = class {\n  getTemplate() {\n    return (\n      /* html */\n      `<ag-input-number-field class=\"ag-cell-editor\" data-ref=\"eInput\"></ag-input-number-field>`\n    );\n  }\n  getAgComponents() {\n    return [AgInputNumberFieldSelector];\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    const { max, min, precision, step } = params;\n    if (max != null) {\n      eInput.setMax(max);\n    }\n    if (min != null) {\n      eInput.setMin(min);\n    }\n    if (precision != null) {\n      eInput.setPrecision(precision);\n    }\n    if (step != null) {\n      eInput.setStep(step);\n    }\n    const inputEl = eInput.getInputElement();\n    if (params.preventStepping) {\n      eInput.addManagedElementListeners(inputEl, { keydown: this.preventStepping });\n    } else if (params.showStepperButtons) {\n      inputEl.classList.add(\"ag-number-field-input-stepper\");\n    }\n  }\n  preventStepping(e) {\n    if (e.key === KeyCode.UP || e.key === KeyCode.DOWN) {\n      e.preventDefault();\n    }\n  }\n  getValue() {\n    const { eInput, params } = this;\n    const value = eInput.getValue();\n    if (!_exists(value) && !_exists(params.value)) {\n      return params.value;\n    }\n    let parsedValue = params.parseValue(value);\n    if (parsedValue == null) {\n      return parsedValue;\n    }\n    if (typeof parsedValue === \"string\") {\n      if (parsedValue === \"\") {\n        return null;\n      }\n      parsedValue = Number(parsedValue);\n    }\n    return isNaN(parsedValue) ? null : parsedValue;\n  }\n  getStartValue() {\n    return this.params.value;\n  }\n  setCaret() {\n    if (_isBrowserSafari()) {\n      this.eInput.getInputElement().focus({ preventScroll: true });\n    }\n  }\n};\nvar NumberCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new NumberCellEditorInput());\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/selectCellEditor.ts\nvar SelectCellEditor = class extends PopupComponent {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-cell-edit-wrapper\">\n                <ag-select class=\"ag-cell-editor\" data-ref=\"eSelect\"></ag-select>\n            </div>`,\n      [AgSelectSelector]\n    );\n    this.eSelect = RefPlaceholder;\n    this.startedByEnter = false;\n  }\n  wireBeans(beans) {\n    this.valueSvc = beans.valueSvc;\n  }\n  init(params) {\n    this.focusAfterAttached = params.cellStartedEdit;\n    const { eSelect, valueSvc, gos } = this;\n    const { values, value, eventKey } = params;\n    if (_missing(values)) {\n      _warn(58);\n      return;\n    }\n    this.startedByEnter = eventKey != null ? eventKey === KeyCode.ENTER : false;\n    let hasValue = false;\n    values.forEach((currentValue) => {\n      const option = { value: currentValue };\n      const valueFormatted = valueSvc.formatValue(params.column, null, currentValue);\n      const valueFormattedExits = valueFormatted !== null && valueFormatted !== void 0;\n      option.text = valueFormattedExits ? valueFormatted : currentValue;\n      eSelect.addOption(option);\n      hasValue = hasValue || value === currentValue;\n    });\n    if (hasValue) {\n      eSelect.setValue(params.value, true);\n    } else if (params.values.length) {\n      eSelect.setValue(params.values[0], true);\n    }\n    const { valueListGap, valueListMaxWidth, valueListMaxHeight } = params;\n    if (valueListGap != null) {\n      eSelect.setPickerGap(valueListGap);\n    }\n    if (valueListMaxHeight != null) {\n      eSelect.setPickerMaxHeight(valueListMaxHeight);\n    }\n    if (valueListMaxWidth != null) {\n      eSelect.setPickerMaxWidth(valueListMaxWidth);\n    }\n    if (gos.get(\"editType\") !== \"fullRow\") {\n      this.addManagedListeners(this.eSelect, { selectedItem: () => params.stopEditing() });\n    }\n  }\n  afterGuiAttached() {\n    if (this.focusAfterAttached) {\n      this.eSelect.getFocusableElement().focus();\n    }\n    if (this.startedByEnter) {\n      setTimeout(() => {\n        if (this.isAlive()) {\n          this.eSelect.showPicker();\n        }\n      });\n    }\n  }\n  focusIn() {\n    this.eSelect.getFocusableElement().focus();\n  }\n  getValue() {\n    return this.eSelect.getValue();\n  }\n  isPopup() {\n    return false;\n  }\n};\n\n// packages/ag-grid-community/src/edit/cellEditors/textCellEditor.ts\nvar TextCellEditorInput = class {\n  getTemplate() {\n    return (\n      /* html */\n      `<ag-input-text-field class=\"ag-cell-editor\" data-ref=\"eInput\"></ag-input-text-field>`\n    );\n  }\n  getAgComponents() {\n    return [AgInputTextFieldSelector];\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    const maxLength = params.maxLength;\n    if (maxLength != null) {\n      eInput.setMaxLength(maxLength);\n    }\n  }\n  getValue() {\n    const { eInput, params } = this;\n    const value = eInput.getValue();\n    if (!_exists(value) && !_exists(params.value)) {\n      return params.value;\n    }\n    return params.parseValue(value);\n  }\n  getStartValue() {\n    const params = this.params;\n    const formatValue = params.useFormatter || params.column.getColDef().refData;\n    return formatValue ? params.formatValue(params.value) : params.value;\n  }\n  setCaret() {\n    const eInput = this.eInput;\n    const value = eInput.getValue();\n    const len = _exists(value) && value.length || 0;\n    if (len) {\n      eInput.getInputElement().setSelectionRange(len, len);\n    }\n  }\n};\nvar TextCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new TextCellEditorInput());\n  }\n};\n\n// packages/ag-grid-community/src/api/scrollApi.ts\nfunction getVerticalPixelRange(beans) {\n  return beans.ctrlsSvc.getScrollFeature().getVScrollPosition();\n}\nfunction getHorizontalPixelRange(beans) {\n  return beans.ctrlsSvc.getScrollFeature().getHScrollPosition();\n}\nfunction ensureColumnVisible(beans, key, position = \"auto\") {\n  beans.frameworkOverrides.wrapIncoming(\n    () => beans.ctrlsSvc.getScrollFeature().ensureColumnVisible(key, position),\n    \"ensureVisible\"\n  );\n}\nfunction ensureIndexVisible(beans, index, position) {\n  beans.frameworkOverrides.wrapIncoming(\n    () => beans.ctrlsSvc.getScrollFeature().ensureIndexVisible(index, position),\n    \"ensureVisible\"\n  );\n}\nfunction ensureNodeVisible(beans, nodeSelector, position = null) {\n  beans.frameworkOverrides.wrapIncoming(\n    () => beans.ctrlsSvc.getScrollFeature().ensureNodeVisible(nodeSelector, position),\n    \"ensureVisible\"\n  );\n}\n\n// packages/ag-grid-community/src/edit/editApi.ts\nfunction undoCellEditing(beans) {\n  beans.undoRedo?.undo(\"api\");\n}\nfunction redoCellEditing(beans) {\n  beans.undoRedo?.redo(\"api\");\n}\nfunction getCellEditorInstances(beans, params = {}) {\n  const res = [];\n  beans.rowRenderer.getCellCtrls(params.rowNodes, params.columns).forEach((cellCtrl) => {\n    const cellEditor = cellCtrl.comp?.getCellEditor();\n    if (cellEditor) {\n      res.push(_unwrapUserComp(cellEditor));\n    }\n  });\n  return res;\n}\nfunction getEditingCells(beans) {\n  const res = [];\n  beans.rowRenderer.getAllCellCtrls().forEach((cellCtrl) => {\n    if (cellCtrl.editing) {\n      const { cellPosition } = cellCtrl;\n      res.push(cellPosition);\n    }\n  });\n  return res;\n}\nfunction stopEditing(beans, cancel = false) {\n  beans.editSvc?.stopAllEditing(cancel);\n}\nfunction startEditingCell(beans, params) {\n  const column = beans.colModel.getCol(params.colKey);\n  if (!column) {\n    _warn(12, { colKey: params.colKey });\n    return;\n  }\n  const cellPosition = {\n    rowIndex: params.rowIndex,\n    rowPinned: params.rowPinned || null,\n    column\n  };\n  const notPinned = params.rowPinned == null;\n  if (notPinned) {\n    ensureIndexVisible(beans, params.rowIndex);\n  }\n  ensureColumnVisible(beans, params.colKey);\n  const cell = _getCellByPosition(beans, cellPosition);\n  if (!cell) {\n    return;\n  }\n  const { focusSvc, gos, editSvc } = beans;\n  const isFocusWithinCell = () => {\n    const activeElement = _getActiveDomElement(beans);\n    const eCell = cell.eGui;\n    return activeElement !== eCell && !!eCell?.contains(activeElement);\n  };\n  const forceBrowserFocus = gos.get(\"stopEditingWhenCellsLoseFocus\") && isFocusWithinCell();\n  if (forceBrowserFocus || !focusSvc.isCellFocused(cellPosition)) {\n    focusSvc.setFocusedCell({\n      ...cellPosition,\n      forceBrowserFocus,\n      preventScrollOnBrowserFocus: true\n    });\n  }\n  editSvc?.startRowOrCellEdit(cell, params.key);\n}\nfunction getCurrentUndoSize(beans) {\n  return beans.undoRedo?.getCurrentUndoStackSize() ?? 0;\n}\nfunction getCurrentRedoSize(beans) {\n  return beans.undoRedo?.getCurrentRedoStackSize() ?? 0;\n}\n\n// packages/ag-grid-community/src/edit/cellEditors/popupEditorWrapper.ts\nvar PopupEditorWrapper = class extends PopupComponent {\n  constructor(params) {\n    super(\n      /* html */\n      `<div class=\"ag-popup-editor\" tabindex=\"-1\"/>`\n    );\n    this.params = params;\n  }\n  postConstruct() {\n    _setDomData(this.gos, this.getGui(), \"popupEditorWrapper\", true);\n    this.addKeyDownListener();\n  }\n  addKeyDownListener() {\n    const eGui = this.getGui();\n    const params = this.params;\n    const listener = (event) => {\n      if (!_isUserSuppressingKeyboardEvent(this.gos, event, params.node, params.column, true)) {\n        params.onKeyDown(event);\n      }\n    };\n    this.addManagedElementListeners(eGui, { keydown: listener });\n  }\n};\n\n// packages/ag-grid-community/src/edit/editService.ts\nvar EditService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"editSvc\";\n  }\n  startEditing(cellCtrl, key = null, cellStartedEdit = false, event = null) {\n    if (!cellCtrl.isCellEditable() || cellCtrl.editing) {\n      return true;\n    }\n    if (!cellCtrl.comp) {\n      cellCtrl.onCompAttachedFuncs.push(() => {\n        this.startEditing(cellCtrl, key, cellStartedEdit, event);\n      });\n      return true;\n    }\n    const editorParams = this.createCellEditorParams(cellCtrl, key, cellStartedEdit);\n    const colDef = cellCtrl.column.getColDef();\n    const compDetails = _getCellEditorDetails(this.beans.userCompFactory, colDef, editorParams);\n    const popup = compDetails?.popupFromSelector != null ? compDetails.popupFromSelector : !!colDef.cellEditorPopup;\n    const position = compDetails?.popupPositionFromSelector != null ? compDetails.popupPositionFromSelector : colDef.cellEditorPopupPosition;\n    setEditing(cellCtrl, true, compDetails);\n    cellCtrl.comp.setEditDetails(compDetails, popup, position, this.gos.get(\"reactiveCustomComponents\"));\n    this.eventSvc.dispatchEvent(cellCtrl.createEvent(event, \"cellEditingStarted\"));\n    return !compDetails?.params?.suppressPreventDefault;\n  }\n  /**\n   * Ends the Cell Editing\n   * @param cancel `True` if the edit process is being canceled.\n   * @returns `True` if the value of the `GridCell` has been updated, otherwise `False`.\n   */\n  stopEditing(cellCtrl, cancel = false) {\n    cellCtrl.onEditorAttachedFuncs = [];\n    if (!cellCtrl.editing) {\n      return false;\n    }\n    const { comp: cellComp, column, rowNode } = cellCtrl;\n    const { newValue, newValueExists } = takeValueFromCellEditor(cancel, cellComp);\n    const oldValue = this.beans.valueSvc.getValueForDisplay(column, rowNode);\n    let valueChanged = false;\n    if (newValueExists) {\n      valueChanged = saveNewValue(cellCtrl, oldValue, newValue, rowNode, column);\n    }\n    setEditing(cellCtrl, false, void 0);\n    cellComp.setEditDetails();\n    cellCtrl.updateAndFormatValue(false);\n    cellCtrl.refreshCell({ forceRefresh: true, suppressFlash: true });\n    this.eventSvc.dispatchEvent({\n      ...cellCtrl.createEvent(null, \"cellEditingStopped\"),\n      oldValue,\n      newValue,\n      valueChanged\n    });\n    return valueChanged;\n  }\n  handleColDefChanged(cellCtrl) {\n    const cellEditor = cellCtrl.comp?.getCellEditor();\n    if (cellEditor?.refresh) {\n      const { eventKey, cellStartedEdit } = cellCtrl.editCompDetails.params;\n      const editorParams = this.createCellEditorParams(cellCtrl, eventKey, cellStartedEdit);\n      const colDef = cellCtrl.column.getColDef();\n      const compDetails = _getCellEditorDetails(this.beans.userCompFactory, colDef, editorParams);\n      cellEditor.refresh(compDetails.params);\n    }\n  }\n  setFocusOutOnEditor(cellCtrl) {\n    if (!cellCtrl.editing) {\n      return;\n    }\n    const cellEditor = cellCtrl.comp.getCellEditor();\n    if (cellEditor && cellEditor.focusOut) {\n      cellEditor.focusOut();\n    }\n  }\n  setFocusInOnEditor(cellCtrl) {\n    if (!cellCtrl.editing) {\n      return;\n    }\n    const cellComp = cellCtrl.comp;\n    const cellEditor = cellComp.getCellEditor();\n    if (cellEditor?.focusIn) {\n      cellEditor.focusIn();\n    } else {\n      cellCtrl.focusCell(true);\n      cellCtrl.onEditorAttachedFuncs.push(() => cellComp.getCellEditor()?.focusIn?.());\n    }\n  }\n  stopEditingAndFocus(cellCtrl, suppressNavigateAfterEdit = false, shiftKey = false) {\n    this.stopRowOrCellEdit(cellCtrl);\n    cellCtrl.focusCell(true);\n    if (!suppressNavigateAfterEdit) {\n      this.navigateAfterEdit(shiftKey, cellCtrl.cellPosition);\n    }\n  }\n  createPopupEditorWrapper(params) {\n    return new PopupEditorWrapper(params);\n  }\n  stopAllEditing(cancel = false) {\n    this.beans.rowRenderer.getAllRowCtrls().forEach((rowCtrl) => this.stopRowEditing(rowCtrl, cancel));\n  }\n  stopRowEditing(rowCtrl, cancel = false) {\n    if (rowCtrl.stoppingRowEdit) {\n      return;\n    }\n    const cellControls = rowCtrl.getAllCellCtrls();\n    const isRowEdit = rowCtrl.editing;\n    rowCtrl.stoppingRowEdit = true;\n    let fireRowEditEvent = false;\n    for (const ctrl of cellControls) {\n      const valueChanged = ctrl.stopEditing(cancel);\n      if (isRowEdit && !cancel && !fireRowEditEvent && valueChanged) {\n        fireRowEditEvent = true;\n      }\n    }\n    if (fireRowEditEvent) {\n      this.eventSvc.dispatchEvent(rowCtrl.createRowEvent(\"rowValueChanged\"));\n    }\n    if (isRowEdit) {\n      this.beans.rowEditSvc?.setEditing(rowCtrl, false);\n    }\n    rowCtrl.stoppingRowEdit = false;\n  }\n  addStopEditingWhenGridLosesFocus(viewports) {\n    if (!this.gos.get(\"stopEditingWhenCellsLoseFocus\")) {\n      return;\n    }\n    const focusOutListener = (event) => {\n      const elementWithFocus = event.relatedTarget;\n      if (_getTabIndex(elementWithFocus) === null) {\n        this.stopAllEditing();\n        return;\n      }\n      let clickInsideGrid = (\n        // see if click came from inside the viewports\n        viewports.some((viewport) => viewport.contains(elementWithFocus)) && // and also that it's not from a detail grid\n        _isElementInThisGrid(this.gos, elementWithFocus)\n      );\n      if (!clickInsideGrid) {\n        const popupSvc = this.beans.popupSvc;\n        clickInsideGrid = !!popupSvc && (popupSvc.getActivePopups().some((popup) => popup.contains(elementWithFocus)) || popupSvc.isElementWithinCustomPopup(elementWithFocus));\n      }\n      if (!clickInsideGrid) {\n        this.stopAllEditing();\n      }\n    };\n    viewports.forEach((viewport) => this.addManagedElementListeners(viewport, { focusout: focusOutListener }));\n  }\n  setInlineEditingCss(rowCtrl) {\n    const editing = rowCtrl.editing || rowCtrl.getAllCellCtrls().some((cellCtrl) => cellCtrl.editing);\n    rowCtrl.forEachGui(void 0, (gui) => {\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-inline-editing\", editing);\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-not-inline-editing\", !editing);\n    });\n  }\n  isCellEditable(column, rowNode) {\n    if (rowNode.group) {\n      if (this.gos.get(\"treeData\")) {\n        if (!rowNode.data && !this.gos.get(\"enableGroupEdit\")) {\n          return false;\n        }\n      } else {\n        if (!this.gos.get(\"enableGroupEdit\")) {\n          return false;\n        }\n      }\n    }\n    return column.isColumnFunc(rowNode, column.colDef.editable);\n  }\n  // called by rowRenderer when user navigates via tab key\n  startRowOrCellEdit(cellCtrl, key, event = null) {\n    if (!cellCtrl.comp) {\n      cellCtrl.onCompAttachedFuncs.push(() => {\n        this.startRowOrCellEdit(cellCtrl, key, event);\n      });\n      return true;\n    }\n    if (this.gos.get(\"editType\") === \"fullRow\") {\n      return this.beans.rowEditSvc?.startEditing(cellCtrl.rowCtrl, key, cellCtrl) ?? true;\n    } else {\n      return this.startEditing(cellCtrl, key, true, event);\n    }\n  }\n  // pass in 'true' to cancel the editing.\n  stopRowOrCellEdit(cellCtrl, cancel = false) {\n    if (this.gos.get(\"editType\") === \"fullRow\") {\n      this.stopRowEditing(cellCtrl.rowCtrl, cancel);\n    } else {\n      this.stopEditing(cellCtrl, cancel);\n    }\n  }\n  createCellEditorParams(cellCtrl, key, cellStartedEdit) {\n    const {\n      column,\n      rowNode,\n      cellPosition: { rowIndex }\n    } = cellCtrl;\n    const { valueSvc, gos } = this.beans;\n    return _addGridCommonParams(gos, {\n      value: valueSvc.getValueForDisplay(column, rowNode),\n      eventKey: key,\n      column,\n      colDef: column.getColDef(),\n      rowIndex,\n      node: rowNode,\n      data: rowNode.data,\n      cellStartedEdit,\n      onKeyDown: cellCtrl.onKeyDown.bind(cellCtrl),\n      stopEditing: cellCtrl.stopEditingAndFocus.bind(cellCtrl),\n      eGridCell: cellCtrl.eGui,\n      parseValue: (newValue) => valueSvc.parseValue(column, rowNode, newValue, cellCtrl.value),\n      formatValue: cellCtrl.formatValue.bind(cellCtrl)\n    });\n  }\n  navigateAfterEdit(shiftKey, cellPosition) {\n    const enterNavigatesVerticallyAfterEdit = this.gos.get(\"enterNavigatesVerticallyAfterEdit\");\n    if (enterNavigatesVerticallyAfterEdit) {\n      const key = shiftKey ? KeyCode.UP : KeyCode.DOWN;\n      this.beans.navigation?.navigateToNextCell(null, key, cellPosition, false);\n    }\n  }\n};\nfunction setEditing(cellCtrl, editing, compDetails) {\n  cellCtrl.editCompDetails = compDetails;\n  if (cellCtrl.editing === editing) {\n    return;\n  }\n  cellCtrl.editing = editing;\n}\nfunction takeValueFromCellEditor(cancel, cellComp) {\n  const noValueResult = { newValueExists: false };\n  if (cancel) {\n    return noValueResult;\n  }\n  const cellEditor = cellComp.getCellEditor();\n  if (!cellEditor) {\n    return noValueResult;\n  }\n  const userWantsToCancel = cellEditor.isCancelAfterEnd && cellEditor.isCancelAfterEnd();\n  if (userWantsToCancel) {\n    return noValueResult;\n  }\n  const newValue = cellEditor.getValue();\n  return {\n    newValue,\n    newValueExists: true\n  };\n}\nfunction saveNewValue(cellCtrl, oldValue, newValue, rowNode, column) {\n  if (newValue === oldValue) {\n    return false;\n  }\n  cellCtrl.suppressRefreshCell = true;\n  const valueChanged = rowNode.setDataValue(column, newValue, \"edit\");\n  cellCtrl.suppressRefreshCell = false;\n  return valueChanged;\n}\n\n// packages/ag-grid-community/src/edit/rowEditService.ts\nvar RowEditService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowEditSvc\";\n  }\n  startEditing(rowCtrl, key = null, sourceRenderedCell = null, event = null) {\n    if (rowCtrl.editing) {\n      return true;\n    }\n    let preventDefault = true;\n    let atLeastOneEditing = false;\n    const { editSvc } = this.beans;\n    rowCtrl.getAllCellCtrls().forEach((cellCtrl) => {\n      const cellStartedEdit = cellCtrl === sourceRenderedCell;\n      if (cellStartedEdit) {\n        preventDefault = editSvc?.startEditing(cellCtrl, key, cellStartedEdit, event) ?? true;\n      } else {\n        editSvc?.startEditing(cellCtrl, null, cellStartedEdit, event);\n      }\n      atLeastOneEditing || (atLeastOneEditing = cellCtrl.editing);\n    });\n    if (atLeastOneEditing) {\n      this.setEditing(rowCtrl, true);\n    }\n    return preventDefault;\n  }\n  setEditing(rowCtrl, value) {\n    rowCtrl.editing = value;\n    rowCtrl.forEachGui(void 0, (gui) => gui.rowComp.addOrRemoveCssClass(\"ag-row-editing\", value));\n    const event = value ? rowCtrl.createRowEvent(\"rowEditingStarted\") : rowCtrl.createRowEvent(\"rowEditingStopped\");\n    this.eventSvc.dispatchEvent(event);\n  }\n};\n\n// packages/ag-grid-community/src/edit/editModule.ts\nvar EditCoreModule = {\n  moduleName: \"EditCore\",\n  version: VERSION,\n  beans: [EditService, RowEditService],\n  apiFunctions: {\n    getCellEditorInstances,\n    getEditingCells,\n    stopEditing,\n    startEditingCell\n  },\n  dependsOn: [PopupModule],\n  css: [cellEditingCSS]\n};\nvar UndoRedoEditModule = {\n  moduleName: \"UndoRedoEdit\",\n  version: VERSION,\n  beans: [UndoRedoService],\n  apiFunctions: {\n    undoCellEditing,\n    redoCellEditing,\n    getCurrentUndoSize,\n    getCurrentRedoSize\n  },\n  dependsOn: [EditCoreModule]\n};\nvar TextEditorModule = {\n  moduleName: \"TextEditor\",\n  version: VERSION,\n  userComponents: { agCellEditor: TextCellEditor, agTextCellEditor: TextCellEditor },\n  dependsOn: [EditCoreModule]\n};\nvar NumberEditorModule = {\n  moduleName: \"NumberEditor\",\n  version: VERSION,\n  userComponents: {\n    agNumberCellEditor: {\n      classImp: NumberCellEditor,\n      params: {\n        suppressPreventDefault: true\n      }\n    }\n  },\n  dependsOn: [EditCoreModule]\n};\nvar DateEditorModule = {\n  moduleName: \"DateEditor\",\n  version: VERSION,\n  userComponents: {\n    agDateCellEditor: DateCellEditor,\n    agDateStringCellEditor: DateStringCellEditor\n  },\n  dependsOn: [EditCoreModule]\n};\nvar CheckboxEditorModule = {\n  moduleName: \"CheckboxEditor\",\n  version: VERSION,\n  userComponents: {\n    agCheckboxCellEditor: CheckboxCellEditor\n  },\n  dependsOn: [EditCoreModule]\n};\nvar SelectEditorModule = {\n  moduleName: \"SelectEditor\",\n  version: VERSION,\n  userComponents: { agSelectCellEditor: SelectCellEditor },\n  dependsOn: [EditCoreModule]\n};\nvar LargeTextEditorModule = {\n  moduleName: \"LargeTextEditor\",\n  version: VERSION,\n  userComponents: { agLargeTextCellEditor: LargeTextCellEditor },\n  dependsOn: [EditCoreModule]\n};\nvar CustomEditorModule = {\n  moduleName: \"CustomEditor\",\n  version: VERSION,\n  dependsOn: [EditCoreModule]\n};\n\n// packages/ag-grid-community/src/columns/selectionColService.ts\nvar SelectionColService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"selectionColSvc\";\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"rowSelection\", (event) => {\n      this.onSelectionOptionsChanged(\n        event.currentValue,\n        event.previousValue,\n        _convertColumnEventSourceType(event.source)\n      );\n    });\n    this.addManagedPropertyListener(\"selectionColumnDef\", this.updateColumns.bind(this));\n  }\n  addColumns(cols) {\n    const selectionCols = this.columns;\n    if (selectionCols == null) {\n      return;\n    }\n    cols.list = selectionCols.list.concat(cols.list);\n    cols.tree = selectionCols.tree.concat(cols.tree);\n    _updateColsMap(cols);\n  }\n  createColumns(cols, updateOrders) {\n    const destroyCollection = () => {\n      _destroyColumnTree(this.beans, this.columns?.tree);\n      this.columns = null;\n    };\n    const newTreeDepth = cols.treeDepth;\n    const oldTreeDepth = this.columns?.treeDepth ?? -1;\n    const treeDepthSame = oldTreeDepth == newTreeDepth;\n    const list = this.generateSelectionCols();\n    const areSame = _areColIdsEqual(list, this.columns?.list ?? []);\n    if (areSame && treeDepthSame) {\n      return;\n    }\n    destroyCollection();\n    const { colGroupSvc } = this.beans;\n    const treeDepth = colGroupSvc?.findDepth(cols.tree) ?? 0;\n    const tree = colGroupSvc?.balanceTreeForAutoCols(list, treeDepth) ?? [];\n    this.columns = {\n      list,\n      tree,\n      treeDepth,\n      map: {}\n    };\n    const putSelectionColsFirstInList = (cols2) => {\n      if (!cols2) {\n        return null;\n      }\n      const colsFiltered = cols2.filter((col) => !isColumnSelectionCol(col));\n      return [...list, ...colsFiltered];\n    };\n    updateOrders(putSelectionColsFirstInList);\n  }\n  updateColumns(event) {\n    const source = _convertColumnEventSourceType(event.source);\n    const current = event.currentValue;\n    this.columns?.list.forEach((col) => {\n      const newColDef = this.createSelectionColDef(current);\n      col.setColDef(newColDef, null, source);\n      _applyColumnState(this.beans, { state: [{ colId: col.getColId(), ...newColDef }] }, source);\n    });\n  }\n  getColumn(key) {\n    return this.columns?.list.find((col) => _columnsMatch(col, key)) ?? null;\n  }\n  getColumns() {\n    return this.columns?.list ?? null;\n  }\n  isSelectionColumnEnabled() {\n    const { gos, beans } = this;\n    const rowSelection = gos.get(\"rowSelection\");\n    if (typeof rowSelection !== \"object\" || !_isRowSelection(gos)) {\n      return false;\n    }\n    const hasAutoCols = (beans.autoColSvc?.getColumns()?.length ?? 0) > 0;\n    if (rowSelection.checkboxLocation === \"autoGroupColumn\" && hasAutoCols) {\n      return false;\n    }\n    const checkboxes = !!_getCheckboxes(rowSelection);\n    const headerCheckbox = _getHeaderCheckbox(rowSelection);\n    return checkboxes || headerCheckbox;\n  }\n  createSelectionColDef(def) {\n    const { gos } = this.beans;\n    const selectionColumnDef = def ?? gos.get(\"selectionColumnDef\");\n    const enableRTL = gos.get(\"enableRtl\");\n    const { rowSpan: _, spanRows: __, ...filteredSelColDef } = selectionColumnDef ?? {};\n    return {\n      // overridable properties\n      width: 50,\n      resizable: false,\n      suppressHeaderMenuButton: true,\n      sortable: false,\n      suppressMovable: true,\n      lockPosition: enableRTL ? \"right\" : \"left\",\n      comparator(valueA, valueB, nodeA, nodeB) {\n        const aSelected = nodeA.isSelected();\n        const bSelected = nodeB.isSelected();\n        return aSelected === bSelected ? 0 : aSelected ? 1 : -1;\n      },\n      editable: false,\n      suppressFillHandle: true,\n      pinned: null,\n      // overrides\n      ...filteredSelColDef,\n      // non-overridable properties\n      colId: SELECTION_COLUMN_ID\n    };\n  }\n  generateSelectionCols() {\n    if (!this.isSelectionColumnEnabled()) {\n      return [];\n    }\n    const colDef = this.createSelectionColDef();\n    const colId = colDef.colId;\n    this.beans.validation?.validateColDef(colDef, colId, true);\n    const col = new AgColumn(colDef, null, colId, false);\n    this.createBean(col);\n    return [col];\n  }\n  onSelectionOptionsChanged(current, prev, source) {\n    const prevCheckbox = prev && typeof prev !== \"string\" ? _getCheckboxes(prev) : void 0;\n    const currCheckbox = current && typeof current !== \"string\" ? _getCheckboxes(current) : void 0;\n    const checkboxHasChanged = prevCheckbox !== currCheckbox;\n    const prevHeaderCheckbox = prev && typeof prev !== \"string\" ? _getHeaderCheckbox(prev) : void 0;\n    const currHeaderCheckbox = current && typeof current !== \"string\" ? _getHeaderCheckbox(current) : void 0;\n    const headerCheckboxHasChanged = prevHeaderCheckbox !== currHeaderCheckbox;\n    const currLocation = _getCheckboxLocation(current);\n    const prevLocation = _getCheckboxLocation(prev);\n    const locationChanged = currLocation !== prevLocation;\n    if (checkboxHasChanged || headerCheckboxHasChanged || locationChanged) {\n      this.beans.colModel.refreshAll(source);\n    }\n  }\n  destroy() {\n    _destroyColumnTree(this.beans, this.columns?.tree);\n    super.destroy();\n  }\n  refreshVisibility(source) {\n    if (!this.isSelectionColumnEnabled()) {\n      return;\n    }\n    const beans = this.beans;\n    const visibleColumns = beans.visibleCols.getAllTrees() ?? [];\n    if (visibleColumns.length === 0) {\n      return;\n    }\n    if (!visibleColumns.some(isLeafColumnSelectionCol)) {\n      const existingState = _getColumnState(beans).find((state) => isColumnSelectionCol(state.colId));\n      if (existingState) {\n        _applyColumnState(\n          beans,\n          {\n            state: [{ colId: existingState.colId, hide: !existingState.hide }]\n          },\n          source\n        );\n      }\n    }\n    if (visibleColumns.length === 1) {\n      const firstColumn = visibleColumns[0];\n      const leafSelectionCol = getLeafColumnSelectionCol(firstColumn);\n      if (!leafSelectionCol) {\n        return;\n      }\n      _applyColumnState(beans, { state: [{ colId: leafSelectionCol.getColId(), hide: true }] }, source);\n    }\n  }\n};\nvar isLeafColumnSelectionCol = (c) => c.isColumn ? isColumnSelectionCol(c) : c.getChildren()?.some(isLeafColumnSelectionCol) ?? false;\nfunction getLeafColumnSelectionCol(c) {\n  if (c.isColumn) {\n    return isColumnSelectionCol(c) ? c : null;\n  }\n  const children = c.getChildren() ?? [];\n  for (const child of children) {\n    const selCol = getLeafColumnSelectionCol(child);\n    if (selCol) {\n      return selCol;\n    }\n  }\n  return null;\n}\n\n// packages/ag-grid-community/src/selection/rowSelectionApi.ts\nfunction setNodesSelected(beans, params) {\n  const allNodesValid = params.nodes.every((node) => {\n    if (node.rowPinned) {\n      _warn(59);\n      return false;\n    }\n    if (node.id === void 0) {\n      _warn(60);\n      return false;\n    }\n    return true;\n  });\n  if (!allNodesValid) {\n    return;\n  }\n  const { nodes, source, newValue } = params;\n  beans.selectionSvc?.setNodesSelected({ nodes, source: source ?? \"api\", newValue });\n}\nfunction selectAll(beans, selectAll2, source = \"apiSelectAll\") {\n  beans.selectionSvc?.selectAllRowNodes({ source, selectAll: selectAll2 });\n}\nfunction deselectAll(beans, selectAll2, source = \"apiSelectAll\") {\n  beans.selectionSvc?.deselectAllRowNodes({ source, selectAll: selectAll2 });\n}\nfunction selectAllFiltered(beans, source = \"apiSelectAllFiltered\") {\n  beans.selectionSvc?.selectAllRowNodes({ source, selectAll: \"filtered\" });\n}\nfunction deselectAllFiltered(beans, source = \"apiSelectAllFiltered\") {\n  beans.selectionSvc?.deselectAllRowNodes({ source, selectAll: \"filtered\" });\n}\nfunction selectAllOnCurrentPage(beans, source = \"apiSelectAllCurrentPage\") {\n  beans.selectionSvc?.selectAllRowNodes({ source, selectAll: \"currentPage\" });\n}\nfunction deselectAllOnCurrentPage(beans, source = \"apiSelectAllCurrentPage\") {\n  beans.selectionSvc?.deselectAllRowNodes({ source, selectAll: \"currentPage\" });\n}\nfunction getSelectedNodes(beans) {\n  return beans.selectionSvc?.getSelectedNodes() ?? [];\n}\nfunction getSelectedRows(beans) {\n  return beans.selectionSvc?.getSelectedRows() ?? [];\n}\n\n// packages/ag-grid-community/src/selection/selectionService.ts\nvar SelectionService = class extends BaseSelectionService {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"selectionSvc\";\n    this.selectedNodes = /* @__PURE__ */ new Map();\n    /** Only used to track detail grid selection state when master/detail is enabled */\n    this.detailSelection = /* @__PURE__ */ new Map();\n    this.masterSelectsDetail = false;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const { gos } = this;\n    this.mode = _getRowSelectionMode(gos);\n    this.groupSelectsDescendants = _getGroupSelectsDescendants(gos);\n    this.groupSelectsFiltered = _getGroupSelection(gos) === \"filteredDescendants\";\n    this.masterSelectsDetail = _getMasterSelects(gos) === \"detail\";\n    this.addManagedPropertyListeners([\"groupSelectsChildren\", \"groupSelectsFiltered\", \"rowSelection\"], () => {\n      const groupSelectsDescendants = _getGroupSelectsDescendants(gos);\n      const selectionMode = _getRowSelectionMode(gos);\n      const groupSelectsFiltered = _getGroupSelection(gos) === \"filteredDescendants\";\n      this.masterSelectsDetail = _getMasterSelects(gos) === \"detail\";\n      if (groupSelectsDescendants !== this.groupSelectsDescendants || groupSelectsFiltered !== this.groupSelectsFiltered || selectionMode !== this.mode) {\n        this.deselectAllRowNodes({ source: \"api\" });\n        this.groupSelectsDescendants = groupSelectsDescendants;\n        this.groupSelectsFiltered = groupSelectsFiltered;\n        this.mode = selectionMode;\n      }\n    });\n    this.addManagedEventListeners({ rowSelected: this.onRowSelected.bind(this) });\n  }\n  destroy() {\n    super.destroy();\n    this.resetNodes();\n  }\n  handleSelectionEvent(event, rowNode, source) {\n    if (this.isRowSelectionBlocked(rowNode))\n      return 0;\n    const selection = this.inferNodeSelections(rowNode, event.shiftKey, event.metaKey || event.ctrlKey, source);\n    if (selection == null) {\n      return 0;\n    }\n    this.selectionCtx.selectAll = false;\n    if (\"select\" in selection) {\n      if (selection.reset) {\n        this.resetNodes();\n      } else {\n        this.selectRange(selection.deselect, false, source);\n      }\n      return this.selectRange(selection.select, true, source);\n    } else {\n      return this.setNodesSelected({\n        nodes: [selection.node],\n        newValue: selection.newValue,\n        clearSelection: selection.clearSelection,\n        event,\n        source\n      });\n    }\n  }\n  setNodesSelected({\n    newValue,\n    clearSelection,\n    suppressFinishActions,\n    nodes,\n    event,\n    source\n  }) {\n    if (!_isRowSelection(this.gos) && newValue) {\n      _warn(132);\n      return 0;\n    }\n    if (nodes.length === 0)\n      return 0;\n    if (nodes.length > 1 && !this.isMultiSelect()) {\n      _warn(130);\n      return 0;\n    }\n    let updatedCount = 0;\n    for (let i = 0; i < nodes.length; i++) {\n      const rowNode = nodes[i];\n      const node = _normaliseFooterRef(rowNode);\n      const skipThisNode = this.groupSelectsFiltered && node.group;\n      if (node.rowPinned) {\n        _warn(59);\n        continue;\n      }\n      if (node.id === void 0) {\n        _warn(60);\n        continue;\n      }\n      if (!skipThisNode) {\n        const thisNodeWasSelected = this.selectRowNode(node, newValue, event, source);\n        if (thisNodeWasSelected) {\n          this.detailSelection.delete(node.id);\n          updatedCount++;\n        }\n      }\n      if (this.groupSelectsDescendants && node.childrenAfterGroup?.length) {\n        updatedCount += this.selectChildren(node, newValue, source);\n      }\n    }\n    if (!suppressFinishActions) {\n      const clearOtherNodes = newValue && (clearSelection || !this.isMultiSelect());\n      if (clearOtherNodes) {\n        updatedCount += this.clearOtherNodes(_normaliseFooterRef(nodes[0]), source);\n      }\n      if (updatedCount > 0) {\n        this.updateGroupsFromChildrenSelections(source);\n        this.dispatchSelectionChanged(source);\n      }\n    }\n    return updatedCount;\n  }\n  // not to be mixed up with 'cell range selection' where you drag the mouse, this is row range selection, by\n  // holding down 'shift'.\n  selectRange(nodesToSelect, value, source) {\n    let updatedCount = 0;\n    nodesToSelect.forEach((rowNode) => {\n      if (rowNode.group && this.groupSelectsDescendants) {\n        return;\n      }\n      const nodeWasSelected = this.selectRowNode(rowNode, value, void 0, source);\n      if (nodeWasSelected) {\n        updatedCount++;\n      }\n    });\n    if (updatedCount > 0) {\n      this.updateGroupsFromChildrenSelections(source);\n      this.dispatchSelectionChanged(source);\n    }\n    return updatedCount;\n  }\n  selectChildren(node, newValue, source) {\n    const children = this.groupSelectsFiltered ? node.childrenAfterAggFilter : node.childrenAfterGroup;\n    if (!children) {\n      return 0;\n    }\n    return this.setNodesSelected({\n      newValue,\n      clearSelection: false,\n      suppressFinishActions: true,\n      source,\n      nodes: children\n    });\n  }\n  getSelectedNodes() {\n    return Array.from(this.selectedNodes.values());\n  }\n  getSelectedRows() {\n    const selectedRows = [];\n    this.selectedNodes.forEach((rowNode) => selectedRows.push(rowNode.data));\n    return selectedRows;\n  }\n  getSelectionCount() {\n    return this.selectedNodes.size;\n  }\n  /**\n   * This method is used by the CSRM to remove groups which are being disposed of,\n   * events do not need fired in this case\n   */\n  filterFromSelection(predicate) {\n    const newSelectedNodes = /* @__PURE__ */ new Map();\n    this.selectedNodes.forEach((rowNode, key) => {\n      if (predicate(rowNode)) {\n        newSelectedNodes.set(key, rowNode);\n      }\n    });\n    this.selectedNodes = newSelectedNodes;\n  }\n  updateGroupsFromChildrenSelections(source, changedPath) {\n    if (!this.groupSelectsDescendants) {\n      return false;\n    }\n    const { gos, rowModel } = this.beans;\n    if (!_isClientSideRowModel(gos, rowModel)) {\n      return false;\n    }\n    const rootNode = rowModel.rootNode;\n    if (!rootNode) {\n      return false;\n    }\n    if (!changedPath) {\n      changedPath = new ChangedPath(true, rootNode);\n      changedPath.active = false;\n    }\n    let selectionChanged = false;\n    changedPath.forEachChangedNodeDepthFirst((rowNode) => {\n      if (rowNode !== rootNode) {\n        const selected = this.calculateSelectedFromChildren(rowNode);\n        selectionChanged = this.selectRowNode(rowNode, selected === null ? false : selected, void 0, source) || selectionChanged;\n      }\n    });\n    return selectionChanged;\n  }\n  clearOtherNodes(rowNodeToKeepSelected, source) {\n    const groupsToRefresh = /* @__PURE__ */ new Map();\n    let updatedCount = 0;\n    this.selectedNodes.forEach((otherRowNode) => {\n      if (otherRowNode && otherRowNode.id !== rowNodeToKeepSelected.id) {\n        const rowNode = this.selectedNodes.get(otherRowNode.id);\n        updatedCount += this.setNodesSelected({\n          nodes: [rowNode],\n          newValue: false,\n          clearSelection: false,\n          suppressFinishActions: true,\n          source\n        });\n        if (this.groupSelectsDescendants && otherRowNode.parent) {\n          groupsToRefresh.set(otherRowNode.parent.id, otherRowNode.parent);\n        }\n      }\n    });\n    groupsToRefresh.forEach((group) => {\n      const selected = this.calculateSelectedFromChildren(group);\n      this.selectRowNode(group, selected === null ? false : selected, void 0, source);\n    });\n    return updatedCount;\n  }\n  onRowSelected(event) {\n    const rowNode = event.node;\n    if (this.groupSelectsDescendants && rowNode.group) {\n      return;\n    }\n    if (rowNode.isSelected()) {\n      this.selectedNodes.set(rowNode.id, rowNode);\n    } else {\n      this.selectedNodes.delete(rowNode.id);\n    }\n  }\n  syncInRowNode(rowNode, oldNode) {\n    this.syncInOldRowNode(rowNode, oldNode);\n    this.syncInNewRowNode(rowNode);\n  }\n  createDaemonNode(rowNode) {\n    if (!rowNode.id) {\n      return void 0;\n    }\n    const oldNode = new RowNode(this.beans);\n    oldNode.id = rowNode.id;\n    oldNode.data = rowNode.data;\n    oldNode.__daemon = true;\n    oldNode.__selected = rowNode.__selected;\n    oldNode.level = rowNode.level;\n    return oldNode;\n  }\n  // if the id has changed for the node, then this means the rowNode\n  // is getting used for a different data item, which breaks\n  // our selectedNodes, as the node now is mapped by the old id\n  // which is inconsistent. so to keep the old node as selected,\n  // we swap in the clone (with the old id and old data). this means\n  // the oldNode is effectively a daemon we keep a reference to,\n  // so if client calls api.getSelectedNodes(), it gets the daemon\n  // in the result. when the client un-selects, the reference to the\n  // daemon is removed. the daemon, because it's an oldNode, is not\n  // used by the grid for rendering, it's a copy of what the node used\n  // to be like before the id was changed.\n  syncInOldRowNode(rowNode, oldNode) {\n    if (oldNode && rowNode.id !== oldNode.id) {\n      const oldNodeSelected = this.selectedNodes.get(oldNode.id) == rowNode;\n      if (oldNodeSelected) {\n        this.selectedNodes.set(oldNode.id, oldNode);\n      }\n    }\n  }\n  syncInNewRowNode(rowNode) {\n    if (this.selectedNodes.has(rowNode.id)) {\n      rowNode.__selected = true;\n      this.selectedNodes.set(rowNode.id, rowNode);\n    } else {\n      rowNode.__selected = false;\n    }\n  }\n  reset(source) {\n    const selectionCount = this.getSelectionCount();\n    this.resetNodes();\n    if (selectionCount) {\n      this.dispatchSelectionChanged(source);\n    }\n  }\n  resetNodes() {\n    this.selectedNodes.forEach((node) => {\n      this.selectRowNode(node, false);\n    });\n    this.selectedNodes.clear();\n  }\n  // returns a list of all nodes at 'best cost' - a feature to be used\n  // with groups / trees. if a group has all it's children selected,\n  // then the group appears in the result, but not the children.\n  // Designed for use with 'children' as the group selection type,\n  // where groups don't actually appear in the selection normally.\n  getBestCostNodeSelection() {\n    const { gos, rowModel } = this.beans;\n    if (!_isClientSideRowModel(gos, rowModel)) {\n      return;\n    }\n    const topLevelNodes = rowModel.getTopLevelNodes();\n    if (topLevelNodes === null) {\n      return;\n    }\n    const result = [];\n    function traverse(nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        const node = nodes[i];\n        if (node.isSelected()) {\n          result.push(node);\n        } else {\n          if (node.group && node.childrenAfterGroup) {\n            traverse(node.childrenAfterGroup);\n          }\n        }\n      }\n    }\n    traverse(topLevelNodes);\n    return result;\n  }\n  isEmpty() {\n    return this.getSelectionCount() === 0;\n  }\n  deselectAllRowNodes({ source, selectAll: selectAll2 }) {\n    const rowModelClientSide = _isClientSideRowModel(this.gos);\n    let updatedNodes = false;\n    const callback = (rowNode) => {\n      const updated = this.selectRowNode(_normaliseFooterRef(rowNode), false, void 0, source);\n      updatedNodes || (updatedNodes = updated);\n    };\n    if (selectAll2 === \"currentPage\" || selectAll2 === \"filtered\") {\n      if (!rowModelClientSide) {\n        _error(102);\n        return;\n      }\n      this.getNodesToSelect(selectAll2).forEach(callback);\n    } else {\n      this.selectedNodes.forEach(callback);\n      this.reset(source);\n    }\n    this.selectionCtx.selectAll = false;\n    if (rowModelClientSide && this.groupSelectsDescendants) {\n      const updated = this.updateGroupsFromChildrenSelections(source);\n      updatedNodes || (updatedNodes = updated);\n    }\n    if (updatedNodes) {\n      this.dispatchSelectionChanged(source);\n    }\n  }\n  getSelectedCounts(selectAll2) {\n    let selectedCount = 0;\n    let notSelectedCount = 0;\n    this.getNodesToSelect(selectAll2).forEach((node) => {\n      if (this.groupSelectsDescendants && node.group) {\n        return;\n      }\n      if (node.isSelected()) {\n        selectedCount++;\n      } else if (node.selectable) {\n        notSelectedCount++;\n      }\n    });\n    return { selectedCount, notSelectedCount };\n  }\n  getSelectAllState(selectAll2) {\n    const { selectedCount, notSelectedCount } = this.getSelectedCounts(selectAll2);\n    return _calculateSelectAllState(selectedCount, notSelectedCount) ?? null;\n  }\n  hasNodesToSelect(selectAll2) {\n    return this.getNodesToSelect(selectAll2).filter((node) => node.selectable).length > 0;\n  }\n  /**\n   * @param selectAll See `MultiRowSelectionOptions.selectAll`\n   * @returns all nodes including unselectable nodes which are the target of this selection attempt\n   */\n  getNodesToSelect(selectAll2) {\n    if (!this.canSelectAll()) {\n      return [];\n    }\n    const nodes = [];\n    if (selectAll2 === \"currentPage\") {\n      this.forEachNodeOnPage((node) => {\n        if (!node.group) {\n          nodes.push(node);\n          return;\n        }\n        if (!node.expanded && !node.footer) {\n          const recursivelyAddChildren = (child) => {\n            nodes.push(child);\n            if (child.childrenAfterFilter?.length) {\n              child.childrenAfterFilter.forEach(recursivelyAddChildren);\n            }\n          };\n          recursivelyAddChildren(node);\n          return;\n        }\n        if (!this.groupSelectsDescendants) {\n          nodes.push(node);\n        }\n      });\n      return nodes;\n    }\n    const clientSideRowModel = this.beans.rowModel;\n    if (selectAll2 === \"filtered\") {\n      clientSideRowModel.forEachNodeAfterFilter((node) => {\n        nodes.push(node);\n      });\n      return nodes;\n    }\n    clientSideRowModel.forEachNode((node) => {\n      nodes.push(node);\n    });\n    return nodes;\n  }\n  forEachNodeOnPage(callback) {\n    const { pageBounds, rowModel } = this.beans;\n    const firstRow = pageBounds.getFirstRow();\n    const lastRow = pageBounds.getLastRow();\n    for (let i = firstRow; i <= lastRow; i++) {\n      const node = rowModel.getRow(i);\n      if (node) {\n        callback(node);\n      }\n    }\n  }\n  selectAllRowNodes(params) {\n    const { gos, selectionCtx } = this;\n    if (!_isRowSelection(gos)) {\n      _warn(132);\n      return;\n    }\n    if (_isUsingNewRowSelectionAPI(gos) && !_isMultiRowSelection(gos)) {\n      _warn(130);\n      return;\n    }\n    if (!this.canSelectAll()) {\n      return;\n    }\n    const { source, selectAll: selectAll2 } = params;\n    let updatedNodes = false;\n    this.getNodesToSelect(selectAll2).forEach((rowNode) => {\n      const updated = this.selectRowNode(_normaliseFooterRef(rowNode), true, void 0, source);\n      updatedNodes || (updatedNodes = updated);\n    });\n    selectionCtx.selectAll = true;\n    if (_isClientSideRowModel(gos) && this.groupSelectsDescendants) {\n      const updated = this.updateGroupsFromChildrenSelections(source);\n      updatedNodes || (updatedNodes = updated);\n    }\n    if (updatedNodes) {\n      this.dispatchSelectionChanged(source);\n    }\n  }\n  getSelectionState() {\n    const selectedIds = [];\n    this.selectedNodes.forEach((node) => {\n      if (node?.id) {\n        selectedIds.push(node.id);\n      }\n    });\n    return selectedIds.length ? selectedIds : null;\n  }\n  setSelectionState(state, source) {\n    if (!Array.isArray(state)) {\n      _error(103);\n      return;\n    }\n    const rowIds = new Set(state);\n    const nodes = [];\n    this.beans.rowModel.forEachNode((node) => {\n      if (rowIds.has(node.id)) {\n        nodes.push(node);\n      }\n    });\n    this.setNodesSelected({\n      newValue: true,\n      nodes,\n      source\n    });\n  }\n  canSelectAll() {\n    const { gos, rowModel } = this.beans;\n    if (!_isClientSideRowModel(gos)) {\n      _error(100, { rowModelType: rowModel.getType() });\n      return false;\n    }\n    return true;\n  }\n  /**\n   * Updates the selectable state for a node by invoking isRowSelectable callback.\n   * If the node is not selectable, it will be deselected.\n   *\n   * Callers:\n   *  - property isRowSelectable changed\n   *  - after grouping / treeData via `updateSelectableAfterGrouping`\n   */\n  updateSelectable(changedPath) {\n    const { gos, rowModel } = this.beans;\n    if (!_isRowSelection(gos)) {\n      return;\n    }\n    const source = \"selectableChanged\";\n    const skipLeafNodes = changedPath !== void 0;\n    const isCSRMGroupSelectsDescendants = _isClientSideRowModel(gos) && this.groupSelectsDescendants;\n    const nodesToDeselect = [];\n    const nodeCallback = (node) => {\n      if (skipLeafNodes && !node.group) {\n        return;\n      }\n      if (isCSRMGroupSelectsDescendants && node.group) {\n        const hasSelectableChild = node.childrenAfterGroup?.some((rowNode) => rowNode.selectable) ?? false;\n        this.setRowSelectable(node, hasSelectableChild, true);\n        return;\n      }\n      const rowSelectable = this.updateRowSelectable(node, true);\n      if (!rowSelectable && node.isSelected()) {\n        nodesToDeselect.push(node);\n      }\n    };\n    if (isCSRMGroupSelectsDescendants) {\n      if (changedPath === void 0) {\n        const rootNode = rowModel.rootNode;\n        changedPath = rootNode ? new ChangedPath(false, rootNode) : void 0;\n      }\n      changedPath?.forEachChangedNodeDepthFirst(nodeCallback, !skipLeafNodes, !skipLeafNodes);\n    } else {\n      rowModel.forEachNode(nodeCallback);\n    }\n    if (nodesToDeselect.length) {\n      this.setNodesSelected({\n        nodes: nodesToDeselect,\n        newValue: false,\n        source\n      });\n    }\n    if (!skipLeafNodes && isCSRMGroupSelectsDescendants) {\n      this.updateGroupsFromChildrenSelections?.(source);\n    }\n  }\n  // only called by CSRM\n  updateSelectableAfterGrouping(changedPath) {\n    this.updateSelectable(changedPath);\n    if (this.groupSelectsDescendants) {\n      const selectionChanged = this.updateGroupsFromChildrenSelections?.(\"rowGroupChanged\", changedPath);\n      if (selectionChanged) {\n        this.dispatchSelectionChanged(\"rowGroupChanged\");\n      }\n    }\n  }\n  refreshMasterNodeState(node, e) {\n    if (!this.masterSelectsDetail)\n      return;\n    const detailApi = node.detailNode?.detailGridInfo?.api;\n    if (!detailApi)\n      return;\n    const isSelectAll = _isAllSelected(detailApi);\n    const current = node.isSelected();\n    if (current !== isSelectAll) {\n      const selectionChanged = this.selectRowNode(node, isSelectAll, e, \"masterDetail\");\n      if (selectionChanged) {\n        this.dispatchSelectionChanged(\"masterDetail\");\n      }\n    }\n    if (!isSelectAll) {\n      const detailSelected = this.detailSelection.get(node.id) ?? /* @__PURE__ */ new Set();\n      for (const n of detailApi.getSelectedNodes()) {\n        detailSelected.add(n.id);\n      }\n      this.detailSelection.set(node.id, detailSelected);\n    }\n  }\n  setDetailSelectionState(masterNode, detailGridOptions, detailApi) {\n    if (!this.masterSelectsDetail)\n      return;\n    if (!_isMultiRowSelection(detailGridOptions)) {\n      _warn(269);\n      return;\n    }\n    switch (masterNode.isSelected()) {\n      case true: {\n        detailApi.selectAll();\n        break;\n      }\n      case false: {\n        detailApi.deselectAll();\n        break;\n      }\n      case void 0: {\n        const selectedIds = this.detailSelection.get(masterNode.id);\n        if (selectedIds) {\n          const nodes = [];\n          for (const id of selectedIds) {\n            const n = detailApi.getRowNode(id);\n            if (n) {\n              nodes.push(n);\n            }\n          }\n          detailApi.setNodesSelected({ nodes, newValue: true, source: \"masterDetail\" });\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  }\n};\nfunction _normaliseFooterRef(node) {\n  return node.footer ? node.sibling : node;\n}\nfunction _isAllSelected(api) {\n  let selectedCount = 0;\n  let notSelectedCount = 0;\n  api.forEachNode((node) => {\n    if (node.isSelected()) {\n      selectedCount++;\n    } else if (node.selectable) {\n      notSelectedCount++;\n    }\n  });\n  return _calculateSelectAllState(selectedCount, notSelectedCount);\n}\nfunction _calculateSelectAllState(selected, notSelected) {\n  if (selected === 0 && notSelected === 0) {\n    return false;\n  }\n  if (selected > 0 && notSelected > 0) {\n    return;\n  }\n  return selected > 0;\n}\n\n// packages/ag-grid-community/src/selection/rowSelectionModule.ts\nvar SharedRowSelectionModule = {\n  moduleName: \"SharedRowSelection\",\n  version: VERSION,\n  beans: [SelectionColService],\n  apiFunctions: {\n    setNodesSelected,\n    selectAll,\n    deselectAll,\n    selectAllFiltered,\n    deselectAllFiltered,\n    selectAllOnCurrentPage,\n    deselectAllOnCurrentPage,\n    getSelectedNodes,\n    getSelectedRows\n  }\n};\nvar RowSelectionModule = {\n  moduleName: \"RowSelection\",\n  version: VERSION,\n  rowModels: [\"clientSide\", \"infinite\", \"viewport\"],\n  beans: [SelectionService],\n  dependsOn: [SharedRowSelectionModule]\n};\n\n// packages/ag-grid-community/src/api/csrmSsrmSharedApi.ts\nfunction expandAll(beans) {\n  beans.expansionSvc?.expandAll(true);\n}\nfunction collapseAll(beans) {\n  beans.expansionSvc?.expandAll(false);\n}\nfunction onRowHeightChanged(beans) {\n  const clientSideRowModel = _getClientSideRowModel(beans);\n  const serverSideRowModel = _getServerSideRowModel(beans);\n  if (clientSideRowModel) {\n    clientSideRowModel.onRowHeightChanged();\n  } else if (serverSideRowModel) {\n    serverSideRowModel.onRowHeightChanged();\n  }\n}\n\n// packages/ag-grid-community/src/api/ssrmInfiniteSharedApi.ts\nfunction setRowCount(beans, rowCount, maxRowFound) {\n  const serverSideRowModel = _getServerSideRowModel(beans);\n  if (serverSideRowModel) {\n    if (beans.rowGroupColsSvc?.columns.length === 0) {\n      if (rowCount < 0) {\n        _error(238);\n        return;\n      }\n      serverSideRowModel.setRowCount(rowCount, maxRowFound);\n      return;\n    }\n    _error(28);\n    return;\n  }\n  const infiniteRowModel = _getInfiniteRowModel(beans);\n  if (infiniteRowModel) {\n    infiniteRowModel.setRowCount(rowCount, maxRowFound);\n    return;\n  }\n}\nfunction getCacheBlockState(beans) {\n  if (_isServerSideRowModel(beans.gos)) {\n    const ssrm = beans.rowModel;\n    return ssrm.getBlockStates();\n  }\n  return beans.rowNodeBlockLoader?.getBlockState() ?? {};\n}\nfunction isLastRowIndexKnown(beans) {\n  return beans.rowModel.isLastRowIndexKnown();\n}\n\n// packages/ag-grid-community/src/api/sharedApiModule.ts\nvar CsrmSsrmSharedApiModule = {\n  moduleName: \"CsrmSsrmSharedApi\",\n  version: VERSION,\n  apiFunctions: {\n    expandAll,\n    collapseAll,\n    onRowHeightChanged\n  }\n};\nvar SsrmInfiniteSharedApiModule = {\n  moduleName: \"SsrmInfiniteSharedApi\",\n  version: VERSION,\n  apiFunctions: {\n    setRowCount,\n    getCacheBlockState,\n    isLastRowIndexKnown\n  }\n};\n\n// packages/ag-grid-community/src/alignedGrids/alignedGridsService.ts\nvar AlignedGridsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"alignedGridsSvc\";\n    // flag to mark if we are consuming. to avoid cyclic events (ie other grid firing back to master\n    // while processing a master event) we mark this if consuming an event, and if we are, then\n    // we don't fire back any events.\n    this.consuming = false;\n  }\n  getAlignedGridApis() {\n    let alignedGrids = this.gos.get(\"alignedGrids\") ?? [];\n    const isCallbackConfig = typeof alignedGrids === \"function\";\n    if (typeof alignedGrids === \"function\") {\n      alignedGrids = alignedGrids();\n    }\n    const apis = alignedGrids.map((alignedGrid) => {\n      if (!alignedGrid) {\n        _error(18);\n        if (!isCallbackConfig) {\n          _error(20);\n        }\n        return;\n      }\n      if (this.isGridApi(alignedGrid)) {\n        return alignedGrid;\n      }\n      const refOrComp = alignedGrid;\n      if (\"current\" in refOrComp) {\n        return refOrComp.current?.api;\n      }\n      if (!refOrComp.api) {\n        _error(19);\n      }\n      return refOrComp.api;\n    }).filter((api) => !!api && !api.isDestroyed());\n    return apis;\n  }\n  isGridApi(ref) {\n    return !!ref && !!ref.dispatchEvent;\n  }\n  postConstruct() {\n    const fireColumnEvent = this.fireColumnEvent.bind(this);\n    this.addManagedEventListeners({\n      columnMoved: fireColumnEvent,\n      columnVisible: fireColumnEvent,\n      columnPinned: fireColumnEvent,\n      columnGroupOpened: fireColumnEvent,\n      columnResized: fireColumnEvent,\n      bodyScroll: this.fireScrollEvent.bind(this),\n      alignedGridColumn: ({ event }) => this.onColumnEvent(event),\n      alignedGridScroll: ({ event }) => this.onScrollEvent(event)\n    });\n  }\n  // common logic across all the fire methods\n  fireEvent(event) {\n    if (this.consuming) {\n      return;\n    }\n    this.getAlignedGridApis().forEach((api) => {\n      if (api.isDestroyed()) {\n        return;\n      }\n      api.dispatchEvent(event);\n    });\n  }\n  // common logic across all consume methods. very little common logic, however extracting\n  // guarantees consistency across the methods.\n  onEvent(callback) {\n    this.consuming = true;\n    callback();\n    this.consuming = false;\n  }\n  fireColumnEvent(columnEvent) {\n    this.fireEvent({\n      type: \"alignedGridColumn\",\n      event: columnEvent\n    });\n  }\n  fireScrollEvent(scrollEvent) {\n    if (scrollEvent.direction !== \"horizontal\") {\n      return;\n    }\n    this.fireEvent({\n      type: \"alignedGridScroll\",\n      event: scrollEvent\n    });\n  }\n  onScrollEvent(event) {\n    this.onEvent(() => {\n      this.beans.ctrlsSvc.getScrollFeature().setHorizontalScrollPosition(event.left, true);\n    });\n  }\n  extractDataFromEvent(event, func) {\n    const result = [];\n    if (event.columns) {\n      event.columns.forEach((column) => {\n        result.push(func(column));\n      });\n    } else if (event.column) {\n      result.push(func(event.column));\n    }\n    return result;\n  }\n  getMasterColumns(event) {\n    return this.extractDataFromEvent(event, (col) => col);\n  }\n  getColumnIds(event) {\n    return this.extractDataFromEvent(event, (col) => col.getColId());\n  }\n  onColumnEvent(event) {\n    this.onEvent(() => {\n      switch (event.type) {\n        case \"columnMoved\":\n        case \"columnVisible\":\n        case \"columnPinned\":\n        case \"columnResized\": {\n          this.processColumnEvent(event);\n          break;\n        }\n        case \"columnGroupOpened\": {\n          this.processGroupOpenedEvent(event);\n          break;\n        }\n        case \"columnPivotChanged\":\n          _warn(21);\n          break;\n      }\n    });\n  }\n  processGroupOpenedEvent(groupOpenedEvent) {\n    const { colGroupSvc } = this.beans;\n    if (!colGroupSvc) {\n      return;\n    }\n    groupOpenedEvent.columnGroups.forEach((masterGroup) => {\n      let otherColumnGroup = null;\n      if (masterGroup) {\n        otherColumnGroup = colGroupSvc.getProvidedColGroup(masterGroup.getGroupId());\n      }\n      if (masterGroup && !otherColumnGroup) {\n        return;\n      }\n      colGroupSvc.setColumnGroupOpened(otherColumnGroup, masterGroup.isExpanded(), \"alignedGridChanged\");\n    });\n  }\n  processColumnEvent(colEvent) {\n    const masterColumn = colEvent.column;\n    let otherColumn = null;\n    const beans = this.beans;\n    const { colResize, ctrlsSvc, colModel } = beans;\n    if (masterColumn) {\n      otherColumn = colModel.getColDefCol(masterColumn.getColId());\n    }\n    if (masterColumn && !otherColumn) {\n      return;\n    }\n    const masterColumns = this.getMasterColumns(colEvent);\n    switch (colEvent.type) {\n      case \"columnMoved\":\n        {\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map((s) => ({ colId: s.colId }));\n          _applyColumnState(beans, { state: destColState, applyOrder: true }, \"alignedGridChanged\");\n        }\n        break;\n      case \"columnVisible\":\n        {\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map((s) => ({ colId: s.colId, hide: s.hide }));\n          _applyColumnState(beans, { state: destColState }, \"alignedGridChanged\");\n        }\n        break;\n      case \"columnPinned\":\n        {\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map((s) => ({ colId: s.colId, pinned: s.pinned }));\n          _applyColumnState(beans, { state: destColState }, \"alignedGridChanged\");\n        }\n        break;\n      case \"columnResized\": {\n        const resizedEvent = colEvent;\n        const columnWidths = {};\n        masterColumns.forEach((column) => {\n          columnWidths[column.getId()] = { key: column.getColId(), newWidth: column.getActualWidth() };\n        });\n        resizedEvent.flexColumns?.forEach((col) => {\n          if (columnWidths[col.getId()]) {\n            delete columnWidths[col.getId()];\n          }\n        });\n        colResize?.setColumnWidths(\n          Object.values(columnWidths),\n          false,\n          resizedEvent.finished,\n          \"alignedGridChanged\"\n        );\n        break;\n      }\n    }\n    const gridBodyCon = ctrlsSvc.getGridBodyCtrl();\n    const isVerticalScrollShowing = gridBodyCon.isVerticalScrollShowing();\n    this.getAlignedGridApis().forEach((api) => {\n      api.setGridOption(\"alwaysShowVerticalScroll\", isVerticalScrollShowing);\n    });\n  }\n};\n\n// packages/ag-grid-community/src/alignedGrids/alignedGridsModule.ts\nvar AlignedGridsModule = {\n  moduleName: \"AlignedGrids\",\n  version: VERSION,\n  beans: [AlignedGridsService]\n};\n\n// packages/ag-grid-community/src/clientSideRowModel/clientSideNodeManager.ts\nvar ClientSideNodeManager = class extends AbstractClientSideNodeManager {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"csrmNodeSvc\";\n  }\n};\n\n// packages/ag-grid-community/src/clientSideRowModel/changedRowNodes.ts\nvar ChangedRowNodes = class {\n  constructor() {\n    this.removals = /* @__PURE__ */ new Set();\n    this.updates = /* @__PURE__ */ new Set();\n    this.adds = /* @__PURE__ */ new Set();\n  }\n  /** Marks a row as removed. Order of operations is: remove, update, add */\n  remove(node) {\n    if (!this.adds.delete(node)) {\n      this.updates.delete(node);\n      this.removals.add(node);\n    }\n  }\n  /** Marks a row as updated. Order of operations is: remove, update, add */\n  update(node) {\n    if (!this.adds.has(node)) {\n      this.updates.add(node);\n    }\n  }\n  /** Marks a row as added. Order of operation is: remove, update, add */\n  add(node) {\n    this.adds.add(node);\n  }\n};\n\n// packages/ag-grid-community/src/clientSideRowModel/sortStage.ts\nfunction updateChildIndexes(rowNode) {\n  if (_missing(rowNode.childrenAfterSort)) {\n    return;\n  }\n  const listToSort = rowNode.childrenAfterSort;\n  for (let i = 0; i < listToSort.length; i++) {\n    const child = listToSort[i];\n    const firstChild = i === 0;\n    const lastChild = i === rowNode.childrenAfterSort.length - 1;\n    child.setFirstChild(firstChild);\n    if (child.lastChild !== lastChild) {\n      child.lastChild = lastChild;\n      child.dispatchRowEvent(\"lastChildChanged\");\n    }\n    if (child.childIndex !== i) {\n      child.childIndex = i;\n      child.dispatchRowEvent(\"childIndexChanged\");\n    }\n  }\n}\nfunction updateRowNodeAfterSort(rowNode) {\n  if (rowNode.sibling) {\n    rowNode.sibling.childrenAfterSort = rowNode.childrenAfterSort;\n  }\n  updateChildIndexes(rowNode);\n}\nvar SortStage = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"sortStage\";\n    this.refreshProps = /* @__PURE__ */ new Set([\"postSortRows\", \"groupDisplayType\", \"accentedSort\"]);\n    this.step = \"sort\";\n  }\n  execute(params) {\n    const beans = this.beans;\n    const sortOptions = beans.sortSvc.getSortOptions();\n    const sortActive = _exists(sortOptions) && sortOptions.length > 0;\n    const deltaSort = sortActive && !!params.changedRowNodes && // in time we can remove this check, so that delta sort is always\n    // on if transactions are present. it's off for now so that we can\n    // selectively turn it on and test it with some select users before\n    // rolling out to everyone.\n    this.gos.get(\"deltaSort\");\n    const sortContainsGroupColumns = sortOptions.some(({ column }) => {\n      const isSortingCoupled = _isColumnsSortingCoupledToGroup(beans.gos);\n      if (isSortingCoupled) {\n        return column.isPrimary() && column.isRowGroupActive();\n      }\n      return !!column.getColDef().showRowGroup;\n    });\n    this.sort(\n      beans,\n      sortOptions,\n      sortActive,\n      deltaSort,\n      params.changedRowNodes,\n      params.changedPath,\n      sortContainsGroupColumns\n    );\n  }\n  sort(beans, sortOptions, sortActive, useDeltaSort, changedRowNodes, changedPath, sortContainsGroupColumns) {\n    const { gos, colModel, rowGroupColsSvc, groupHideOpenParentsSvc, rowNodeSorter } = beans;\n    const groupMaintainOrder = gos.get(\"groupMaintainOrder\");\n    const groupColumnsPresent = colModel.getCols().some((c) => c.isRowGroupActive());\n    const isPivotMode = colModel.isPivotMode();\n    const postSortFunc = gos.getCallback(\"postSortRows\");\n    const callback = (rowNode) => {\n      groupHideOpenParentsSvc?.pullDownGroupDataForHideOpenParents(rowNode.childrenAfterAggFilter, true);\n      const skipSortingPivotLeafs = isPivotMode && rowNode.leafGroup;\n      const skipSortingGroups = groupMaintainOrder && groupColumnsPresent && !rowNode.leafGroup && !sortContainsGroupColumns;\n      let newChildrenAfterSort;\n      if (skipSortingGroups) {\n        const nextGroup = rowGroupColsSvc?.columns?.[rowNode.level + 1];\n        const wasSortExplicitlyRemoved = nextGroup?.getSort() === null;\n        const childrenToBeSorted = rowNode.childrenAfterAggFilter.slice(0);\n        if (rowNode.childrenAfterSort && !wasSortExplicitlyRemoved) {\n          const indexedOrders = {};\n          rowNode.childrenAfterSort.forEach((node, idx) => {\n            indexedOrders[node.id] = idx;\n          });\n          childrenToBeSorted.sort(\n            (row1, row2) => (indexedOrders[row1.id] ?? 0) - (indexedOrders[row2.id] ?? 0)\n          );\n        }\n        newChildrenAfterSort = childrenToBeSorted;\n      } else if (!sortActive || skipSortingPivotLeafs) {\n        newChildrenAfterSort = rowNode.childrenAfterAggFilter.slice(0);\n      } else if (useDeltaSort && changedRowNodes) {\n        newChildrenAfterSort = doDeltaSort(rowNodeSorter, rowNode, changedRowNodes, changedPath, sortOptions);\n      } else {\n        newChildrenAfterSort = rowNodeSorter.doFullSort(rowNode.childrenAfterAggFilter, sortOptions);\n      }\n      rowNode.childrenAfterSort = newChildrenAfterSort;\n      updateRowNodeAfterSort(rowNode);\n      if (postSortFunc) {\n        const params = { nodes: rowNode.childrenAfterSort };\n        postSortFunc(params);\n      }\n    };\n    changedPath?.forEachChangedNodeDepthFirst(callback);\n  }\n};\nfunction doDeltaSort(rowNodeSorter, rowNode, changedRowNodes, changedPath, sortOptions) {\n  const unsortedRows = rowNode.childrenAfterAggFilter;\n  const oldSortedRows = rowNode.childrenAfterSort;\n  if (!oldSortedRows) {\n    return rowNodeSorter.doFullSort(unsortedRows, sortOptions);\n  }\n  const untouchedRows = /* @__PURE__ */ new Set();\n  const touchedRows = [];\n  const { updates, adds } = changedRowNodes;\n  for (let i = 0, len = unsortedRows.length; i < len; ++i) {\n    const row = unsortedRows[i];\n    if (updates.has(row) || adds.has(row) || changedPath && !changedPath.canSkip(row)) {\n      touchedRows.push({\n        currentPos: touchedRows.length,\n        rowNode: row\n      });\n    } else {\n      untouchedRows.add(row.id);\n    }\n  }\n  const sortedUntouchedRows = oldSortedRows.filter((child) => untouchedRows.has(child.id)).map((rowNode2, currentPos) => ({ currentPos, rowNode: rowNode2 }));\n  touchedRows.sort((a, b) => rowNodeSorter.compareRowNodes(sortOptions, a, b));\n  return mergeSortedArrays(rowNodeSorter, sortOptions, touchedRows, sortedUntouchedRows);\n}\nfunction mergeSortedArrays(rowNodeSorter, sortOptions, arr1, arr2) {\n  const res = [];\n  let i = 0;\n  let j = 0;\n  const arr1Length = arr1.length;\n  const arr2Length = arr2.length;\n  while (i < arr1Length && j < arr2Length) {\n    const a = arr1[i];\n    const b = arr2[j];\n    const compareResult = rowNodeSorter.compareRowNodes(sortOptions, a, b);\n    let chosen;\n    if (compareResult < 0) {\n      chosen = a;\n      ++i;\n    } else {\n      chosen = b;\n      ++j;\n    }\n    res.push(chosen.rowNode);\n  }\n  while (i < arr1Length) {\n    res.push(arr1[i++].rowNode);\n  }\n  while (j < arr2Length) {\n    res.push(arr2[j++].rowNode);\n  }\n  return res;\n}\n\n// packages/ag-grid-community/src/clientSideRowModel/clientSideRowModel.ts\nvar ClientSideRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowModel\";\n    // top most node of the tree. the children are the user provided data.\n    this.rootNode = null;\n    this.rowsToDisplay = [];\n    /** Has the start method been called */\n    this.started = false;\n    /**\n     * This is to prevent refresh model being called when it's already being called.\n     * E.g. the group stage can trigger initial state filter model to be applied. This fires onFilterChanged,\n     * which then triggers the listener here that calls refresh model again but at the filter stage\n     * (which is about to be run by the original call).\n     */\n    this.isRefreshingModel = false;\n    this.rowNodesCountReady = false;\n    this.rowCountReady = false;\n    this.onRowHeightChanged_debounced = _debounce(this, this.onRowHeightChanged.bind(this), 100);\n  }\n  wireBeans(beans) {\n    this.colModel = beans.colModel;\n    this.valueCache = beans.valueCache;\n    this.filterStage = beans.filterStage;\n    this.sortStage = beans.sortStage;\n    this.flattenStage = beans.flattenStage;\n    this.groupStage = beans.groupStage;\n    this.aggStage = beans.aggStage;\n    this.pivotStage = beans.pivotStage;\n    this.filterAggStage = beans.filterAggStage;\n  }\n  postConstruct() {\n    this.orderedStages = [\n      this.groupStage,\n      this.filterStage,\n      this.pivotStage,\n      this.aggStage,\n      this.sortStage,\n      this.filterAggStage,\n      this.flattenStage\n    ].filter((stage) => !!stage);\n    const refreshEverythingFunc = this.refreshModel.bind(this, { step: \"group\" });\n    const refreshEverythingAfterColsChangedFunc = this.refreshModel.bind(this, {\n      step: \"group\",\n      // after cols change, row grouping (the first stage) could of changed\n      afterColumnsChanged: true,\n      keepRenderedRows: true,\n      // we want animations cos sorting or filtering could be applied\n      animate: !this.gos.get(\"suppressAnimationFrame\")\n    });\n    this.addManagedEventListeners({\n      newColumnsLoaded: refreshEverythingAfterColsChangedFunc,\n      columnRowGroupChanged: refreshEverythingFunc,\n      columnValueChanged: this.onValueChanged.bind(this),\n      columnPivotChanged: this.refreshModel.bind(this, { step: \"pivot\" }),\n      filterChanged: this.onFilterChanged.bind(this),\n      sortChanged: this.onSortChanged.bind(this),\n      columnPivotModeChanged: refreshEverythingFunc,\n      gridStylesChanged: this.onGridStylesChanges.bind(this),\n      gridReady: this.onGridReady.bind(this)\n    });\n    this.addPropertyListeners();\n    this.rootNode = new RowNode(this.beans);\n    const nodeManager = this.getNewNodeManager();\n    this.nodeManager = nodeManager;\n    nodeManager.activate(this.rootNode);\n  }\n  getNewNodeManager() {\n    const { gos, beans } = this;\n    let nodeManager;\n    if (gos.get(\"treeData\")) {\n      if (gos.get(\"treeDataChildrenField\")) {\n        nodeManager = beans.csrmChildrenTreeNodeSvc;\n      } else {\n        nodeManager = beans.csrmPathTreeNodeSvc;\n      }\n    }\n    return nodeManager ?? beans.csrmNodeSvc;\n  }\n  addPropertyListeners() {\n    const allProps = [\n      \"treeData\",\n      \"treeDataChildrenField\",\n      ...this.orderedStages.flatMap(({ refreshProps }) => [...refreshProps])\n    ];\n    this.addManagedPropertyListeners(allProps, (params) => {\n      const properties = params.changeSet?.properties;\n      if (properties) {\n        this.onPropChange(properties);\n      }\n    });\n    this.addManagedPropertyListener(\"rowData\", () => this.onPropChange([\"rowData\"]));\n    this.addManagedPropertyListener(\"rowHeight\", () => this.resetRowHeights());\n  }\n  start() {\n    this.started = true;\n    if (this.rowNodesCountReady) {\n      this.refreshModel({ step: \"group\", rowDataUpdated: true, newData: true });\n    } else {\n      this.setInitialData();\n    }\n  }\n  setInitialData() {\n    const rowData = this.gos.get(\"rowData\");\n    if (rowData) {\n      this.onPropChange([\"rowData\"]);\n    }\n  }\n  ensureRowHeightsValid(startPixel, endPixel, startLimitIndex, endLimitIndex) {\n    let atLeastOneChange;\n    let res = false;\n    do {\n      atLeastOneChange = false;\n      const rowAtStartPixel = this.getRowIndexAtPixel(startPixel);\n      const rowAtEndPixel = this.getRowIndexAtPixel(endPixel);\n      const firstRow = Math.max(rowAtStartPixel, startLimitIndex);\n      const lastRow = Math.min(rowAtEndPixel, endLimitIndex);\n      for (let rowIndex = firstRow; rowIndex <= lastRow; rowIndex++) {\n        const rowNode = this.getRow(rowIndex);\n        if (rowNode.rowHeightEstimated) {\n          const rowHeight = _getRowHeightForNode(this.beans, rowNode);\n          rowNode.setRowHeight(rowHeight.height);\n          atLeastOneChange = true;\n          res = true;\n        }\n      }\n      if (atLeastOneChange) {\n        this.setRowTopAndRowIndex();\n      }\n    } while (atLeastOneChange);\n    return res;\n  }\n  onPropChange(properties) {\n    if (!this.rootNode) {\n      return;\n    }\n    const gos = this.gos;\n    const changedProps = new Set(properties);\n    const params = {\n      step: \"nothing\",\n      changedProps\n    };\n    const rowDataChanged = changedProps.has(\"rowData\");\n    const treeDataChanged = changedProps.has(\"treeData\");\n    const oldNodeManager = this.nodeManager;\n    const nodeManager = this.getNewNodeManager();\n    const reset = oldNodeManager !== nodeManager || changedProps.has(\"treeDataChildrenField\") && gos.get(\"treeData\");\n    let newRowData;\n    if (treeDataChanged) {\n      params.step = \"group\";\n    }\n    if (reset || rowDataChanged) {\n      newRowData = gos.get(\"rowData\");\n      if (newRowData != null && !Array.isArray(newRowData)) {\n        newRowData = null;\n        _warn(1);\n      }\n    }\n    if (reset) {\n      if (!rowDataChanged) {\n        newRowData = oldNodeManager?.extractRowData() ?? newRowData;\n      }\n      if (oldNodeManager !== nodeManager) {\n        oldNodeManager?.deactivate();\n        this.nodeManager = nodeManager;\n      }\n      nodeManager.activate(this.rootNode);\n    }\n    if (newRowData) {\n      const immutable = !reset && !this.isEmpty() && newRowData.length > 0 && gos.exists(\"getRowId\") && // this property is a backwards compatibility property, for those who want\n      // the old behaviour of Row IDs but NOT Immutable Data.\n      !gos.get(\"resetRowDataOnUpdate\");\n      if (immutable) {\n        params.keepRenderedRows = true;\n        params.animate = !this.gos.get(\"suppressAnimationFrame\");\n        params.changedRowNodes = new ChangedRowNodes();\n        nodeManager.setImmutableRowData(params, newRowData);\n      } else {\n        params.rowDataUpdated = true;\n        params.newData = true;\n        this.beans.selectionSvc?.reset(\"rowDataChanged\");\n        this.rowNodesCountReady = true;\n        nodeManager.setNewRowData(newRowData);\n      }\n    }\n    if (params.rowDataUpdated) {\n      params.step = \"group\";\n    } else if (params.step === \"nothing\") {\n      for (const { refreshProps, step } of this.orderedStages) {\n        if (properties.some((prop) => refreshProps.has(prop))) {\n          params.step = step;\n          break;\n        }\n      }\n    }\n    if (params.step !== \"nothing\") {\n      this.refreshModel(params);\n    }\n  }\n  setRowTopAndRowIndex() {\n    const { beans } = this;\n    const defaultRowHeight = beans.environment.getDefaultRowHeight();\n    let nextRowTop = 0;\n    const displayedRowsMapped = /* @__PURE__ */ new Set();\n    const allowEstimate = _isDomLayout(this.gos, \"normal\");\n    const rowsToDisplay = this.rowsToDisplay;\n    for (let i = 0, len = rowsToDisplay.length; i < len; ++i) {\n      const rowNode = rowsToDisplay[i];\n      if (rowNode.id != null) {\n        displayedRowsMapped.add(rowNode.id);\n      }\n      if (rowNode.rowHeight == null) {\n        const rowHeight = _getRowHeightForNode(beans, rowNode, allowEstimate, defaultRowHeight);\n        rowNode.setRowHeight(rowHeight.height, rowHeight.estimated);\n      }\n      rowNode.setRowTop(nextRowTop);\n      rowNode.setRowIndex(i);\n      nextRowTop += rowNode.rowHeight;\n    }\n    return displayedRowsMapped;\n  }\n  clearRowTopAndRowIndex(changedPath, displayedRowsMapped) {\n    const changedPathActive = changedPath.active;\n    const clearIfNotDisplayed = (rowNode) => {\n      if (rowNode && rowNode.id != null && !displayedRowsMapped.has(rowNode.id)) {\n        rowNode.clearRowTopAndRowIndex();\n      }\n    };\n    const recurse = (rowNode) => {\n      if (rowNode === null) {\n        return;\n      }\n      clearIfNotDisplayed(rowNode);\n      clearIfNotDisplayed(rowNode.detailNode);\n      clearIfNotDisplayed(rowNode.sibling);\n      if (rowNode.hasChildren()) {\n        if (rowNode.childrenAfterGroup) {\n          const isRootNode = rowNode.level == -1;\n          const skipChildren = changedPathActive && !isRootNode && !rowNode.expanded;\n          if (!skipChildren) {\n            rowNode.childrenAfterGroup.forEach(recurse);\n          }\n        }\n      }\n    };\n    recurse(this.rootNode);\n  }\n  // returns false if row was moved, otherwise true\n  ensureRowsAtPixel(rowNodes, pixel, increment = 0) {\n    const indexAtPixelNow = this.getRowIndexAtPixel(pixel);\n    const rowNodeAtPixelNow = this.getRow(indexAtPixelNow);\n    const animate = !this.gos.get(\"suppressAnimationFrame\");\n    if (rowNodeAtPixelNow === rowNodes[0]) {\n      return false;\n    }\n    const allLeafChildren = this.rootNode?.allLeafChildren;\n    if (!allLeafChildren) {\n      return false;\n    }\n    rowNodes.forEach((rowNode) => {\n      _removeFromArray(allLeafChildren, rowNode);\n    });\n    rowNodes.forEach((rowNode, idx) => {\n      allLeafChildren.splice(Math.max(indexAtPixelNow + increment, 0) + idx, 0, rowNode);\n    });\n    rowNodes.forEach((rowNode, index) => {\n      rowNode.sourceRowIndex = index;\n    });\n    this.refreshModel({\n      step: \"group\",\n      keepRenderedRows: true,\n      animate,\n      rowNodesOrderChanged: true\n      // We assume the order changed and we don't need to check if it really did\n    });\n    return true;\n  }\n  highlightRowAtPixel(rowNode, pixel) {\n    const indexAtPixelNow = pixel != null ? this.getRowIndexAtPixel(pixel) : null;\n    const rowNodeAtPixelNow = indexAtPixelNow != null ? this.getRow(indexAtPixelNow) : null;\n    if (!rowNodeAtPixelNow || !rowNode || pixel == null) {\n      this.clearHighlightedRow();\n      return;\n    }\n    const highlight = this.getHighlightPosition(pixel, rowNodeAtPixelNow);\n    const isSamePosition = this.isHighlightingCurrentPosition(rowNode, rowNodeAtPixelNow, highlight);\n    const isDifferentNode = this.lastHighlightedRow != null && this.lastHighlightedRow !== rowNodeAtPixelNow;\n    if (isSamePosition || isDifferentNode) {\n      this.clearHighlightedRow();\n      if (isSamePosition) {\n        return;\n      }\n    }\n    this.setRowNodeHighlighted(rowNodeAtPixelNow, highlight);\n    this.lastHighlightedRow = rowNodeAtPixelNow;\n  }\n  setRowNodeHighlighted(rowNode, highlighted) {\n    if (rowNode.highlighted !== highlighted) {\n      rowNode.highlighted = highlighted;\n      rowNode.dispatchRowEvent(\"rowHighlightChanged\");\n    }\n  }\n  getHighlightPosition(pixel, rowNode) {\n    if (!rowNode) {\n      const index = this.getRowIndexAtPixel(pixel);\n      rowNode = this.getRow(index || 0);\n      if (!rowNode) {\n        return \"Below\";\n      }\n    }\n    const { rowTop, rowHeight } = rowNode;\n    return pixel - rowTop < rowHeight / 2 ? \"Above\" : \"Below\";\n  }\n  getLastHighlightedRowNode() {\n    return this.lastHighlightedRow;\n  }\n  isHighlightingCurrentPosition(movingRowNode, hoveredRowNode, highlightPosition) {\n    if (movingRowNode === hoveredRowNode) {\n      return true;\n    }\n    const diff = highlightPosition === \"Above\" ? -1 : 1;\n    if (this.getRow(hoveredRowNode.rowIndex + diff) === movingRowNode) {\n      return true;\n    }\n    return false;\n  }\n  clearHighlightedRow() {\n    if (this.lastHighlightedRow) {\n      this.setRowNodeHighlighted(this.lastHighlightedRow, null);\n      this.lastHighlightedRow = null;\n    }\n  }\n  isLastRowIndexKnown() {\n    return true;\n  }\n  getRowCount() {\n    if (this.rowsToDisplay) {\n      return this.rowsToDisplay.length;\n    }\n    return 0;\n  }\n  /**\n   * Returns the number of rows with level === 1\n   */\n  getTopLevelRowCount() {\n    const rootNode = this.rootNode;\n    if (!rootNode) {\n      return 0;\n    }\n    if (this.rowsToDisplay.length === 0) {\n      return 0;\n    }\n    const showingRootNode = this.rowsToDisplay && this.rowsToDisplay[0] === rootNode;\n    if (showingRootNode) {\n      return 1;\n    }\n    const filteredChildren = rootNode.childrenAfterAggFilter;\n    const totalFooterInc = rootNode.sibling ? 1 : 0;\n    return (filteredChildren ? filteredChildren.length : 0) + totalFooterInc;\n  }\n  /**\n   * Get the row display index by the top level index\n   * top level index is the index of rows with level === 1\n   */\n  getTopLevelRowDisplayedIndex(topLevelIndex) {\n    const { rootNode, rowsToDisplay } = this;\n    const showingRootNode = !rootNode || !rowsToDisplay.length || rowsToDisplay[0] === rootNode;\n    if (showingRootNode) {\n      return topLevelIndex;\n    }\n    const { childrenAfterSort } = rootNode;\n    const getDefaultIndex = (adjustedIndex) => {\n      let rowNode = childrenAfterSort[adjustedIndex];\n      if (this.gos.get(\"groupHideOpenParents\")) {\n        while (rowNode.expanded && rowNode.childrenAfterSort && rowNode.childrenAfterSort.length > 0) {\n          rowNode = rowNode.childrenAfterSort[0];\n        }\n      }\n      return rowNode.rowIndex;\n    };\n    const { footerSvc } = this.beans;\n    if (footerSvc) {\n      return footerSvc.getTopDisplayIndex(rowsToDisplay, topLevelIndex, childrenAfterSort, getDefaultIndex);\n    } else {\n      return getDefaultIndex(topLevelIndex);\n    }\n  }\n  getRowBounds(index) {\n    const rowNode = this.rowsToDisplay[index];\n    if (rowNode) {\n      return {\n        rowTop: rowNode.rowTop,\n        rowHeight: rowNode.rowHeight\n      };\n    }\n    return null;\n  }\n  onRowGroupOpened() {\n    const animate = _isAnimateRows(this.gos);\n    this.refreshModel({ step: \"map\", keepRenderedRows: true, animate });\n  }\n  onFilterChanged(event) {\n    if (event.afterDataChange) {\n      return;\n    }\n    const animate = _isAnimateRows(this.gos);\n    const primaryOrQuickFilterChanged = event.columns.length === 0 || event.columns.some((col) => col.isPrimary());\n    const step = primaryOrQuickFilterChanged ? \"filter\" : \"filter_aggregates\";\n    this.refreshModel({ step, keepRenderedRows: true, animate });\n  }\n  onSortChanged() {\n    const animate = _isAnimateRows(this.gos);\n    this.refreshModel({\n      step: \"sort\",\n      keepRenderedRows: true,\n      animate\n    });\n  }\n  getType() {\n    return \"clientSide\";\n  }\n  onValueChanged() {\n    this.refreshModel({ step: this.colModel.isPivotActive() ? \"pivot\" : \"aggregate\" });\n  }\n  createChangePath(enabled) {\n    const changedPath = new ChangedPath(false, this.rootNode);\n    if (!enabled) {\n      changedPath.active = false;\n    }\n    return changedPath;\n  }\n  isSuppressModelUpdateAfterUpdateTransaction(params) {\n    if (!this.gos.get(\"suppressModelUpdateAfterUpdateTransaction\")) {\n      return false;\n    }\n    const { changedRowNodes, newData, rowDataUpdated } = params;\n    if (!changedRowNodes || newData || !rowDataUpdated) {\n      return false;\n    }\n    if (changedRowNodes.removals.size || changedRowNodes.adds.size) {\n      return false;\n    }\n    return true;\n  }\n  refreshModel(params) {\n    if (!this.rootNode) {\n      return;\n    }\n    const changedPath = params.changedPath ?? (params.changedPath = this.createChangePath(!params.newData && !!params.rowDataUpdated));\n    this.nodeManager.refreshModel?.(params, this.started);\n    this.eventSvc.dispatchEvent({ type: \"beforeRefreshModel\", params });\n    if (!this.started) {\n      return;\n    }\n    if (params.rowDataUpdated) {\n      this.eventSvc.dispatchEvent({ type: \"rowDataUpdated\" });\n    }\n    if (this.isRefreshingModel || this.colModel.changeEventsDispatching || this.isSuppressModelUpdateAfterUpdateTransaction(params)) {\n      return;\n    }\n    this.isRefreshingModel = true;\n    switch (params.step) {\n      case \"group\": {\n        this.doRowGrouping(\n          params.changedRowNodes,\n          changedPath,\n          !!params.rowNodesOrderChanged,\n          !!params.afterColumnsChanged\n        );\n      }\n      case \"filter\":\n        this.doFilter(changedPath);\n      case \"pivot\":\n        this.doPivot(changedPath);\n      case \"aggregate\":\n        this.doAggregate(changedPath);\n      case \"filter_aggregates\":\n        this.doFilterAggregates(changedPath);\n      case \"sort\":\n        this.doSort(params.changedRowNodes, changedPath);\n      case \"map\":\n        this.doRowsToDisplay();\n    }\n    const displayedNodesMapped = this.setRowTopAndRowIndex();\n    this.clearRowTopAndRowIndex(changedPath, displayedNodesMapped);\n    this.isRefreshingModel = false;\n    this.eventSvc.dispatchEvent({\n      type: \"modelUpdated\",\n      animate: params.animate,\n      keepRenderedRows: params.keepRenderedRows,\n      newData: params.newData,\n      newPage: false,\n      keepUndoRedoStack: params.keepUndoRedoStack\n    });\n  }\n  isEmpty() {\n    return !this.rootNode?.allLeafChildren?.length || !this.colModel?.ready;\n  }\n  isRowsToRender() {\n    return this.rowsToDisplay.length > 0;\n  }\n  getNodesInRangeForSelection(firstInRange, lastInRange) {\n    let started = false;\n    let finished = false;\n    const result = [];\n    const groupsSelectChildren = _getGroupSelectsDescendants(this.gos);\n    this.forEachNodeAfterFilterAndSort((rowNode) => {\n      if (finished) {\n        return;\n      }\n      if (started) {\n        if (rowNode === lastInRange || rowNode === firstInRange) {\n          finished = true;\n          if (rowNode.group && groupsSelectChildren) {\n            result.push(...rowNode.allLeafChildren);\n            return;\n          }\n        }\n      }\n      if (!started) {\n        if (rowNode !== lastInRange && rowNode !== firstInRange) {\n          return;\n        }\n        started = true;\n      }\n      const includeThisNode = !rowNode.group || !groupsSelectChildren;\n      if (includeThisNode) {\n        result.push(rowNode);\n        return;\n      }\n    });\n    return result;\n  }\n  getTopLevelNodes() {\n    return this.rootNode?.childrenAfterGroup ?? null;\n  }\n  getRow(index) {\n    return this.rowsToDisplay[index];\n  }\n  isRowPresent(rowNode) {\n    return this.rowsToDisplay.indexOf(rowNode) >= 0;\n  }\n  getRowIndexAtPixel(pixelToMatch) {\n    const rowsToDisplay = this.rowsToDisplay;\n    if (this.isEmpty() || rowsToDisplay.length === 0) {\n      return -1;\n    }\n    let bottomPointer = 0;\n    let topPointer = rowsToDisplay.length - 1;\n    if (pixelToMatch <= 0) {\n      return 0;\n    }\n    const lastNode = _last(rowsToDisplay);\n    if (lastNode.rowTop <= pixelToMatch) {\n      return rowsToDisplay.length - 1;\n    }\n    let oldBottomPointer = -1;\n    let oldTopPointer = -1;\n    while (true) {\n      const midPointer = Math.floor((bottomPointer + topPointer) / 2);\n      const currentRowNode = rowsToDisplay[midPointer];\n      if (this.isRowInPixel(currentRowNode, pixelToMatch)) {\n        return midPointer;\n      }\n      if (currentRowNode.rowTop < pixelToMatch) {\n        bottomPointer = midPointer + 1;\n      } else if (currentRowNode.rowTop > pixelToMatch) {\n        topPointer = midPointer - 1;\n      }\n      const caughtInInfiniteLoop = oldBottomPointer === bottomPointer && oldTopPointer === topPointer;\n      if (caughtInInfiniteLoop) {\n        return midPointer;\n      }\n      oldBottomPointer = bottomPointer;\n      oldTopPointer = topPointer;\n    }\n  }\n  isRowInPixel(rowNode, pixelToMatch) {\n    const topPixel = rowNode.rowTop;\n    const bottomPixel = rowNode.rowTop + rowNode.rowHeight;\n    const pixelInRow = topPixel <= pixelToMatch && bottomPixel > pixelToMatch;\n    return pixelInRow;\n  }\n  forEachLeafNode(callback) {\n    this.rootNode?.allLeafChildren?.forEach((rowNode, index) => callback(rowNode, index));\n  }\n  forEachNode(callback, includeFooterNodes = false) {\n    this.depthFirstSearchRowNodes(callback, includeFooterNodes);\n  }\n  forEachDisplayedNode(callback) {\n    this.rowsToDisplay.forEach(callback);\n  }\n  forEachNodeAfterFilter(callback, includeFooterNodes = false) {\n    this.depthFirstSearchRowNodes(callback, includeFooterNodes, (node) => node.childrenAfterAggFilter);\n  }\n  forEachNodeAfterFilterAndSort(callback, includeFooterNodes = false) {\n    this.depthFirstSearchRowNodes(callback, includeFooterNodes, (node) => node.childrenAfterSort);\n  }\n  forEachPivotNode(callback, includeFooterNodes = false, afterSort = false) {\n    const childrenField = afterSort ? \"childrenAfterSort\" : \"childrenAfterGroup\";\n    this.depthFirstSearchRowNodes(\n      callback,\n      includeFooterNodes,\n      (node) => !node.leafGroup ? node[childrenField] : null\n    );\n  }\n  /**\n   * Iterate through each node and all of its children\n   * @param callback the function to execute for each node\n   * @param includeFooterNodes whether to also iterate over footer nodes\n   * @param nodes the nodes to start iterating over\n   * @param getChildren a function to determine the recursion strategy\n   * @param startIndex the index to start from\n   * @returns the index ended at\n   */\n  depthFirstSearchRowNodes(callback, includeFooterNodes = false, getChildren = (node2) => node2.childrenAfterGroup, node = this.rootNode, startIndex = 0) {\n    let index = startIndex;\n    if (!node) {\n      return index;\n    }\n    const isRootNode = node === this.rootNode;\n    if (!isRootNode) {\n      callback(node, index++);\n    }\n    const { footerSvc } = this.beans;\n    if (node.hasChildren() && !node.footer) {\n      const children = getChildren(node);\n      if (children) {\n        index = footerSvc?.addTotalRows(index, node, callback, includeFooterNodes, isRootNode, \"top\") ?? index;\n        for (const node2 of children) {\n          index = this.depthFirstSearchRowNodes(callback, includeFooterNodes, getChildren, node2, index);\n        }\n        return footerSvc?.addTotalRows(index, node, callback, includeFooterNodes, isRootNode, \"bottom\") ?? index;\n      }\n    }\n    return index;\n  }\n  // it's possible to recompute the aggregate without doing the other parts\n  // + api.refreshClientSideRowModel('aggregate')\n  doAggregate(changedPath) {\n    const rootNode = this.rootNode;\n    if (rootNode) {\n      this.aggStage?.execute({ rowNode: rootNode, changedPath });\n    }\n  }\n  doFilterAggregates(changedPath) {\n    const rootNode = this.rootNode;\n    if (this.filterAggStage) {\n      this.filterAggStage.execute({ rowNode: rootNode, changedPath });\n    } else {\n      rootNode.childrenAfterAggFilter = rootNode.childrenAfterFilter;\n    }\n  }\n  doSort(changedRowNodes, changedPath) {\n    const { groupHideOpenParentsSvc } = this.beans;\n    if (this.sortStage) {\n      this.sortStage.execute({\n        rowNode: this.rootNode,\n        changedRowNodes,\n        changedPath\n      });\n    } else {\n      changedPath.forEachChangedNodeDepthFirst((rowNode) => {\n        groupHideOpenParentsSvc?.pullDownGroupDataForHideOpenParents(rowNode.childrenAfterAggFilter, true);\n        rowNode.childrenAfterSort = rowNode.childrenAfterAggFilter.slice(0);\n        updateRowNodeAfterSort(rowNode);\n      });\n    }\n    groupHideOpenParentsSvc?.updateGroupDataForHideOpenParents(changedPath);\n  }\n  doRowGrouping(changedRowNodes, changedPath, rowNodesOrderChanged, afterColumnsChanged) {\n    const treeData = this.nodeManager.treeData;\n    const rootNode = this.rootNode;\n    if (!treeData) {\n      const groupStage = this.groupStage;\n      if (groupStage) {\n        groupStage.execute({\n          rowNode: rootNode,\n          changedPath,\n          changedRowNodes,\n          rowNodesOrderChanged,\n          afterColumnsChanged\n        });\n      } else {\n        const sibling = rootNode.sibling;\n        rootNode.childrenAfterGroup = rootNode.allLeafChildren;\n        if (sibling) {\n          sibling.childrenAfterGroup = rootNode.childrenAfterGroup;\n        }\n        rootNode.updateHasChildren();\n      }\n    }\n    if (this.rowNodesCountReady) {\n      this.rowCountReady = true;\n      this.eventSvc.dispatchEventOnce({ type: \"rowCountReady\" });\n    }\n  }\n  doFilter(changedPath) {\n    if (this.filterStage) {\n      this.filterStage.execute({ rowNode: this.rootNode, changedPath });\n    } else {\n      changedPath.forEachChangedNodeDepthFirst((rowNode) => {\n        rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n        updateRowNodeAfterFilter(rowNode);\n      }, true);\n    }\n  }\n  doPivot(changedPath) {\n    this.pivotStage?.execute({ rowNode: this.rootNode, changedPath });\n  }\n  getRowNode(id) {\n    const idIsGroup = typeof id == \"string\" && id.indexOf(ROW_ID_PREFIX_ROW_GROUP) == 0;\n    if (idIsGroup) {\n      let res = void 0;\n      this.forEachNode((node) => {\n        if (node.id === id) {\n          res = node;\n        }\n      });\n      return res;\n    }\n    return this.nodeManager.getRowNode(id);\n  }\n  batchUpdateRowData(rowDataTransaction, callback) {\n    if (this.applyAsyncTransactionsTimeout == null) {\n      this.rowDataTransactionBatch = [];\n      const waitMillis = this.gos.get(\"asyncTransactionWaitMillis\");\n      this.applyAsyncTransactionsTimeout = window.setTimeout(() => {\n        if (this.isAlive()) {\n          this.executeBatchUpdateRowData();\n        }\n      }, waitMillis);\n    }\n    this.rowDataTransactionBatch.push({ rowDataTransaction, callback });\n  }\n  flushAsyncTransactions() {\n    if (this.applyAsyncTransactionsTimeout != null) {\n      clearTimeout(this.applyAsyncTransactionsTimeout);\n      this.executeBatchUpdateRowData();\n    }\n  }\n  executeBatchUpdateRowData() {\n    this.valueCache?.onDataChanged();\n    const callbackFuncsBound = [];\n    const rowNodeTrans = [];\n    const changedRowNodes = new ChangedRowNodes();\n    let orderChanged = false;\n    this.rowDataTransactionBatch?.forEach((tranItem) => {\n      this.rowNodesCountReady = true;\n      const { rowNodeTransaction, rowsInserted } = this.nodeManager.updateRowData(\n        tranItem.rowDataTransaction,\n        changedRowNodes\n      );\n      if (rowsInserted) {\n        orderChanged = true;\n      }\n      rowNodeTrans.push(rowNodeTransaction);\n      if (tranItem.callback) {\n        callbackFuncsBound.push(tranItem.callback.bind(null, rowNodeTransaction));\n      }\n    });\n    this.commitTransactions(orderChanged, changedRowNodes);\n    if (callbackFuncsBound.length > 0) {\n      window.setTimeout(() => {\n        callbackFuncsBound.forEach((func) => func());\n      }, 0);\n    }\n    if (rowNodeTrans.length > 0) {\n      this.eventSvc.dispatchEvent({\n        type: \"asyncTransactionsFlushed\",\n        results: rowNodeTrans\n      });\n    }\n    this.rowDataTransactionBatch = null;\n    this.applyAsyncTransactionsTimeout = void 0;\n  }\n  /**\n   * Used to apply transaction changes.\n   * Called by gridApi & rowDragFeature\n   */\n  updateRowData(rowDataTran) {\n    this.valueCache?.onDataChanged();\n    this.rowNodesCountReady = true;\n    const changedRowNodes = new ChangedRowNodes();\n    const { rowNodeTransaction, rowsInserted } = this.nodeManager.updateRowData(rowDataTran, changedRowNodes);\n    this.commitTransactions(rowsInserted, changedRowNodes);\n    return rowNodeTransaction;\n  }\n  /**\n   * Common to:\n   * - executeBatchUpdateRowData (batch transactions)\n   * - updateRowData (single transaction)\n   * - setImmutableRowData (generated transaction)\n   *\n   * @param rowNodeTrans - the transactions to apply\n   * @param orderChanged - whether the order of the rows has changed, either via generated transaction or user provided addIndex\n   */\n  commitTransactions(rowNodesOrderChanged, changedRowNodes) {\n    this.refreshModel({\n      step: \"group\",\n      rowDataUpdated: true,\n      rowNodesOrderChanged,\n      keepRenderedRows: true,\n      animate: !this.gos.get(\"suppressAnimationFrame\"),\n      changedRowNodes,\n      changedPath: this.createChangePath(true)\n    });\n  }\n  doRowsToDisplay() {\n    const { flattenStage, rootNode } = this;\n    let rowsToDisplay;\n    if (flattenStage) {\n      rowsToDisplay = flattenStage.execute({ rowNode: rootNode });\n    } else {\n      rowsToDisplay = rootNode?.childrenAfterSort ?? [];\n      for (const row of rowsToDisplay) {\n        row.setUiLevel(0);\n      }\n    }\n    this.rowsToDisplay = rowsToDisplay;\n  }\n  onRowHeightChanged() {\n    this.refreshModel({\n      step: \"map\",\n      keepRenderedRows: true,\n      keepUndoRedoStack: true\n    });\n  }\n  resetRowHeights() {\n    const rootNode = this.rootNode;\n    if (!rootNode) {\n      return;\n    }\n    const atLeastOne = this.resetRowHeightsForAllRowNodes();\n    rootNode.setRowHeight(rootNode.rowHeight, true);\n    if (rootNode.sibling) {\n      rootNode.sibling.setRowHeight(rootNode.sibling.rowHeight, true);\n    }\n    if (atLeastOne) {\n      this.onRowHeightChanged();\n    }\n  }\n  resetRowHeightsForAllRowNodes() {\n    let atLeastOne = false;\n    this.forEachNode((rowNode) => {\n      rowNode.setRowHeight(rowNode.rowHeight, true);\n      const detailNode = rowNode.detailNode;\n      if (detailNode) {\n        detailNode.setRowHeight(detailNode.rowHeight, true);\n      }\n      if (rowNode.sibling) {\n        rowNode.sibling.setRowHeight(rowNode.sibling.rowHeight, true);\n      }\n      atLeastOne = true;\n    });\n    return atLeastOne;\n  }\n  onGridStylesChanges(e) {\n    if (e.rowHeightChanged) {\n      if (this.beans.rowAutoHeight?.active) {\n        return;\n      }\n      this.resetRowHeights();\n    }\n  }\n  onGridReady() {\n    if (!this.started) {\n      this.setInitialData();\n    }\n  }\n  isRowDataLoaded() {\n    return this.rowCountReady;\n  }\n  destroy() {\n    super.destroy();\n    this.clearHighlightedRow();\n    this.started = false;\n    this.rootNode = null;\n    this.nodeManager = null;\n    this.rowDataTransactionBatch = null;\n    this.lastHighlightedRow = null;\n    this.orderedStages = _EmptyArray;\n    this.rowsToDisplay = _EmptyArray;\n  }\n  /**\n   * @deprecated v33.1\n   */\n  onRowHeightChangedDebounced() {\n    this.onRowHeightChanged_debounced();\n  }\n};\n\n// packages/ag-grid-community/src/clientSideRowModel/clientSideRowModelApi.ts\nfunction onGroupExpandedOrCollapsed(beans) {\n  beans.expansionSvc?.onGroupExpandedOrCollapsed();\n}\nfunction refreshClientSideRowModel(beans, step) {\n  const clientSideRowModel = _getClientSideRowModel(beans);\n  if (clientSideRowModel) {\n    if (!step || step === \"everything\") {\n      step = \"group\";\n    }\n    clientSideRowModel.refreshModel({\n      step,\n      keepRenderedRows: true,\n      animate: !beans.gos.get(\"suppressAnimationFrame\")\n    });\n  }\n}\nfunction isRowDataEmpty(beans) {\n  return _getClientSideRowModel(beans)?.isEmpty() ?? true;\n}\nfunction forEachLeafNode(beans, callback) {\n  _getClientSideRowModel(beans)?.forEachLeafNode(callback);\n}\nfunction forEachNodeAfterFilter(beans, callback) {\n  _getClientSideRowModel(beans)?.forEachNodeAfterFilter(callback);\n}\nfunction forEachNodeAfterFilterAndSort(beans, callback) {\n  _getClientSideRowModel(beans)?.forEachNodeAfterFilterAndSort(callback);\n}\nfunction resetRowHeights(beans) {\n  if (beans.rowAutoHeight?.active) {\n    _warn(3);\n    return;\n  }\n  _getClientSideRowModel(beans)?.resetRowHeights();\n}\nfunction applyTransaction(beans, rowDataTransaction) {\n  return beans.frameworkOverrides.wrapIncoming(\n    () => _getClientSideRowModel(beans)?.updateRowData(rowDataTransaction)\n  );\n}\nfunction applyTransactionAsync(beans, rowDataTransaction, callback) {\n  beans.frameworkOverrides.wrapIncoming(\n    () => _getClientSideRowModel(beans)?.batchUpdateRowData(rowDataTransaction, callback)\n  );\n}\nfunction flushAsyncTransactions(beans) {\n  beans.frameworkOverrides.wrapIncoming(() => _getClientSideRowModel(beans)?.flushAsyncTransactions());\n}\nfunction getBestCostNodeSelection(beans) {\n  return beans.selectionSvc?.getBestCostNodeSelection();\n}\n\n// packages/ag-grid-community/src/clientSideRowModel/clientSideRowModelModule.ts\nvar ClientSideRowModelModule = {\n  moduleName: \"ClientSideRowModel\",\n  version: VERSION,\n  rowModels: [\"clientSide\"],\n  beans: [ClientSideNodeManager, ClientSideRowModel, SortStage],\n  dependsOn: [SortModule]\n};\nvar ClientSideRowModelApiModule = {\n  moduleName: \"ClientSideRowModelApi\",\n  version: VERSION,\n  apiFunctions: {\n    onGroupExpandedOrCollapsed,\n    refreshClientSideRowModel,\n    isRowDataEmpty,\n    forEachLeafNode,\n    forEachNodeAfterFilter,\n    forEachNodeAfterFilterAndSort,\n    resetRowHeights,\n    applyTransaction,\n    applyTransactionAsync,\n    flushAsyncTransactions,\n    getBestCostNodeSelection\n  },\n  dependsOn: [CsrmSsrmSharedApiModule]\n};\n\n// packages/ag-grid-community/src/export/gridSerializer.ts\nvar GridSerializer = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"gridSerializer\";\n  }\n  wireBeans(beans) {\n    this.visibleCols = beans.visibleCols;\n    this.colModel = beans.colModel;\n    this.rowModel = beans.rowModel;\n    this.pinnedRowModel = beans.pinnedRowModel;\n  }\n  serialize(gridSerializingSession, params = {}) {\n    const { allColumns, columnKeys, skipRowGroups, exportRowNumbers } = params;\n    const columnsToExport = this.getColumnsToExport({\n      allColumns,\n      skipRowGroups,\n      columnKeys,\n      exportRowNumbers\n    });\n    return [\n      // first pass, put in the header names of the cols\n      this.prepareSession(columnsToExport),\n      this.prependContent(params),\n      this.exportColumnGroups(params, columnsToExport),\n      this.exportHeaders(params, columnsToExport),\n      this.processPinnedTopRows(params, columnsToExport),\n      this.processRows(params, columnsToExport),\n      this.processPinnedBottomRows(params, columnsToExport),\n      this.appendContent(params)\n    ].reduce((composed, f) => f(composed), gridSerializingSession).parse();\n  }\n  processRow(gridSerializingSession, params, columnsToExport, node) {\n    const rowSkipper = params.shouldRowBeSkipped || (() => false);\n    const isClipboardExport = params.rowPositions != null;\n    const isExplicitExportSelection = isClipboardExport || !!params.onlySelected;\n    const hideOpenParents = this.gos.get(\"groupHideOpenParents\") && !isExplicitExportSelection;\n    const isLeafNode = this.colModel.isPivotMode() ? node.leafGroup : !node.group;\n    const isFooter = !!node.footer;\n    const shouldSkipCurrentGroup = node.allChildrenCount === 1 && node.childrenAfterGroup?.length === 1 && _canSkipShowingRowGroup(this.gos, node);\n    if (!isLeafNode && !isFooter && (params.skipRowGroups || shouldSkipCurrentGroup || hideOpenParents) || params.onlySelected && !node.isSelected() || params.skipPinnedTop && node.rowPinned === \"top\" || params.skipPinnedBottom && node.rowPinned === \"bottom\") {\n      return;\n    }\n    const nodeIsRootNode = node.level === -1;\n    if (nodeIsRootNode && !isLeafNode && !isFooter) {\n      return;\n    }\n    const shouldRowBeSkipped = rowSkipper(_addGridCommonParams(this.gos, { node }));\n    if (shouldRowBeSkipped) {\n      return;\n    }\n    const rowAccumulator = gridSerializingSession.onNewBodyRow(node);\n    columnsToExport.forEach((column, index) => {\n      rowAccumulator.onColumn(column, index, node);\n    });\n    if (params.getCustomContentBelowRow) {\n      const content = params.getCustomContentBelowRow(_addGridCommonParams(this.gos, { node }));\n      if (content) {\n        gridSerializingSession.addCustomContent(content);\n      }\n    }\n  }\n  appendContent(params) {\n    return (gridSerializingSession) => {\n      const appendContent = params.appendContent;\n      if (appendContent) {\n        gridSerializingSession.addCustomContent(appendContent);\n      }\n      return gridSerializingSession;\n    };\n  }\n  prependContent(params) {\n    return (gridSerializingSession) => {\n      const prependContent = params.prependContent;\n      if (prependContent) {\n        gridSerializingSession.addCustomContent(prependContent);\n      }\n      return gridSerializingSession;\n    };\n  }\n  prepareSession(columnsToExport) {\n    return (gridSerializingSession) => {\n      gridSerializingSession.prepare(columnsToExport);\n      return gridSerializingSession;\n    };\n  }\n  exportColumnGroups(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      if (!params.skipColumnGroupHeaders) {\n        const idCreator = new GroupInstanceIdCreator();\n        const { colGroupSvc } = this.beans;\n        const displayedGroups = colGroupSvc ? colGroupSvc.createColumnGroups({\n          columns: columnsToExport,\n          idCreator,\n          pinned: null,\n          isStandaloneStructure: true\n        }) : columnsToExport;\n        this.recursivelyAddHeaderGroups(\n          displayedGroups,\n          gridSerializingSession,\n          params.processGroupHeaderCallback\n        );\n      }\n      return gridSerializingSession;\n    };\n  }\n  exportHeaders(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      if (!params.skipColumnHeaders) {\n        const gridRowIterator = gridSerializingSession.onNewHeaderRow();\n        columnsToExport.forEach((column, index) => {\n          gridRowIterator.onColumn(column, index, void 0);\n        });\n      }\n      return gridSerializingSession;\n    };\n  }\n  processPinnedTopRows(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      if (params.rowPositions) {\n        params.rowPositions.filter((position) => position.rowPinned === \"top\").sort((a, b) => a.rowIndex - b.rowIndex).map((position) => this.pinnedRowModel?.getPinnedTopRow(position.rowIndex)).forEach(processRow);\n      } else {\n        this.pinnedRowModel?.forEachPinnedRow(\"top\", processRow);\n      }\n      return gridSerializingSession;\n    };\n  }\n  processRows(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      const rowModel = this.rowModel;\n      const usingCsrm = _isClientSideRowModel(this.gos, rowModel);\n      const usingSsrm = _isServerSideRowModel(this.gos, rowModel);\n      const onlySelectedNonStandardModel = !usingCsrm && params.onlySelected;\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      const { exportedRows = \"filteredAndSorted\" } = params;\n      if (params.rowPositions) {\n        params.rowPositions.filter((position) => position.rowPinned == null).sort((a, b) => a.rowIndex - b.rowIndex).map((position) => rowModel.getRow(position.rowIndex)).forEach(processRow);\n        return gridSerializingSession;\n      }\n      if (this.colModel.isPivotMode()) {\n        if (usingCsrm) {\n          rowModel.forEachPivotNode(processRow, true, exportedRows === \"filteredAndSorted\");\n        } else if (usingSsrm) {\n          rowModel.forEachNodeAfterFilterAndSort(processRow, true);\n        } else {\n          rowModel.forEachNode(processRow);\n        }\n        return gridSerializingSession;\n      }\n      if (params.onlySelectedAllPages || onlySelectedNonStandardModel) {\n        const selectedNodes = this.beans.selectionSvc?.getSelectedNodes() ?? [];\n        this.replicateSortedOrder(selectedNodes);\n        selectedNodes.forEach(processRow);\n      } else {\n        if (exportedRows === \"all\") {\n          rowModel.forEachNode(processRow);\n        } else if (usingCsrm || usingSsrm) {\n          rowModel.forEachNodeAfterFilterAndSort(processRow, true);\n        } else {\n          rowModel.forEachNode(processRow);\n        }\n      }\n      return gridSerializingSession;\n    };\n  }\n  replicateSortedOrder(rows) {\n    const { sortSvc, rowNodeSorter } = this.beans;\n    if (!sortSvc || !rowNodeSorter) {\n      return;\n    }\n    const sortOptions = sortSvc.getSortOptions();\n    const compareNodes = (rowA, rowB) => {\n      if (rowA.rowIndex != null && rowB.rowIndex != null) {\n        return rowA.rowIndex - rowB.rowIndex;\n      }\n      if (rowA.level === rowB.level) {\n        if (rowA.parent?.id === rowB.parent?.id) {\n          return rowNodeSorter.compareRowNodes(\n            sortOptions,\n            {\n              rowNode: rowA,\n              currentPos: rowA.rowIndex ?? -1\n            },\n            {\n              rowNode: rowB,\n              currentPos: rowB.rowIndex ?? -1\n            }\n          );\n        }\n        return compareNodes(rowA.parent, rowB.parent);\n      }\n      if (rowA.level > rowB.level) {\n        return compareNodes(rowA.parent, rowB);\n      }\n      return compareNodes(rowA, rowB.parent);\n    };\n    rows.sort(compareNodes);\n  }\n  processPinnedBottomRows(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      if (params.rowPositions) {\n        params.rowPositions.filter((position) => position.rowPinned === \"bottom\").sort((a, b) => a.rowIndex - b.rowIndex).map((position) => this.pinnedRowModel?.getPinnedBottomRow(position.rowIndex)).forEach(processRow);\n      } else {\n        this.pinnedRowModel?.forEachPinnedRow(\"bottom\", processRow);\n      }\n      return gridSerializingSession;\n    };\n  }\n  getColumnsToExport(params) {\n    const { allColumns = false, skipRowGroups = false, exportRowNumbers = false, columnKeys } = params;\n    const { colModel, gos, visibleCols } = this;\n    const isPivotMode = colModel.isPivotMode();\n    const filterSpecialColumns = (col) => {\n      if (isColumnSelectionCol(col)) {\n        return false;\n      }\n      return !isRowNumberCol(col) || exportRowNumbers;\n    };\n    if (columnKeys && columnKeys.length) {\n      return colModel.getColsForKeys(columnKeys).filter(filterSpecialColumns);\n    }\n    const isTreeData = gos.get(\"treeData\");\n    let columnsToExport = [];\n    if (allColumns && !isPivotMode) {\n      columnsToExport = colModel.getCols();\n    } else {\n      columnsToExport = visibleCols.allCols;\n    }\n    columnsToExport = columnsToExport.filter(\n      (column) => filterSpecialColumns(column) && (skipRowGroups && !isTreeData ? !isColumnGroupAutoCol(column) : true)\n    );\n    return columnsToExport;\n  }\n  recursivelyAddHeaderGroups(displayedGroups, gridSerializingSession, processGroupHeaderCallback) {\n    const directChildrenHeaderGroups = [];\n    displayedGroups.forEach((columnGroupChild) => {\n      const columnGroup = columnGroupChild;\n      if (!columnGroup.getChildren) {\n        return;\n      }\n      columnGroup.getChildren().forEach((it) => directChildrenHeaderGroups.push(it));\n    });\n    if (displayedGroups.length > 0 && isColumnGroup2(displayedGroups[0])) {\n      this.doAddHeaderHeader(gridSerializingSession, displayedGroups, processGroupHeaderCallback);\n    }\n    if (directChildrenHeaderGroups && directChildrenHeaderGroups.length > 0) {\n      this.recursivelyAddHeaderGroups(\n        directChildrenHeaderGroups,\n        gridSerializingSession,\n        processGroupHeaderCallback\n      );\n    }\n  }\n  doAddHeaderHeader(gridSerializingSession, displayedGroups, processGroupHeaderCallback) {\n    const gridRowIterator = gridSerializingSession.onNewHeaderGroupingRow();\n    let columnIndex = 0;\n    displayedGroups.forEach((columnGroupChild) => {\n      const columnGroup = columnGroupChild;\n      let name;\n      if (processGroupHeaderCallback) {\n        name = processGroupHeaderCallback(\n          _addGridCommonParams(this.gos, {\n            columnGroup\n          })\n        );\n      } else {\n        name = this.beans.colNames.getDisplayNameForColumnGroup(columnGroup, \"header\");\n      }\n      const collapsibleGroupRanges = columnGroup.getLeafColumns().reduce((collapsibleGroups, currentColumn, currentIdx, arr) => {\n        let lastGroup = _last(collapsibleGroups);\n        const groupShow = currentColumn.getColumnGroupShow() === \"open\";\n        if (!groupShow) {\n          if (lastGroup && lastGroup[1] == null) {\n            lastGroup[1] = currentIdx - 1;\n          }\n        } else if (!lastGroup || lastGroup[1] != null) {\n          lastGroup = [currentIdx];\n          collapsibleGroups.push(lastGroup);\n        }\n        if (currentIdx === arr.length - 1 && lastGroup && lastGroup[1] == null) {\n          lastGroup[1] = currentIdx;\n        }\n        return collapsibleGroups;\n      }, []);\n      gridRowIterator.onColumn(\n        columnGroup,\n        name || \"\",\n        columnIndex++,\n        columnGroup.getLeafColumns().length - 1,\n        collapsibleGroupRanges\n      );\n    });\n  }\n};\n\n// packages/ag-grid-community/src/export/exportModule.ts\nvar SharedExportModule = {\n  moduleName: \"SharedExport\",\n  version: VERSION,\n  beans: [GridSerializer]\n};\n\n// packages/ag-grid-community/src/csvExport/csvSerializingSession.ts\nvar LINE_SEPARATOR = \"\\r\\n\";\nvar CsvSerializingSession = class extends BaseGridSerializingSession {\n  constructor(config) {\n    super(config);\n    this.isFirstLine = true;\n    this.result = \"\";\n    const { suppressQuotes, columnSeparator } = config;\n    this.suppressQuotes = suppressQuotes;\n    this.columnSeparator = columnSeparator;\n  }\n  addCustomContent(content) {\n    if (!content) {\n      return;\n    }\n    if (typeof content === \"string\") {\n      if (!/^\\s*\\n/.test(content)) {\n        this.beginNewLine();\n      }\n      content = content.replace(/\\r?\\n/g, LINE_SEPARATOR);\n      this.result += content;\n    } else {\n      content.forEach((row) => {\n        this.beginNewLine();\n        row.forEach((cell, index) => {\n          if (index !== 0) {\n            this.result += this.columnSeparator;\n          }\n          this.result += this.putInQuotes(cell.data.value || \"\");\n          if (cell.mergeAcross) {\n            this.appendEmptyCells(cell.mergeAcross);\n          }\n        });\n      });\n    }\n  }\n  onNewHeaderGroupingRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewHeaderGroupingRowColumn.bind(this)\n    };\n  }\n  onNewHeaderGroupingRowColumn(columnGroup, header, index, span) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    this.result += this.putInQuotes(header);\n    this.appendEmptyCells(span);\n  }\n  appendEmptyCells(count) {\n    for (let i = 1; i <= count; i++) {\n      this.result += this.columnSeparator + this.putInQuotes(\"\");\n    }\n  }\n  onNewHeaderRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewHeaderRowColumn.bind(this)\n    };\n  }\n  onNewHeaderRowColumn(column, index) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    this.result += this.putInQuotes(this.extractHeaderValue(column));\n  }\n  onNewBodyRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewBodyRowColumn.bind(this)\n    };\n  }\n  onNewBodyRowColumn(column, index, node) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    const rowCellValue = this.extractRowCellValue(column, index, index, \"csv\", node);\n    this.result += this.putInQuotes(rowCellValue.valueFormatted ?? rowCellValue.value);\n  }\n  putInQuotes(value) {\n    if (this.suppressQuotes) {\n      return value;\n    }\n    if (value === null || value === void 0) {\n      return '\"\"';\n    }\n    let stringValue;\n    if (typeof value === \"string\") {\n      stringValue = value;\n    } else if (typeof value.toString === \"function\") {\n      stringValue = value.toString();\n    } else {\n      _warn(53);\n      stringValue = \"\";\n    }\n    const valueEscaped = stringValue.replace(/\"/g, '\"\"');\n    return '\"' + valueEscaped + '\"';\n  }\n  parse() {\n    return this.result;\n  }\n  beginNewLine() {\n    if (!this.isFirstLine) {\n      this.result += LINE_SEPARATOR;\n    }\n    this.isFirstLine = false;\n  }\n};\n\n// packages/ag-grid-community/src/csvExport/csvCreator.ts\nvar CsvCreator = class extends BaseCreator {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"csvCreator\";\n  }\n  wireBeans(beans) {\n    this.colModel = beans.colModel;\n    this.colNames = beans.colNames;\n    this.rowGroupColsSvc = beans.rowGroupColsSvc;\n    this.valueSvc = beans.valueSvc;\n  }\n  getMergedParams(params) {\n    const baseParams4 = this.gos.get(\"defaultCsvExportParams\");\n    return Object.assign({}, baseParams4, params);\n  }\n  export(userParams) {\n    if (this.isExportSuppressed()) {\n      _warn(51);\n      return;\n    }\n    const mergedParams = this.getMergedParams(userParams);\n    const data = this.getData(mergedParams);\n    const packagedFile = new Blob([\"\\uFEFF\", data], { type: \"text/plain\" });\n    const fileName = typeof mergedParams.fileName === \"function\" ? mergedParams.fileName(_addGridCommonParams(this.gos, {})) : mergedParams.fileName;\n    _downloadFile(this.getFileName(fileName), packagedFile);\n  }\n  exportDataAsCsv(params) {\n    this.export(params);\n  }\n  getDataAsCsv(params, skipDefaultParams = false) {\n    const mergedParams = skipDefaultParams ? Object.assign({}, params) : this.getMergedParams(params);\n    return this.getData(mergedParams);\n  }\n  getDefaultFileExtension() {\n    return \"csv\";\n  }\n  createSerializingSession(params) {\n    const { colModel, colNames, rowGroupColsSvc, valueSvc, gos } = this;\n    const {\n      processCellCallback,\n      processHeaderCallback,\n      processGroupHeaderCallback,\n      processRowGroupCallback,\n      suppressQuotes,\n      columnSeparator\n    } = params;\n    return new CsvSerializingSession({\n      colModel,\n      colNames,\n      valueSvc,\n      gos,\n      processCellCallback: processCellCallback || void 0,\n      processHeaderCallback: processHeaderCallback || void 0,\n      processGroupHeaderCallback: processGroupHeaderCallback || void 0,\n      processRowGroupCallback: processRowGroupCallback || void 0,\n      suppressQuotes: suppressQuotes || false,\n      columnSeparator: columnSeparator || \",\",\n      rowGroupColsSvc\n    });\n  }\n  isExportSuppressed() {\n    return this.gos.get(\"suppressCsvExport\");\n  }\n};\n\n// packages/ag-grid-community/src/csvExport/csvExportApi.ts\nfunction getDataAsCsv(beans, params) {\n  return beans.csvCreator?.getDataAsCsv(params);\n}\nfunction exportDataAsCsv(beans, params) {\n  beans.csvCreator?.exportDataAsCsv(params);\n}\n\n// packages/ag-grid-community/src/csvExport/csvExportModule.ts\nvar CsvExportModule = {\n  moduleName: \"CsvExport\",\n  version: VERSION,\n  beans: [CsvCreator],\n  apiFunctions: {\n    getDataAsCsv,\n    exportDataAsCsv\n  },\n  dependsOn: [SharedExportModule]\n};\n\n// packages/ag-grid-community/src/infiniteRowModel/infiniteBlock.ts\nvar InfiniteBlock = class extends BeanStub {\n  constructor(id, parentCache, params) {\n    super();\n    this.id = id;\n    this.parentCache = parentCache;\n    this.params = params;\n    this.state = \"needsLoading\";\n    this.version = 0;\n    this.startRow = id * params.blockSize;\n    this.endRow = this.startRow + params.blockSize;\n  }\n  load() {\n    this.state = \"loading\";\n    this.loadFromDatasource();\n  }\n  setStateWaitingToLoad() {\n    this.version++;\n    this.state = \"needsLoading\";\n  }\n  pageLoadFailed(version) {\n    const requestMostRecentAndLive = this.isRequestMostRecentAndLive(version);\n    if (requestMostRecentAndLive) {\n      this.state = \"failed\";\n    }\n    this.dispatchLocalEvent({ type: \"loadComplete\" });\n  }\n  pageLoaded(version, rows, lastRow) {\n    this.successCommon(version, { rowData: rows, rowCount: lastRow });\n  }\n  isRequestMostRecentAndLive(version) {\n    const thisIsMostRecentRequest = version === this.version;\n    const weAreNotDestroyed = this.isAlive();\n    return thisIsMostRecentRequest && weAreNotDestroyed;\n  }\n  successCommon(version, params) {\n    this.dispatchLocalEvent({ type: \"loadComplete\" });\n    const requestMostRecentAndLive = this.isRequestMostRecentAndLive(version);\n    if (requestMostRecentAndLive) {\n      this.state = \"loaded\";\n      this.processServerResult(params);\n    }\n  }\n  postConstruct() {\n    this.rowNodes = [];\n    const {\n      params: { blockSize, rowHeight },\n      startRow,\n      beans,\n      rowNodes\n    } = this;\n    for (let i = 0; i < blockSize; i++) {\n      const rowIndex = startRow + i;\n      const rowNode = new RowNode(beans);\n      rowNode.setRowHeight(rowHeight);\n      rowNode.uiLevel = 0;\n      rowNode.setRowIndex(rowIndex);\n      rowNode.setRowTop(rowHeight * rowIndex);\n      rowNodes.push(rowNode);\n    }\n  }\n  getBlockStateJson() {\n    const { id, startRow, endRow, state: pageStatus } = this;\n    return {\n      id: \"\" + id,\n      state: {\n        blockNumber: id,\n        startRow,\n        endRow,\n        pageStatus\n      }\n    };\n  }\n  setDataAndId(rowNode, data, index) {\n    if (_exists(data)) {\n      rowNode.setDataAndId(data, index.toString());\n    } else {\n      rowNode.setDataAndId(void 0, void 0);\n    }\n  }\n  loadFromDatasource() {\n    const params = this.createLoadParams();\n    if (_missing(this.params.datasource.getRows)) {\n      _warn(90);\n      return;\n    }\n    window.setTimeout(() => {\n      this.params.datasource.getRows(params);\n    }, 0);\n  }\n  createLoadParams() {\n    const {\n      startRow,\n      endRow,\n      version,\n      params: { sortModel, filterModel },\n      gos\n    } = this;\n    const params = {\n      startRow,\n      endRow,\n      successCallback: this.pageLoaded.bind(this, version),\n      failCallback: this.pageLoadFailed.bind(this, version),\n      sortModel,\n      filterModel,\n      context: _addGridCommonParams(gos, {}).context\n    };\n    return params;\n  }\n  forEachNode(callback, sequence, rowCount) {\n    this.rowNodes.forEach((rowNode, index) => {\n      const rowIndex = this.startRow + index;\n      if (rowIndex < rowCount) {\n        callback(rowNode, sequence.value++);\n      }\n    });\n  }\n  getRow(rowIndex, dontTouchLastAccessed = false) {\n    if (!dontTouchLastAccessed) {\n      this.lastAccessed = this.params.lastAccessedSequence.value++;\n    }\n    const localIndex = rowIndex - this.startRow;\n    return this.rowNodes[localIndex];\n  }\n  processServerResult(params) {\n    const { rowNodes, beans } = this;\n    rowNodes.forEach((rowNode, index) => {\n      const data = params.rowData ? params.rowData[index] : void 0;\n      if (!rowNode.id && rowNode.alreadyRendered && data) {\n        rowNodes[index] = new RowNode(beans);\n        rowNodes[index].setRowIndex(rowNode.rowIndex);\n        rowNodes[index].setRowTop(rowNode.rowTop);\n        rowNodes[index].setRowHeight(rowNode.rowHeight);\n        rowNode.clearRowTopAndRowIndex();\n      }\n      this.setDataAndId(rowNodes[index], data, this.startRow + index);\n    });\n    const finalRowCount = params.rowCount != null && params.rowCount >= 0 ? params.rowCount : void 0;\n    this.parentCache.pageLoaded(this, finalRowCount);\n  }\n  destroy() {\n    this.rowNodes.forEach((rowNode) => {\n      rowNode.clearRowTopAndRowIndex();\n    });\n    super.destroy();\n  }\n};\n\n// packages/ag-grid-community/src/infiniteRowModel/infiniteCache.ts\nvar MAX_EMPTY_BLOCKS_TO_KEEP = 2;\nvar InfiniteCache = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.params = params;\n    this.lastRowIndexKnown = false;\n    this.blocks = {};\n    this.blockCount = 0;\n    this.rowCount = params.initialRowCount;\n  }\n  // the rowRenderer will not pass dontCreatePage, meaning when rendering the grid,\n  // it will want new pages in the cache as it asks for rows. only when we are inserting /\n  // removing rows via the api is dontCreatePage set, where we move rows between the pages.\n  getRow(rowIndex, dontCreatePage = false) {\n    const blockId = Math.floor(rowIndex / this.params.blockSize);\n    let block = this.blocks[blockId];\n    if (!block) {\n      if (dontCreatePage) {\n        return void 0;\n      }\n      block = this.createBlock(blockId);\n    }\n    return block.getRow(rowIndex);\n  }\n  createBlock(blockNumber) {\n    const params = this.params;\n    const newBlock = this.createBean(new InfiniteBlock(blockNumber, this, params));\n    this.blocks[newBlock.id] = newBlock;\n    this.blockCount++;\n    this.purgeBlocksIfNeeded(newBlock);\n    params.rowNodeBlockLoader.addBlock(newBlock);\n    return newBlock;\n  }\n  // we have this on infinite row model only, not server side row model,\n  // because for server side, it would leave the children in inconsistent\n  // state - eg if a node had children, but after the refresh it had data\n  // for a different row, then the children would be with the wrong row node.\n  refreshCache() {\n    const nothingToRefresh = this.blockCount == 0;\n    if (nothingToRefresh) {\n      this.purgeCache();\n      return;\n    }\n    this.getBlocksInOrder().forEach((block) => block.setStateWaitingToLoad());\n    this.params.rowNodeBlockLoader.checkBlockToLoad();\n  }\n  destroy() {\n    this.getBlocksInOrder().forEach((block) => this.destroyBlock(block));\n    super.destroy();\n  }\n  getRowCount() {\n    return this.rowCount;\n  }\n  isLastRowIndexKnown() {\n    return this.lastRowIndexKnown;\n  }\n  // block calls this, when page loaded\n  pageLoaded(block, lastRow) {\n    if (!this.isAlive()) {\n      return;\n    }\n    _logIfDebug(this.gos, `InfiniteCache - onPageLoaded: page = ${block.id}, lastRow = ${lastRow}`);\n    this.checkRowCount(block, lastRow);\n    this.onCacheUpdated();\n  }\n  purgeBlocksIfNeeded(blockToExclude) {\n    const blocksForPurging = this.getBlocksInOrder().filter((b) => b != blockToExclude);\n    const lastAccessedComparator = (a, b) => b.lastAccessed - a.lastAccessed;\n    blocksForPurging.sort(lastAccessedComparator);\n    const maxBlocksProvided = this.params.maxBlocksInCache > 0;\n    const blocksToKeep = maxBlocksProvided ? this.params.maxBlocksInCache - 1 : null;\n    const emptyBlocksToKeep = MAX_EMPTY_BLOCKS_TO_KEEP - 1;\n    blocksForPurging.forEach((block, index) => {\n      const purgeBecauseBlockEmpty = block.state === \"needsLoading\" && index >= emptyBlocksToKeep;\n      const purgeBecauseCacheFull = maxBlocksProvided ? index >= blocksToKeep : false;\n      if (purgeBecauseBlockEmpty || purgeBecauseCacheFull) {\n        if (this.isBlockCurrentlyDisplayed(block)) {\n          return;\n        }\n        if (this.isBlockFocused(block)) {\n          return;\n        }\n        this.removeBlockFromCache(block);\n      }\n    });\n  }\n  isBlockFocused(block) {\n    const focusedCell = this.beans.focusSvc.getFocusCellToUseAfterRefresh();\n    if (!focusedCell) {\n      return false;\n    }\n    if (focusedCell.rowPinned != null) {\n      return false;\n    }\n    const { startRow, endRow } = block;\n    const hasFocus = focusedCell.rowIndex >= startRow && focusedCell.rowIndex < endRow;\n    return hasFocus;\n  }\n  isBlockCurrentlyDisplayed(block) {\n    const { startRow, endRow } = block;\n    return this.beans.rowRenderer.isRangeInRenderedViewport(startRow, endRow - 1);\n  }\n  removeBlockFromCache(blockToRemove) {\n    if (!blockToRemove) {\n      return;\n    }\n    this.destroyBlock(blockToRemove);\n  }\n  checkRowCount(block, lastRow) {\n    if (typeof lastRow === \"number\" && lastRow >= 0) {\n      this.rowCount = lastRow;\n      this.lastRowIndexKnown = true;\n    } else if (!this.lastRowIndexKnown) {\n      const { blockSize, overflowSize } = this.params;\n      const lastRowIndex = (block.id + 1) * blockSize;\n      const lastRowIndexPlusOverflow = lastRowIndex + overflowSize;\n      if (this.rowCount < lastRowIndexPlusOverflow) {\n        this.rowCount = lastRowIndexPlusOverflow;\n      }\n    }\n  }\n  setRowCount(rowCount, lastRowIndexKnown) {\n    this.rowCount = rowCount;\n    if (_exists(lastRowIndexKnown)) {\n      this.lastRowIndexKnown = lastRowIndexKnown;\n    }\n    if (!this.lastRowIndexKnown) {\n      if (this.rowCount % this.params.blockSize === 0) {\n        this.rowCount++;\n      }\n    }\n    this.onCacheUpdated();\n  }\n  forEachNodeDeep(callback) {\n    const sequence = { value: 0 };\n    this.getBlocksInOrder().forEach((block) => block.forEachNode(callback, sequence, this.rowCount));\n  }\n  getBlocksInOrder() {\n    const blockComparator = (a, b) => a.id - b.id;\n    const blocks = Object.values(this.blocks).sort(blockComparator);\n    return blocks;\n  }\n  destroyBlock(block) {\n    delete this.blocks[block.id];\n    this.destroyBean(block);\n    this.blockCount--;\n    this.params.rowNodeBlockLoader.removeBlock(block);\n  }\n  // gets called 1) row count changed 2) cache purged 3) items inserted\n  onCacheUpdated() {\n    if (this.isAlive()) {\n      this.destroyAllBlocksPastVirtualRowCount();\n      this.eventSvc.dispatchEvent({\n        type: \"storeUpdated\"\n      });\n    }\n  }\n  destroyAllBlocksPastVirtualRowCount() {\n    const blocksToDestroy = [];\n    this.getBlocksInOrder().forEach((block) => {\n      const startRow = block.id * this.params.blockSize;\n      if (startRow >= this.rowCount) {\n        blocksToDestroy.push(block);\n      }\n    });\n    if (blocksToDestroy.length > 0) {\n      blocksToDestroy.forEach((block) => this.destroyBlock(block));\n    }\n  }\n  purgeCache() {\n    this.getBlocksInOrder().forEach((block) => this.removeBlockFromCache(block));\n    this.lastRowIndexKnown = false;\n    if (this.rowCount === 0) {\n      this.rowCount = this.params.initialRowCount;\n    }\n    this.onCacheUpdated();\n  }\n  getRowNodesInRange(firstInRange, lastInRange) {\n    const result = [];\n    let lastBlockId = -1;\n    let inActiveRange = false;\n    const numberSequence = { value: 0 };\n    let foundGapInSelection = false;\n    this.getBlocksInOrder().forEach((block) => {\n      if (foundGapInSelection) {\n        return;\n      }\n      if (inActiveRange && lastBlockId + 1 !== block.id) {\n        foundGapInSelection = true;\n        return;\n      }\n      lastBlockId = block.id;\n      block.forEachNode(\n        (rowNode) => {\n          const hitFirstOrLast = rowNode === firstInRange || rowNode === lastInRange;\n          if (inActiveRange || hitFirstOrLast) {\n            result.push(rowNode);\n          }\n          if (hitFirstOrLast) {\n            inActiveRange = !inActiveRange;\n          }\n        },\n        numberSequence,\n        this.rowCount\n      );\n    });\n    const invalidRange = foundGapInSelection || inActiveRange;\n    return invalidRange ? [] : result;\n  }\n};\n\n// packages/ag-grid-community/src/infiniteRowModel/infiniteRowModel.ts\nvar InfiniteRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowModel\";\n  }\n  getRowBounds(index) {\n    return {\n      rowHeight: this.rowHeight,\n      rowTop: this.rowHeight * index\n    };\n  }\n  // we don't implement as lazy row heights is not supported in this row model\n  ensureRowHeightsValid() {\n    return false;\n  }\n  postConstruct() {\n    if (this.gos.get(\"rowModelType\") !== \"infinite\") {\n      return;\n    }\n    this.rowHeight = _getRowHeightAsNumber(this.beans);\n    this.addEventListeners();\n    this.addDestroyFunc(() => this.destroyCache());\n  }\n  start() {\n    this.setDatasource(this.gos.get(\"datasource\"));\n  }\n  destroy() {\n    this.destroyDatasource();\n    super.destroy();\n  }\n  destroyDatasource() {\n    if (this.datasource) {\n      this.destroyBean(this.datasource);\n      this.beans.rowRenderer.datasourceChanged();\n      this.datasource = null;\n    }\n  }\n  addEventListeners() {\n    this.addManagedEventListeners({\n      filterChanged: this.reset.bind(this),\n      sortChanged: this.reset.bind(this),\n      newColumnsLoaded: this.onColumnEverything.bind(this),\n      storeUpdated: this.dispatchModelUpdatedEvent.bind(this)\n    });\n    this.addManagedPropertyListener(\"datasource\", () => this.setDatasource(this.gos.get(\"datasource\")));\n    this.addManagedPropertyListener(\"cacheBlockSize\", () => this.resetCache());\n    this.addManagedPropertyListener(\"rowHeight\", () => {\n      this.rowHeight = _getRowHeightAsNumber(this.beans);\n      this.cacheParams.rowHeight = this.rowHeight;\n      this.updateRowHeights();\n    });\n  }\n  onColumnEverything() {\n    let resetRequired;\n    if (this.cacheParams) {\n      resetRequired = !_jsonEquals(this.cacheParams.sortModel, this.beans.sortSvc?.getSortModel() ?? []);\n    } else {\n      resetRequired = true;\n    }\n    if (resetRequired) {\n      this.reset();\n    }\n  }\n  getType() {\n    return \"infinite\";\n  }\n  setDatasource(datasource) {\n    this.destroyDatasource();\n    this.datasource = datasource;\n    if (datasource) {\n      this.reset();\n    }\n  }\n  isEmpty() {\n    return !this.infiniteCache;\n  }\n  isRowsToRender() {\n    return !!this.infiniteCache;\n  }\n  getNodesInRangeForSelection(firstInRange, lastInRange) {\n    return this.infiniteCache?.getRowNodesInRange(firstInRange, lastInRange) ?? [];\n  }\n  reset() {\n    if (!this.datasource) {\n      return;\n    }\n    const getRowIdFunc = _getRowIdCallback(this.gos);\n    const userGeneratingIds = getRowIdFunc != null;\n    if (!userGeneratingIds) {\n      this.beans.selectionSvc?.reset(\"rowDataChanged\");\n    }\n    this.resetCache();\n  }\n  dispatchModelUpdatedEvent() {\n    this.eventSvc.dispatchEvent({\n      type: \"modelUpdated\",\n      // not sure if these should all be false - noticed if after implementing,\n      // maybe they should be true?\n      newPage: false,\n      newPageSize: false,\n      newData: false,\n      keepRenderedRows: true,\n      animate: false\n    });\n  }\n  resetCache() {\n    this.destroyCache();\n    const beans = this.beans;\n    const { filterManager, sortSvc, rowNodeBlockLoader, eventSvc, gos } = beans;\n    this.cacheParams = {\n      // the user provided datasource\n      datasource: this.datasource,\n      // sort and filter model\n      filterModel: filterManager?.getFilterModel() ?? {},\n      sortModel: sortSvc?.getSortModel() ?? [],\n      rowNodeBlockLoader,\n      // properties - this way we take a snapshot of them, so if user changes any, they will be\n      // used next time we create a new cache, which is generally after a filter or sort change,\n      // or a new datasource is set\n      initialRowCount: gos.get(\"infiniteInitialRowCount\"),\n      maxBlocksInCache: gos.get(\"maxBlocksInCache\"),\n      rowHeight: _getRowHeightAsNumber(beans),\n      // if user doesn't provide overflow, we use default overflow of 1, so user can scroll past\n      // the current page and request first row of next page\n      overflowSize: gos.get(\"cacheOverflowSize\"),\n      // page size needs to be 1 or greater. having it at 1 would be silly, as you would be hitting the\n      // server for one page at a time. so the default if not specified is 100.\n      blockSize: gos.get(\"cacheBlockSize\"),\n      // the cache could create this, however it is also used by the pages, so handy to create it\n      // here as the settings are also passed to the pages\n      lastAccessedSequence: { value: 0 }\n    };\n    this.infiniteCache = this.createBean(new InfiniteCache(this.cacheParams));\n    eventSvc.dispatchEventOnce({\n      type: \"rowCountReady\"\n    });\n    this.dispatchModelUpdatedEvent();\n  }\n  updateRowHeights() {\n    this.forEachNode((node) => {\n      node.setRowHeight(this.rowHeight);\n      node.setRowTop(this.rowHeight * node.rowIndex);\n    });\n    this.dispatchModelUpdatedEvent();\n  }\n  destroyCache() {\n    this.infiniteCache = this.destroyBean(this.infiniteCache);\n  }\n  getRow(rowIndex) {\n    const infiniteCache = this.infiniteCache;\n    if (!infiniteCache) {\n      return void 0;\n    }\n    if (rowIndex >= infiniteCache.getRowCount()) {\n      return void 0;\n    }\n    return infiniteCache.getRow(rowIndex);\n  }\n  getRowNode(id) {\n    let result;\n    this.forEachNode((rowNode) => {\n      if (rowNode.id === id) {\n        result = rowNode;\n      }\n    });\n    return result;\n  }\n  forEachNode(callback) {\n    this.infiniteCache?.forEachNodeDeep(callback);\n  }\n  getTopLevelRowCount() {\n    return this.getRowCount();\n  }\n  getTopLevelRowDisplayedIndex(topLevelIndex) {\n    return topLevelIndex;\n  }\n  getRowIndexAtPixel(pixel) {\n    if (this.rowHeight !== 0) {\n      const rowIndexForPixel = Math.floor(pixel / this.rowHeight);\n      const lastRowIndex = this.getRowCount() - 1;\n      if (rowIndexForPixel > lastRowIndex) {\n        return lastRowIndex;\n      }\n      return rowIndexForPixel;\n    }\n    return 0;\n  }\n  getRowCount() {\n    return this.infiniteCache ? this.infiniteCache.getRowCount() : 0;\n  }\n  isRowPresent(rowNode) {\n    return !!this.getRowNode(rowNode.id);\n  }\n  refreshCache() {\n    this.infiniteCache?.refreshCache();\n  }\n  purgeCache() {\n    this.infiniteCache?.purgeCache();\n  }\n  // for iRowModel\n  isLastRowIndexKnown() {\n    return this.infiniteCache?.isLastRowIndexKnown() ?? false;\n  }\n  setRowCount(rowCount, lastRowIndexKnown) {\n    this.infiniteCache?.setRowCount(rowCount, lastRowIndexKnown);\n  }\n};\n\n// packages/ag-grid-community/src/infiniteRowModel/infiniteRowModelApi.ts\nfunction refreshInfiniteCache(beans) {\n  _getInfiniteRowModel(beans)?.refreshCache();\n}\nfunction purgeInfiniteCache(beans) {\n  _getInfiniteRowModel(beans)?.purgeCache();\n}\nfunction getInfiniteRowCount(beans) {\n  return _getInfiniteRowModel(beans)?.getRowCount();\n}\n\n// packages/ag-grid-community/src/infiniteRowModel/rowNodeBlockLoader.ts\nvar RowNodeBlockLoader = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowNodeBlockLoader\";\n    this.activeBlockLoadsCount = 0;\n    this.blocks = [];\n    this.active = true;\n  }\n  postConstruct() {\n    this.maxConcurrentRequests = _getMaxConcurrentDatasourceRequests(this.gos);\n    const blockLoadDebounceMillis = this.gos.get(\"blockLoadDebounceMillis\");\n    if (blockLoadDebounceMillis && blockLoadDebounceMillis > 0) {\n      this.checkBlockToLoadDebounce = _debounce(\n        this,\n        this.performCheckBlocksToLoad.bind(this),\n        blockLoadDebounceMillis\n      );\n    }\n  }\n  addBlock(block) {\n    this.blocks.push(block);\n    block.addEventListener(\"loadComplete\", this.loadComplete.bind(this));\n    this.checkBlockToLoad();\n  }\n  removeBlock(block) {\n    _removeFromArray(this.blocks, block);\n  }\n  destroy() {\n    super.destroy();\n    this.active = false;\n  }\n  loadComplete() {\n    this.activeBlockLoadsCount--;\n    this.checkBlockToLoad();\n  }\n  checkBlockToLoad() {\n    if (this.checkBlockToLoadDebounce) {\n      this.checkBlockToLoadDebounce();\n    } else {\n      this.performCheckBlocksToLoad();\n    }\n  }\n  performCheckBlocksToLoad() {\n    if (!this.active) {\n      return;\n    }\n    this.printCacheStatus();\n    if (this.maxConcurrentRequests != null && this.activeBlockLoadsCount >= this.maxConcurrentRequests) {\n      _logIfDebug(this.gos, `RowNodeBlockLoader - checkBlockToLoad: max loads exceeded`);\n      return;\n    }\n    const loadAvailability = this.maxConcurrentRequests != null ? this.maxConcurrentRequests - this.activeBlockLoadsCount : 1;\n    const blocksToLoad = this.blocks.filter((block) => block.state === \"needsLoading\").slice(0, loadAvailability);\n    this.activeBlockLoadsCount += blocksToLoad.length;\n    blocksToLoad.forEach((block) => block.load());\n    this.printCacheStatus();\n  }\n  getBlockState() {\n    const result = {};\n    this.blocks.forEach((block) => {\n      const { id, state } = block.getBlockStateJson();\n      result[id] = state;\n    });\n    return result;\n  }\n  printCacheStatus() {\n    _logIfDebug(\n      this.gos,\n      `RowNodeBlockLoader - printCacheStatus: activePageLoadsCount = ${this.activeBlockLoadsCount}, blocks = ${JSON.stringify(this.getBlockState())}`\n    );\n  }\n};\n\n// packages/ag-grid-community/src/infiniteRowModel/infiniteRowModelModule.ts\nvar InfiniteRowModelCoreModule = {\n  moduleName: \"InfiniteRowModelCore\",\n  version: VERSION,\n  rowModels: [\"infinite\"],\n  beans: [InfiniteRowModel, RowNodeBlockLoader]\n};\nvar InfiniteRowModelModule = {\n  moduleName: \"InfiniteRowModel\",\n  version: VERSION,\n  apiFunctions: {\n    refreshInfiniteCache,\n    purgeInfiniteCache,\n    getInfiniteRowCount\n  },\n  dependsOn: [InfiniteRowModelCoreModule, SsrmInfiniteSharedApiModule]\n};\n\n// packages/ag-grid-community/src/rendering/cellRenderers/animateShowChangeCellRenderer.ts\nvar ARROW_UP = \"\\u2191\";\nvar ARROW_DOWN = \"\\u2193\";\nvar AnimateShowChangeCellRenderer = class extends Component {\n  constructor() {\n    super();\n    this.refreshCount = 0;\n    const template = document.createElement(\"span\");\n    const delta = document.createElement(\"span\");\n    delta.setAttribute(\"class\", \"ag-value-change-delta\");\n    const value = document.createElement(\"span\");\n    value.setAttribute(\"class\", \"ag-value-change-value\");\n    template.appendChild(delta);\n    template.appendChild(value);\n    this.setTemplateFromElement(template);\n  }\n  init(params) {\n    this.eValue = this.queryForHtmlElement(\".ag-value-change-value\");\n    this.eDelta = this.queryForHtmlElement(\".ag-value-change-delta\");\n    this.refresh(params, true);\n  }\n  showDelta(params, delta) {\n    const absDelta = Math.abs(delta);\n    const valueFormatted = params.formatValue(absDelta);\n    const valueToUse = _exists(valueFormatted) ? valueFormatted : absDelta;\n    const deltaUp = delta >= 0;\n    const eDelta = this.eDelta;\n    if (deltaUp) {\n      eDelta.textContent = ARROW_UP + valueToUse;\n    } else {\n      eDelta.textContent = ARROW_DOWN + valueToUse;\n    }\n    eDelta.classList.toggle(\"ag-value-change-delta-up\", deltaUp);\n    eDelta.classList.toggle(\"ag-value-change-delta-down\", !deltaUp);\n  }\n  setTimerToRemoveDelta() {\n    this.refreshCount++;\n    const refreshCountCopy = this.refreshCount;\n    this.beans.frameworkOverrides.wrapIncoming(() => {\n      window.setTimeout(() => {\n        if (refreshCountCopy === this.refreshCount) {\n          this.hideDeltaValue();\n        }\n      }, 2e3);\n    });\n  }\n  hideDeltaValue() {\n    this.eValue.classList.remove(\"ag-value-change-value-highlight\");\n    _clearElement(this.eDelta);\n  }\n  refresh(params, isInitialRender = false) {\n    const { value, valueFormatted } = params;\n    const { eValue, lastValue, beans } = this;\n    if (value === lastValue) {\n      return false;\n    }\n    if (_exists(valueFormatted)) {\n      eValue.textContent = valueFormatted;\n    } else if (_exists(value)) {\n      eValue.textContent = value;\n    } else {\n      _clearElement(eValue);\n    }\n    if (beans.filterManager?.isSuppressFlashingCellsBecauseFiltering()) {\n      return false;\n    }\n    if (typeof value === \"number\" && typeof lastValue === \"number\") {\n      const delta = value - lastValue;\n      this.showDelta(params, delta);\n    }\n    if (lastValue) {\n      eValue.classList.add(\"ag-value-change-value-highlight\");\n    }\n    if (!isInitialRender) {\n      this.setTimerToRemoveDelta();\n    }\n    this.lastValue = value;\n    return true;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cellRenderers/animateSlideCellRenderer.css-GENERATED.ts\nvar animateSlideCellRendererCSS = (\n  /*css*/\n  `.ag-value-slide-out{opacity:1}:where(.ag-ltr) .ag-value-slide-out{margin-right:5px;transition:opacity 3s,margin-right 3s}:where(.ag-rtl) .ag-value-slide-out{margin-left:5px;transition:opacity 3s,margin-left 3s}:where(.ag-ltr,.ag-rtl) .ag-value-slide-out{transition-timing-function:linear}.ag-value-slide-out-end{opacity:0}:where(.ag-ltr) .ag-value-slide-out-end{margin-right:10px}:where(.ag-rtl) .ag-value-slide-out-end{margin-left:10px}`\n);\n\n// packages/ag-grid-community/src/rendering/cellRenderers/animateSlideCellRenderer.ts\nvar AnimateSlideCellRenderer = class extends Component {\n  constructor() {\n    super();\n    this.refreshCount = 0;\n    const template = document.createElement(\"span\");\n    const slide = document.createElement(\"span\");\n    slide.setAttribute(\"class\", \"ag-value-slide-current\");\n    template.appendChild(slide);\n    this.setTemplateFromElement(template);\n    this.eCurrent = this.queryForHtmlElement(\".ag-value-slide-current\");\n    this.registerCSS(animateSlideCellRendererCSS);\n  }\n  init(params) {\n    this.refresh(params, true);\n  }\n  addSlideAnimation() {\n    this.refreshCount++;\n    const refreshCountCopy = this.refreshCount;\n    if (this.ePrevious) {\n      this.getGui().removeChild(this.ePrevious);\n    }\n    const { beans, eCurrent } = this;\n    const prevElement = _getDocument(beans).createElement(\"span\");\n    prevElement.setAttribute(\"class\", \"ag-value-slide-previous ag-value-slide-out\");\n    this.ePrevious = prevElement;\n    prevElement.textContent = eCurrent.textContent;\n    this.getGui().insertBefore(prevElement, eCurrent);\n    beans.frameworkOverrides.wrapIncoming(() => {\n      window.setTimeout(() => {\n        if (refreshCountCopy !== this.refreshCount) {\n          return;\n        }\n        this.ePrevious.classList.add(\"ag-value-slide-out-end\");\n      }, 50);\n      window.setTimeout(() => {\n        if (refreshCountCopy !== this.refreshCount) {\n          return;\n        }\n        this.getGui().removeChild(this.ePrevious);\n        this.ePrevious = null;\n      }, 3e3);\n    });\n  }\n  refresh(params, isInitialRender = false) {\n    let value = params.value;\n    if (_missing(value)) {\n      value = \"\";\n    }\n    if (value === this.lastValue) {\n      return false;\n    }\n    if (this.beans.filterManager?.isSuppressFlashingCellsBecauseFiltering()) {\n      return false;\n    }\n    if (!isInitialRender) {\n      this.addSlideAnimation();\n    }\n    this.lastValue = value;\n    const eCurrent = this.eCurrent;\n    if (_exists(params.valueFormatted)) {\n      eCurrent.textContent = params.valueFormatted;\n    } else if (_exists(params.value)) {\n      eCurrent.textContent = value;\n    } else {\n      _clearElement(eCurrent);\n    }\n    return true;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cell/cellFlashService.ts\nvar CellFlashService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"cellFlashSvc\";\n  }\n  onFlashCells(cellCtrl, event) {\n    if (!cellCtrl.comp) {\n      return;\n    }\n    const cellId = _createCellId(cellCtrl.cellPosition);\n    const shouldFlash = event.cells[cellId];\n    if (shouldFlash) {\n      this.animateCell(cellCtrl, \"highlight\");\n    }\n  }\n  flashCell(cellCtrl, delays) {\n    this.animateCell(cellCtrl, \"data-changed\", delays?.flashDuration, delays?.fadeDuration);\n  }\n  animateCell(cellCtrl, cssName, flashDuration, fadeDuration) {\n    const cellComp = cellCtrl.comp;\n    if (!cellComp) {\n      return;\n    }\n    const { gos } = this;\n    if (!flashDuration) {\n      flashDuration = gos.get(\"cellFlashDuration\");\n    }\n    if (flashDuration === 0) {\n      return;\n    }\n    if (!_exists(fadeDuration)) {\n      fadeDuration = gos.get(\"cellFadeDuration\");\n    }\n    const fullName = `ag-cell-${cssName}`;\n    const animationFullName = `ag-cell-${cssName}-animation`;\n    cellComp.addOrRemoveCssClass(fullName, true);\n    cellComp.addOrRemoveCssClass(animationFullName, false);\n    const eCell = cellCtrl.eGui;\n    this.beans.frameworkOverrides.wrapIncoming(() => {\n      window.setTimeout(() => {\n        if (!cellCtrl.isAlive()) {\n          return;\n        }\n        cellComp.addOrRemoveCssClass(fullName, false);\n        cellComp.addOrRemoveCssClass(animationFullName, true);\n        eCell.style.transition = `background-color ${fadeDuration}ms`;\n        window.setTimeout(() => {\n          if (!cellCtrl.isAlive()) {\n            return;\n          }\n          cellComp.addOrRemoveCssClass(animationFullName, false);\n          eCell.style.transition = \"\";\n        }, fadeDuration);\n      }, flashDuration);\n    });\n  }\n};\n\n// packages/ag-grid-community/src/rendering/cell/highlightChangesApi.ts\nfunction flashCells(beans, params = {}) {\n  const { cellFlashSvc } = beans;\n  if (!cellFlashSvc) {\n    return;\n  }\n  beans.frameworkOverrides.wrapIncoming(() => {\n    beans.rowRenderer.getCellCtrls(params.rowNodes, params.columns).forEach((cellCtrl) => cellFlashSvc.flashCell(cellCtrl, params));\n  });\n}\n\n// packages/ag-grid-community/src/rendering/cell/highlightChangesModule.ts\nvar HighlightChangesModule = {\n  moduleName: \"HighlightChanges\",\n  version: VERSION,\n  beans: [CellFlashService],\n  userComponents: {\n    agAnimateShowChangeCellRenderer: AnimateShowChangeCellRenderer,\n    agAnimateSlideCellRenderer: AnimateSlideCellRenderer\n  },\n  apiFunctions: {\n    flashCells\n  }\n};\n\n// packages/ag-grid-community/src/misc/state/stateApi.ts\nfunction getState(beans) {\n  return beans.stateSvc?.getState() ?? {};\n}\n\n// packages/ag-grid-community/src/misc/state/stateModelMigration.ts\nfunction migrateGridStateModel(state) {\n  state = { ...state };\n  if (!state.version) {\n    state.version = \"32.1.0\";\n  }\n  switch (state.version) {\n    case \"32.1.0\":\n      state = migrateV32_1(state);\n  }\n  return state;\n}\nfunction migrateV32_1(state) {\n  state.cellSelection = jsonGet(state, \"rangeSelection\");\n  return state;\n}\nfunction jsonGet(json, key) {\n  if (json && typeof json === \"object\") {\n    return json[key];\n  }\n}\n\n// packages/ag-grid-community/src/misc/state/stateService.ts\nvar StateService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"stateSvc\";\n    this.updateRowGroupExpansionStateTimer = 0;\n    this.suppressEvents = true;\n    this.queuedUpdateSources = /* @__PURE__ */ new Set();\n    this.dispatchStateUpdateEventDebounced = _debounce(this, () => this.dispatchQueuedStateUpdateEvents(), 0);\n    // If user is doing a manual expand all node by node, we don't want to process one at a time.\n    // EVENT_ROW_GROUP_OPENED is already async, so no impact of making the state async here.\n    this.onRowGroupOpenedDebounced = _debounce(\n      this,\n      () => {\n        this.updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState());\n      },\n      0\n    );\n    // similar to row expansion, want to debounce. However, selection is synchronous, so need to mark as stale in case `getState` is called.\n    this.onRowSelectedDebounced = _debounce(\n      this,\n      () => {\n        this.staleStateKeys.delete(\"rowSelection\");\n        this.updateCachedState(\"rowSelection\", this.getRowSelectionState());\n      },\n      0\n    );\n    this.staleStateKeys = /* @__PURE__ */ new Set();\n  }\n  postConstruct() {\n    this.isClientSideRowModel = _isClientSideRowModel(this.gos);\n    this.cachedState = this.getInitialState();\n    this.setCachedStateValue(\"version\", VERSION);\n    const suppressEventsAndDispatchInitEvent = this.suppressEventsAndDispatchInitEvent.bind(this);\n    this.beans.ctrlsSvc.whenReady(\n      this,\n      () => suppressEventsAndDispatchInitEvent(() => this.setupStateOnGridReady())\n    );\n    const [newColumnsLoadedDestroyFunc, rowCountReadyDestroyFunc, firstDataRenderedDestroyFunc] = this.addManagedEventListeners({\n      newColumnsLoaded: ({ source }) => {\n        if (source === \"gridInitializing\") {\n          newColumnsLoadedDestroyFunc();\n          suppressEventsAndDispatchInitEvent(() => this.setupStateOnColumnsInitialised());\n        }\n      },\n      rowCountReady: () => {\n        rowCountReadyDestroyFunc?.();\n        suppressEventsAndDispatchInitEvent(() => this.setupStateOnRowCountReady());\n      },\n      firstDataRendered: () => {\n        firstDataRenderedDestroyFunc?.();\n        suppressEventsAndDispatchInitEvent(() => this.setupStateOnFirstDataRendered());\n      }\n    });\n  }\n  destroy() {\n    super.destroy();\n    clearTimeout(this.updateRowGroupExpansionStateTimer);\n    this.queuedUpdateSources.clear();\n  }\n  getInitialState() {\n    return migrateGridStateModel(this.gos.get(\"initialState\") ?? {});\n  }\n  getState() {\n    if (this.staleStateKeys.size) {\n      this.refreshStaleState();\n    }\n    return this.cachedState;\n  }\n  setupStateOnGridReady() {\n    const stateUpdater = () => this.updateCachedState(\"sideBar\", this.getSideBarState());\n    stateUpdater();\n    this.addManagedEventListeners({\n      toolPanelVisibleChanged: stateUpdater,\n      sideBarUpdated: stateUpdater\n    });\n  }\n  setupStateOnColumnsInitialised() {\n    const initialState = this.getInitialState();\n    this.setColumnState(initialState);\n    this.setColumnGroupState(initialState);\n    this.updateColumnState([\n      \"aggregation\",\n      \"columnOrder\",\n      \"columnPinning\",\n      \"columnSizing\",\n      \"columnVisibility\",\n      \"pivot\",\n      \"pivot\",\n      \"rowGroup\",\n      \"sort\"\n    ]);\n    this.updateCachedState(\"columnGroup\", this.getColumnGroupState());\n    const onUpdate = (state) => () => this.updateColumnState([state]);\n    this.addManagedEventListeners({\n      columnValueChanged: onUpdate(\"aggregation\"),\n      columnMoved: onUpdate(\"columnOrder\"),\n      columnPinned: onUpdate(\"columnPinning\"),\n      columnResized: onUpdate(\"columnSizing\"),\n      columnVisible: onUpdate(\"columnVisibility\"),\n      columnPivotChanged: onUpdate(\"pivot\"),\n      columnPivotModeChanged: onUpdate(\"pivot\"),\n      columnRowGroupChanged: onUpdate(\"rowGroup\"),\n      sortChanged: onUpdate(\"sort\"),\n      newColumnsLoaded: () => this.updateColumnState([\n        \"aggregation\",\n        \"columnOrder\",\n        \"columnPinning\",\n        \"columnSizing\",\n        \"columnVisibility\",\n        \"pivot\",\n        \"rowGroup\",\n        \"sort\"\n      ]),\n      columnGroupOpened: () => this.updateCachedState(\"columnGroup\", this.getColumnGroupState())\n    });\n  }\n  setupStateOnRowCountReady() {\n    const {\n      filter: filterState,\n      rowGroupExpansion: rowGroupExpansionState,\n      rowSelection: rowSelectionState,\n      pagination: paginationState\n    } = this.getInitialState();\n    if (filterState) {\n      this.setFilterState(filterState);\n    }\n    if (rowGroupExpansionState) {\n      this.setRowGroupExpansionState(rowGroupExpansionState);\n    }\n    if (rowSelectionState) {\n      this.setRowSelectionState(rowSelectionState);\n    }\n    if (paginationState) {\n      this.setPaginationState(paginationState);\n    }\n    const updateCachedState = this.updateCachedState.bind(this);\n    updateCachedState(\"filter\", this.getFilterState());\n    updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState());\n    updateCachedState(\"rowSelection\", this.getRowSelectionState());\n    updateCachedState(\"pagination\", this.getPaginationState());\n    const updateRowGroupExpansionState = () => {\n      this.updateRowGroupExpansionStateTimer = 0;\n      updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState());\n    };\n    this.addManagedEventListeners({\n      filterChanged: () => updateCachedState(\"filter\", this.getFilterState()),\n      rowGroupOpened: () => this.onRowGroupOpenedDebounced(),\n      expandOrCollapseAll: updateRowGroupExpansionState,\n      // `groupDefaultExpanded` updates expansion state without an expansion event\n      columnRowGroupChanged: updateRowGroupExpansionState,\n      rowDataUpdated: () => {\n        if (this.gos.get(\"groupDefaultExpanded\") !== 0) {\n          this.updateRowGroupExpansionStateTimer || (this.updateRowGroupExpansionStateTimer = setTimeout(updateRowGroupExpansionState));\n        }\n      },\n      selectionChanged: () => {\n        this.staleStateKeys.add(\"rowSelection\");\n        this.onRowSelectedDebounced();\n      },\n      paginationChanged: (event) => {\n        if (event.newPage || event.newPageSize) {\n          updateCachedState(\"pagination\", this.getPaginationState());\n        }\n      }\n    });\n  }\n  setupStateOnFirstDataRendered() {\n    const {\n      scroll: scrollState,\n      cellSelection: cellSelectionState,\n      focusedCell: focusedCellState,\n      columnOrder: columnOrderState\n    } = this.getInitialState();\n    if (focusedCellState) {\n      this.setFocusedCellState(focusedCellState);\n    }\n    if (cellSelectionState) {\n      this.setCellSelectionState(cellSelectionState);\n    }\n    if (scrollState) {\n      this.setScrollState(scrollState);\n    }\n    this.setColumnPivotState(!!columnOrderState?.orderedColIds);\n    const updateCachedState = this.updateCachedState.bind(this);\n    updateCachedState(\"sideBar\", this.getSideBarState());\n    updateCachedState(\"focusedCell\", this.getFocusedCellState());\n    const cellSelection = this.getRangeSelectionState();\n    updateCachedState(\"rangeSelection\", cellSelection);\n    updateCachedState(\"cellSelection\", cellSelection);\n    updateCachedState(\"scroll\", this.getScrollState());\n    this.addManagedEventListeners({\n      cellFocused: () => updateCachedState(\"focusedCell\", this.getFocusedCellState()),\n      cellSelectionChanged: (event) => {\n        if (event.finished) {\n          const cellSelection2 = this.getRangeSelectionState();\n          updateCachedState(\"rangeSelection\", cellSelection2);\n          updateCachedState(\"cellSelection\", cellSelection2);\n        }\n      },\n      bodyScrollEnd: () => updateCachedState(\"scroll\", this.getScrollState())\n    });\n  }\n  getColumnState() {\n    const beans = this.beans;\n    const pivotMode = beans.colModel.isPivotMode();\n    const sortColumns = [];\n    const groupColIds = [];\n    const aggregationColumns = [];\n    const pivotColIds = [];\n    const leftColIds = [];\n    const rightColIds = [];\n    const hiddenColIds = [];\n    const columnSizes = [];\n    const columns = [];\n    let defaultSortIndex = 0;\n    const columnState = _getColumnState(beans);\n    for (let i = 0; i < columnState.length; i++) {\n      const {\n        colId,\n        sort,\n        sortIndex,\n        rowGroup,\n        rowGroupIndex,\n        aggFunc,\n        pivot,\n        pivotIndex,\n        pinned,\n        hide,\n        width,\n        flex\n      } = columnState[i];\n      columns.push(colId);\n      if (sort) {\n        sortColumns[sortIndex ?? defaultSortIndex++] = { colId, sort };\n      }\n      if (rowGroup) {\n        groupColIds[rowGroupIndex ?? 0] = colId;\n      }\n      if (typeof aggFunc === \"string\") {\n        aggregationColumns.push({ colId, aggFunc });\n      }\n      if (pivot) {\n        pivotColIds[pivotIndex ?? 0] = colId;\n      }\n      if (pinned) {\n        (pinned === \"right\" ? rightColIds : leftColIds).push(colId);\n      }\n      if (hide) {\n        hiddenColIds.push(colId);\n      }\n      if (flex != null || width) {\n        columnSizes.push({ colId, flex: flex ?? void 0, width });\n      }\n    }\n    return {\n      sort: sortColumns.length ? { sortModel: sortColumns } : void 0,\n      rowGroup: groupColIds.length ? { groupColIds } : void 0,\n      aggregation: aggregationColumns.length ? { aggregationModel: aggregationColumns } : void 0,\n      pivot: pivotColIds.length || pivotMode ? { pivotMode, pivotColIds } : void 0,\n      columnPinning: leftColIds.length || rightColIds.length ? { leftColIds, rightColIds } : void 0,\n      columnVisibility: hiddenColIds.length ? { hiddenColIds } : void 0,\n      columnSizing: columnSizes.length ? { columnSizingModel: columnSizes } : void 0,\n      columnOrder: columns.length ? { orderedColIds: columns } : void 0\n    };\n  }\n  setColumnState(initialState) {\n    const {\n      sort: sortState,\n      rowGroup: groupState,\n      aggregation: aggregationState,\n      pivot: pivotState,\n      columnPinning: columnPinningState,\n      columnVisibility: columnVisibilityState,\n      columnSizing: columnSizingState,\n      columnOrder: columnOrderState,\n      partialColumnState\n    } = initialState;\n    const columnStateMap = {};\n    const getColumnState2 = (colId) => {\n      let columnState = columnStateMap[colId];\n      if (columnState) {\n        return columnState;\n      }\n      columnState = { colId };\n      columnStateMap[colId] = columnState;\n      return columnState;\n    };\n    const defaultState = partialColumnState ? {} : {\n      sort: null,\n      sortIndex: null,\n      rowGroup: null,\n      rowGroupIndex: null,\n      aggFunc: null,\n      pivot: null,\n      pivotIndex: null,\n      pinned: null,\n      hide: null,\n      flex: null\n    };\n    if (sortState) {\n      sortState.sortModel.forEach(({ colId, sort }, sortIndex) => {\n        const columnState = getColumnState2(colId);\n        columnState.sort = sort;\n        columnState.sortIndex = sortIndex;\n      });\n      defaultState.sort = null;\n      defaultState.sortIndex = null;\n    }\n    if (groupState) {\n      groupState.groupColIds.forEach((colId, rowGroupIndex) => {\n        const columnState = getColumnState2(colId);\n        columnState.rowGroup = true;\n        columnState.rowGroupIndex = rowGroupIndex;\n      });\n      defaultState.rowGroup = null;\n      defaultState.rowGroupIndex = null;\n    }\n    if (aggregationState) {\n      aggregationState.aggregationModel.forEach(({ colId, aggFunc }) => {\n        getColumnState2(colId).aggFunc = aggFunc;\n      });\n      defaultState.aggFunc = null;\n    }\n    if (pivotState) {\n      pivotState.pivotColIds.forEach((colId, pivotIndex) => {\n        const columnState = getColumnState2(colId);\n        columnState.pivot = true;\n        columnState.pivotIndex = pivotIndex;\n      });\n      this.gos.updateGridOptions({\n        options: { pivotMode: pivotState.pivotMode },\n        source: \"gridInitializing\"\n      });\n      defaultState.pivot = null;\n      defaultState.pivotIndex = null;\n    }\n    if (columnPinningState) {\n      columnPinningState.leftColIds.forEach((colId) => {\n        getColumnState2(colId).pinned = \"left\";\n      });\n      columnPinningState.rightColIds.forEach((colId) => {\n        getColumnState2(colId).pinned = \"right\";\n      });\n      defaultState.pinned = null;\n    }\n    if (columnVisibilityState) {\n      columnVisibilityState.hiddenColIds.forEach((colId) => {\n        getColumnState2(colId).hide = true;\n      });\n      defaultState.hide = null;\n    }\n    if (columnSizingState) {\n      columnSizingState.columnSizingModel.forEach(({ colId, flex, width }) => {\n        const columnState = getColumnState2(colId);\n        columnState.flex = flex ?? null;\n        columnState.width = width;\n      });\n      defaultState.flex = null;\n    }\n    const columns = columnOrderState?.orderedColIds;\n    const applyOrder = !!columns?.length;\n    const columnStates = applyOrder ? columns.map((colId) => getColumnState2(colId)) : Object.values(columnStateMap);\n    if (columnStates.length) {\n      this.columnStates = columnStates;\n      _applyColumnState(\n        this.beans,\n        {\n          state: columnStates,\n          applyOrder,\n          defaultState\n        },\n        \"gridInitializing\"\n      );\n    }\n  }\n  setColumnPivotState(applyOrder) {\n    const columnStates = this.columnStates;\n    this.columnStates = void 0;\n    const columnGroupStates = this.columnGroupStates;\n    this.columnGroupStates = void 0;\n    const beans = this.beans;\n    const { pivotResultCols, colGroupSvc } = beans;\n    if (!pivotResultCols?.isPivotResultColsPresent()) {\n      return;\n    }\n    if (columnStates) {\n      const secondaryColumnStates = [];\n      for (const columnState of columnStates) {\n        if (pivotResultCols.getPivotResultCol(columnState.colId)) {\n          secondaryColumnStates.push(columnState);\n        }\n      }\n      _applyColumnState(\n        beans,\n        {\n          state: secondaryColumnStates,\n          applyOrder\n        },\n        \"gridInitializing\"\n      );\n    }\n    if (columnGroupStates) {\n      colGroupSvc?.setColumnGroupState(columnGroupStates, \"gridInitializing\");\n    }\n  }\n  getColumnGroupState() {\n    const colGroupSvc = this.beans.colGroupSvc;\n    if (!colGroupSvc) {\n      return void 0;\n    }\n    const columnGroupState = colGroupSvc.getColumnGroupState();\n    const openColumnGroups = [];\n    columnGroupState.forEach(({ groupId, open }) => {\n      if (open) {\n        openColumnGroups.push(groupId);\n      }\n    });\n    return openColumnGroups.length ? { openColumnGroupIds: openColumnGroups } : void 0;\n  }\n  setColumnGroupState(initialState) {\n    const colGroupSvc = this.beans.colGroupSvc;\n    if (!Object.prototype.hasOwnProperty.call(initialState, \"columnGroup\") || !colGroupSvc) {\n      return;\n    }\n    const openColumnGroups = new Set(initialState.columnGroup?.openColumnGroupIds);\n    const existingColumnGroupState = colGroupSvc.getColumnGroupState();\n    const stateItems = existingColumnGroupState.map(({ groupId }) => {\n      const open = openColumnGroups.has(groupId);\n      if (open) {\n        openColumnGroups.delete(groupId);\n      }\n      return {\n        groupId,\n        open\n      };\n    });\n    openColumnGroups.forEach((groupId) => {\n      stateItems.push({\n        groupId,\n        open: true\n      });\n    });\n    if (stateItems.length) {\n      this.columnGroupStates = stateItems;\n    }\n    colGroupSvc.setColumnGroupState(stateItems, \"gridInitializing\");\n  }\n  getFilterState() {\n    const filterManager = this.beans.filterManager;\n    let filterModel = filterManager?.getFilterModel();\n    if (filterModel && Object.keys(filterModel).length === 0) {\n      filterModel = void 0;\n    }\n    const advancedFilterModel = filterManager?.getAdvFilterModel() ?? void 0;\n    return filterModel || advancedFilterModel ? { filterModel, advancedFilterModel } : void 0;\n  }\n  setFilterState(filterState) {\n    const filterManager = this.beans.filterManager;\n    const { filterModel, advancedFilterModel } = filterState ?? {};\n    if (filterModel) {\n      filterManager?.setFilterModel(filterModel, \"columnFilter\");\n    }\n    if (advancedFilterModel) {\n      filterManager?.setAdvFilterModel(advancedFilterModel, \"advancedFilter\");\n    }\n  }\n  getRangeSelectionState() {\n    const cellRanges = this.beans.rangeSvc?.getCellRanges().map((cellRange) => {\n      const { id, type, startRow, endRow, columns, startColumn } = cellRange;\n      return {\n        id,\n        type,\n        startRow,\n        endRow,\n        colIds: columns.map((column) => column.getColId()),\n        startColId: startColumn.getColId()\n      };\n    });\n    return cellRanges?.length ? { cellRanges } : void 0;\n  }\n  setCellSelectionState(cellSelectionState) {\n    const { gos, rangeSvc, colModel, visibleCols } = this.beans;\n    if (!_isCellSelectionEnabled(gos) || !rangeSvc) {\n      return;\n    }\n    const cellRanges = [];\n    cellSelectionState.cellRanges.forEach((cellRange) => {\n      const columns = [];\n      cellRange.colIds.forEach((colId) => {\n        const column = colModel.getCol(colId);\n        if (column) {\n          columns.push(column);\n        }\n      });\n      if (!columns.length) {\n        return;\n      }\n      let startColumn = colModel.getCol(cellRange.startColId);\n      if (!startColumn) {\n        const allColumns = visibleCols.allCols;\n        const columnSet = new Set(columns);\n        startColumn = allColumns.find((column) => columnSet.has(column));\n      }\n      cellRanges.push({\n        ...cellRange,\n        columns,\n        startColumn\n      });\n    });\n    rangeSvc.setCellRanges(cellRanges);\n  }\n  getScrollState() {\n    if (!this.isClientSideRowModel) {\n      return void 0;\n    }\n    const scrollFeature = this.beans.ctrlsSvc.getScrollFeature();\n    const { left } = scrollFeature?.getHScrollPosition() ?? { left: 0 };\n    const { top } = scrollFeature?.getVScrollPosition() ?? { top: 0 };\n    return top || left ? {\n      top,\n      left\n    } : void 0;\n  }\n  setScrollState(scrollState) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    const { top, left } = scrollState;\n    const { frameworkOverrides, rowRenderer, animationFrameSvc, ctrlsSvc } = this.beans;\n    frameworkOverrides.wrapIncoming(() => {\n      ctrlsSvc.get(\"center\").setCenterViewportScrollLeft(left);\n      ctrlsSvc.getScrollFeature()?.setVerticalScrollPosition(top);\n      rowRenderer.redraw({ afterScroll: true });\n      animationFrameSvc?.flushAllFrames();\n    });\n  }\n  getSideBarState() {\n    return this.beans.sideBar?.comp?.getState();\n  }\n  getFocusedCellState() {\n    if (!this.isClientSideRowModel) {\n      return void 0;\n    }\n    const focusedCell = this.beans.focusSvc.getFocusedCell();\n    if (focusedCell) {\n      const { column, rowIndex, rowPinned } = focusedCell;\n      return {\n        colId: column.getColId(),\n        rowIndex,\n        rowPinned\n      };\n    }\n    return void 0;\n  }\n  setFocusedCellState(focusedCellState) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    const { colId, rowIndex, rowPinned } = focusedCellState;\n    const { focusSvc, colModel } = this.beans;\n    focusSvc.setFocusedCell({\n      column: colModel.getCol(colId),\n      rowIndex,\n      rowPinned,\n      forceBrowserFocus: true,\n      preventScrollOnBrowserFocus: true\n    });\n  }\n  getPaginationState() {\n    const { pagination, gos } = this.beans;\n    if (!pagination) {\n      return void 0;\n    }\n    const page = pagination.getCurrentPage();\n    const pageSize = !gos.get(\"paginationAutoPageSize\") ? pagination.getPageSize() : void 0;\n    if (!page && !pageSize) {\n      return;\n    }\n    return { page, pageSize };\n  }\n  setPaginationState(paginationState) {\n    const { pagination, gos } = this.beans;\n    if (!pagination) {\n      return;\n    }\n    if (paginationState.pageSize && !gos.get(\"paginationAutoPageSize\")) {\n      pagination.setPageSize(paginationState.pageSize, \"initialState\");\n    }\n    if (typeof paginationState.page === \"number\") {\n      pagination.setPage(paginationState.page);\n    }\n  }\n  getRowSelectionState() {\n    const selectionSvc = this.beans.selectionSvc;\n    if (!selectionSvc) {\n      return void 0;\n    }\n    const selectionState = selectionSvc.getSelectionState();\n    const noSelections = !selectionState || !Array.isArray(selectionState) && (selectionState.selectAll === false || selectionState.selectAllChildren === false) && !selectionState?.toggledNodes?.length;\n    return noSelections ? void 0 : selectionState;\n  }\n  setRowSelectionState(rowSelectionState) {\n    this.beans.selectionSvc?.setSelectionState(rowSelectionState, \"gridInitializing\");\n  }\n  getRowGroupExpansionState() {\n    const { expansionSvc, rowModel } = this.beans;\n    if (!expansionSvc) {\n      return void 0;\n    }\n    const expandedRowGroups = [];\n    rowModel.forEachNode(({ expanded, id }) => {\n      if (expanded && id) {\n        expandedRowGroups.push(id);\n      }\n    });\n    return expandedRowGroups.length ? {\n      expandedRowGroupIds: expandedRowGroups\n    } : void 0;\n  }\n  setRowGroupExpansionState(rowGroupExpansionState) {\n    this.beans.expansionSvc?.expandRows(rowGroupExpansionState.expandedRowGroupIds);\n  }\n  updateColumnState(features) {\n    const newColumnState = this.getColumnState();\n    let hasChanged = false;\n    const cachedState = this.cachedState;\n    for (const key of Object.keys(newColumnState)) {\n      const value = newColumnState[key];\n      if (!_jsonEquals(value, cachedState[key])) {\n        hasChanged = true;\n      }\n    }\n    this.cachedState = {\n      ...cachedState,\n      ...newColumnState\n    };\n    if (hasChanged) {\n      this.dispatchStateUpdateEvent(features);\n    }\n  }\n  updateCachedState(key, value) {\n    const existingValue = this.cachedState[key];\n    this.setCachedStateValue(key, value);\n    if (!_jsonEquals(value, existingValue)) {\n      this.dispatchStateUpdateEvent([key]);\n    }\n  }\n  setCachedStateValue(key, value) {\n    this.cachedState = {\n      ...this.cachedState,\n      [key]: value\n    };\n  }\n  refreshStaleState() {\n    const staleStateKeys = this.staleStateKeys;\n    staleStateKeys.forEach((key) => {\n      switch (key) {\n        case \"rowSelection\":\n          this.setCachedStateValue(key, this.getRowSelectionState());\n          break;\n      }\n    });\n    staleStateKeys.clear();\n  }\n  dispatchStateUpdateEvent(sources) {\n    if (this.suppressEvents) {\n      return;\n    }\n    sources.forEach((source) => this.queuedUpdateSources.add(source));\n    this.dispatchStateUpdateEventDebounced();\n  }\n  dispatchQueuedStateUpdateEvents() {\n    const queuedUpdateSources = this.queuedUpdateSources;\n    const sources = Array.from(queuedUpdateSources);\n    queuedUpdateSources.clear();\n    this.eventSvc.dispatchEvent({\n      type: \"stateUpdated\",\n      sources,\n      state: this.cachedState\n    });\n  }\n  suppressEventsAndDispatchInitEvent(updateFunc) {\n    this.suppressEvents = true;\n    const colAnimation = this.beans.colAnimation;\n    colAnimation?.setSuppressAnimation(true);\n    updateFunc();\n    setTimeout(() => {\n      this.suppressEvents = false;\n      this.queuedUpdateSources.clear();\n      if (!this.isAlive()) {\n        return;\n      }\n      colAnimation?.setSuppressAnimation(false);\n      this.dispatchStateUpdateEvent([\"gridInitializing\"]);\n    });\n  }\n};\n\n// packages/ag-grid-community/src/misc/state/stateModule.ts\nvar GridStateModule = {\n  moduleName: \"GridState\",\n  version: VERSION,\n  beans: [StateService],\n  apiFunctions: {\n    getState\n  }\n};\n\n// packages/ag-grid-community/src/pagination/paginationApi.ts\nfunction paginationIsLastPageFound(beans) {\n  return beans.rowModel.isLastRowIndexKnown();\n}\nfunction paginationGetPageSize(beans) {\n  return beans.pagination?.getPageSize() ?? 100;\n}\nfunction paginationGetCurrentPage(beans) {\n  return beans.pagination?.getCurrentPage() ?? 0;\n}\nfunction paginationGetTotalPages(beans) {\n  return beans.pagination?.getTotalPages() ?? 1;\n}\nfunction paginationGetRowCount(beans) {\n  return beans.pagination ? beans.pagination.getMasterRowCount() : beans.rowModel.getRowCount();\n}\nfunction paginationGoToNextPage(beans) {\n  beans.pagination?.goToNextPage();\n}\nfunction paginationGoToPreviousPage(beans) {\n  beans.pagination?.goToPreviousPage();\n}\nfunction paginationGoToFirstPage(beans) {\n  beans.pagination?.goToFirstPage();\n}\nfunction paginationGoToLastPage(beans) {\n  beans.pagination?.goToLastPage();\n}\nfunction paginationGoToPage(beans, page) {\n  beans.pagination?.goToPage(page);\n}\n\n// packages/ag-grid-community/src/pagination/paginationAutoPageSizeService.ts\nvar PaginationAutoPageSizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"paginationAutoPageSizeSvc\";\n  }\n  postConstruct() {\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\n      this.centerRowsCtrl = p.center;\n      const listener = this.checkPageSize.bind(this);\n      this.addManagedEventListeners({\n        bodyHeightChanged: listener,\n        scrollVisibilityChanged: listener\n      });\n      this.addManagedPropertyListener(\"paginationAutoPageSize\", this.onPaginationAutoSizeChanged.bind(this));\n      this.checkPageSize();\n    });\n  }\n  notActive() {\n    return !this.gos.get(\"paginationAutoPageSize\") || this.centerRowsCtrl == null;\n  }\n  onPaginationAutoSizeChanged() {\n    if (this.notActive()) {\n      this.beans.pagination.unsetAutoCalculatedPageSize();\n    } else {\n      this.checkPageSize();\n    }\n  }\n  checkPageSize() {\n    if (this.notActive()) {\n      return;\n    }\n    const bodyHeight = this.centerRowsCtrl.viewportSizeFeature.getBodyHeight();\n    if (bodyHeight > 0) {\n      const beans = this.beans;\n      const update = () => {\n        const rowHeight = Math.max(_getRowHeightAsNumber(beans), 1);\n        const newPageSize = Math.floor(bodyHeight / rowHeight);\n        beans.pagination.setPageSize(newPageSize, \"autoCalculated\");\n      };\n      if (!this.isBodyRendered) {\n        update();\n        this.isBodyRendered = true;\n      } else {\n        _debounce(this, update, 50)();\n      }\n    } else {\n      this.isBodyRendered = false;\n    }\n  }\n};\n\n// packages/ag-grid-community/src/pagination/pageSizeSelector/pageSizeSelectorComp.ts\nvar paginationPageSizeSelector = \"paginationPageSizeSelector\";\nvar PageSizeSelectorComp = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `<span class=\"ag-paging-page-size\"></span>`\n    );\n    this.hasEmptyOption = false;\n    this.handlePageSizeItemSelected = () => {\n      if (!this.selectPageSizeComp) {\n        return;\n      }\n      const newValue = this.selectPageSizeComp.getValue();\n      if (!newValue) {\n        return;\n      }\n      const paginationPageSize = Number(newValue);\n      if (isNaN(paginationPageSize) || paginationPageSize < 1 || paginationPageSize === this.pagination.getPageSize()) {\n        return;\n      }\n      this.pagination.setPageSize(paginationPageSize, \"pageSizeSelector\");\n      if (this.hasEmptyOption) {\n        this.toggleSelectDisplay(true);\n      }\n      this.selectPageSizeComp.getFocusableElement().focus();\n    };\n  }\n  wireBeans(beans) {\n    this.pagination = beans.pagination;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(paginationPageSizeSelector, () => {\n      this.onPageSizeSelectorValuesChange();\n    });\n    this.addManagedEventListeners({ paginationChanged: (event) => this.handlePaginationChanged(event) });\n  }\n  handlePaginationChanged(paginationChangedEvent) {\n    if (!this.selectPageSizeComp || !paginationChangedEvent?.newPageSize) {\n      return;\n    }\n    const paginationPageSize = this.pagination.getPageSize();\n    if (this.getPageSizeSelectorValues().includes(paginationPageSize)) {\n      this.selectPageSizeComp.setValue(paginationPageSize.toString());\n    } else {\n      if (this.hasEmptyOption) {\n        this.selectPageSizeComp.setValue(\"\");\n      } else {\n        this.toggleSelectDisplay(true);\n      }\n    }\n  }\n  toggleSelectDisplay(show) {\n    if (this.selectPageSizeComp && !show) {\n      this.reset();\n    }\n    if (!show) {\n      return;\n    }\n    this.reloadPageSizesSelector();\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n  }\n  reset() {\n    _clearElement(this.getGui());\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n    this.selectPageSizeComp = this.destroyBean(this.selectPageSizeComp);\n  }\n  onPageSizeSelectorValuesChange() {\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n    if (this.shouldShowPageSizeSelector()) {\n      this.reloadPageSizesSelector();\n    }\n  }\n  shouldShowPageSizeSelector() {\n    return this.gos.get(\"pagination\") && !this.gos.get(\"suppressPaginationPanel\") && !this.gos.get(\"paginationAutoPageSize\") && this.gos.get(paginationPageSizeSelector) !== false;\n  }\n  reloadPageSizesSelector() {\n    const pageSizeOptions = this.getPageSizeSelectorValues();\n    const paginationPageSizeOption = this.pagination.getPageSize();\n    const shouldAddAndSelectEmptyOption = !paginationPageSizeOption || !pageSizeOptions.includes(paginationPageSizeOption);\n    if (shouldAddAndSelectEmptyOption) {\n      const pageSizeSet = this.gos.exists(\"paginationPageSize\");\n      const pageSizesSet = this.gos.get(paginationPageSizeSelector) !== true;\n      _warn(94, { pageSizeSet, pageSizesSet, pageSizeOptions, paginationPageSizeOption });\n      if (!pageSizesSet) {\n        _warn(95, { paginationPageSizeOption, paginationPageSizeSelector });\n      }\n      pageSizeOptions.unshift(\"\");\n    }\n    const value = String(shouldAddAndSelectEmptyOption ? \"\" : paginationPageSizeOption);\n    if (this.selectPageSizeComp) {\n      if (!_areEqual(this.pageSizeOptions, pageSizeOptions)) {\n        this.selectPageSizeComp.clearOptions().addOptions(this.createPageSizeSelectOptions(pageSizeOptions));\n        this.pageSizeOptions = pageSizeOptions;\n      }\n      this.selectPageSizeComp.setValue(value, true);\n    } else {\n      this.createPageSizeSelectorComp(pageSizeOptions, value);\n    }\n    this.hasEmptyOption = shouldAddAndSelectEmptyOption;\n  }\n  createPageSizeSelectOptions(pageSizeOptions) {\n    return pageSizeOptions.map((value) => ({\n      value: String(value)\n    }));\n  }\n  createPageSizeSelectorComp(pageSizeOptions, value) {\n    const localeTextFunc = this.getLocaleTextFunc();\n    const localisedLabel = localeTextFunc(\"pageSizeSelectorLabel\", \"Page Size:\");\n    const localisedAriaLabel = localeTextFunc(\"ariaPageSizeSelectorLabel\", \"Page Size\");\n    this.selectPageSizeComp = this.createManagedBean(new AgSelect()).addOptions(this.createPageSizeSelectOptions(pageSizeOptions)).setValue(value).setAriaLabel(localisedAriaLabel).setLabel(localisedLabel).onValueChange(() => this.handlePageSizeItemSelected());\n    this.appendChild(this.selectPageSizeComp);\n  }\n  getPageSizeSelectorValues() {\n    const defaultValues = [20, 50, 100];\n    const paginationPageSizeSelectorValues = this.gos.get(paginationPageSizeSelector);\n    if (!Array.isArray(paginationPageSizeSelectorValues) || !paginationPageSizeSelectorValues?.length) {\n      return defaultValues;\n    }\n    return [...paginationPageSizeSelectorValues].sort((a, b) => a - b);\n  }\n  destroy() {\n    this.toggleSelectDisplay(false);\n    super.destroy();\n  }\n};\nvar PageSizeSelectorSelector = {\n  selector: \"AG-PAGE-SIZE-SELECTOR\",\n  component: PageSizeSelectorComp\n};\n\n// packages/ag-grid-community/src/pagination/paginationComp.css-GENERATED.ts\nvar paginationCompCSS = (\n  /*css*/\n  `.ag-paging-panel{align-items:center;border-top:var(--ag-footer-row-border);display:flex;gap:calc(var(--ag-spacing)*4);height:max(var(--ag-row-height),22px);justify-content:flex-end;padding:0 var(--ag-cell-horizontal-padding)}:where(.ag-paging-page-size) .ag-wrapper{min-width:50px}.ag-paging-page-summary-panel{align-items:center;display:flex;gap:var(--ag-cell-widget-spacing);.ag-disabled &{pointer-events:none}}.ag-paging-button{cursor:pointer;position:relative;&.ag-disabled{cursor:default;opacity:.5}}.ag-paging-number,.ag-paging-row-summary-panel-number{font-weight:500}`\n);\n\n// packages/ag-grid-community/src/pagination/paginationComp.ts\nvar PaginationComp = class extends TabGuardComp {\n  constructor() {\n    super();\n    this.btFirst = RefPlaceholder;\n    this.btPrevious = RefPlaceholder;\n    this.btNext = RefPlaceholder;\n    this.btLast = RefPlaceholder;\n    this.lbRecordCount = RefPlaceholder;\n    this.lbFirstRowOnPage = RefPlaceholder;\n    this.lbLastRowOnPage = RefPlaceholder;\n    this.lbCurrent = RefPlaceholder;\n    this.lbTotal = RefPlaceholder;\n    this.pageSizeComp = RefPlaceholder;\n    this.previousAndFirstButtonsDisabled = false;\n    this.nextButtonDisabled = false;\n    this.lastButtonDisabled = false;\n    this.areListenersSetup = false;\n    this.allowFocusInnerElement = false;\n    this.registerCSS(paginationCompCSS);\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.pagination = beans.pagination;\n    this.ariaAnnounce = beans.ariaAnnounce;\n  }\n  postConstruct() {\n    const isRtl = this.gos.get(\"enableRtl\");\n    this.setTemplate(this.getTemplate(), [PageSizeSelectorSelector]);\n    const { btFirst, btPrevious, btNext, btLast } = this;\n    this.activateTabIndex([btFirst, btPrevious, btNext, btLast]);\n    btFirst.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"last\" : \"first\", this.beans));\n    btPrevious.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"next\" : \"previous\", this.beans));\n    btNext.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"previous\" : \"next\", this.beans));\n    btLast.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"first\" : \"last\", this.beans));\n    this.addManagedPropertyListener(\"pagination\", this.onPaginationChanged.bind(this));\n    this.addManagedPropertyListener(\"suppressPaginationPanel\", this.onPaginationChanged.bind(this));\n    this.addManagedPropertyListeners(\n      [\"paginationPageSizeSelector\", \"paginationAutoPageSize\", \"suppressPaginationPanel\"],\n      () => this.onPageSizeRelatedOptionsChange()\n    );\n    this.pageSizeComp.toggleSelectDisplay(this.pageSizeComp.shouldShowPageSizeSelector());\n    this.initialiseTabGuard({\n      // prevent tab guard default logic\n      onTabKeyDown: () => {\n      },\n      focusInnerElement: (fromBottom) => {\n        if (this.allowFocusInnerElement) {\n          return this.tabGuardFeature.getTabGuardCtrl().focusInnerElement(fromBottom);\n        } else {\n          return _focusGridInnerElement(this.beans, fromBottom);\n        }\n      },\n      forceFocusOutWhenTabGuardsAreEmpty: true\n    });\n    this.onPaginationChanged();\n  }\n  setAllowFocus(allowFocus) {\n    this.allowFocusInnerElement = allowFocus;\n  }\n  onPaginationChanged() {\n    const isPaging = this.gos.get(\"pagination\");\n    const paginationPanelEnabled = isPaging && !this.gos.get(\"suppressPaginationPanel\");\n    this.setDisplayed(paginationPanelEnabled);\n    if (!paginationPanelEnabled) {\n      return;\n    }\n    this.setupListeners();\n    this.enableOrDisableButtons();\n    this.updateLabels();\n    this.onPageSizeRelatedOptionsChange();\n  }\n  onPageSizeRelatedOptionsChange() {\n    this.pageSizeComp.toggleSelectDisplay(this.pageSizeComp.shouldShowPageSizeSelector());\n  }\n  setupListeners() {\n    if (!this.areListenersSetup) {\n      this.addManagedEventListeners({ paginationChanged: this.onPaginationChanged.bind(this) });\n      [\n        { el: this.btFirst, fn: this.onBtFirst.bind(this) },\n        { el: this.btPrevious, fn: this.onBtPrevious.bind(this) },\n        { el: this.btNext, fn: this.onBtNext.bind(this) },\n        { el: this.btLast, fn: this.onBtLast.bind(this) }\n      ].forEach((item) => {\n        const { el, fn } = item;\n        this.addManagedListeners(el, {\n          click: fn,\n          keydown: (e) => {\n            if (e.key === KeyCode.ENTER || e.key === KeyCode.SPACE) {\n              e.preventDefault();\n              fn();\n            }\n          }\n        });\n      });\n      _addFocusableContainerListener(this.beans, this, this.getGui());\n      this.areListenersSetup = true;\n    }\n  }\n  onBtFirst() {\n    if (!this.previousAndFirstButtonsDisabled) {\n      this.pagination.goToFirstPage();\n    }\n  }\n  formatNumber(value) {\n    const userFunc = this.gos.getCallback(\"paginationNumberFormatter\");\n    if (userFunc) {\n      const params = { value };\n      return userFunc(params);\n    }\n    return _formatNumberCommas(value, this.getLocaleTextFunc.bind(this));\n  }\n  getTemplate() {\n    const localeTextFunc = this.getLocaleTextFunc();\n    const strPage = localeTextFunc(\"page\", \"Page\");\n    const strTo = localeTextFunc(\"to\", \"to\");\n    const strOf = localeTextFunc(\"of\", \"of\");\n    const strFirst = localeTextFunc(\"firstPage\", \"First Page\");\n    const strPrevious = localeTextFunc(\"previousPage\", \"Previous Page\");\n    const strNext = localeTextFunc(\"nextPage\", \"Next Page\");\n    const strLast = localeTextFunc(\"lastPage\", \"Last Page\");\n    const compId = this.getCompId();\n    return (\n      /* html */\n      `<div class=\"ag-paging-panel ag-unselectable\" id=\"ag-${compId}\">\n                <ag-page-size-selector data-ref=\"pageSizeComp\"></ag-page-size-selector>\n                <span class=\"ag-paging-row-summary-panel\">\n                    <span id=\"ag-${compId}-first-row\" data-ref=\"lbFirstRowOnPage\" class=\"ag-paging-row-summary-panel-number\"></span>\n                    <span id=\"ag-${compId}-to\">${strTo}</span>\n                    <span id=\"ag-${compId}-last-row\" data-ref=\"lbLastRowOnPage\" class=\"ag-paging-row-summary-panel-number\"></span>\n                    <span id=\"ag-${compId}-of\">${strOf}</span>\n                    <span id=\"ag-${compId}-row-count\" data-ref=\"lbRecordCount\" class=\"ag-paging-row-summary-panel-number\"></span>\n                </span>\n                <span class=\"ag-paging-page-summary-panel\" role=\"presentation\">\n                    <div data-ref=\"btFirst\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strFirst}\"></div>\n                    <div data-ref=\"btPrevious\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strPrevious}\"></div>\n                    <span class=\"ag-paging-description\">\n                        <span id=\"ag-${compId}-start-page\">${strPage}</span>\n                        <span id=\"ag-${compId}-start-page-number\" data-ref=\"lbCurrent\" class=\"ag-paging-number\"></span>\n                        <span id=\"ag-${compId}-of-page\">${strOf}</span>\n                        <span id=\"ag-${compId}-of-page-number\" data-ref=\"lbTotal\" class=\"ag-paging-number\"></span>\n                    </span>\n                    <div data-ref=\"btNext\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strNext}\"></div>\n                    <div data-ref=\"btLast\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strLast}\"></div>\n                </span>\n            </div>`\n    );\n  }\n  onBtNext() {\n    if (!this.nextButtonDisabled) {\n      this.pagination.goToNextPage();\n    }\n  }\n  onBtPrevious() {\n    if (!this.previousAndFirstButtonsDisabled) {\n      this.pagination.goToPreviousPage();\n    }\n  }\n  onBtLast() {\n    if (!this.lastButtonDisabled) {\n      this.pagination.goToLastPage();\n    }\n  }\n  enableOrDisableButtons() {\n    const currentPage = this.pagination.getCurrentPage();\n    const maxRowFound = this.rowModel.isLastRowIndexKnown();\n    const totalPages = this.pagination.getTotalPages();\n    this.previousAndFirstButtonsDisabled = currentPage === 0;\n    this.toggleButtonDisabled(this.btFirst, this.previousAndFirstButtonsDisabled);\n    this.toggleButtonDisabled(this.btPrevious, this.previousAndFirstButtonsDisabled);\n    const zeroPagesToDisplay = this.isZeroPagesToDisplay();\n    const onLastPage = currentPage === totalPages - 1;\n    this.nextButtonDisabled = onLastPage || zeroPagesToDisplay;\n    this.lastButtonDisabled = !maxRowFound || zeroPagesToDisplay || currentPage === totalPages - 1;\n    this.toggleButtonDisabled(this.btNext, this.nextButtonDisabled);\n    this.toggleButtonDisabled(this.btLast, this.lastButtonDisabled);\n  }\n  toggleButtonDisabled(button, disabled) {\n    _setAriaDisabled(button, disabled);\n    button.classList.toggle(\"ag-disabled\", disabled);\n  }\n  isZeroPagesToDisplay() {\n    const maxRowFound = this.rowModel.isLastRowIndexKnown();\n    const totalPages = this.pagination.getTotalPages();\n    return maxRowFound && totalPages === 0;\n  }\n  updateLabels() {\n    const lastPageFound = this.rowModel.isLastRowIndexKnown();\n    const totalPages = this.pagination.getTotalPages();\n    const masterRowCount = this.pagination.getMasterRowCount();\n    const rowCount = lastPageFound ? masterRowCount : null;\n    if (rowCount === 1) {\n      const firstRow = this.rowModel.getRow(0);\n      const hiddenGroupRow = firstRow && firstRow.group && !(firstRow.groupData || firstRow.aggData);\n      if (hiddenGroupRow) {\n        this.setTotalLabelsToZero();\n        return;\n      }\n    }\n    const currentPage = this.pagination.getCurrentPage();\n    const pageSize = this.pagination.getPageSize();\n    let startRow;\n    let endRow;\n    if (this.isZeroPagesToDisplay()) {\n      startRow = endRow = 0;\n    } else {\n      startRow = pageSize * currentPage + 1;\n      endRow = startRow + pageSize - 1;\n      if (lastPageFound && endRow > rowCount) {\n        endRow = rowCount;\n      }\n    }\n    const theoreticalEndRow = startRow + pageSize - 1;\n    const isLoadingPageSize = !lastPageFound && masterRowCount < theoreticalEndRow;\n    const lbFirstRowOnPage = this.formatNumber(startRow);\n    this.lbFirstRowOnPage.textContent = lbFirstRowOnPage;\n    let lbLastRowOnPage;\n    const localeTextFunc = this.getLocaleTextFunc();\n    if (isLoadingPageSize) {\n      lbLastRowOnPage = localeTextFunc(\"pageLastRowUnknown\", \"?\");\n    } else {\n      lbLastRowOnPage = this.formatNumber(endRow);\n    }\n    this.lbLastRowOnPage.textContent = lbLastRowOnPage;\n    const pagesExist = totalPages > 0;\n    const toDisplay = pagesExist ? currentPage + 1 : 0;\n    const lbCurrent = this.formatNumber(toDisplay);\n    this.lbCurrent.textContent = lbCurrent;\n    let lbTotal;\n    let lbRecordCount;\n    if (lastPageFound) {\n      lbTotal = this.formatNumber(totalPages);\n      lbRecordCount = this.formatNumber(rowCount);\n    } else {\n      const moreText = localeTextFunc(\"more\", \"more\");\n      lbTotal = moreText;\n      lbRecordCount = moreText;\n    }\n    this.lbTotal.textContent = lbTotal;\n    this.lbRecordCount.textContent = lbRecordCount;\n    this.announceAriaStatus(lbFirstRowOnPage, lbLastRowOnPage, lbRecordCount, lbCurrent, lbTotal);\n  }\n  announceAriaStatus(lbFirstRowOnPage, lbLastRowOnPage, lbRecordCount, lbCurrent, lbTotal) {\n    const localeTextFunc = this.getLocaleTextFunc();\n    const strPage = localeTextFunc(\"page\", \"Page\");\n    const strTo = localeTextFunc(\"to\", \"to\");\n    const strOf = localeTextFunc(\"of\", \"of\");\n    const ariaRowStatus = `${lbFirstRowOnPage} ${strTo} ${lbLastRowOnPage} ${strOf} ${lbRecordCount}`;\n    const ariaPageStatus = `${strPage} ${lbCurrent} ${strOf} ${lbTotal}`;\n    if (ariaRowStatus !== this.ariaRowStatus) {\n      this.ariaRowStatus = ariaRowStatus;\n      this.ariaAnnounce?.announceValue(ariaRowStatus, \"paginationRow\");\n    }\n    if (ariaPageStatus !== this.ariaPageStatus) {\n      this.ariaPageStatus = ariaPageStatus;\n      this.ariaAnnounce?.announceValue(ariaPageStatus, \"paginationPage\");\n    }\n  }\n  setTotalLabelsToZero() {\n    const strZero = this.formatNumber(0);\n    this.lbFirstRowOnPage.textContent = strZero;\n    this.lbCurrent.textContent = strZero;\n    this.lbLastRowOnPage.textContent = strZero;\n    this.lbTotal.textContent = strZero;\n    this.lbRecordCount.textContent = strZero;\n    this.announceAriaStatus(strZero, strZero, strZero, strZero, strZero);\n  }\n};\nvar PaginationSelector = {\n  selector: \"AG-PAGINATION\",\n  component: PaginationComp\n};\n\n// packages/ag-grid-community/src/pagination/paginationService.ts\nvar PaginationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pagination\";\n    this.currentPage = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = 0;\n    this.masterRowCount = 0;\n  }\n  postConstruct() {\n    const gos = this.gos;\n    this.active = gos.get(\"pagination\");\n    this.pageSizeFromGridOptions = gos.get(\"paginationPageSize\");\n    this.paginateChildRows = this.isPaginateChildRows();\n    this.addManagedPropertyListener(\"pagination\", this.onPaginationGridOptionChanged.bind(this));\n    this.addManagedPropertyListener(\"paginationPageSize\", this.onPageSizeGridOptionChanged.bind(this));\n  }\n  getPaginationSelector() {\n    return PaginationSelector;\n  }\n  isPaginateChildRows() {\n    const gos = this.gos;\n    const shouldPaginate = gos.get(\"groupHideParentOfSingleChild\") || // following two properties deprecated v32.3.0\n    gos.get(\"groupRemoveSingleChildren\") || gos.get(\"groupRemoveLowestSingleChildren\");\n    if (shouldPaginate) {\n      return true;\n    }\n    return gos.get(\"paginateChildRows\");\n  }\n  onPaginationGridOptionChanged() {\n    this.active = this.gos.get(\"pagination\");\n    this.calculatePages();\n    this.dispatchPaginationChangedEvent({ keepRenderedRows: true });\n  }\n  onPageSizeGridOptionChanged() {\n    this.setPageSize(this.gos.get(\"paginationPageSize\"), \"gridOptions\");\n  }\n  goToPage(page) {\n    const currentPage = this.currentPage;\n    if (!this.active || currentPage === page || typeof currentPage !== \"number\") {\n      return;\n    }\n    this.currentPage = page;\n    this.calculatePages();\n    this.dispatchPaginationChangedEvent({ newPage: true });\n  }\n  isRowPresent(rowNode) {\n    const nodeIsInPage = rowNode.rowIndex >= this.topDisplayedRowIndex && rowNode.rowIndex <= this.bottomDisplayedRowIndex;\n    return nodeIsInPage;\n  }\n  getPageForIndex(index) {\n    return Math.floor(index / this.pageSize);\n  }\n  goToPageWithIndex(index) {\n    if (!this.active) {\n      return;\n    }\n    const pageNumber = this.getPageForIndex(index);\n    this.goToPage(pageNumber);\n  }\n  isRowInPage(row) {\n    if (!this.active) {\n      return true;\n    }\n    const rowPage = this.getPageForIndex(row.rowIndex);\n    return rowPage === this.currentPage;\n  }\n  getCurrentPage() {\n    return this.currentPage;\n  }\n  goToNextPage() {\n    this.goToPage(this.currentPage + 1);\n  }\n  goToPreviousPage() {\n    this.goToPage(this.currentPage - 1);\n  }\n  goToFirstPage() {\n    this.goToPage(0);\n  }\n  goToLastPage() {\n    const rowCount = this.beans.rowModel.getRowCount();\n    const lastPage = Math.floor(rowCount / this.pageSize);\n    this.goToPage(lastPage);\n  }\n  getPageSize() {\n    return this.pageSize;\n  }\n  getTotalPages() {\n    return this.totalPages;\n  }\n  /** This is only for state setting before data has been loaded */\n  setPage(page) {\n    this.currentPage = page;\n  }\n  get pageSize() {\n    if (_exists(this.pageSizeAutoCalculated) && this.gos.get(\"paginationAutoPageSize\")) {\n      return this.pageSizeAutoCalculated;\n    }\n    if (_exists(this.pageSizeFromPageSizeSelector)) {\n      return this.pageSizeFromPageSizeSelector;\n    }\n    if (_exists(this.pageSizeFromInitialState)) {\n      return this.pageSizeFromInitialState;\n    }\n    if (_exists(this.pageSizeFromGridOptions)) {\n      return this.pageSizeFromGridOptions;\n    }\n    return this.defaultPageSize;\n  }\n  calculatePages() {\n    if (this.active) {\n      if (this.paginateChildRows) {\n        this.calculatePagesAllRows();\n      } else {\n        this.calculatePagesMasterRowsOnly();\n      }\n    } else {\n      this.calculatedPagesNotActive();\n    }\n    this.beans.pageBounds.calculateBounds(this.topDisplayedRowIndex, this.bottomDisplayedRowIndex);\n  }\n  unsetAutoCalculatedPageSize() {\n    if (this.pageSizeAutoCalculated === void 0) {\n      return;\n    }\n    const oldPageSize = this.pageSizeAutoCalculated;\n    this.pageSizeAutoCalculated = void 0;\n    if (this.pageSize === oldPageSize) {\n      return;\n    }\n    this.calculatePages();\n    this.dispatchPaginationChangedEvent({ newPageSize: true });\n  }\n  setPageSize(size, source) {\n    const currentSize = this.pageSize;\n    switch (source) {\n      case \"autoCalculated\":\n        this.pageSizeAutoCalculated = size;\n        break;\n      case \"pageSizeSelector\":\n        this.pageSizeFromPageSizeSelector = size;\n        if (this.currentPage !== 0) {\n          this.goToFirstPage();\n        }\n        break;\n      case \"initialState\":\n        this.pageSizeFromInitialState = size;\n        break;\n      case \"gridOptions\":\n        this.pageSizeFromGridOptions = size;\n        this.pageSizeFromInitialState = void 0;\n        this.pageSizeFromPageSizeSelector = void 0;\n        if (this.currentPage !== 0) {\n          this.goToFirstPage();\n        }\n        break;\n    }\n    if (currentSize !== this.pageSize) {\n      this.calculatePages();\n      this.dispatchPaginationChangedEvent({ newPageSize: true, keepRenderedRows: true });\n    }\n  }\n  setZeroRows() {\n    this.masterRowCount = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = -1;\n    this.currentPage = 0;\n    this.totalPages = 0;\n  }\n  adjustCurrentPageIfInvalid() {\n    const totalPages = this.totalPages;\n    if (this.currentPage >= totalPages) {\n      this.currentPage = totalPages - 1;\n    }\n    const currentPage = this.currentPage;\n    if (!isFinite(currentPage) || isNaN(currentPage) || currentPage < 0) {\n      this.currentPage = 0;\n    }\n  }\n  calculatePagesMasterRowsOnly() {\n    const rowModel = this.beans.rowModel;\n    const masterRowCount = rowModel.getTopLevelRowCount();\n    this.masterRowCount = masterRowCount;\n    if (masterRowCount <= 0) {\n      this.setZeroRows();\n      return;\n    }\n    const pageSize = this.pageSize;\n    const masterLastRowIndex = masterRowCount - 1;\n    this.totalPages = Math.floor(masterLastRowIndex / pageSize) + 1;\n    this.adjustCurrentPageIfInvalid();\n    const currentPage = this.currentPage;\n    const masterPageStartIndex = pageSize * currentPage;\n    let masterPageEndIndex = pageSize * (currentPage + 1) - 1;\n    if (masterPageEndIndex > masterLastRowIndex) {\n      masterPageEndIndex = masterLastRowIndex;\n    }\n    this.topDisplayedRowIndex = rowModel.getTopLevelRowDisplayedIndex(masterPageStartIndex);\n    if (masterPageEndIndex === masterLastRowIndex) {\n      this.bottomDisplayedRowIndex = rowModel.getRowCount() - 1;\n    } else {\n      const firstIndexNotToShow = rowModel.getTopLevelRowDisplayedIndex(masterPageEndIndex + 1);\n      this.bottomDisplayedRowIndex = firstIndexNotToShow - 1;\n    }\n  }\n  getMasterRowCount() {\n    return this.masterRowCount;\n  }\n  calculatePagesAllRows() {\n    const masterRowCount = this.beans.rowModel.getRowCount();\n    this.masterRowCount = masterRowCount;\n    if (masterRowCount === 0) {\n      this.setZeroRows();\n      return;\n    }\n    const { pageSize, currentPage } = this;\n    const maxRowIndex = masterRowCount - 1;\n    this.totalPages = Math.floor(maxRowIndex / pageSize) + 1;\n    this.adjustCurrentPageIfInvalid();\n    this.topDisplayedRowIndex = pageSize * currentPage;\n    this.bottomDisplayedRowIndex = pageSize * (currentPage + 1) - 1;\n    if (this.bottomDisplayedRowIndex > maxRowIndex) {\n      this.bottomDisplayedRowIndex = maxRowIndex;\n    }\n  }\n  calculatedPagesNotActive() {\n    this.setPageSize(void 0, \"autoCalculated\");\n    this.totalPages = 1;\n    this.currentPage = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = this.beans.rowModel.getRowCount() - 1;\n  }\n  dispatchPaginationChangedEvent(params) {\n    const { keepRenderedRows = false, newPage = false, newPageSize = false } = params;\n    this.eventSvc.dispatchEvent({\n      type: \"paginationChanged\",\n      animate: false,\n      newData: false,\n      newPage,\n      newPageSize,\n      keepRenderedRows\n    });\n  }\n};\n\n// packages/ag-grid-community/src/pagination/paginationModule.ts\nvar PaginationModule = {\n  moduleName: \"Pagination\",\n  version: VERSION,\n  beans: [PaginationService, PaginationAutoPageSizeService],\n  icons: {\n    // \"go to first\" button in pagination controls\n    first: \"first\",\n    // \"go to previous\" button in pagination controls\n    previous: \"previous\",\n    // \"go to next\" button in pagination controls\n    next: \"next\",\n    // \"go to last\" button in pagination controls\n    last: \"last\"\n  },\n  apiFunctions: {\n    paginationIsLastPageFound,\n    paginationGetPageSize,\n    paginationGetCurrentPage,\n    paginationGetTotalPages,\n    paginationGetRowCount,\n    paginationGoToNextPage,\n    paginationGoToPreviousPage,\n    paginationGoToFirstPage,\n    paginationGoToLastPage,\n    paginationGoToPage\n  },\n  dependsOn: [PopupModule]\n};\n\n// packages/ag-grid-community/src/api/rowApi.ts\nfunction redrawRows(beans, params = {}) {\n  const rowNodes = params ? params.rowNodes : void 0;\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowRenderer.redrawRows(rowNodes));\n}\nfunction setRowNodeExpanded(beans, rowNode, expanded, expandParents, forceSync) {\n  if (rowNode) {\n    if (expandParents && rowNode.parent && rowNode.parent.level !== -1) {\n      setRowNodeExpanded(beans, rowNode.parent, expanded, expandParents, forceSync);\n    }\n    rowNode.setExpanded(expanded, void 0, forceSync);\n  }\n}\nfunction getRowNode(beans, id) {\n  return beans.rowModel.getRowNode(id);\n}\nfunction addRenderedRowListener(beans, eventName, rowIndex, callback) {\n  beans.rowRenderer.addRenderedRowListener(eventName, rowIndex, callback);\n}\nfunction getRenderedNodes(beans) {\n  return beans.rowRenderer.getRenderedNodes();\n}\nfunction forEachNode(beans, callback, includeFooterNodes) {\n  beans.rowModel.forEachNode(callback, includeFooterNodes);\n}\nfunction getFirstDisplayedRowIndex(beans) {\n  return beans.rowRenderer.firstRenderedRow;\n}\nfunction getLastDisplayedRowIndex(beans) {\n  return beans.rowRenderer.lastRenderedRow;\n}\nfunction getDisplayedRowAtIndex(beans, index) {\n  return beans.rowModel.getRow(index);\n}\nfunction getDisplayedRowCount(beans) {\n  return beans.rowModel.getRowCount();\n}\n\n// packages/ag-grid-community/src/api/apiModule.ts\nvar RowApiModule = {\n  moduleName: \"RowApi\",\n  version: VERSION,\n  apiFunctions: {\n    redrawRows,\n    setRowNodeExpanded,\n    getRowNode,\n    addRenderedRowListener,\n    getRenderedNodes,\n    forEachNode,\n    getFirstDisplayedRowIndex,\n    getLastDisplayedRowIndex,\n    getDisplayedRowAtIndex,\n    getDisplayedRowCount\n  }\n};\nvar ScrollApiModule = {\n  moduleName: \"ScrollApi\",\n  version: VERSION,\n  apiFunctions: {\n    getVerticalPixelRange,\n    getHorizontalPixelRange,\n    ensureColumnVisible,\n    ensureIndexVisible,\n    ensureNodeVisible\n  }\n};\n\n// packages/ag-grid-community/src/rendering/renderApi.ts\nfunction setGridAriaProperty(beans, property, value) {\n  if (!property) {\n    return;\n  }\n  const eGrid = beans.ctrlsSvc.getGridBodyCtrl().eGridBody;\n  const ariaProperty = `aria-${property}`;\n  if (value === null) {\n    eGrid.removeAttribute(ariaProperty);\n  } else {\n    eGrid.setAttribute(ariaProperty, value);\n  }\n}\nfunction refreshCells(beans, params = {}) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowRenderer.refreshCells(params));\n}\nfunction refreshHeader(beans) {\n  beans.frameworkOverrides.wrapIncoming(\n    () => beans.ctrlsSvc.getHeaderRowContainerCtrls().forEach((c) => c.refresh())\n  );\n}\nfunction isAnimationFrameQueueEmpty(beans) {\n  return beans.animationFrameSvc?.isQueueEmpty() ?? true;\n}\nfunction flushAllAnimationFrames(beans) {\n  beans.animationFrameSvc?.flushAllFrames();\n}\nfunction getSizesForCurrentTheme(beans) {\n  return {\n    rowHeight: _getRowHeightAsNumber(beans),\n    headerHeight: getHeaderHeight(beans)\n  };\n}\nfunction getCellRendererInstances(beans, params = {}) {\n  const cellRenderers = [];\n  beans.rowRenderer.getCellCtrls(params.rowNodes, params.columns).forEach((cellCtrl) => {\n    const cellRenderer = cellCtrl.getCellRenderer();\n    if (cellRenderer != null) {\n      cellRenderers.push(_unwrapUserComp(cellRenderer));\n    }\n  });\n  if (params.columns?.length) {\n    return cellRenderers;\n  }\n  const fullWidthRenderers = [];\n  const rowIdMap = mapRowNodes(params.rowNodes);\n  beans.rowRenderer.getAllRowCtrls().forEach((rowCtrl) => {\n    if (rowIdMap && !isRowInMap(rowCtrl.rowNode, rowIdMap)) {\n      return;\n    }\n    if (!rowCtrl.isFullWidth()) {\n      return;\n    }\n    const renderers = rowCtrl.getFullWidthCellRenderers();\n    for (let i = 0; i < renderers.length; i++) {\n      const renderer = renderers[i];\n      if (renderer != null) {\n        fullWidthRenderers.push(_unwrapUserComp(renderer));\n      }\n    }\n  });\n  return [...fullWidthRenderers, ...cellRenderers];\n}\n\n// packages/ag-grid-community/src/rendering/renderModule.ts\nvar RenderApiModule = {\n  moduleName: \"RenderApi\",\n  version: VERSION,\n  apiFunctions: {\n    setGridAriaProperty,\n    refreshCells,\n    refreshHeader,\n    isAnimationFrameQueueEmpty,\n    flushAllAnimationFrames,\n    getSizesForCurrentTheme,\n    getCellRendererInstances\n  }\n};\n\n// packages/ag-grid-community/src/columnAutosize/columnAutosizeApi.ts\nfunction sizeColumnsToFit(beans, paramsOrGridWidth) {\n  if (typeof paramsOrGridWidth === \"number\") {\n    beans.colAutosize?.sizeColumnsToFit(paramsOrGridWidth, \"api\");\n  } else {\n    beans.colAutosize?.sizeColumnsToFitGridBody(paramsOrGridWidth);\n  }\n}\nfunction autoSizeColumns(beans, keys, skipHeader) {\n  beans.colAutosize?.autoSizeCols({ colKeys: keys, skipHeader, source: \"api\" });\n}\nfunction autoSizeAllColumns(beans, skipHeader) {\n  beans.colAutosize?.autoSizeAllColumns(\"api\", skipHeader);\n}\n\n// packages/ag-grid-community/src/columnAutosize/columnAutosizeService.ts\nvar ColumnAutosizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colAutosize\";\n    this.timesDelayed = 0;\n    // when we're waiting for cell data types to be inferred, we need to defer column resizing\n    this.shouldQueueResizeOperations = false;\n    this.resizeOperationQueue = [];\n  }\n  postConstruct() {\n    this.addManagedEventListeners({ firstDataRendered: () => this.onFirstDataRendered() });\n  }\n  autoSizeCols(params) {\n    if (this.shouldQueueResizeOperations) {\n      this.pushResizeOperation(() => this.autoSizeCols(params));\n      return;\n    }\n    const { colKeys, skipHeader, skipHeaderGroups, stopAtGroup, source = \"api\" } = params;\n    const { animationFrameSvc, renderStatus, colModel, autoWidthCalc, visibleCols } = this.beans;\n    animationFrameSvc?.flushAllFrames();\n    if (this.timesDelayed < 5 && renderStatus && !renderStatus.areHeaderCellsRendered()) {\n      this.timesDelayed++;\n      setTimeout(() => {\n        if (this.isAlive()) {\n          this.autoSizeCols(params);\n        }\n      });\n      return;\n    }\n    this.timesDelayed = 0;\n    const columnsAutoSized = [];\n    let changesThisTimeAround = -1;\n    const shouldSkipHeader = skipHeader != null ? skipHeader : this.gos.get(\"skipHeaderOnAutoSize\");\n    const shouldSkipHeaderGroups = skipHeaderGroups != null ? skipHeaderGroups : shouldSkipHeader;\n    while (changesThisTimeAround !== 0) {\n      changesThisTimeAround = 0;\n      const updatedColumns = [];\n      colKeys.forEach((key) => {\n        if (!key) {\n          return;\n        }\n        const column = colModel.getCol(key);\n        if (!column || isRowNumberCol(column)) {\n          return;\n        }\n        if (columnsAutoSized.indexOf(column) >= 0) {\n          return;\n        }\n        const preferredWidth = autoWidthCalc.getPreferredWidthForColumn(column, shouldSkipHeader);\n        if (preferredWidth > 0) {\n          const newWidth = normaliseColumnWidth(column, preferredWidth);\n          column.setActualWidth(newWidth, source);\n          columnsAutoSized.push(column);\n          changesThisTimeAround++;\n        }\n        updatedColumns.push(column);\n      });\n      if (!updatedColumns.length) {\n        continue;\n      }\n      visibleCols.refresh(source);\n    }\n    if (!shouldSkipHeaderGroups) {\n      this.autoSizeColumnGroupsByColumns(colKeys, source, stopAtGroup);\n    }\n    dispatchColumnResizedEvent(this.eventSvc, columnsAutoSized, true, \"autosizeColumns\");\n  }\n  autoSizeColumn(key, source, skipHeader) {\n    if (key) {\n      this.autoSizeCols({ colKeys: [key], skipHeader, skipHeaderGroups: true, source });\n    }\n  }\n  autoSizeColumnGroupsByColumns(keys, source, stopAtGroup) {\n    const { colModel, ctrlsSvc } = this.beans;\n    const columnGroups = /* @__PURE__ */ new Set();\n    const columns = colModel.getColsForKeys(keys);\n    columns.forEach((col) => {\n      let parent = col.getParent();\n      while (parent && parent != stopAtGroup) {\n        if (!parent.isPadding()) {\n          columnGroups.add(parent);\n        }\n        parent = parent.getParent();\n      }\n    });\n    let headerGroupCtrl;\n    const resizedColumns = [];\n    for (const columnGroup of columnGroups) {\n      for (const headerContainerCtrl of ctrlsSvc.getHeaderRowContainerCtrls()) {\n        headerGroupCtrl = headerContainerCtrl.getHeaderCtrlForColumn(columnGroup);\n        if (headerGroupCtrl) {\n          break;\n        }\n      }\n      if (headerGroupCtrl) {\n        headerGroupCtrl.resizeLeafColumnsToFit(source);\n      }\n    }\n    return resizedColumns;\n  }\n  autoSizeAllColumns(source, skipHeader) {\n    if (this.shouldQueueResizeOperations) {\n      this.pushResizeOperation(() => this.autoSizeAllColumns(source, skipHeader));\n      return;\n    }\n    const allDisplayedColumns = this.beans.visibleCols.allCols;\n    this.autoSizeCols({ colKeys: allDisplayedColumns, skipHeader, source });\n  }\n  addColumnAutosize(element, column) {\n    const skipHeaderOnAutoSize = this.gos.get(\"skipHeaderOnAutoSize\");\n    const autoSizeColListener = () => {\n      this.autoSizeColumn(column, \"uiColumnResized\", skipHeaderOnAutoSize);\n    };\n    element.addEventListener(\"dblclick\", autoSizeColListener);\n    const touchListener = new TouchListener(element);\n    touchListener.addEventListener(\"doubleTap\", autoSizeColListener);\n    return () => {\n      element.removeEventListener(\"dblclick\", autoSizeColListener);\n      touchListener.removeEventListener(\"doubleTap\", autoSizeColListener);\n      touchListener.destroy();\n    };\n  }\n  addColumnGroupResize(element, columnGroup, callback) {\n    const skipHeaderOnAutoSize = this.gos.get(\"skipHeaderOnAutoSize\");\n    const listener = () => {\n      const keys = [];\n      const leafCols = columnGroup.getDisplayedLeafColumns();\n      leafCols.forEach((column) => {\n        if (!column.getColDef().suppressAutoSize) {\n          keys.push(column.getColId());\n        }\n      });\n      if (keys.length > 0) {\n        this.autoSizeCols({\n          colKeys: keys,\n          skipHeader: skipHeaderOnAutoSize,\n          stopAtGroup: columnGroup,\n          source: \"uiColumnResized\"\n        });\n      }\n      callback();\n    };\n    element.addEventListener(\"dblclick\", listener);\n    return () => element.removeEventListener(\"dblclick\", listener);\n  }\n  // method will call itself if no available width. this covers if the grid\n  // isn't visible, but is just about to be visible.\n  sizeColumnsToFitGridBody(params, nextTimeout) {\n    if (!this.isAlive()) {\n      return;\n    }\n    const { ctrlsSvc, scrollVisibleSvc } = this.beans;\n    const gridBodyCtrl = ctrlsSvc.getGridBodyCtrl();\n    const removeScrollWidth = gridBodyCtrl.isVerticalScrollShowing();\n    const scrollWidthToRemove = removeScrollWidth ? scrollVisibleSvc.getScrollbarWidth() : 0;\n    const bodyViewportWidth = _getInnerWidth(gridBodyCtrl.eGridBody);\n    const availableWidth = bodyViewportWidth - scrollWidthToRemove;\n    if (availableWidth > 0) {\n      this.sizeColumnsToFit(availableWidth, \"sizeColumnsToFit\", false, params);\n      return;\n    }\n    if (nextTimeout === void 0) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFitGridBody(params, 100);\n      }, 0);\n    } else if (nextTimeout === 100) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFitGridBody(params, 500);\n      }, 100);\n    } else if (nextTimeout === 500) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFitGridBody(params, -1);\n      }, 500);\n    } else {\n      _warn(29);\n    }\n  }\n  // called from api\n  sizeColumnsToFit(gridWidth, source = \"sizeColumnsToFit\", silent, params) {\n    if (this.shouldQueueResizeOperations) {\n      this.pushResizeOperation(() => this.sizeColumnsToFit(gridWidth, source, silent, params));\n      return;\n    }\n    const limitsMap = {};\n    if (params) {\n      params?.columnLimits?.forEach(({ key, ...dimensions }) => {\n        limitsMap[typeof key === \"string\" ? key : key.getColId()] = dimensions;\n      });\n    }\n    const allDisplayedColumns = this.beans.visibleCols.allCols;\n    const doColumnsAlreadyFit = gridWidth === getWidthOfColsInList(allDisplayedColumns);\n    if (gridWidth <= 0 || !allDisplayedColumns.length || doColumnsAlreadyFit) {\n      return;\n    }\n    const colsToSpread = [];\n    const colsToNotSpread = [];\n    allDisplayedColumns.forEach((column) => {\n      if (column.getColDef().suppressSizeToFit === true) {\n        colsToNotSpread.push(column);\n      } else {\n        colsToSpread.push(column);\n      }\n    });\n    const colsToDispatchEventFor = colsToSpread.slice(0);\n    let finishedResizing = false;\n    const moveToNotSpread = (column) => {\n      _removeFromArray(colsToSpread, column);\n      colsToNotSpread.push(column);\n    };\n    colsToSpread.forEach((column) => {\n      column.resetActualWidth(source);\n      const widthOverride = limitsMap?.[column.getId()];\n      const minOverride = widthOverride?.minWidth ?? params?.defaultMinWidth;\n      const maxOverride = widthOverride?.maxWidth ?? params?.defaultMaxWidth;\n      const colWidth = column.getActualWidth();\n      if (typeof minOverride === \"number\" && colWidth < minOverride) {\n        column.setActualWidth(minOverride, source, true);\n      } else if (typeof maxOverride === \"number\" && colWidth > maxOverride) {\n        column.setActualWidth(maxOverride, source, true);\n      }\n    });\n    while (!finishedResizing) {\n      finishedResizing = true;\n      const availablePixels = gridWidth - getWidthOfColsInList(colsToNotSpread);\n      if (availablePixels <= 0) {\n        colsToSpread.forEach((column) => {\n          const widthOverride = limitsMap?.[column.getId()]?.minWidth ?? params?.defaultMinWidth;\n          if (typeof widthOverride === \"number\") {\n            column.setActualWidth(widthOverride, source, true);\n            return;\n          }\n          column.setActualWidth(column.minWidth, source);\n        });\n      } else {\n        const scale = availablePixels / getWidthOfColsInList(colsToSpread);\n        let pixelsForLastCol = availablePixels;\n        for (let i = colsToSpread.length - 1; i >= 0; i--) {\n          const column = colsToSpread[i];\n          const widthOverride = limitsMap?.[column.getId()];\n          const minOverride = widthOverride?.minWidth ?? params?.defaultMinWidth;\n          const maxOverride = widthOverride?.maxWidth ?? params?.defaultMaxWidth;\n          const colMinWidth = column.getMinWidth();\n          const colMaxWidth = column.getMaxWidth();\n          const minWidth = typeof minOverride === \"number\" && minOverride > colMinWidth ? minOverride : colMinWidth;\n          const maxWidth = typeof maxOverride === \"number\" && maxOverride < colMaxWidth ? maxOverride : colMaxWidth;\n          let newWidth = Math.round(column.getActualWidth() * scale);\n          if (newWidth < minWidth) {\n            newWidth = minWidth;\n            moveToNotSpread(column);\n            finishedResizing = false;\n          } else if (newWidth > maxWidth) {\n            newWidth = maxWidth;\n            moveToNotSpread(column);\n            finishedResizing = false;\n          } else if (i === 0) {\n            newWidth = pixelsForLastCol;\n          }\n          column.setActualWidth(newWidth, source, true);\n          pixelsForLastCol -= newWidth;\n        }\n      }\n    }\n    colsToDispatchEventFor.forEach((col) => {\n      col.fireColumnWidthChangedEvent(source);\n    });\n    const visibleCols = this.beans.visibleCols;\n    visibleCols.setLeftValues(source);\n    visibleCols.updateBodyWidths();\n    if (silent) {\n      return;\n    }\n    dispatchColumnResizedEvent(this.eventSvc, colsToDispatchEventFor, true, source);\n  }\n  applyAutosizeStrategy() {\n    const autoSizeStrategy = this.gos.get(\"autoSizeStrategy\");\n    if (!autoSizeStrategy) {\n      return;\n    }\n    const { type } = autoSizeStrategy;\n    setTimeout(() => {\n      if (type === \"fitGridWidth\") {\n        const { columnLimits: propColumnLimits, defaultMinWidth, defaultMaxWidth } = autoSizeStrategy;\n        const columnLimits = propColumnLimits?.map(({ colId: key, minWidth, maxWidth }) => ({\n          key,\n          minWidth,\n          maxWidth\n        }));\n        this.sizeColumnsToFitGridBody({\n          defaultMinWidth,\n          defaultMaxWidth,\n          columnLimits\n        });\n      } else if (type === \"fitProvidedWidth\") {\n        this.sizeColumnsToFit(autoSizeStrategy.width, \"sizeColumnsToFit\");\n      }\n    });\n  }\n  onFirstDataRendered() {\n    const autoSizeStrategy = this.gos.get(\"autoSizeStrategy\");\n    if (autoSizeStrategy?.type !== \"fitCellContents\") {\n      return;\n    }\n    const { colIds: columns, skipHeader } = autoSizeStrategy;\n    setTimeout(() => {\n      if (columns) {\n        this.autoSizeCols({\n          colKeys: columns,\n          skipHeader,\n          source: \"autosizeColumns\"\n        });\n      } else {\n        this.autoSizeAllColumns(\"autosizeColumns\", skipHeader);\n      }\n    });\n  }\n  processResizeOperations() {\n    this.shouldQueueResizeOperations = false;\n    this.resizeOperationQueue.forEach((resizeOperation) => resizeOperation());\n    this.resizeOperationQueue = [];\n  }\n  pushResizeOperation(func) {\n    this.resizeOperationQueue.push(func);\n  }\n  destroy() {\n    this.resizeOperationQueue.length = 0;\n    super.destroy();\n  }\n};\nfunction normaliseColumnWidth(column, newWidth) {\n  const minWidth = column.getMinWidth();\n  if (newWidth < minWidth) {\n    newWidth = minWidth;\n  }\n  const maxWidth = column.getMaxWidth();\n  if (column.isGreaterThanMax(newWidth)) {\n    newWidth = maxWidth;\n  }\n  return newWidth;\n}\n\n// packages/ag-grid-community/src/columnAutosize/columnAutosizeModule.ts\nvar ColumnAutoSizeModule = {\n  moduleName: \"ColumnAutoSize\",\n  version: VERSION,\n  beans: [ColumnAutosizeService],\n  apiFunctions: {\n    sizeColumnsToFit,\n    autoSizeColumns,\n    autoSizeAllColumns\n  },\n  dependsOn: [AutoWidthModule]\n};\n\n// packages/ag-grid-community/src/pinnedRowModel/pinnedRowApi.ts\nfunction getPinnedTopRowCount(beans) {\n  return beans.pinnedRowModel?.getPinnedTopRowCount() ?? 0;\n}\nfunction getPinnedBottomRowCount(beans) {\n  return beans.pinnedRowModel?.getPinnedBottomRowCount() ?? 0;\n}\nfunction getPinnedTopRow(beans, index) {\n  return beans.pinnedRowModel?.getPinnedTopRow(index);\n}\nfunction getPinnedBottomRow(beans, index) {\n  return beans.pinnedRowModel?.getPinnedBottomRow(index);\n}\n\n// packages/ag-grid-community/src/pinnedRowModel/pinnedRowModel.ts\nvar PinnedRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pinnedRowModel\";\n    this.nextId = 0;\n    this.pinnedTopRows = { cache: {}, order: [] };\n    this.pinnedBottomRows = { cache: {}, order: [] };\n  }\n  postConstruct() {\n    const gos = this.gos;\n    this.setPinnedRowData(gos.get(\"pinnedTopRowData\"), \"top\");\n    this.setPinnedRowData(gos.get(\"pinnedBottomRowData\"), \"bottom\");\n    this.addManagedPropertyListener(\"pinnedTopRowData\", (e) => this.setPinnedRowData(e.currentValue, \"top\"));\n    this.addManagedPropertyListener(\"pinnedBottomRowData\", (e) => this.setPinnedRowData(e.currentValue, \"bottom\"));\n    this.addManagedEventListeners({ gridStylesChanged: this.onGridStylesChanges.bind(this) });\n  }\n  isEmpty(floating) {\n    return this.getCache(floating).order.length === 0;\n  }\n  isRowsToRender(floating) {\n    return !this.isEmpty(floating);\n  }\n  onGridStylesChanges(e) {\n    if (e.rowHeightChanged) {\n      const estimateRowHeight = (rowNode) => {\n        rowNode.setRowHeight(rowNode.rowHeight, true);\n      };\n      forEach(this.pinnedBottomRows, estimateRowHeight);\n      forEach(this.pinnedTopRows, estimateRowHeight);\n    }\n  }\n  ensureRowHeightsValid() {\n    let anyChange = false;\n    let rowTop = 0;\n    const updateRowHeight = (rowNode) => {\n      if (rowNode.rowHeightEstimated) {\n        const rowHeight = _getRowHeightForNode(this.beans, rowNode);\n        rowNode.setRowTop(rowTop);\n        rowNode.setRowHeight(rowHeight.height);\n        rowTop += rowHeight.height;\n        anyChange = true;\n      }\n    };\n    forEach(this.pinnedBottomRows, updateRowHeight);\n    rowTop = 0;\n    forEach(this.pinnedTopRows, updateRowHeight);\n    this.eventSvc.dispatchEvent({\n      type: \"pinnedHeightChanged\"\n    });\n    return anyChange;\n  }\n  setPinnedRowData(rowData, floating) {\n    this.updateNodesFromRowData(rowData, floating);\n    this.eventSvc.dispatchEvent({\n      type: \"pinnedRowDataChanged\"\n    });\n  }\n  /**\n   * Updates existing RowNode instances and creates new ones if necessary\n   *\n   * Setting data as `undefined` will clear row nodes\n   */\n  updateNodesFromRowData(allData, floating) {\n    const nodes = this.getCache(floating);\n    if (allData === void 0) {\n      nodes.order.length = 0;\n      nodes.cache = {};\n      return;\n    }\n    const getRowId = _getRowIdCallback(this.gos);\n    const idPrefix = floating === \"top\" ? ROW_ID_PREFIX_TOP_PINNED : ROW_ID_PREFIX_BOTTOM_PINNED;\n    const nodesToRemove = new Set(nodes.order);\n    const newOrder = [];\n    const dataIds = /* @__PURE__ */ new Set();\n    let nextRowTop = 0;\n    let i = -1;\n    for (const data of allData) {\n      const id = getRowId?.({ data, level: 0, rowPinned: floating }) ?? idPrefix + this.nextId++;\n      if (dataIds.has(id)) {\n        _warn(96, { id, data });\n        continue;\n      }\n      i++;\n      dataIds.add(id);\n      newOrder.push(id);\n      const existingNode = getById(nodes, id);\n      if (existingNode !== void 0) {\n        if (existingNode.data !== data) {\n          existingNode.setData(data);\n        }\n        nextRowTop += this.setRowTopAndRowIndex(existingNode, nextRowTop, i);\n        nodesToRemove.delete(id);\n      } else {\n        const rowNode = new RowNode(this.beans);\n        rowNode.id = id;\n        rowNode.data = data;\n        rowNode.rowPinned = floating;\n        nextRowTop += this.setRowTopAndRowIndex(rowNode, nextRowTop, i);\n        nodes.cache[id] = rowNode;\n        nodes.order.push(id);\n      }\n    }\n    nodesToRemove.forEach((id) => {\n      getById(nodes, id)?.clearRowTopAndRowIndex();\n      delete nodes.cache[id];\n    });\n    nodes.order = newOrder;\n  }\n  setRowTopAndRowIndex(rowNode, rowTop, rowIndex) {\n    rowNode.setRowTop(rowTop);\n    rowNode.setRowHeight(_getRowHeightForNode(this.beans, rowNode).height);\n    rowNode.setRowIndex(rowIndex);\n    return rowNode.rowHeight;\n  }\n  getPinnedTopTotalHeight() {\n    return getTotalHeight(this.pinnedTopRows);\n  }\n  getPinnedBottomTotalHeight() {\n    return getTotalHeight(this.pinnedBottomRows);\n  }\n  getPinnedTopRowCount() {\n    return getSize(this.pinnedTopRows);\n  }\n  getPinnedBottomRowCount() {\n    return getSize(this.pinnedBottomRows);\n  }\n  getPinnedTopRow(index) {\n    return getByIndex(this.pinnedTopRows, index);\n  }\n  getPinnedBottomRow(index) {\n    return getByIndex(this.pinnedBottomRows, index);\n  }\n  getPinnedRowById(id, floating) {\n    return getById(this.getCache(floating), id);\n  }\n  forEachPinnedRow(floating, callback) {\n    return forEach(this.getCache(floating), callback);\n  }\n  getCache(floating) {\n    return floating === \"top\" ? this.pinnedTopRows : this.pinnedBottomRows;\n  }\n};\nfunction getTotalHeight(rowNodes) {\n  const size = getSize(rowNodes);\n  if (size === 0) {\n    return 0;\n  }\n  const node = getByIndex(rowNodes, size - 1);\n  if (node === void 0) {\n    return 0;\n  }\n  return node.rowTop + node.rowHeight;\n}\nfunction getById(cache, id) {\n  return cache.cache[id];\n}\nfunction getByIndex(cache, i) {\n  return getById(cache, cache.order[i]);\n}\nfunction forEach(cache, callback) {\n  cache.order.forEach((id, index) => {\n    const node = getById(cache, id);\n    node && callback(node, index);\n  });\n}\nfunction getSize(cache) {\n  return cache.order.length;\n}\n\n// packages/ag-grid-community/src/pinnedRowModel/pinnedRowModule.ts\nvar PinnedRowModule = {\n  moduleName: \"PinnedRow\",\n  version: VERSION,\n  beans: [PinnedRowModel],\n  apiFunctions: {\n    getPinnedTopRowCount,\n    getPinnedBottomRowCount,\n    getPinnedTopRow,\n    getPinnedBottomRow\n  }\n};\n\n// packages/ag-grid-community/src/rendering/spanning/spannedCellCtrl.ts\nvar SpannedCellCtrl = class extends CellCtrl {\n  constructor(cellSpan, rowCtrl, beans) {\n    super(cellSpan.col, cellSpan.firstNode, beans, rowCtrl);\n    this.cellSpan = cellSpan;\n    this.SPANNED_CELL_CSS_CLASS = \"ag-spanned-cell\";\n  }\n  setComp(comp, eCell, eWrapper, eCellWrapper, printLayout, startEditing, compBean) {\n    this.eWrapper = eWrapper;\n    super.setComp(comp, eCell, eWrapper, eCellWrapper, printLayout, startEditing, compBean);\n    this.setAriaRowSpan();\n    this.refreshAriaRowIndex();\n  }\n  isCellSpanning() {\n    return true;\n  }\n  getCellSpan() {\n    return this.cellSpan;\n  }\n  /**\n   * When cell is spanning, ensure row index is also available on the cell\n   */\n  refreshAriaRowIndex() {\n    if (this.rowNode.rowIndex == null) {\n      return;\n    }\n    _setAriaRowIndex(this.eGui, this.rowNode.rowIndex);\n  }\n  /**\n   * When cell is spanning, ensure row index is also available on the cell\n   */\n  setAriaRowSpan() {\n    _setAriaRowSpan(this.eGui, this.cellSpan.spannedNodes.size);\n  }\n  shouldRestoreFocus() {\n    return this.beans.focusSvc.shouldRestoreFocus(this.cellSpan);\n  }\n  onFocusOut() {\n    this.focusedCellPosition = void 0;\n    super.onFocusOut();\n  }\n  // not ideal, for tabbing need to force the focused position\n  setFocusedCellPosition(cellPos) {\n    this.focusedCellPosition = cellPos;\n  }\n  getFocusedCellPosition() {\n    return this.focusedCellPosition ?? this.cellPosition;\n  }\n  isCellFocused() {\n    const focusedCell = this.beans.focusSvc.getFocusedCell();\n    return !!focusedCell && this.cellSpan.doesSpanContain(focusedCell);\n  }\n  applyStaticCssClasses() {\n    super.applyStaticCssClasses();\n    this.comp.addOrRemoveCssClass(this.SPANNED_CELL_CSS_CLASS, true);\n  }\n  onCellFocused(event) {\n    const { beans } = this;\n    if (_isCellFocusSuppressed(beans)) {\n      this.focusedCellPosition = void 0;\n      return;\n    }\n    const cellFocused = this.isCellFocused();\n    if (!cellFocused) {\n      this.focusedCellPosition = void 0;\n    }\n    if (event && cellFocused) {\n      this.focusedCellPosition = {\n        rowIndex: event.rowIndex,\n        rowPinned: event.rowPinned,\n        column: event.column\n        // fix\n      };\n    }\n    super.onCellFocused(event);\n  }\n  getRootElement() {\n    return this.eWrapper;\n  }\n};\n\n// packages/ag-grid-community/src/rendering/spanning/spannedRowCtrl.ts\nvar SpannedRowCtrl = class extends RowCtrl {\n  onRowIndexChanged() {\n    super.onRowIndexChanged();\n    this.getAllCellCtrls().forEach((c) => c.refreshAriaRowIndex());\n  }\n  getInitialRowClasses(_rowContainerType) {\n    return [\"ag-spanned-row\"];\n  }\n  getNewCellCtrl(col) {\n    const cellSpan = this.beans.rowSpanSvc?.getCellSpan(col, this.rowNode);\n    if (!cellSpan) {\n      return;\n    }\n    const firstRowOfSpan = cellSpan.firstNode !== this.rowNode;\n    if (firstRowOfSpan) {\n      return;\n    }\n    return new SpannedCellCtrl(cellSpan, this, this.beans);\n  }\n  shouldRecreateCellCtrl(cell) {\n    const cellSpan = this.beans.rowSpanSvc?.getCellSpan(cell.column, this.rowNode);\n    if (!cellSpan) {\n      return true;\n    }\n    const firstRowOfSpan = cellSpan.firstNode !== this.rowNode;\n    if (firstRowOfSpan) {\n      return true;\n    }\n    return cell.getCellSpan() !== cellSpan;\n  }\n  /**\n   * Below overrides are explicitly disabling styling and other unwanted behaviours for spannedRowCtrl\n   */\n  // row height should be 0 in spanned row - they're only included for purpose of aria\n  onRowHeightChanged() {\n  }\n  // no styling spanned rows\n  refreshFirstAndLastRowStyles() {\n  }\n  // no hover functionality for spanned rows\n  addHoverFunctionality() {\n  }\n  resetHoveredStatus() {\n  }\n};\n\n// packages/ag-grid-community/src/rendering/spanning/spannedRowRenderer.ts\nvar SpannedRowRenderer = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"spannedRowRenderer\";\n    this.topCtrls = /* @__PURE__ */ new Map();\n    this.bottomCtrls = /* @__PURE__ */ new Map();\n    this.centerCtrls = /* @__PURE__ */ new Map();\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      displayedRowsChanged: this.createAllCtrls.bind(this)\n    });\n  }\n  createAllCtrls() {\n    this.createCtrls(\"top\");\n    this.createCtrls(\"bottom\");\n    this.createCtrls(\"center\");\n  }\n  /**\n   * When displayed rows or cols change, the spanned cell ctrls need to update\n   */\n  createCtrls(ctrlsKey) {\n    const { rowSpanSvc } = this.beans;\n    const ctrlsName = `${ctrlsKey}Ctrls`;\n    const previousCtrls = this[ctrlsName];\n    const previousCtrlsSize = previousCtrls.size;\n    const rowCtrls = this.getAllRelevantRowControls(ctrlsKey);\n    const newRowCtrls = /* @__PURE__ */ new Map();\n    let hasNewSpans = false;\n    for (const ctrl of rowCtrls) {\n      if (!ctrl.isAlive()) {\n        continue;\n      }\n      rowSpanSvc?.forEachSpannedColumn(ctrl.rowNode, (col, cellSpan) => {\n        if (newRowCtrls.has(cellSpan.firstNode)) {\n          return;\n        }\n        const existingCtrl = previousCtrls.get(cellSpan.firstNode);\n        if (existingCtrl) {\n          newRowCtrls.set(cellSpan.firstNode, existingCtrl);\n          previousCtrls.delete(cellSpan.firstNode);\n          return;\n        }\n        hasNewSpans = true;\n        const newCtrl = new SpannedRowCtrl(cellSpan.firstNode, this.beans, false, false, false);\n        newRowCtrls.set(cellSpan.firstNode, newCtrl);\n      });\n    }\n    this[ctrlsName] = newRowCtrls;\n    const sameCount = newRowCtrls.size === previousCtrlsSize;\n    if (!hasNewSpans && sameCount)\n      return;\n    for (const oldCtrl of previousCtrls.values()) {\n      oldCtrl.destroyFirstPass(true);\n      oldCtrl.destroySecondPass();\n    }\n    this.dispatchLocalEvent({\n      type: `spannedRowsUpdated`,\n      ctrlsKey\n    });\n  }\n  // cannot use getAllRowCtrls as it returns this services row ctrls.\n  getAllRelevantRowControls(ctrlsKey) {\n    const { rowRenderer } = this.beans;\n    switch (ctrlsKey) {\n      case \"top\":\n        return rowRenderer.topRowCtrls;\n      case \"bottom\":\n        return rowRenderer.bottomRowCtrls;\n      case \"center\":\n        return rowRenderer.allRowCtrls;\n    }\n  }\n  getCellByPosition(cellPosition) {\n    const { rowSpanSvc } = this.beans;\n    const cellSpan = rowSpanSvc?.getCellSpanByPosition(cellPosition);\n    if (!cellSpan) {\n      return void 0;\n    }\n    const ctrlsName = `${_normalisePinnedValue(cellPosition.rowPinned)}Ctrls`;\n    const ctrl = this[ctrlsName].get(cellSpan.firstNode);\n    if (!ctrl) {\n      return void 0;\n    }\n    return ctrl.getAllCellCtrls().find((cellCtrl) => cellCtrl.column === cellPosition.column);\n  }\n  getCtrls(container) {\n    const ctrlsName = `${container}Ctrls`;\n    return [...this[ctrlsName].values()];\n  }\n  destroyRowCtrls(container) {\n    const ctrlsName = `${container}Ctrls`;\n    for (const ctrl of this[ctrlsName].values()) {\n      ctrl.destroyFirstPass(true);\n      ctrl.destroySecondPass();\n    }\n    this[ctrlsName] = /* @__PURE__ */ new Map();\n  }\n  destroy() {\n    super.destroy();\n    this.destroyRowCtrls(\"top\");\n    this.destroyRowCtrls(\"bottom\");\n    this.destroyRowCtrls(\"center\");\n  }\n};\nvar _normalisePinnedValue = (pinned) => {\n  return pinned ?? \"center\";\n};\n\n// packages/ag-grid-community/src/rendering/spanning/rowSpanCache.ts\nvar CellSpan = class {\n  constructor(col, firstNode) {\n    this.col = col;\n    this.firstNode = firstNode;\n    // used for distinguishing between types\n    this.cellSpan = true;\n    this.spannedNodes = /* @__PURE__ */ new Set();\n    this.addSpannedNode(firstNode);\n  }\n  addSpannedNode(node) {\n    this.spannedNodes.add(node);\n    this.lastNode = node;\n  }\n  getLastNode() {\n    return this.lastNode;\n  }\n  getCellHeight() {\n    return this.lastNode.rowTop + this.lastNode.rowHeight - this.firstNode.rowTop - 1;\n  }\n  doesSpanContain(cellPosition) {\n    if (cellPosition.column !== this.col) {\n      return false;\n    }\n    if (cellPosition.rowPinned != this.firstNode.rowPinned) {\n      return false;\n    }\n    return this.firstNode.rowIndex <= cellPosition.rowIndex && cellPosition.rowIndex <= this.lastNode.rowIndex;\n  }\n  /**\n   * Gets the auto height value for last node in the spanned cell.\n   * The first node is used to store the auto height for the cell, but the additional height for this cell\n   * needs applied to the last row in the span.\n   */\n  getLastNodeAutoHeight() {\n    const autoHeight = this.firstNode.__autoHeights?.[this.col.getColId()];\n    if (autoHeight == null) {\n      return void 0;\n    }\n    let allButLastHeights = 0;\n    this.spannedNodes.forEach((node) => {\n      if (node === this.lastNode)\n        return;\n      allButLastHeights += node.rowHeight;\n    });\n    return autoHeight - allButLastHeights;\n  }\n};\nvar RowSpanCache = class extends BeanStub {\n  constructor(column) {\n    super();\n    this.column = column;\n  }\n  buildCache(pinned) {\n    const {\n      column,\n      beans: { gos, pinnedRowModel, rowModel, valueSvc }\n    } = this;\n    const { colDef } = column;\n    const newMap = /* @__PURE__ */ new Map();\n    const isFullWidthCellFunc = gos.getCallback(\"isFullWidthRow\");\n    const equalsFnc = colDef.equals;\n    const customCompare = colDef.spanRows;\n    const isCustomCompare = typeof customCompare === \"function\";\n    let lastNode = null;\n    let spanData = null;\n    let lastValue;\n    const setNewHead = (node, value) => {\n      lastNode = node;\n      spanData = null;\n      lastValue = value;\n    };\n    const checkNodeForCache = (node) => {\n      const doesNodeSupportSpanning = !node.isExpandable() && !node.group && !node.detail && (isFullWidthCellFunc ? !isFullWidthCellFunc({ rowNode: node }) : true);\n      if (node.rowIndex == null || !doesNodeSupportSpanning) {\n        setNewHead(null, null);\n        return;\n      }\n      if (lastNode == null || node.level !== lastNode.level || // no span across groups\n      node.footer || spanData && node.rowIndex - 1 !== spanData?.getLastNode().rowIndex) {\n        setNewHead(node, valueSvc.getValue(column, node));\n        return;\n      }\n      const value = valueSvc.getValue(column, node);\n      if (isCustomCompare) {\n        const params = _addGridCommonParams(gos, {\n          valueA: lastValue,\n          nodeA: lastNode,\n          valueB: value,\n          nodeB: node,\n          column,\n          colDef\n        });\n        if (!customCompare(params)) {\n          setNewHead(node, value);\n          return;\n        }\n      } else {\n        if (equalsFnc ? !equalsFnc(lastValue, value) : lastValue !== value) {\n          setNewHead(node, value);\n          return;\n        }\n      }\n      if (!spanData) {\n        spanData = new CellSpan(column, lastNode);\n        newMap.set(lastNode, spanData);\n      }\n      spanData.addSpannedNode(node);\n      newMap.set(node, spanData);\n    };\n    switch (pinned) {\n      case \"center\":\n        rowModel.forEachDisplayedNode?.(checkNodeForCache);\n        break;\n      case \"top\":\n        pinnedRowModel?.forEachPinnedRow(\"top\", checkNodeForCache);\n        break;\n      case \"bottom\":\n        pinnedRowModel?.forEachPinnedRow(\"bottom\", checkNodeForCache);\n        break;\n    }\n    this[`${pinned}ValueNodeMap`] = newMap;\n  }\n  isCellSpanning(node) {\n    return !!this.getCellSpan(node);\n  }\n  getCellSpan(node) {\n    const map = this[`${_normalisePinnedValue(node.rowPinned)}ValueNodeMap`];\n    return map.get(node);\n  }\n};\n\n// packages/ag-grid-community/src/rendering/spanning/rowSpanService.ts\nvar RowSpanService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowSpanSvc\";\n    this.spanningColumns = /* @__PURE__ */ new Map();\n    // debounced to allow spannedRowRenderer to run first, removing any old spanned rows\n    this.debouncePinnedEvent = _debounce(this, this.dispatchCellsUpdatedEvent.bind(this, true), 0);\n    this.debounceModelEvent = _debounce(this, this.dispatchCellsUpdatedEvent.bind(this, false), 0);\n    this.pinnedTimeout = null;\n    this.modelTimeout = null;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      modelUpdated: this.buildModelCaches.bind(this),\n      pinnedRowDataChanged: this.buildPinnedCaches.bind(this)\n    });\n  }\n  /**\n   * When a new column is created with spanning (or spanning changes for a column)\n   * @param column column that is now spanning\n   */\n  register(column) {\n    const { gos } = this.beans;\n    if (!gos.get(\"enableCellSpan\")) {\n      return;\n    }\n    if (this.spanningColumns.has(column)) {\n      return;\n    }\n    const cache = this.createManagedBean(new RowSpanCache(column));\n    this.spanningColumns.set(column, cache);\n    cache.buildCache(\"top\");\n    cache.buildCache(\"bottom\");\n    cache.buildCache(\"center\");\n    this.debouncePinnedEvent();\n    this.debounceModelEvent();\n  }\n  dispatchCellsUpdatedEvent(pinned) {\n    this.dispatchLocalEvent({ type: \"spannedCellsUpdated\", pinned });\n  }\n  /**\n   * When a new column is destroyed with spanning (or spanning changes for a column)\n   * @param column column that is now spanning\n   */\n  deregister(column) {\n    this.spanningColumns.delete(column);\n  }\n  // called by rowNode when data changes, as this could be a hot path it's debounced\n  // it uses timeouts instead of debounce so that it can be cancelled by `modelUpdated`\n  // which is expected to run immediately (to exec before the rowRenderer)\n  onRowDataUpdated(node) {\n    const { spannedRowRenderer } = this.beans;\n    if (node.rowPinned) {\n      if (this.pinnedTimeout != null) {\n        return;\n      }\n      this.pinnedTimeout = window.setTimeout(() => {\n        this.pinnedTimeout = null;\n        this.buildPinnedCaches();\n        spannedRowRenderer?.createCtrls(\"top\");\n        spannedRowRenderer?.createCtrls(\"bottom\");\n      }, 0);\n      return;\n    }\n    if (this.modelTimeout != null) {\n      return;\n    }\n    this.modelTimeout = window.setTimeout(() => {\n      this.modelTimeout = null;\n      this.buildModelCaches();\n      spannedRowRenderer?.createCtrls(\"center\");\n    }, 0);\n  }\n  buildModelCaches() {\n    if (this.modelTimeout != null) {\n      clearTimeout(this.modelTimeout);\n    }\n    this.spanningColumns.forEach((cache) => cache.buildCache(\"center\"));\n    this.debounceModelEvent();\n  }\n  buildPinnedCaches() {\n    if (this.pinnedTimeout != null) {\n      clearTimeout(this.pinnedTimeout);\n    }\n    this.spanningColumns.forEach((cache) => {\n      cache.buildCache(\"top\");\n      cache.buildCache(\"bottom\");\n    });\n    this.debouncePinnedEvent();\n  }\n  isCellSpanning(col, rowNode) {\n    const cache = this.spanningColumns.get(col);\n    if (!cache) {\n      return false;\n    }\n    return cache.isCellSpanning(rowNode);\n  }\n  getCellSpanByPosition(position) {\n    const { pinnedRowModel, rowModel } = this.beans;\n    const col = position.column;\n    const index = position.rowIndex;\n    const cache = this.spanningColumns.get(col);\n    if (!cache) {\n      return void 0;\n    }\n    let node;\n    switch (position.rowPinned) {\n      case \"top\":\n        node = pinnedRowModel?.getPinnedTopRow(index);\n        break;\n      case \"bottom\":\n        node = pinnedRowModel?.getPinnedBottomRow(index);\n        break;\n      default:\n        node = rowModel.getRow(index);\n    }\n    if (!node) {\n      return void 0;\n    }\n    return cache.getCellSpan(node);\n  }\n  getCellStart(position) {\n    const span = this.getCellSpanByPosition(position);\n    if (!span) {\n      return position;\n    }\n    return { ...position, rowIndex: span.firstNode.rowIndex };\n  }\n  getCellEnd(position) {\n    const span = this.getCellSpanByPosition(position);\n    if (!span) {\n      return position;\n    }\n    return { ...position, rowIndex: span.getLastNode().rowIndex };\n  }\n  /**\n   * Look-up a spanned cell given a col and node as position indicators\n   *\n   * @param col a column to lookup a span at this position\n   * @param rowNode a node that may be spanned at this position\n   * @returns the CellSpan object if one exists\n   */\n  getCellSpan(col, rowNode) {\n    const cache = this.spanningColumns.get(col);\n    if (!cache) {\n      return void 0;\n    }\n    return cache.getCellSpan(rowNode);\n  }\n  forEachSpannedColumn(rowNode, callback) {\n    for (const [col, cache] of this.spanningColumns) {\n      if (cache.isCellSpanning(rowNode)) {\n        const spanningNode = cache.getCellSpan(rowNode);\n        callback(col, spanningNode);\n      }\n    }\n  }\n  destroy() {\n    super.destroy();\n    this.spanningColumns.clear();\n  }\n};\n\n// packages/ag-grid-community/src/rendering/spanning/cellSpanModule.ts\nvar CellSpanModule = {\n  moduleName: \"CellSpan\",\n  version: VERSION,\n  beans: [RowSpanService, SpannedRowRenderer]\n};\n\n// packages/ag-grid-community/src/styling/cellCustomStyleFeature.ts\nvar CellCustomStyleFeature = class extends BeanStub {\n  constructor(cellCtrl, beans) {\n    super();\n    this.cellCtrl = cellCtrl;\n    this.staticClasses = [];\n    this.beans = beans;\n    this.column = cellCtrl.column;\n  }\n  setComp(comp) {\n    this.cellComp = comp;\n    this.applyUserStyles();\n    this.applyCellClassRules();\n    this.applyClassesFromColDef();\n  }\n  applyCellClassRules() {\n    const { column, cellComp } = this;\n    const colDef = column.colDef;\n    const cellClassRules = colDef.cellClassRules;\n    const cellClassParams = this.getCellClassParams(column, colDef);\n    processClassRules(\n      this.beans.expressionSvc,\n      // if current was previous, skip\n      cellClassRules === this.cellClassRules ? void 0 : this.cellClassRules,\n      cellClassRules,\n      cellClassParams,\n      (className) => cellComp.addOrRemoveCssClass(className, true),\n      (className) => cellComp.addOrRemoveCssClass(className, false)\n    );\n    this.cellClassRules = cellClassRules;\n  }\n  applyUserStyles() {\n    const column = this.column;\n    const colDef = column.colDef;\n    const cellStyle = colDef.cellStyle;\n    if (!cellStyle) {\n      return;\n    }\n    let styles;\n    if (typeof cellStyle === \"function\") {\n      const cellStyleParams = this.getCellClassParams(column, colDef);\n      styles = cellStyle(cellStyleParams);\n    } else {\n      styles = cellStyle;\n    }\n    if (styles) {\n      this.cellComp.setUserStyles(styles);\n    }\n  }\n  applyClassesFromColDef() {\n    const { column, cellComp } = this;\n    const colDef = column.colDef;\n    const cellClassParams = this.getCellClassParams(column, colDef);\n    this.staticClasses.forEach((className) => cellComp.addOrRemoveCssClass(className, false));\n    const newStaticClasses = this.beans.cellStyles.getStaticCellClasses(colDef, cellClassParams);\n    this.staticClasses = newStaticClasses;\n    newStaticClasses.forEach((className) => cellComp.addOrRemoveCssClass(className, true));\n  }\n  getCellClassParams(column, colDef) {\n    const { value, rowNode } = this.cellCtrl;\n    return _addGridCommonParams(this.beans.gos, {\n      value,\n      data: rowNode.data,\n      node: rowNode,\n      colDef,\n      column,\n      rowIndex: rowNode.rowIndex\n    });\n  }\n};\n\n// packages/ag-grid-community/src/styling/cellStyleService.ts\nvar CellStyleService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"cellStyles\";\n  }\n  processAllCellClasses(colDef, params, onApplicableClass, onNotApplicableClass) {\n    processClassRules(\n      this.beans.expressionSvc,\n      void 0,\n      colDef.cellClassRules,\n      params,\n      onApplicableClass,\n      onNotApplicableClass\n    );\n    this.processStaticCellClasses(colDef, params, onApplicableClass);\n  }\n  getStaticCellClasses(colDef, params) {\n    const { cellClass } = colDef;\n    if (!cellClass) {\n      return [];\n    }\n    let classOrClasses;\n    if (typeof cellClass === \"function\") {\n      const cellClassFunc = cellClass;\n      classOrClasses = cellClassFunc(params);\n    } else {\n      classOrClasses = cellClass;\n    }\n    if (typeof classOrClasses === \"string\") {\n      classOrClasses = [classOrClasses];\n    }\n    return classOrClasses || [];\n  }\n  createCellCustomStyleFeature(ctrl, beans) {\n    return new CellCustomStyleFeature(ctrl, beans);\n  }\n  processStaticCellClasses(colDef, params, onApplicableClass) {\n    const classOrClasses = this.getStaticCellClasses(colDef, params);\n    classOrClasses.forEach((cssClassItem) => {\n      onApplicableClass(cssClassItem);\n    });\n  }\n};\n\n// packages/ag-grid-community/src/styling/stylingModule.ts\nvar CellStyleModule = {\n  moduleName: \"CellStyle\",\n  version: VERSION,\n  beans: [CellStyleService]\n};\nvar RowStyleModule = {\n  moduleName: \"RowStyle\",\n  version: VERSION,\n  beans: [RowStyleService]\n};\n\n// packages/ag-grid-community/src/columns/columnHover/columnHoverApi.ts\nfunction isColumnHovered(beans, column) {\n  return !!beans.colHover?.isHovered(column);\n}\n\n// packages/ag-grid-community/src/columns/columnHover/hoverFeature.ts\nvar HoverFeature = class extends BeanStub {\n  constructor(columns, element) {\n    super();\n    this.columns = columns;\n    this.element = element;\n  }\n  postConstruct() {\n    if (this.gos.get(\"columnHoverHighlight\")) {\n      const colHover = this.beans.colHover;\n      this.addManagedListeners(this.element, {\n        mouseout: colHover.clearMouseOver.bind(colHover),\n        mouseover: colHover.setMouseOver.bind(colHover, this.columns)\n      });\n    }\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnHover/columnHoverService.ts\nvar CSS_COLUMN_HOVER = \"ag-column-hover\";\nvar ColumnHoverService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"colHover\";\n  }\n  setMouseOver(columns) {\n    this.updateState(columns);\n  }\n  clearMouseOver() {\n    this.updateState(null);\n  }\n  isHovered(column) {\n    const selectedColumns = this.selectedColumns;\n    return !!selectedColumns && selectedColumns.indexOf(column) >= 0;\n  }\n  addHeaderColumnHoverListener(compBean, comp, column) {\n    const listener = () => {\n      if (!this.gos.get(\"columnHoverHighlight\")) {\n        return;\n      }\n      const isHovered = this.isHovered(column);\n      comp.addOrRemoveCssClass(\"ag-column-hover\", isHovered);\n    };\n    compBean.addManagedEventListeners({ columnHoverChanged: listener });\n    listener();\n  }\n  onCellColumnHover(column, cellComp) {\n    if (!cellComp) {\n      return;\n    }\n    if (!this.gos.get(\"columnHoverHighlight\")) {\n      return;\n    }\n    const isHovered = this.isHovered(column);\n    cellComp.addOrRemoveCssClass(CSS_COLUMN_HOVER, isHovered);\n  }\n  addHeaderFilterColumnHoverListener(compBean, comp, column, eGui) {\n    this.createHoverFeature(compBean, [column], eGui);\n    const listener = () => {\n      if (!this.gos.get(\"columnHoverHighlight\")) {\n        return;\n      }\n      const hovered = this.isHovered(column);\n      comp.addOrRemoveCssClass(\"ag-column-hover\", hovered);\n    };\n    compBean.addManagedEventListeners({ columnHoverChanged: listener });\n    listener();\n  }\n  createHoverFeature(compBean, columns, eGui) {\n    compBean.createManagedBean(new HoverFeature(columns, eGui));\n  }\n  updateState(columns) {\n    this.selectedColumns = columns;\n    this.eventSvc.dispatchEvent({\n      type: \"columnHoverChanged\"\n    });\n  }\n};\n\n// packages/ag-grid-community/src/columns/columnHover/columnHoverModule.ts\nvar ColumnHoverModule = {\n  moduleName: \"ColumnHover\",\n  version: VERSION,\n  beans: [ColumnHoverService],\n  apiFunctions: {\n    isColumnHovered\n  }\n};\n\n// packages/ag-grid-community/src/misc/apiEvents/apiEventService.ts\nvar ApiEventService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"apiEventSvc\";\n    this.syncListeners = /* @__PURE__ */ new Map();\n    this.asyncListeners = /* @__PURE__ */ new Map();\n    this.syncGlobalListeners = /* @__PURE__ */ new Set();\n    this.globalListenerPairs = /* @__PURE__ */ new Map();\n  }\n  postConstruct() {\n    this.wrapSvc = this.beans.frameworkOverrides.createGlobalEventListenerWrapper?.();\n  }\n  addEventListener(eventType, userListener) {\n    const listener = this.wrapSvc?.wrap(userListener) ?? userListener;\n    const async = !ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType);\n    const listeners = async ? this.asyncListeners : this.syncListeners;\n    if (!listeners.has(eventType)) {\n      listeners.set(eventType, /* @__PURE__ */ new Set());\n    }\n    listeners.get(eventType).add(listener);\n    this.eventSvc.addEventListener(eventType, listener, async);\n  }\n  removeEventListener(eventType, userListener) {\n    const listener = this.wrapSvc?.unwrap(userListener) ?? userListener;\n    const asyncListeners = this.asyncListeners.get(eventType);\n    const hasAsync = !!asyncListeners?.delete(listener);\n    if (!hasAsync) {\n      this.syncListeners.get(eventType)?.delete(listener);\n    }\n    this.eventSvc.removeEventListener(eventType, listener, hasAsync);\n  }\n  addGlobalListener(userListener) {\n    const listener = this.wrapSvc?.wrapGlobal(userListener) ?? userListener;\n    const syncListener = (eventType, event) => {\n      if (ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType)) {\n        listener(eventType, event);\n      }\n    };\n    const asyncListener = (eventType, event) => {\n      if (!ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType)) {\n        listener(eventType, event);\n      }\n    };\n    this.globalListenerPairs.set(userListener, { syncListener, asyncListener });\n    const eventSvc = this.eventSvc;\n    eventSvc.addGlobalListener(syncListener, false);\n    eventSvc.addGlobalListener(asyncListener, true);\n  }\n  removeGlobalListener(userListener) {\n    const { eventSvc, wrapSvc, globalListenerPairs } = this;\n    const listener = wrapSvc?.unwrapGlobal(userListener) ?? userListener;\n    const hasAsync = globalListenerPairs.has(listener);\n    if (hasAsync) {\n      const { syncListener, asyncListener } = globalListenerPairs.get(listener);\n      eventSvc.removeGlobalListener(syncListener, false);\n      eventSvc.removeGlobalListener(asyncListener, true);\n      globalListenerPairs.delete(userListener);\n    } else {\n      this.syncGlobalListeners.delete(listener);\n      eventSvc.removeGlobalListener(listener, false);\n    }\n  }\n  destroyEventListeners(map, async) {\n    map.forEach((listeners, eventType) => {\n      listeners.forEach((listener) => this.eventSvc.removeEventListener(eventType, listener, async));\n      listeners.clear();\n    });\n    map.clear();\n  }\n  destroyGlobalListeners(set, async) {\n    set.forEach((listener) => this.eventSvc.removeGlobalListener(listener, async));\n    set.clear();\n  }\n  destroy() {\n    super.destroy();\n    this.destroyEventListeners(this.syncListeners, false);\n    this.destroyEventListeners(this.asyncListeners, true);\n    this.destroyGlobalListeners(this.syncGlobalListeners, false);\n    const { globalListenerPairs, eventSvc } = this;\n    globalListenerPairs.forEach(({ syncListener, asyncListener }) => {\n      eventSvc.removeGlobalListener(syncListener, false);\n      eventSvc.removeGlobalListener(asyncListener, true);\n    });\n    globalListenerPairs.clear();\n  }\n};\n\n// packages/ag-grid-community/src/misc/apiEvents/eventApi.ts\nfunction addEventListener(beans, eventType, listener) {\n  beans.apiEventSvc?.addEventListener(eventType, listener);\n}\nfunction removeEventListener(beans, eventType, listener) {\n  beans.apiEventSvc?.removeEventListener(eventType, listener);\n}\nfunction addGlobalListener(beans, listener) {\n  beans.apiEventSvc?.addGlobalListener(listener);\n}\nfunction removeGlobalListener(beans, listener) {\n  beans.apiEventSvc?.removeGlobalListener(listener);\n}\n\n// packages/ag-grid-community/src/misc/apiEvents/apiEventModule.ts\nvar EventApiModule = {\n  moduleName: \"EventApi\",\n  version: VERSION,\n  apiFunctions: {\n    addEventListener,\n    addGlobalListener,\n    removeEventListener,\n    removeGlobalListener\n  },\n  beans: [ApiEventService]\n};\n\n// packages/ag-grid-community/src/tooltip/tooltip.css-GENERATED.ts\nvar tooltipCSS = (\n  /*css*/\n  `.ag-tooltip{background-color:var(--ag-tooltip-background-color);border:var(--ag-tooltip-border);border-radius:var(--ag-border-radius);color:var(--ag-tooltip-text-color);padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding);white-space:normal}.ag-tooltip,.ag-tooltip-custom{position:absolute;z-index:99999}.ag-tooltip-custom:where(:not(.ag-tooltip-interactive)),.ag-tooltip:where(:not(.ag-tooltip-interactive)){pointer-events:none}.ag-tooltip-animate{transition:opacity 1s;&:where(.ag-tooltip-hiding){opacity:0}}`\n);\n\n// packages/ag-grid-community/src/tooltip/tooltipService.ts\nvar TooltipService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"tooltipSvc\";\n  }\n  setupHeaderTooltip(existingTooltipFeature, ctrl, value, shouldDisplayTooltip) {\n    if (existingTooltipFeature) {\n      ctrl.destroyBean(existingTooltipFeature);\n    }\n    const isTooltipWhenTruncated = _isShowTooltipWhenTruncated(this.gos);\n    const { column, eGui } = ctrl;\n    const colDef = column.getColDef();\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !colDef.headerComponent) {\n      shouldDisplayTooltip = _shouldDisplayTooltip(\n        () => eGui.querySelector(\".ag-header-cell-text\")\n      );\n    }\n    const tooltipCtrl = {\n      getColumn: () => column,\n      getColDef: () => column.getColDef(),\n      getGui: () => eGui,\n      getLocation: () => \"header\",\n      getTooltipValue: () => {\n        if (value != null) {\n          return value;\n        }\n        const res = column.getColDef().headerTooltip;\n        return res;\n      },\n      shouldDisplayTooltip\n    };\n    let tooltipFeature = this.createTooltipFeature(tooltipCtrl);\n    if (tooltipFeature) {\n      tooltipFeature = ctrl.createBean(tooltipFeature);\n      ctrl.setRefreshFunction(\"tooltip\", () => tooltipFeature.refreshTooltip());\n    }\n    return tooltipFeature;\n  }\n  setupHeaderGroupTooltip(existingTooltipFeature, ctrl, value, shouldDisplayTooltip) {\n    if (existingTooltipFeature) {\n      ctrl.destroyBean(existingTooltipFeature);\n    }\n    const isTooltipWhenTruncated = _isShowTooltipWhenTruncated(this.gos);\n    const { column, eGui } = ctrl;\n    const colGroupDef = column.getColGroupDef();\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !colGroupDef?.headerGroupComponent) {\n      shouldDisplayTooltip = _shouldDisplayTooltip(\n        () => eGui.querySelector(\".ag-header-group-text\")\n      );\n    }\n    const tooltipCtrl = {\n      getColumn: () => column,\n      getGui: () => eGui,\n      getLocation: () => \"headerGroup\",\n      getTooltipValue: () => value ?? (colGroupDef && colGroupDef.headerTooltip),\n      shouldDisplayTooltip\n    };\n    if (colGroupDef) {\n      tooltipCtrl.getColDef = () => colGroupDef;\n    }\n    const tooltipFeature = this.createTooltipFeature(tooltipCtrl);\n    return tooltipFeature ? ctrl.createBean(tooltipFeature) : tooltipFeature;\n  }\n  enableCellTooltipFeature(ctrl, value, shouldDisplayTooltip) {\n    const { column, rowNode } = ctrl;\n    const getTooltipValue = () => {\n      const colDef = column.getColDef();\n      const data = rowNode.data;\n      if (colDef.tooltipField && _exists(data)) {\n        return _getValueUsingField(data, colDef.tooltipField, column.isTooltipFieldContainsDots());\n      }\n      const valueGetter = colDef.tooltipValueGetter;\n      if (valueGetter) {\n        return valueGetter(\n          _addGridCommonParams(this.gos, {\n            location: \"cell\",\n            colDef: column.getColDef(),\n            column,\n            rowIndex: ctrl.cellPosition.rowIndex,\n            node: rowNode,\n            data: rowNode.data,\n            value: ctrl.value,\n            valueFormatted: ctrl.valueFormatted\n          })\n        );\n      }\n      return null;\n    };\n    const isTooltipWhenTruncated = _isShowTooltipWhenTruncated(this.gos);\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !ctrl.isCellRenderer()) {\n      shouldDisplayTooltip = _shouldDisplayTooltip(() => {\n        const eCell = ctrl.eGui;\n        return eCell.children.length === 0 ? eCell : eCell.querySelector(\".ag-cell-value\");\n      });\n    }\n    const tooltipCtrl = {\n      getColumn: () => column,\n      getColDef: () => column.getColDef(),\n      getRowIndex: () => ctrl.cellPosition.rowIndex,\n      getRowNode: () => rowNode,\n      getGui: () => ctrl.eGui,\n      getLocation: () => \"cell\",\n      getTooltipValue: value != null ? () => value : getTooltipValue,\n      // this makes no sense, why is the cell formatted value passed to the tooltip???\n      getValueFormatted: () => ctrl.valueFormatted,\n      shouldDisplayTooltip\n    };\n    return this.createTooltipFeature(tooltipCtrl, this.beans);\n  }\n  refreshRowTooltip(existingTooltipFeature, ctrl, value, shouldDisplayTooltip) {\n    const tooltipParams = {\n      getGui: () => ctrl.getFullWidthElement(),\n      getTooltipValue: () => value,\n      getLocation: () => \"fullWidthRow\",\n      shouldDisplayTooltip\n    };\n    const beans = this.beans;\n    const context = beans.context;\n    if (existingTooltipFeature) {\n      ctrl.destroyBean(existingTooltipFeature, context);\n    }\n    const tooltipFeature = this.createTooltipFeature(tooltipParams, beans);\n    return ctrl.createBean(tooltipFeature, context);\n  }\n  initCol(column) {\n    const { colDef } = column;\n    column.tooltipEnabled = _exists(colDef.tooltipField) || _exists(colDef.tooltipValueGetter) || _exists(colDef.tooltipComponent);\n  }\n  createTooltipFeature(tooltipCtrl, beans) {\n    return this.beans.registry.createDynamicBean(\"tooltipFeature\", false, tooltipCtrl, beans);\n  }\n};\n\n// packages/ag-grid-community/src/tooltip/tooltipModule.ts\nvar TooltipModule = {\n  moduleName: \"Tooltip\",\n  version: VERSION,\n  beans: [TooltipService],\n  dynamicBeans: {\n    tooltipFeature: TooltipFeature\n  },\n  userComponents: {\n    agTooltipComponent: TooltipComponent2\n  },\n  dependsOn: [PopupModule],\n  css: [tooltipCSS]\n};\n\n// packages/ag-grid-community/src/misc/locale/localeModule.ts\nvar LocaleModule = {\n  moduleName: \"Locale\",\n  version: VERSION,\n  beans: [LocaleService]\n};\n\n// packages/ag-grid-community/src/rendering/row/rowAutoHeightService.ts\nvar RowAutoHeightService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowAutoHeight\";\n    this.wasEverActive = false;\n    this._debouncedCalculateRowHeights = _debounce(this, this.calculateRowHeights.bind(this), 1);\n  }\n  /**\n   * If row height has been active, request a refresh of the row heights.\n   */\n  requestCheckAutoHeight() {\n    if (!this.wasEverActive) {\n      return;\n    }\n    this._debouncedCalculateRowHeights();\n  }\n  calculateRowHeights() {\n    const { visibleCols, rowModel, rowSpanSvc } = this.beans;\n    const displayedAutoHeightCols = visibleCols.autoHeightCols;\n    let anyNodeChanged = false;\n    rowModel.forEachDisplayedNode?.((row) => {\n      const autoHeights = row.__autoHeights;\n      let newRowHeight = _getRowHeightForNode(this.beans, row).height;\n      for (const col of displayedAutoHeightCols) {\n        if (this.colSpanSkipRow(col, row)) {\n          return;\n        }\n        let cellHeight = autoHeights?.[col.getColId()];\n        const spannedCell = rowSpanSvc?.getCellSpan(col, row);\n        if (spannedCell) {\n          if (spannedCell.getLastNode() !== row) {\n            continue;\n          }\n          cellHeight = rowSpanSvc?.getCellSpan(col, row)?.getLastNodeAutoHeight();\n          if (!cellHeight) {\n            return;\n          }\n        }\n        if (cellHeight == null) {\n          return;\n        }\n        newRowHeight = Math.max(cellHeight, newRowHeight);\n      }\n      if (newRowHeight !== row.rowHeight) {\n        row.setRowHeight(newRowHeight);\n        anyNodeChanged = true;\n      }\n    });\n    if (anyNodeChanged) {\n      rowModel.onRowHeightChanged?.();\n    }\n  }\n  /**\n   * Set the cell height into the row node, and request a refresh of the row heights if there's been a change.\n   * @param rowNode the node to set the auto height on\n   * @param cellHeight the height to set, undefined if the cell has just been destroyed\n   * @param column the column of the cell\n   */\n  setRowAutoHeight(rowNode, cellHeight, column) {\n    if (!rowNode.__autoHeights) {\n      rowNode.__autoHeights = {};\n    }\n    if (cellHeight == void 0) {\n      delete rowNode.__autoHeights[column.getId()];\n      return;\n    }\n    const previousCellHeight = rowNode.__autoHeights[column.getId()];\n    rowNode.__autoHeights[column.getId()] = cellHeight;\n    if (previousCellHeight !== cellHeight) {\n      this.requestCheckAutoHeight();\n    }\n  }\n  /**\n   * If using col span, we don't allow auto height on rows that span columns.\n   * @param col the column of the cell\n   * @param node the node of the cell\n   * @returns whether the row should skip auto height\n   */\n  colSpanSkipRow(col, node) {\n    const { colModel, colViewport, visibleCols } = this.beans;\n    if (!colModel.colSpanActive) {\n      return false;\n    }\n    let activeColsForRow = [];\n    switch (col.getPinned()) {\n      case \"left\":\n        activeColsForRow = visibleCols.getLeftColsForRow(node);\n        break;\n      case \"right\":\n        activeColsForRow = visibleCols.getRightColsForRow(node);\n        break;\n      case null:\n        activeColsForRow = colViewport.getColsWithinViewport(node);\n        break;\n    }\n    return activeColsForRow.includes(col);\n  }\n  /**\n   * If required, sets up observers to continuously measure changes in the cell height.\n   * @param cellCtrl the cellCtrl of the cell\n   * @param eCellWrapper the HTMLElement to track the height of\n   * @param compBean the component bean to add the destroy/cleanup function to\n   * @returns whether or not auto height has been set up on this cell\n   */\n  setupCellAutoHeight(cellCtrl, eCellWrapper, compBean) {\n    if (!cellCtrl.column.isAutoHeight() || !eCellWrapper) {\n      return false;\n    }\n    this.wasEverActive = true;\n    const eParentCell = eCellWrapper.parentElement;\n    const { rowNode, column } = cellCtrl;\n    const beans = this.beans;\n    const measureHeight = (timesCalled) => {\n      if (cellCtrl.editing) {\n        return;\n      }\n      if (!cellCtrl.isAlive() || !compBean.isAlive()) {\n        return;\n      }\n      const { paddingTop, paddingBottom, borderBottomWidth, borderTopWidth } = _getElementSize(eParentCell);\n      const extraHeight = paddingTop + paddingBottom + borderBottomWidth + borderTopWidth;\n      const wrapperHeight = eCellWrapper.offsetHeight;\n      const autoHeight = wrapperHeight + extraHeight;\n      if (timesCalled < 5) {\n        const doc = _getDocument(beans);\n        const notYetInDom = !doc || !doc.contains(eCellWrapper);\n        const possiblyNoContentYet = autoHeight == 0;\n        if (notYetInDom || possiblyNoContentYet) {\n          window.setTimeout(() => measureHeight(timesCalled + 1), 0);\n          return;\n        }\n      }\n      this.setRowAutoHeight(rowNode, autoHeight, column);\n    };\n    const listener = () => measureHeight(0);\n    listener();\n    const destroyResizeObserver = _observeResize(beans, eCellWrapper, listener);\n    compBean.addDestroyFunc(() => {\n      destroyResizeObserver();\n      this.setRowAutoHeight(rowNode, void 0, column);\n    });\n    return true;\n  }\n  setAutoHeightActive(cols) {\n    this.active = cols.list.some((col) => col.isVisible() && col.isAutoHeight());\n  }\n};\n\n// packages/ag-grid-community/src/rendering/row/rowAutoHeightModule.ts\nvar RowAutoHeightModule = {\n  moduleName: \"RowAutoHeight\",\n  version: VERSION,\n  beans: [RowAutoHeightService]\n};\n\n// packages/ag-grid-community/src/allCommunityModule.ts\nvar AllCommunityModule = {\n  moduleName: \"AllCommunity\",\n  version: VERSION,\n  dependsOn: [\n    ClientSideRowModelModule,\n    CsvExportModule,\n    InfiniteRowModelModule,\n    ValidationModule,\n    TextEditorModule,\n    NumberEditorModule,\n    DateEditorModule,\n    CheckboxEditorModule,\n    SelectEditorModule,\n    LargeTextEditorModule,\n    CustomEditorModule,\n    UndoRedoEditModule,\n    TextFilterModule,\n    NumberFilterModule,\n    DateFilterModule,\n    CustomFilterModule,\n    QuickFilterModule,\n    ExternalFilterModule,\n    GridStateModule,\n    AlignedGridsModule,\n    PaginationModule,\n    ColumnApiModule,\n    RowApiModule,\n    ScrollApiModule,\n    RenderApiModule,\n    ColumnAutoSizeModule,\n    RowDragModule,\n    PinnedRowModule,\n    RowSelectionModule,\n    ValueCacheModule,\n    CellStyleModule,\n    ColumnHoverModule,\n    RowStyleModule,\n    EventApiModule,\n    CellApiModule,\n    HighlightChangesModule,\n    TooltipModule,\n    LocaleModule,\n    RowAutoHeightModule,\n    DragAndDropModule,\n    ClientSideRowModelApiModule,\n    CellSpanModule\n  ]\n};\nexport {\n  ALWAYS_SYNC_GLOBAL_EVENTS,\n  AbstractClientSideNodeManager,\n  AgAbstractInputField,\n  AgAbstractLabel,\n  AgCheckbox,\n  AgCheckboxSelector,\n  AgColumn,\n  AgColumnGroup,\n  AgInputDateField,\n  AgInputNumberField,\n  AgInputNumberFieldSelector,\n  AgInputTextArea,\n  AgInputTextField,\n  AgInputTextFieldSelector,\n  AgPickerField,\n  AgPromise,\n  AgProvidedColumnGroup,\n  AgRadioButton,\n  AgSelect,\n  AgSelectSelector,\n  AgToggleButton,\n  AgToggleButtonSelector,\n  AlignedGridsModule,\n  AllCommunityModule,\n  AutoScrollService,\n  BaseColsService,\n  BaseComponentWrapper,\n  BaseCreator,\n  BaseGridSerializingSession,\n  BaseSelectionService,\n  BeanStub,\n  CellApiModule,\n  CellRangeType,\n  CellSpanModule,\n  CellStyleModule,\n  ChangedPath,\n  CheckboxEditorModule,\n  ClientSideRowModelApiModule,\n  ClientSideRowModelModule,\n  ColumnApiModule,\n  ColumnAutoSizeModule,\n  ColumnHoverModule,\n  ColumnKeyCreator,\n  Component,\n  CssClassManager,\n  CsvExportModule,\n  CustomEditorModule,\n  CustomFilterModule,\n  DateEditorModule,\n  DateFilterModule,\n  DragAndDropModule,\n  DragSourceType,\n  EventApiModule,\n  ExternalFilterModule,\n  FakeHScrollComp,\n  FakeVScrollComp,\n  FilterWrapperComp,\n  GROUP_AUTO_COLUMN_ID,\n  GridBodyCtrl,\n  GridCoreCreator,\n  GridCtrl,\n  GridHeaderCtrl,\n  GridStateModule,\n  GroupInstanceIdCreator,\n  HeaderRowContainerCtrl,\n  HighlightChangesModule,\n  InfiniteRowModelModule,\n  KeyCode,\n  LargeTextEditorModule,\n  LocalEventService,\n  LocaleModule,\n  LocaleService,\n  ManagedFocusFeature,\n  ModuleRegistry,\n  NumberEditorModule,\n  NumberFilterModule,\n  PaginationModule,\n  PinnedRowModule,\n  PopupComponent,\n  PositionableFeature,\n  ProvidedFilter,\n  QuickFilterModule,\n  ROW_NUMBERS_COLUMN_ID,\n  RefPlaceholder,\n  RenderApiModule,\n  RowApiModule,\n  RowAutoHeightModule,\n  RowContainerCtrl,\n  RowDragModule,\n  RowNode,\n  RowSelectionModule,\n  RowStyleModule,\n  SELECTION_COLUMN_ID,\n  ScrollApiModule,\n  SelectEditorModule,\n  ServerSideTransactionResultStatus,\n  TabGuardClassNames,\n  TabGuardComp,\n  TabGuardCtrl,\n  TabGuardFeature,\n  TextEditorModule,\n  TextFilterModule,\n  TooltipFeature,\n  TooltipModule,\n  TouchListener,\n  UndoRedoEditModule,\n  ValidationModule,\n  ValueCacheModule,\n  VanillaFrameworkOverrides,\n  _ALL_EVENTS,\n  _ALL_GRID_OPTIONS,\n  _BOOLEAN_MIXED_GRID_OPTIONS,\n  ColumnFilterModule as _ColumnFilterModule,\n  ColumnGroupModule as _ColumnGroupModule,\n  ColumnMoveModule as _ColumnMoveModule,\n  CsrmSsrmSharedApiModule as _CsrmSsrmSharedApiModule,\n  DragModule as _DragModule,\n  EditCoreModule as _EditCoreModule,\n  _EmptyArray,\n  EmptyBean as _EmptyBean,\n  FOCUS_MANAGED_CLASS as _FOCUS_MANAGED_CLASS,\n  FilterCoreModule as _FilterCoreModule,\n  FilterValueModule as _FilterValueModule,\n  HeaderComp as _HeaderComp,\n  HorizontalResizeModule as _HorizontalResizeModule,\n  KeyboardNavigationModule as _KeyboardNavigationModule,\n  _PUBLIC_EVENTS,\n  PopupModule as _PopupModule,\n  ROW_ID_PREFIX_ROW_GROUP as _ROW_ID_PREFIX_ROW_GROUP,\n  SharedDragAndDropModule as _SharedDragAndDropModule,\n  SharedExportModule as _SharedExportModule,\n  SharedMenuModule as _SharedMenuModule,\n  SharedRowSelectionModule as _SharedRowSelectionModule,\n  SortModule as _SortModule,\n  SsrmInfiniteSharedApiModule as _SsrmInfiniteSharedApiModule,\n  _addColumnDefaultAndTypes,\n  _addFocusableContainerListener,\n  _addGridCommonParams,\n  _anchorElementToMouseMoveEvent,\n  _applyColumnState,\n  _areCellsEqual,\n  _areColIdsEqual,\n  _areEqual,\n  _asThemeImpl,\n  _bindCellRendererToHtmlElement,\n  _canSkipShowingRowGroup,\n  _clearElement,\n  _columnsMatch,\n  _combineAttributesAndGridOptions,\n  _convertColumnEventSourceType,\n  _createCellId,\n  _createColumnTree,\n  _createGlobalRowEvent,\n  _createIcon,\n  _createIconNoSpan,\n  _debounce,\n  _defaultComparator,\n  _destroyColumnTree,\n  _doOnce,\n  _downloadFile,\n  _errMsg,\n  _error,\n  _escapeString,\n  _exists,\n  _findFocusableElements,\n  _findNextFocusableElement,\n  _findTabbableParent,\n  _focusGridInnerElement,\n  _focusInto,\n  _focusNextGridCoreContainer,\n  _formatNumberCommas,\n  _fuzzySuggestions,\n  _getAbsoluteHeight,\n  _getAbsoluteWidth,\n  _getActiveDomElement,\n  _getAriaPosInSet,\n  _getCallbackForEvent,\n  _getCellByPosition,\n  _getCellCtrlForEventTarget,\n  _getCellPositionForEvent,\n  _getCellRendererDetails,\n  _getCheckboxLocation,\n  _getCheckboxes,\n  _getClientSideRowModel,\n  _getColumnState,\n  _getColumnsFromTree,\n  _getDefaultFloatingFilterType,\n  _getDocument,\n  _getEditorRendererDetails,\n  _getFillHandle,\n  _getFilterDetails,\n  _getFloatingFilterCompDetails,\n  getFloatingFiltersHeight as _getFloatingFiltersHeight,\n  _getGlobalGridOption,\n  _getGrandTotalRow,\n  _getGridRegisteredModules,\n  _getGroupAggFiltering,\n  _getGroupSelection,\n  _getGroupSelectsDescendants,\n  _getGroupTotalRowCallback,\n  _getHeaderCheckbox,\n  _getHeaderClassesFromColDef,\n  getHeaderRowCount as _getHeaderRowCount,\n  _getInnerCellRendererDetails,\n  _getInnerHeight,\n  _getInnerWidth,\n  _getIsRowSelectable,\n  _getLocaleTextFunc,\n  _getMaxConcurrentDatasourceRequests,\n  _getNormalisedMousePosition,\n  _getPageBody,\n  _getRootNode,\n  _getRowContainerClass,\n  _getRowContainerOptions,\n  _getRowHeightAsNumber,\n  _getRowHeightForNode,\n  _getRowIdCallback,\n  _getRowNode,\n  _getRowSelectionMode,\n  _getRowSpanContainerClass,\n  _getRowViewportClass,\n  _getServerSideRowModel,\n  _getShouldDisplayTooltip,\n  _getSuppressMultiRanges,\n  _getToolPanelClassesFromColDef,\n  _isAnimateRows,\n  _isCellSelectionEnabled,\n  _isClientSideRowModel,\n  _isColumnMenuAnchoringEnabled,\n  _isColumnsSortingCoupledToGroup,\n  _isDomLayout,\n  _isElementInEventPath,\n  _isEventFromPrintableCharacter,\n  _isGetRowHeightFunction,\n  _isGroupMultiAutoColumn,\n  _isGroupRowsSticky,\n  _isGroupUseEntireRow,\n  _isIOSUserAgent,\n  _isKeyboardMode,\n  _isLegacyMenuEnabled,\n  _isMultiRowSelection,\n  _isNodeOrElement,\n  _isNothingFocused,\n  _isPromise,\n  _isRowBefore,\n  _isRowSelection,\n  _isSameRow,\n  _isServerSideRowModel,\n  _isShowTooltipWhenTruncated,\n  _isStopPropagationForAgGrid,\n  _isUsingNewCellSelectionAPI,\n  _isUsingNewRowSelectionAPI,\n  _isVisible,\n  _jsonEquals,\n  _last,\n  _loadTemplate,\n  _makeNull,\n  _mergeDeep,\n  _missing,\n  _observeResize,\n  _parseDateTimeFromString,\n  _preInitErrMsg,\n  _preserveRangesWhile,\n  _processOnChange,\n  _radioCssClass,\n  _removeAriaExpanded,\n  _removeAriaSort,\n  _removeFromArray,\n  _removeFromParent,\n  _requestAnimationFrame,\n  _resetColumnState,\n  _selectAllCells,\n  _serialiseDate,\n  _setAriaActiveDescendant,\n  _setAriaChecked,\n  _setAriaColCount,\n  _setAriaColIndex,\n  _setAriaColSpan,\n  _setAriaControls,\n  _setAriaDescribedBy,\n  _setAriaDisabled,\n  _setAriaExpanded,\n  _setAriaHasPopup,\n  _setAriaHidden,\n  _setAriaLabel,\n  _setAriaLabelledBy,\n  _setAriaLevel,\n  _setAriaPosInSet,\n  _setAriaRole,\n  _setAriaRowCount,\n  _setAriaRowIndex,\n  _setAriaSelected,\n  _setAriaSetSize,\n  _setAriaSort,\n  _setColMenuVisible,\n  _setDisabled,\n  _setDisplayed,\n  _setFixedWidth,\n  _setUmd,\n  _setVisible,\n  _shouldDisplayTooltip,\n  _shouldUpdateColVisibilityAfterGroup,\n  _stopPropagationForAgGrid,\n  _toStringOrNull,\n  _unwrapUserComp,\n  _updateColsMap,\n  _updateColumnState,\n  _waitUntil,\n  _warn,\n  _warnOnce,\n  buttonStyleAlpine,\n  buttonStyleBalham,\n  buttonStyleBase,\n  buttonStyleQuartz,\n  checkboxStyleDefault,\n  colorSchemeDark,\n  colorSchemeDarkBlue,\n  colorSchemeDarkWarm,\n  colorSchemeLight,\n  colorSchemeLightCold,\n  colorSchemeLightWarm,\n  colorSchemeVariable,\n  columnDropStyleBordered,\n  columnDropStylePlain,\n  createGrid,\n  createPart,\n  createTheme,\n  iconOverrides,\n  iconSetAlpine,\n  iconSetMaterial,\n  iconSetQuartz,\n  iconSetQuartzBold,\n  iconSetQuartzLight,\n  iconSetQuartzRegular,\n  inputStyleBase,\n  inputStyleBordered,\n  inputStyleUnderlined,\n  isColumn,\n  isColumnGroup2 as isColumnGroup,\n  isColumnGroupAutoCol,\n  isColumnSelectionCol,\n  isProvidedColumnGroup,\n  isRowNumberCol,\n  provideGlobalGridOptions,\n  styleMaterial,\n  tabStyleAlpine,\n  tabStyleBase,\n  tabStyleMaterial,\n  tabStyleQuartz,\n  tabStyleRolodex,\n  themeAlpine,\n  themeBalham,\n  themeMaterial,\n  themeQuartz\n};\n"],
  "mappings": "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",
  "names": ["_a", "_b", "_GlobalGridOptions"]
}
